{"ast":null,"code":"import _toConsumableArray from \"/home/jw/Documents/code/VoTT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/home/jw/Documents/code/VoTT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/jw/Documents/code/VoTT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/jw/Documents/code/VoTT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/jw/Documents/code/VoTT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/jw/Documents/code/VoTT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/jw/Documents/code/VoTT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/jw/Documents/code/VoTT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/jw/Documents/code/VoTT/src/react/components/pages/projectSettings/projectForm.tsx\";\nimport React from \"react\";\nimport Form from \"react-jsonschema-form\";\nimport { TagEditorModal, TagsInput } from \"vott-react\";\nimport { addLocValues, strings } from \"../../../../common/strings\";\nimport { StorageProviderFactory } from \"../../../../providers/storage/storageProviderFactory\";\nimport { ConnectionPickerWithRouter } from \"../../common/connectionPicker/connectionPicker\";\nimport { CustomField } from \"../../common/customField/customField\";\nimport CustomFieldTemplate from \"../../common/customField/customFieldTemplate\";\nimport { SecurityTokenPicker } from \"../../common/securityTokenPicker/securityTokenPicker\";\nimport \"vott-react/dist/css/tagsInput.css\";\nimport LocalFolderPicker from \"../../common/localFolderPicker/localFolderPicker\"; // tslint:disable-next-line:no-var-requires\n\nvar formSchema = addLocValues(require(\"./projectForm.json\")); // tslint:disable-next-line:no-var-requires\n\nvar uiSchema = addLocValues(require(\"./projectForm.ui.json\"));\n/**\n * Required properties for Project Settings form\n * @member project - Current project to fill form\n * @member connections - Array of connections to use in project\n * @member onSubmit - Function to call on form submission\n * @member onCancel - Function to call on form cancellation\n */\n\n/**\n * @name - Project Form\n * @description - Form for editing or creating VoTT projects\n */\nvar ProjectForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ProjectForm, _React$Component);\n\n  function ProjectForm(props, context) {\n    var _this;\n\n    _classCallCheck(this, ProjectForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ProjectForm).call(this, props, context));\n    _this.widgets = {\n      localFolderPicker: LocalFolderPicker\n    };\n\n    _this.onFormChange = function (changeEvent) {\n      if (_this.props.onChange) {\n        _this.props.onChange(changeEvent.formData);\n      }\n    };\n\n    _this.state = {\n      classNames: [\"needs-validation\"],\n      uiSchema: _objectSpread({}, uiSchema),\n      formSchema: _objectSpread({}, formSchema),\n      formData: _objectSpread({}, _this.props.project)\n    };\n    _this.tagsInput = React.createRef();\n    _this.tagEditorModal = React.createRef();\n    _this.onFormSubmit = _this.onFormSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onFormCancel = _this.onFormCancel.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onFormValidate = _this.onFormValidate.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onTagShiftClick = _this.onTagShiftClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onTagModalOk = _this.onTagModalOk.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n  /**\n   * Updates state if project from properties has changed\n   * @param prevProps - previously set properties\n   */\n\n\n  _createClass(ProjectForm, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.project !== this.props.project) {\n        this.setState({\n          formData: _objectSpread({}, this.props.project)\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Form, {\n        className: this.state.classNames.join(\" \"),\n        showErrorList: false,\n        liveValidate: true,\n        noHtml5Validate: true,\n        FieldTemplate: CustomFieldTemplate,\n        validate: this.onFormValidate,\n        fields: this.fields(),\n        widgets: this.widgets,\n        schema: this.state.formSchema,\n        uiSchema: this.state.uiSchema,\n        formData: this.state.formData,\n        onChange: this.onFormChange,\n        onSubmit: this.onFormSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-success mr-1\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, strings.projectSettings.save), React.createElement(\"button\", {\n        className: \"btn btn-secondary btn-cancel\",\n        type: \"button\",\n        onClick: this.onFormCancel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, strings.common.cancel)), React.createElement(TagEditorModal, {\n        ref: this.tagEditorModal,\n        onOk: this.onTagModalOk,\n        tagNameText: strings.tags.modal.name,\n        tagColorText: strings.tags.modal.color,\n        saveText: strings.common.save,\n        cancelText: strings.common.cancel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"fields\",\n    value: function fields() {\n      var _this2 = this;\n\n      return {\n        securityToken: CustomField(SecurityTokenPicker, function (props) {\n          return {\n            id: props.idSchema.$id,\n            schema: props.schema,\n            value: props.formData,\n            securityTokens: _this2.props.appSettings.securityTokens,\n            onChange: props.onChange\n          };\n        }),\n        sourceConnection: CustomField(ConnectionPickerWithRouter, function (props) {\n          return {\n            id: props.idSchema.$id,\n            value: props.formData,\n            connections: _this2.props.connections,\n            onChange: props.onChange\n          };\n        }),\n        targetConnection: CustomField(ConnectionPickerWithRouter, function (props) {\n          var targetConnections = _this2.props.connections.filter(function (connection) {\n            return StorageProviderFactory.isRegistered(connection.providerType);\n          });\n\n          return {\n            id: props.idSchema.$id,\n            value: props.formData,\n            connections: targetConnections,\n            onChange: props.onChange\n          };\n        }),\n        tagsInput: CustomField(TagsInput, function (props) {\n          return {\n            tags: props.formData,\n            onChange: props.onChange,\n            placeHolder: strings.tags.placeholder,\n            onShiftTagClick: _this2.onTagShiftClick,\n            ref: _this2.tagsInput\n          };\n        })\n      };\n    }\n  }, {\n    key: \"onTagShiftClick\",\n    value: function onTagShiftClick(tag) {\n      this.tagEditorModal.current.open(tag);\n    }\n  }, {\n    key: \"onTagModalOk\",\n    value: function onTagModalOk(oldTag, newTag) {\n      this.tagsInput.current.updateTag(oldTag, newTag);\n      this.tagEditorModal.current.close();\n    }\n  }, {\n    key: \"onFormValidate\",\n    value: function onFormValidate(project, errors) {\n      if (Object.keys(project.sourceConnection).length === 0) {\n        errors.sourceConnection.addError(\"is a required property\");\n      }\n\n      if (Object.keys(project.targetConnection).length === 0) {\n        errors.targetConnection.addError(\"is a required property\");\n      }\n\n      if (this.state.classNames.indexOf(\"was-validated\") === -1) {\n        this.setState({\n          classNames: [].concat(_toConsumableArray(this.state.classNames), [\"was-validated\"])\n        });\n      }\n\n      return errors;\n    }\n  }, {\n    key: \"onFormSubmit\",\n    value: function onFormSubmit(args) {\n      var project = _objectSpread({}, args.formData);\n\n      this.props.onSubmit(project);\n    }\n  }, {\n    key: \"onFormCancel\",\n    value: function onFormCancel() {\n      if (this.props.onCancel) {\n        this.props.onCancel();\n      }\n    }\n  }]);\n\n  return ProjectForm;\n}(React.Component);\n\nexport { ProjectForm as default };","map":{"version":3,"sources":["/home/jw/Documents/code/VoTT/src/react/components/pages/projectSettings/projectForm.tsx"],"names":["React","Form","TagEditorModal","TagsInput","addLocValues","strings","StorageProviderFactory","ConnectionPickerWithRouter","CustomField","CustomFieldTemplate","SecurityTokenPicker","LocalFolderPicker","formSchema","require","uiSchema","ProjectForm","props","context","widgets","localFolderPicker","onFormChange","changeEvent","onChange","formData","state","classNames","project","tagsInput","createRef","tagEditorModal","onFormSubmit","bind","onFormCancel","onFormValidate","onTagShiftClick","onTagModalOk","prevProps","setState","join","fields","projectSettings","save","common","cancel","tags","modal","name","color","securityToken","id","idSchema","$id","schema","value","securityTokens","appSettings","sourceConnection","connections","targetConnection","targetConnections","filter","connection","isRegistered","providerType","placeHolder","placeholder","onShiftTagClick","ref","tag","current","open","oldTag","newTag","updateTag","close","errors","Object","keys","length","addError","indexOf","args","onSubmit","onCancel","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Form, { FormValidation, ISubmitEvent, IChangeEvent, Widget } from \"react-jsonschema-form\";\nimport { ITagsInputProps, TagEditorModal, TagsInput } from \"vott-react\";\nimport { addLocValues, strings } from \"../../../../common/strings\";\nimport { IConnection, IProject, ITag, IAppSettings } from \"../../../../models/applicationState\";\nimport { StorageProviderFactory } from \"../../../../providers/storage/storageProviderFactory\";\nimport { ConnectionPickerWithRouter } from \"../../common/connectionPicker/connectionPicker\";\nimport { CustomField } from \"../../common/customField/customField\";\nimport CustomFieldTemplate from \"../../common/customField/customFieldTemplate\";\nimport { ISecurityTokenPickerProps, SecurityTokenPicker } from \"../../common/securityTokenPicker/securityTokenPicker\";\nimport \"vott-react/dist/css/tagsInput.css\";\nimport { IConnectionProviderPickerProps } from \"../../common/connectionProviderPicker/connectionProviderPicker\";\nimport LocalFolderPicker from \"../../common/localFolderPicker/localFolderPicker\";\n\n// tslint:disable-next-line:no-var-requires\nconst formSchema = addLocValues(require(\"./projectForm.json\"));\n// tslint:disable-next-line:no-var-requires\nconst uiSchema = addLocValues(require(\"./projectForm.ui.json\"));\n\n/**\n * Required properties for Project Settings form\n * @member project - Current project to fill form\n * @member connections - Array of connections to use in project\n * @member onSubmit - Function to call on form submission\n * @member onCancel - Function to call on form cancellation\n */\nexport interface IProjectFormProps extends React.Props<ProjectForm> {\n    project: IProject;\n    connections: IConnection[];\n    appSettings: IAppSettings;\n    onSubmit: (project: IProject) => void;\n    onChange?: (project: IProject) => void;\n    onCancel?: () => void;\n}\n\n/**\n * Project Form State\n * @member classNames - Class names for HTML form element\n * @member formData - data containing details of project\n * @member formSchema - json schema of form\n * @member uiSchema - json UI schema of form\n */\nexport interface IProjectFormState {\n    classNames: string[];\n    formData: IProject;\n    formSchema: any;\n    uiSchema: any;\n}\n\n/**\n * @name - Project Form\n * @description - Form for editing or creating VoTT projects\n */\nexport default class ProjectForm extends React.Component<IProjectFormProps, IProjectFormState> {\n    private widgets = {\n        localFolderPicker: (LocalFolderPicker as any) as Widget,\n    };\n\n    private tagsInput: React.RefObject<TagsInput>;\n    private tagEditorModal: React.RefObject<TagEditorModal>;\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n            classNames: [\"needs-validation\"],\n            uiSchema: { ...uiSchema },\n            formSchema: { ...formSchema },\n            formData: {\n                ...this.props.project,\n            },\n        };\n        this.tagsInput = React.createRef<TagsInput>();\n        this.tagEditorModal = React.createRef<TagEditorModal>();\n\n        this.onFormSubmit = this.onFormSubmit.bind(this);\n        this.onFormCancel = this.onFormCancel.bind(this);\n        this.onFormValidate = this.onFormValidate.bind(this);\n        this.onTagShiftClick = this.onTagShiftClick.bind(this);\n        this.onTagModalOk = this.onTagModalOk.bind(this);\n    }\n    /**\n     * Updates state if project from properties has changed\n     * @param prevProps - previously set properties\n     */\n    public componentDidUpdate(prevProps: IProjectFormProps) {\n        if (prevProps.project !== this.props.project) {\n            this.setState({\n                formData: { ...this.props.project },\n            });\n        }\n    }\n\n    public render() {\n        return (\n            <Form\n                className={this.state.classNames.join(\" \")}\n                showErrorList={false}\n                liveValidate={true}\n                noHtml5Validate={true}\n                FieldTemplate={CustomFieldTemplate}\n                validate={this.onFormValidate}\n                fields={this.fields()}\n                widgets={this.widgets}\n                schema={this.state.formSchema}\n                uiSchema={this.state.uiSchema}\n                formData={this.state.formData}\n                onChange={this.onFormChange}\n                onSubmit={this.onFormSubmit}>\n                <div>\n                    <button className=\"btn btn-success mr-1\" type=\"submit\">{strings.projectSettings.save}</button>\n                    <button className=\"btn btn-secondary btn-cancel\"\n                        type=\"button\"\n                        onClick={this.onFormCancel}>{strings.common.cancel}</button>\n                </div>\n                <TagEditorModal\n                    ref={this.tagEditorModal}\n                    onOk={this.onTagModalOk}\n\n                    tagNameText={strings.tags.modal.name}\n                    tagColorText={strings.tags.modal.color}\n                    saveText={strings.common.save}\n                    cancelText={strings.common.cancel}\n                />\n            </Form>\n        );\n    }\n\n    private fields() {\n        return {\n            securityToken: CustomField<ISecurityTokenPickerProps>(SecurityTokenPicker, (props) => ({\n                id: props.idSchema.$id,\n                schema: props.schema,\n                value: props.formData,\n                securityTokens: this.props.appSettings.securityTokens,\n                onChange: props.onChange,\n            })),\n            sourceConnection: CustomField<IConnectionProviderPickerProps>(ConnectionPickerWithRouter, (props) => {\n                return {\n                    id: props.idSchema.$id,\n                    value: props.formData,\n                    connections: this.props.connections,\n                    onChange: props.onChange,\n                };\n            }),\n            targetConnection: CustomField<IConnectionProviderPickerProps>(ConnectionPickerWithRouter, (props) => {\n                const targetConnections = this.props.connections\n                    .filter((connection) => StorageProviderFactory.isRegistered(connection.providerType));\n\n                return {\n                    id: props.idSchema.$id,\n                    value: props.formData,\n                    connections: targetConnections,\n                    onChange: props.onChange,\n                };\n            }),\n            tagsInput: CustomField<ITagsInputProps>(TagsInput, (props) => {\n                return {\n                    tags: props.formData,\n                    onChange: props.onChange,\n                    placeHolder: strings.tags.placeholder,\n                    onShiftTagClick: this.onTagShiftClick,\n                    ref: this.tagsInput,\n                };\n            }),\n        };\n    }\n\n    private onTagShiftClick(tag: ITag) {\n        this.tagEditorModal.current.open(tag);\n    }\n\n    private onTagModalOk(oldTag: ITag, newTag: ITag) {\n        this.tagsInput.current.updateTag(oldTag, newTag);\n        this.tagEditorModal.current.close();\n    }\n\n    private onFormValidate(project: IProject, errors: FormValidation) {\n        if (Object.keys(project.sourceConnection).length === 0) {\n            errors.sourceConnection.addError(\"is a required property\");\n        }\n\n        if (Object.keys(project.targetConnection).length === 0) {\n            errors.targetConnection.addError(\"is a required property\");\n        }\n\n        if (this.state.classNames.indexOf(\"was-validated\") === -1) {\n            this.setState({\n                classNames: [...this.state.classNames, \"was-validated\"],\n            });\n        }\n\n        return errors;\n    }\n\n    private onFormChange = (changeEvent: IChangeEvent<IProject>) => {\n        if (this.props.onChange) {\n            this.props.onChange(changeEvent.formData);\n        }\n    }\n\n    private onFormSubmit(args: ISubmitEvent<IProject>) {\n        const project: IProject = {\n            ...args.formData,\n        };\n        this.props.onSubmit(project);\n    }\n\n    private onFormCancel() {\n        if (this.props.onCancel) {\n            this.props.onCancel();\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}