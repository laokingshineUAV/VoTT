{"ast":null,"code":"import _classCallCheck from \"/home/jw/Documents/code/VoTT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/jw/Documents/code/VoTT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/jw/Documents/code/VoTT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/jw/Documents/code/VoTT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/jw/Documents/code/VoTT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/jw/Documents/code/VoTT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/jw/Documents/code/VoTT/src/react/components/common/filePicker/filePicker.tsx\";\nimport React from \"react\";\nimport shortid from \"shortid\";\nimport HtmlFileReader from \"../../../../common/htmlFileReader\";\n\n/**\n * @name - File Picker\n * @description - Pick file from local file system\n */\nvar FilePicker =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FilePicker, _React$Component);\n\n  function FilePicker(props, context) {\n    var _this;\n\n    _classCallCheck(this, FilePicker);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FilePicker).call(this, props, context));\n\n    _this.upload = function () {\n      _this.fileInput.current.click();\n    };\n\n    _this.onFileUploaded = function (e) {\n      if (e.target.files.length === 0) {\n        _this.props.onError(e, \"No files were selected\");\n      }\n\n      HtmlFileReader.readAsText(e.target.files[0]).then(function (fileInfo) {\n        return _this.props.onChange(e, fileInfo);\n      }).catch(function (err) {\n        return _this.props.onError(e, err);\n      });\n    };\n\n    _this.fileInput = React.createRef();\n    _this.onFileUploaded = _this.onFileUploaded.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n  /**\n   * Call click on current file input\n   */\n\n\n  _createClass(FilePicker, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"input\", {\n        id: shortid.generate(),\n        ref: this.fileInput,\n        type: \"file\",\n        onChange: this.onFileUploaded,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return FilePicker;\n}(React.Component);\n\nexport { FilePicker as default };","map":{"version":3,"sources":["/home/jw/Documents/code/VoTT/src/react/components/common/filePicker/filePicker.tsx"],"names":["React","shortid","HtmlFileReader","FilePicker","props","context","upload","fileInput","current","click","onFileUploaded","e","target","files","length","onError","readAsText","then","fileInfo","onChange","catch","err","createRef","bind","generate","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAsC,OAAtC;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,OAAOC,cAAP,MAA2B,mCAA3B;;AAaA;;;;IAIqBC,U;;;;;AAGjB,sBAAYC,KAAZ,EAAmBC,OAAnB,EAA4B;AAAA;;AAAA;;AACxB,oFAAMD,KAAN,EAAaC,OAAb;;AADwB,UAUrBC,MAVqB,GAUZ,YAAM;AAClB,YAAKC,SAAL,CAAeC,OAAf,CAAuBC,KAAvB;AACH,KAZ2B;;AAAA,UAoBpBC,cApBoB,GAoBH,UAACC,CAAD,EAAO;AAC5B,UAAIA,CAAC,CAACC,MAAF,CAASC,KAAT,CAAeC,MAAf,KAA0B,CAA9B,EAAiC;AAC7B,cAAKV,KAAL,CAAWW,OAAX,CAAmBJ,CAAnB,EAAsB,wBAAtB;AACH;;AAEDT,MAAAA,cAAc,CAACc,UAAf,CAA0BL,CAAC,CAACC,MAAF,CAASC,KAAT,CAAe,CAAf,CAA1B,EACKI,IADL,CACU,UAACC,QAAD;AAAA,eAAc,MAAKd,KAAL,CAAWe,QAAX,CAAoBR,CAApB,EAAuBO,QAAvB,CAAd;AAAA,OADV,EAEKE,KAFL,CAEW,UAACC,GAAD;AAAA,eAAS,MAAKjB,KAAL,CAAWW,OAAX,CAAmBJ,CAAnB,EAAsBU,GAAtB,CAAT;AAAA,OAFX;AAGH,KA5B2B;;AAGxB,UAAKd,SAAL,GAAiBP,KAAK,CAACsB,SAAN,EAAjB;AACA,UAAKZ,cAAL,GAAsB,MAAKA,cAAL,CAAoBa,IAApB,uDAAtB;AAJwB;AAK3B;AAED;;;;;;;6BAOgB;AACZ,aACI;AAAO,QAAA,EAAE,EAAEtB,OAAO,CAACuB,QAAR,EAAX;AAA+B,QAAA,GAAG,EAAE,KAAKjB,SAAzC;AAAoD,QAAA,IAAI,EAAC,MAAzD;AAAgE,QAAA,QAAQ,EAAE,KAAKG,cAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAGH;;;;EArBmCV,KAAK,CAACyB,S;;SAAzBtB,U","sourcesContent":["import React, { SyntheticEvent } from \"react\";\nimport shortid from \"shortid\";\nimport HtmlFileReader from \"../../../../common/htmlFileReader\";\nimport { IFileInfo } from \"../../../../models/applicationState\";\n\n/**\n * Properties for File Picker\n * @member onChange - Function to call on change of file selection\n * @member onError - Function to call on file picking error\n */\nexport interface IFilePickerProps {\n    onChange: (sender: SyntheticEvent, fileText: IFileInfo) => void;\n    onError: (sender: SyntheticEvent, error: any) => void;\n}\n\n/**\n * @name - File Picker\n * @description - Pick file from local file system\n */\nexport default class FilePicker extends React.Component<IFilePickerProps> {\n    private fileInput;\n\n    constructor(props, context) {\n        super(props, context);\n\n        this.fileInput = React.createRef();\n        this.onFileUploaded = this.onFileUploaded.bind(this);\n    }\n\n    /**\n     * Call click on current file input\n     */\n    public upload = () => {\n        this.fileInput.current.click();\n    }\n\n    public render() {\n        return (\n            <input id={shortid.generate()} ref={this.fileInput} type=\"file\" onChange={this.onFileUploaded} />\n        );\n    }\n\n    private onFileUploaded = (e) => {\n        if (e.target.files.length === 0) {\n            this.props.onError(e, \"No files were selected\");\n        }\n\n        HtmlFileReader.readAsText(e.target.files[0])\n            .then((fileInfo) => this.props.onChange(e, fileInfo))\n            .catch((err) => this.props.onError(e, err));\n    }\n}\n"]},"metadata":{},"sourceType":"module"}