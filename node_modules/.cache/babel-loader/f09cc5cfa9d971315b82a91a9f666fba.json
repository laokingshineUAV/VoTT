{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/home/jw/Documents/code/VoTT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/jw/Documents/code/VoTT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/jw/Documents/code/VoTT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/jw/Documents/code/VoTT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _get = require(\"/home/jw/Documents/code/VoTT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/get\");\n\nvar _inherits = require(\"/home/jw/Documents/code/VoTT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar ToolbarIcon_1 = require(\"./ToolbarIcon\");\n/* import * as SNAPSVG_TYPE from \"snapsvg\";\r\ndeclare var Snap: typeof SNAPSVG_TYPE; */\n\n\nvar ToolbarSeparator =\n/*#__PURE__*/\nfunction (_ToolbarIcon_1$Toolba) {\n  _inherits(ToolbarSeparator, _ToolbarIcon_1$Toolba);\n\n  function ToolbarSeparator(paper, width) {\n    var _this;\n\n    _classCallCheck(this, ToolbarSeparator);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ToolbarSeparator).call(this, paper, null));\n\n    _this.buildIconUI();\n\n    _this.resize(width, 1);\n\n    return _this;\n  }\n\n  _createClass(ToolbarSeparator, [{\n    key: \"move\",\n    value: function move(x, y) {\n      _get(_getPrototypeOf(ToolbarSeparator.prototype), \"move\", this).call(this, x, y);\n\n      this.iconSeparator.attr({\n        x1: x,\n        x2: x + this.width,\n        y1: y,\n        y2: y\n      });\n    }\n  }, {\n    key: \"resize\",\n    value: function resize(width, height) {\n      _get(_getPrototypeOf(ToolbarSeparator.prototype), \"resize\", this).call(this, width, 1);\n\n      this.iconSeparator.attr({\n        width: this.width\n      });\n    }\n  }, {\n    key: \"buildIconUI\",\n    value: function buildIconUI() {\n      this.node = this.paper.g();\n      this.node.addClass(\"iconStyle\");\n      this.node.addClass(\"separator\");\n      this.iconSeparator = this.paper.line(0, 0, this.width, 0);\n      this.node.add(this.iconSeparator);\n    }\n  }]);\n\n  return ToolbarSeparator;\n}(ToolbarIcon_1.ToolbarIcon);\n\nexports.ToolbarSeparator = ToolbarSeparator;","map":null,"metadata":{},"sourceType":"script"}