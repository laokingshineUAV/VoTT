{"ast":null,"code":"import _classCallCheck from \"/home/jw/Documents/code/VoTT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nexport var Deferred = function Deferred() {\n  var _this = this;\n\n  _classCallCheck(this, Deferred);\n\n  this.resolve = function (result) {};\n\n  this.reject = function (err) {};\n\n  this.then = function (value) {\n    throw new Error(\"Not implemented yet\");\n  };\n\n  this.catch = function (err) {\n    throw new Error(\"Not implemented yet\");\n  };\n\n  this.promise = new Promise(function (resolve, reject) {\n    _this.resolve = resolve;\n    _this.reject = reject;\n  });\n  this.then = this.promise.then.bind(this.promise);\n  this.catch = this.promise.catch.bind(this.promise);\n} // tslint:disable-next-line\n;","map":{"version":3,"sources":["/home/jw/Documents/code/VoTT/src/common/deferred.ts"],"names":["Deferred","resolve","result","reject","err","then","value","Error","catch","promise","Promise","bind"],"mappings":";AAOA,WAAaA,QAAb,GAGI,oBAAc;AAAA;;AAAA;;AAAA,OAUPC,OAVO,GAUG,UAACC,MAAD,EAAgB,CAAG,CAVtB;;AAAA,OAYPC,MAZO,GAYE,UAACC,GAAD,EAAe,CAAG,CAZpB;;AAAA,OAaPC,IAbO,GAaA,UAACC,KAAD,EAAc;AAAE,UAAM,IAAIC,KAAJ,CAAU,qBAAV,CAAN;AAAyC,GAbzD;;AAAA,OAcPC,KAdO,GAcC,UAACJ,GAAD,EAAc;AAAE,UAAM,IAAIG,KAAJ,CAAU,qBAAV,CAAN;AAAyC,GAd1D;;AACV,OAAKE,OAAL,GAAe,IAAIC,OAAJ,CAAe,UAACT,OAAD,EAAUE,MAAV,EAAqB;AAC/C,IAAA,KAAI,CAACF,OAAL,GAAeA,OAAf;AACA,IAAA,KAAI,CAACE,MAAL,GAAcA,MAAd;AACH,GAHc,CAAf;AAKA,OAAKE,IAAL,GAAY,KAAKI,OAAL,CAAaJ,IAAb,CAAkBM,IAAlB,CAAuB,KAAKF,OAA5B,CAAZ;AACA,OAAKD,KAAL,GAAa,KAAKC,OAAL,CAAaD,KAAb,CAAmBG,IAAnB,CAAwB,KAAKF,OAA7B,CAAb;AACH,CAXL,CAYI;AAZJ","sourcesContent":["export interface IDeferred<T> {\n    resolve(result?: T): void;\n    reject(err?: any): void;\n    then(value: T): Promise<T>;\n    catch(err: any): Promise<T>;\n}\n\nexport class Deferred<T> implements IDeferred<T> {\n    public promise: Promise<T>;\n\n    constructor() {\n        this.promise = new Promise<T>((resolve, reject) => {\n            this.resolve = resolve;\n            this.reject = reject;\n        });\n\n        this.then = this.promise.then.bind(this.promise);\n        this.catch = this.promise.catch.bind(this.promise);\n    }\n    // tslint:disable-next-line\n    public resolve = (result?: T) => { };\n    // tslint:disable-next-line\n    public reject = (err?: any) => { };\n    public then = (value: T) => { throw new Error(\"Not implemented yet\"); };\n    public catch = (err: any) => { throw new Error(\"Not implemented yet\"); };\n}\n"]},"metadata":{},"sourceType":"module"}