{"ast":null,"code":"import _regeneratorRuntime from \"/home/jw/Documents/code/VoTT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/jw/Documents/code/VoTT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/jw/Documents/code/VoTT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/jw/Documents/code/VoTT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/jw/Documents/code/VoTT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/jw/Documents/code/VoTT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/jw/Documents/code/VoTT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/jw/Documents/code/VoTT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/jw/Documents/code/VoTT/src/react/components/common/localFolderPicker/localFolderPicker.tsx\";\nimport React from \"react\";\nimport { LocalFileSystemProxy } from \"../../../../providers/storage/localFileSystemProxy\";\nimport { strings } from \"../../../../common/strings\";\n/**\n * Properties for Local Folder Picker\n * @member id - ID for HTML form control element\n * @member value - Initial value for picker\n * @member onChange - Function to call on change to selected value\n */\n\n/**\n * @name - Local Folder Picker\n * @description - Select folder from local file system\n */\nvar LocalFolderPicker =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(LocalFolderPicker, _React$Component);\n\n  function LocalFolderPicker(props, context) {\n    var _this;\n\n    _classCallCheck(this, LocalFolderPicker);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LocalFolderPicker).call(this, props, context));\n    _this.selectLocalFolder =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var filePath;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _this.localFileSystem.selectContainer();\n\n            case 2:\n              filePath = _context.sent;\n\n              if (filePath) {\n                _this.setState({\n                  value: filePath\n                }, function () {\n                  return _this.props.onChange(filePath);\n                });\n              }\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n    _this.state = {\n      value: _this.props.value || \"\"\n    };\n    _this.localFileSystem = new LocalFileSystemProxy();\n    _this.selectLocalFolder = _this.selectLocalFolder.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(LocalFolderPicker, [{\n    key: \"render\",\n    value: function render() {\n      var id = this.props.id;\n      var value = this.state.value;\n      return React.createElement(\"div\", {\n        className: \"input-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: id,\n        type: \"text\",\n        className: \"form-control\",\n        value: value,\n        readOnly: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"input-group-append\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-primary\",\n        type: \"button\",\n        onClick: this.selectLocalFolder,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, strings.connections.providers.local.selectFolder)));\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.value !== this.props.value) {\n        this.setState({\n          value: this.props.value\n        });\n      }\n    }\n  }]);\n\n  return LocalFolderPicker;\n}(React.Component);\n\nexport { LocalFolderPicker as default };","map":{"version":3,"sources":["/home/jw/Documents/code/VoTT/src/react/components/common/localFolderPicker/localFolderPicker.tsx"],"names":["React","LocalFileSystemProxy","strings","LocalFolderPicker","props","context","selectLocalFolder","localFileSystem","selectContainer","filePath","setState","value","onChange","state","bind","id","connections","providers","local","selectFolder","prevProps","Component"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,oBAAT,QAAqC,oDAArC;AACA,SAASC,OAAT,QAAwB,4BAAxB;AAEA;;;;;;;AAoBA;;;;IAIqBC,iB;;;;;AAGjB,6BAAYC,KAAZ,EAAmBC,OAAnB,EAA4B;AAAA;;AAAA;;AACxB,2FAAMD,KAAN,EAAaC,OAAb;AADwB,UAoCpBC,iBApCoB;AAAA;AAAA;AAAA;AAAA,6BAoCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACD,MAAKC,eAAL,CAAqBC,eAArB,EADC;;AAAA;AAClBC,cAAAA,QADkB;;AAExB,kBAAIA,QAAJ,EAAc;AACV,sBAAKC,QAAL,CAAc;AACVC,kBAAAA,KAAK,EAAEF;AADG,iBAAd,EAEG;AAAA,yBAAM,MAAKL,KAAL,CAAWQ,QAAX,CAAoBH,QAApB,CAAN;AAAA,iBAFH;AAGH;;AANuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KApCA;AAGxB,UAAKI,KAAL,GAAa;AACTF,MAAAA,KAAK,EAAE,MAAKP,KAAL,CAAWO,KAAX,IAAoB;AADlB,KAAb;AAIA,UAAKJ,eAAL,GAAuB,IAAIN,oBAAJ,EAAvB;AACA,UAAKK,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBQ,IAAvB,uDAAzB;AARwB;AAS3B;;;;6BAEe;AAAA,UACJC,EADI,GACG,KAAKX,KADR,CACJW,EADI;AAAA,UAEJJ,KAFI,GAEM,KAAKE,KAFX,CAEJF,KAFI;AAIZ,aACI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,EAAE,EAAEI,EAAX;AAAe,QAAA,IAAI,EAAC,MAApB;AAA2B,QAAA,SAAS,EAAC,cAArC;AAAoD,QAAA,KAAK,EAAEJ,KAA3D;AAAkE,QAAA,QAAQ,EAAE,IAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,SAAS,EAAC,iBAAlB;AACI,QAAA,IAAI,EAAC,QADT;AAEI,QAAA,OAAO,EAAE,KAAKL,iBAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEsCJ,OAAO,CAACc,WAAR,CAAoBC,SAApB,CAA8BC,KAA9B,CAAoCC,YAF1E,CADJ,CAFJ,CADJ;AAWH;;;uCAEyBC,S,EAAW;AACjC,UAAIA,SAAS,CAACT,KAAV,KAAoB,KAAKP,KAAL,CAAWO,KAAnC,EAA0C;AACtC,aAAKD,QAAL,CAAc;AACVC,UAAAA,KAAK,EAAE,KAAKP,KAAL,CAAWO;AADR,SAAd;AAGH;AACJ;;;;EArC0CX,KAAK,CAACqB,S;;SAAhClB,iB","sourcesContent":["import React from \"react\";\nimport { LocalFileSystemProxy } from \"../../../../providers/storage/localFileSystemProxy\";\nimport { strings } from \"../../../../common/strings\";\n\n/**\n * Properties for Local Folder Picker\n * @member id - ID for HTML form control element\n * @member value - Initial value for picker\n * @member onChange - Function to call on change to selected value\n */\ninterface ILocalFolderPickerProps {\n    id?: string;\n    value: string;\n    onChange: (value) => void;\n}\n\n/**\n * State for Local Folder Picker\n * @member value - Selected folder\n */\ninterface ILocalFolderPickerState {\n    value: string;\n}\n\n/**\n * @name - Local Folder Picker\n * @description - Select folder from local file system\n */\nexport default class LocalFolderPicker extends React.Component<ILocalFolderPickerProps, ILocalFolderPickerState> {\n    private localFileSystem: LocalFileSystemProxy;\n\n    constructor(props, context) {\n        super(props, context);\n\n        this.state = {\n            value: this.props.value || \"\",\n        };\n\n        this.localFileSystem = new LocalFileSystemProxy();\n        this.selectLocalFolder = this.selectLocalFolder.bind(this);\n    }\n\n    public render() {\n        const { id } = this.props;\n        const { value } = this.state;\n\n        return (\n            <div className=\"input-group\">\n                <input id={id} type=\"text\" className=\"form-control\" value={value} readOnly={true} />\n                <div className=\"input-group-append\">\n                    <button className=\"btn btn-primary\"\n                        type=\"button\"\n                        onClick={this.selectLocalFolder}>{strings.connections.providers.local.selectFolder}\n                    </button>\n                </div>\n            </div>\n        );\n    }\n\n    public componentDidUpdate(prevProps) {\n        if (prevProps.value !== this.props.value) {\n            this.setState({\n                value: this.props.value,\n            });\n        }\n    }\n\n    private selectLocalFolder = async () => {\n        const filePath = await this.localFileSystem.selectContainer();\n        if (filePath) {\n            this.setState({\n                value: filePath,\n            }, () => this.props.onChange(filePath));\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}