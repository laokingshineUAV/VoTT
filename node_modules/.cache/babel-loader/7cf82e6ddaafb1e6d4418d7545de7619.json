{"ast":null,"code":"import { ExportProviderFactory } from \"./providers/export/exportProviderFactory\";\nimport { PascalVOCExportProvider } from \"./providers/export/pascalVOC\";\nimport { TFRecordsExportProvider } from \"./providers/export/tensorFlowRecords\";\nimport { VottJsonExportProvider } from \"./providers/export/vottJson\";\nimport { CsvExportProvider } from \"./providers/export/csv\";\nimport { AssetProviderFactory } from \"./providers/storage/assetProviderFactory\";\nimport { AzureBlobStorage } from \"./providers/storage/azureBlobStorage\";\nimport { BingImageSearch } from \"./providers/storage/bingImageSearch\";\nimport { LocalFileSystemProxy } from \"./providers/storage/localFileSystemProxy\";\nimport { StorageProviderFactory } from \"./providers/storage/storageProviderFactory\";\nimport registerToolbar from \"./registerToolbar\";\nimport { strings } from \"./common/strings\";\nimport { HostProcessType } from \"./common/hostProcess\";\nimport { AzureCustomVisionProvider } from \"./providers/export/azureCustomVision\";\nimport { CntkExportProvider } from \"./providers/export/cntk\";\n/**\n * Registers storage, asset and export providers, as well as all toolbar items\n */\n\nexport default function registerProviders() {\n  // Storage Providers\n  StorageProviderFactory.register({\n    name: \"localFileSystemProxy\",\n    displayName: strings.connections.providers.local.title,\n    platformSupport: HostProcessType.Electron,\n    factory: function factory(options) {\n      return new LocalFileSystemProxy(options);\n    }\n  });\n  StorageProviderFactory.register({\n    name: \"azureBlobStorage\",\n    displayName: strings.connections.providers.azureBlob.title,\n    factory: function factory(options) {\n      return new AzureBlobStorage(options);\n    }\n  }); // Asset Providers\n\n  AssetProviderFactory.register({\n    name: \"localFileSystemProxy\",\n    displayName: strings.connections.providers.local.title,\n    platformSupport: HostProcessType.Electron,\n    factory: function factory(options) {\n      return new LocalFileSystemProxy(options);\n    }\n  });\n  AssetProviderFactory.register({\n    name: \"azureBlobStorage\",\n    displayName: strings.connections.providers.azureBlob.title,\n    factory: function factory(options) {\n      return new AzureBlobStorage(options);\n    }\n  });\n  AssetProviderFactory.register({\n    name: \"bingImageSearch\",\n    displayName: strings.connections.providers.bing.title,\n    factory: function factory(options) {\n      return new BingImageSearch(options);\n    }\n  }); // Export Providers\n\n  ExportProviderFactory.register({\n    name: \"vottJson\",\n    displayName: strings.export.providers.vottJson.displayName,\n    factory: function factory(project, options) {\n      return new VottJsonExportProvider(project, options);\n    }\n  });\n  ExportProviderFactory.register({\n    name: \"pascalVOC\",\n    displayName: strings.export.providers.pascalVoc.displayName,\n    factory: function factory(project, options) {\n      return new PascalVOCExportProvider(project, options);\n    }\n  });\n  ExportProviderFactory.register({\n    name: \"tensorFlowRecords\",\n    displayName: strings.export.providers.tfRecords.displayName,\n    factory: function factory(project, options) {\n      return new TFRecordsExportProvider(project, options);\n    }\n  });\n  ExportProviderFactory.register({\n    name: \"azureCustomVision\",\n    displayName: strings.export.providers.azureCV.displayName,\n    factory: function factory(project, options) {\n      return new AzureCustomVisionProvider(project, options);\n    }\n  });\n  ExportProviderFactory.register({\n    name: \"cntk\",\n    displayName: strings.export.providers.cntk.displayName,\n    factory: function factory(project, options) {\n      return new CntkExportProvider(project, options);\n    }\n  });\n  ExportProviderFactory.register({\n    name: \"csv\",\n    displayName: strings.export.providers.csv.displayName,\n    factory: function factory(project, options) {\n      return new CsvExportProvider(project, options);\n    }\n  });\n  registerToolbar();\n}","map":{"version":3,"sources":["/home/jw/Documents/code/VoTT/src/registerProviders.ts"],"names":["ExportProviderFactory","PascalVOCExportProvider","TFRecordsExportProvider","VottJsonExportProvider","CsvExportProvider","AssetProviderFactory","AzureBlobStorage","BingImageSearch","LocalFileSystemProxy","StorageProviderFactory","registerToolbar","strings","HostProcessType","AzureCustomVisionProvider","CntkExportProvider","registerProviders","register","name","displayName","connections","providers","local","title","platformSupport","Electron","factory","options","azureBlob","bing","export","vottJson","project","pascalVoc","tfRecords","azureCV","cntk","csv"],"mappings":"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","sourcesContent":["import { ExportProviderFactory } from \"./providers/export/exportProviderFactory\";\nimport { PascalVOCExportProvider } from \"./providers/export/pascalVOC\";\nimport { TFRecordsExportProvider } from \"./providers/export/tensorFlowRecords\";\nimport { VottJsonExportProvider } from \"./providers/export/vottJson\";\nimport { CsvExportProvider } from \"./providers/export/csv\";\nimport { AssetProviderFactory } from \"./providers/storage/assetProviderFactory\";\nimport { AzureBlobStorage } from \"./providers/storage/azureBlobStorage\";\nimport { BingImageSearch } from \"./providers/storage/bingImageSearch\";\nimport { LocalFileSystemProxy } from \"./providers/storage/localFileSystemProxy\";\nimport { StorageProviderFactory } from \"./providers/storage/storageProviderFactory\";\nimport registerToolbar from \"./registerToolbar\";\nimport { strings } from \"./common/strings\";\nimport { HostProcessType } from \"./common/hostProcess\";\nimport { AzureCustomVisionProvider } from \"./providers/export/azureCustomVision\";\nimport { CntkExportProvider } from \"./providers/export/cntk\";\n\n/**\n * Registers storage, asset and export providers, as well as all toolbar items\n */\nexport default function registerProviders() {\n    // Storage Providers\n    StorageProviderFactory.register({\n        name: \"localFileSystemProxy\",\n        displayName: strings.connections.providers.local.title,\n        platformSupport: HostProcessType.Electron,\n        factory: (options) => new LocalFileSystemProxy(options),\n    });\n    StorageProviderFactory.register({\n        name: \"azureBlobStorage\",\n        displayName: strings.connections.providers.azureBlob.title,\n        factory: (options) => new AzureBlobStorage(options),\n    });\n\n    // Asset Providers\n    AssetProviderFactory.register({\n        name: \"localFileSystemProxy\",\n        displayName: strings.connections.providers.local.title,\n        platformSupport: HostProcessType.Electron,\n        factory: (options) => new LocalFileSystemProxy(options),\n    });\n    AssetProviderFactory.register({\n        name: \"azureBlobStorage\",\n        displayName: strings.connections.providers.azureBlob.title,\n        factory: (options) => new AzureBlobStorage(options),\n    });\n    AssetProviderFactory.register({\n        name: \"bingImageSearch\",\n        displayName: strings.connections.providers.bing.title,\n        factory: (options) => new BingImageSearch(options),\n    });\n\n    // Export Providers\n    ExportProviderFactory.register({\n        name: \"vottJson\",\n        displayName: strings.export.providers.vottJson.displayName,\n        factory: (project, options) => new VottJsonExportProvider(project, options),\n    });\n    ExportProviderFactory.register({\n        name: \"pascalVOC\",\n        displayName: strings.export.providers.pascalVoc.displayName,\n        factory: (project, options) => new PascalVOCExportProvider(project, options),\n    });\n    ExportProviderFactory.register({\n        name: \"tensorFlowRecords\",\n        displayName: strings.export.providers.tfRecords.displayName,\n        factory: (project, options) => new TFRecordsExportProvider(project, options),\n    });\n    ExportProviderFactory.register({\n        name: \"azureCustomVision\",\n        displayName: strings.export.providers.azureCV.displayName,\n        factory: (project, options) => new AzureCustomVisionProvider(project, options),\n    });\n    ExportProviderFactory.register({\n        name: \"cntk\",\n        displayName: strings.export.providers.cntk.displayName,\n        factory: (project, options) => new CntkExportProvider(project, options),\n    });\n    ExportProviderFactory.register({\n        name: \"csv\",\n        displayName: strings.export.providers.csv.displayName,\n        factory: (project, options) => new CsvExportProvider(project, options),\n    });\n\n    registerToolbar();\n}\n"]},"metadata":{},"sourceType":"module"}