{"ast":null,"code":"import _classCallCheck from \"/home/jw/Documents/code/VoTT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/jw/Documents/code/VoTT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/jw/Documents/code/VoTT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/jw/Documents/code/VoTT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/jw/Documents/code/VoTT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/jw/Documents/code/VoTT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/jw/Documents/code/VoTT/src/react/components/common/confirm/confirm.tsx\";\nimport React from \"react\";\nimport { Button } from \"reactstrap\";\nimport MessageBox from \"../messageBox/messageBox\";\n/**\n * Properties for Confirm Component\n * @member confirmButtonText - Text displayed on 'Confirm' button. Default 'Yes'\n * @member cancelButtonText - Text displayed on 'Cancel' button. Default 'No'\n * @member confirmButtonColor - Color of 'Confirm' button. Default 'primary'\n * @member cancelButtonColor - Color of 'Cancel' button. Default 'secondary'\n * @member onConfirm - Function to call on confirm\n * @member onCancel - Function to call on cancel\n */\n\n/**\n * @name - Confirm\n * @description - Dialog for confirming an action\n */\nvar Confirm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Confirm, _React$Component);\n\n  function Confirm(props, context) {\n    var _this;\n\n    _classCallCheck(this, Confirm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Confirm).call(this, props, context));\n    _this.state = {\n      params: null\n    };\n    _this.messageBox = React.createRef();\n    _this.open = _this.open.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.close = _this.close.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onConfirmClick = _this.onConfirmClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onCancelClick = _this.onCancelClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Confirm, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(MessageBox, {\n        ref: this.messageBox,\n        title: this.props.title,\n        message: this.props.message,\n        params: this.state.params,\n        onCancel: this.onCancelClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(Button, {\n        autoFocus: true,\n        color: this.props.confirmButtonColor || \"primary\",\n        onClick: this.onConfirmClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, this.props.confirmButtonText || \"Yes\"), React.createElement(Button, {\n        color: this.props.cancelButtonColor || \"secondary\",\n        onClick: this.onCancelClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, this.props.cancelButtonText || \"No\"));\n    }\n    /**\n     * Open Confirm Dialog\n     * @param params - Array of parameters passed to onConfirm function\n     */\n\n  }, {\n    key: \"open\",\n    value: function open() {\n      var _this2 = this;\n\n      for (var _len = arguments.length, params = new Array(_len), _key = 0; _key < _len; _key++) {\n        params[_key] = arguments[_key];\n      }\n\n      this.setState({\n        params: params\n      }, function () {\n        return _this2.messageBox.current.open();\n      });\n    }\n    /**\n     * Close Confirm Dialog\n     */\n\n  }, {\n    key: \"close\",\n    value: function close() {\n      this.messageBox.current.close();\n    }\n  }, {\n    key: \"onConfirmClick\",\n    value: function onConfirmClick() {\n      this.props.onConfirm.apply(null, this.state.params);\n    }\n  }, {\n    key: \"onCancelClick\",\n    value: function onCancelClick() {\n      if (this.props.onCancel) {\n        this.props.onCancel.apply(null, this.state.params);\n      }\n    }\n  }]);\n\n  return Confirm;\n}(React.Component);\n\nexport { Confirm as default };","map":{"version":3,"sources":["/home/jw/Documents/code/VoTT/src/react/components/common/confirm/confirm.tsx"],"names":["React","Button","MessageBox","Confirm","props","context","state","params","messageBox","createRef","open","bind","close","onConfirmClick","onCancelClick","title","message","confirmButtonColor","confirmButtonText","cancelButtonColor","cancelButtonText","setState","current","onConfirm","apply","onCancel","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,YAAvB;AACA,OAAOC,UAAP,MAA6C,0BAA7C;AAEA;;;;;;;;;;AA0BA;;;;IAIqBC,O;;;;;AAGjB,mBAAYC,KAAZ,EAAmBC,OAAnB,EAA4B;AAAA;;AAAA;;AACxB,iFAAMD,KAAN,EAAaC,OAAb;AAEA,UAAKC,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAE;AADC,KAAb;AAIA,UAAKC,UAAL,GAAkBR,KAAK,CAACS,SAAN,EAAlB;AAEA,UAAKC,IAAL,GAAY,MAAKA,IAAL,CAAUC,IAAV,uDAAZ;AACA,UAAKC,KAAL,GAAa,MAAKA,KAAL,CAAWD,IAAX,uDAAb;AACA,UAAKE,cAAL,GAAsB,MAAKA,cAAL,CAAoBF,IAApB,uDAAtB;AACA,UAAKG,aAAL,GAAqB,MAAKA,aAAL,CAAmBH,IAAnB,uDAArB;AAZwB;AAa3B;;;;6BAEe;AACZ,aACI,oBAAC,UAAD;AAAY,QAAA,GAAG,EAAE,KAAKH,UAAtB;AACI,QAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWW,KADtB;AAEI,QAAA,OAAO,EAAE,KAAKX,KAAL,CAAWY,OAFxB;AAGI,QAAA,MAAM,EAAE,KAAKV,KAAL,CAAWC,MAHvB;AAII,QAAA,QAAQ,EAAE,KAAKO,aAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKI,oBAAC,MAAD;AACI,QAAA,SAAS,EAAE,IADf;AAEI,QAAA,KAAK,EAAE,KAAKV,KAAL,CAAWa,kBAAX,IAAiC,SAF5C;AAGI,QAAA,OAAO,EAAE,KAAKJ,cAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGmC,KAAKT,KAAL,CAAWc,iBAAX,IAAgC,KAHnE,CALJ,EAUI,oBAAC,MAAD;AACI,QAAA,KAAK,EAAE,KAAKd,KAAL,CAAWe,iBAAX,IAAgC,WAD3C;AAEI,QAAA,OAAO,EAAE,KAAKL,aAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEkC,KAAKV,KAAL,CAAWgB,gBAAX,IAA+B,IAFjE,CAVJ,CADJ;AAiBH;AAED;;;;;;;2BAIoC;AAAA;;AAAA,wCAArBb,MAAqB;AAArBA,QAAAA,MAAqB;AAAA;;AAChC,WAAKc,QAAL,CAAc;AAAEd,QAAAA,MAAM,EAANA;AAAF,OAAd,EAA0B;AAAA,eAAM,MAAI,CAACC,UAAL,CAAgBc,OAAhB,CAAwBZ,IAAxB,EAAN;AAAA,OAA1B;AACH;AAED;;;;;;4BAGqB;AACjB,WAAKF,UAAL,CAAgBc,OAAhB,CAAwBV,KAAxB;AACH;;;qCAEwB;AACrB,WAAKR,KAAL,CAAWmB,SAAX,CAAqBC,KAArB,CAA2B,IAA3B,EAAiC,KAAKlB,KAAL,CAAWC,MAA5C;AACH;;;oCAEuB;AACpB,UAAI,KAAKH,KAAL,CAAWqB,QAAf,EAAyB;AACrB,aAAKrB,KAAL,CAAWqB,QAAX,CAAoBD,KAApB,CAA0B,IAA1B,EAAgC,KAAKlB,KAAL,CAAWC,MAA3C;AACH;AACJ;;;;EA7DgCP,KAAK,CAAC0B,S;;SAAtBvB,O","sourcesContent":["import React, { RefObject } from \"react\";\nimport { Button } from \"reactstrap\";\nimport MessageBox, { IMessageBoxProps } from \"../messageBox/messageBox\";\n\n/**\n * Properties for Confirm Component\n * @member confirmButtonText - Text displayed on 'Confirm' button. Default 'Yes'\n * @member cancelButtonText - Text displayed on 'Cancel' button. Default 'No'\n * @member confirmButtonColor - Color of 'Confirm' button. Default 'primary'\n * @member cancelButtonColor - Color of 'Cancel' button. Default 'secondary'\n * @member onConfirm - Function to call on confirm\n * @member onCancel - Function to call on cancel\n */\nexport interface IConfirmProps extends IMessageBoxProps {\n    confirmButtonText?: string;\n    cancelButtonText?: string;\n    confirmButtonColor?: string;\n    cancelButtonColor?: string;\n    onConfirm: (...params: any[]) => void;\n    onCancel?: (...params: any[]) => void;\n}\n\n/**\n * State for Confirm Component\n * @member params - Open ended parameters that are passed on opening modal\n */\nexport interface IConfirmState {\n    params: any[];\n}\n\n/**\n * @name - Confirm\n * @description - Dialog for confirming an action\n */\nexport default class Confirm extends React.Component<IConfirmProps, IConfirmState> {\n    private messageBox: RefObject<MessageBox>;\n\n    constructor(props, context) {\n        super(props, context);\n\n        this.state = {\n            params: null,\n        };\n\n        this.messageBox = React.createRef<MessageBox>();\n\n        this.open = this.open.bind(this);\n        this.close = this.close.bind(this);\n        this.onConfirmClick = this.onConfirmClick.bind(this);\n        this.onCancelClick = this.onCancelClick.bind(this);\n    }\n\n    public render() {\n        return (\n            <MessageBox ref={this.messageBox}\n                title={this.props.title}\n                message={this.props.message}\n                params={this.state.params}\n                onCancel={this.onCancelClick}>\n                <Button\n                    autoFocus={true}\n                    color={this.props.confirmButtonColor || \"primary\"}\n                    onClick={this.onConfirmClick}>{this.props.confirmButtonText || \"Yes\"}\n                </Button>\n                <Button\n                    color={this.props.cancelButtonColor || \"secondary\"}\n                    onClick={this.onCancelClick}>{this.props.cancelButtonText || \"No\"}\n                </Button>\n            </MessageBox>\n        );\n    }\n\n    /**\n     * Open Confirm Dialog\n     * @param params - Array of parameters passed to onConfirm function\n     */\n    public open(...params: any[]): void {\n        this.setState({ params }, () => this.messageBox.current.open());\n    }\n\n    /**\n     * Close Confirm Dialog\n     */\n    public close(): void {\n        this.messageBox.current.close();\n    }\n\n    private onConfirmClick() {\n        this.props.onConfirm.apply(null, this.state.params);\n    }\n\n    private onCancelClick() {\n        if (this.props.onCancel) {\n            this.props.onCancel.apply(null, this.state.params);\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}