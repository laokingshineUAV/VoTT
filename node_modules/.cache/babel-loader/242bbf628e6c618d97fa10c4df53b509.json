{"ast":null,"code":"import _objectSpread from \"/home/jw/Documents/code/VoTT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/jw/Documents/code/VoTT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/jw/Documents/code/VoTT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/jw/Documents/code/VoTT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/jw/Documents/code/VoTT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/jw/Documents/code/VoTT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/jw/Documents/code/VoTT/src/react/components/pages/activeLearning/activeLearningForm.tsx\";\nimport React from \"react\";\nimport Form from \"react-jsonschema-form\";\nimport { strings, addLocValues } from \"../../../../common/strings\";\nimport CustomFieldTemplate from \"../../common/customField/customFieldTemplate\";\nimport LocalFolderPicker from \"../../common/localFolderPicker/localFolderPicker\";\nimport { CustomWidget } from \"../../common/customField/customField\";\nimport Checkbox from \"rc-checkbox\"; // tslint:disable-next-line:no-var-requires\n\nvar formSchema = addLocValues(require(\"./activeLearningForm.json\")); // tslint:disable-next-line:no-var-requires\n\nvar uiSchema = addLocValues(require(\"./activeLearningForm.ui.json\"));\nexport var ActiveLearningForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ActiveLearningForm, _React$Component);\n\n  function ActiveLearningForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ActiveLearningForm);\n\n    for (var _len = arguments.length, _args = new Array(_len), _key = 0; _key < _len; _key++) {\n      _args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ActiveLearningForm)).call.apply(_getPrototypeOf2, [this].concat(_args)));\n    _this.state = {\n      classNames: [\"needs-validation\"],\n      uiSchema: _objectSpread({}, uiSchema),\n      formSchema: _objectSpread({}, formSchema),\n      formData: _objectSpread({}, _this.props.settings)\n    };\n    _this.widgets = {\n      localFolderPicker: LocalFolderPicker,\n      checkbox: CustomWidget(Checkbox, function (props) {\n        return {\n          checked: props.value,\n          onChange: function onChange(value) {\n            return props.onChange(value.target.checked);\n          },\n          disabled: props.disabled\n        };\n      })\n    };\n\n    _this.onFormChange = function (changeEvent) {\n      var updatedSettings = changeEvent.formData;\n\n      if (changeEvent.formData.modelPathType !== _this.state.formData.modelPathType) {\n        updatedSettings = _objectSpread({}, changeEvent.formData, {\n          modelPath: null,\n          modelUrl: null\n        });\n      }\n\n      _this.setState({\n        formData: updatedSettings\n      }, function () {\n        if (_this.props.onChange) {\n          _this.props.onChange(updatedSettings);\n        }\n      });\n    };\n\n    _this.onFormSubmit = function (args) {\n      var settings = _objectSpread({}, args.formData);\n\n      _this.setState({\n        formData: settings\n      });\n\n      _this.props.onSubmit(settings);\n    };\n\n    _this.onFormCancel = function () {\n      if (_this.props.onCancel) {\n        _this.props.onCancel();\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(ActiveLearningForm, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.settings !== prevProps.settings) {\n        this.setState({\n          formData: this.props.settings\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Form, {\n        className: this.state.classNames.join(\" \"),\n        showErrorList: false,\n        liveValidate: true,\n        noHtml5Validate: true,\n        FieldTemplate: CustomFieldTemplate,\n        widgets: this.widgets,\n        schema: this.state.formSchema,\n        uiSchema: this.state.uiSchema,\n        formData: this.state.formData,\n        onChange: this.onFormChange,\n        onSubmit: this.onFormSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-success mr-1\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, strings.projectSettings.save), React.createElement(\"button\", {\n        className: \"btn btn-secondary btn-cancel\",\n        type: \"button\",\n        onClick: this.onFormCancel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, strings.common.cancel)));\n    }\n  }]);\n\n  return ActiveLearningForm;\n}(React.Component);","map":{"version":3,"sources":["/home/jw/Documents/code/VoTT/src/react/components/pages/activeLearning/activeLearningForm.tsx"],"names":["React","Form","strings","addLocValues","CustomFieldTemplate","LocalFolderPicker","CustomWidget","Checkbox","formSchema","require","uiSchema","ActiveLearningForm","state","classNames","formData","props","settings","widgets","localFolderPicker","checkbox","checked","value","onChange","target","disabled","onFormChange","changeEvent","updatedSettings","modelPathType","modelPath","modelUrl","setState","onFormSubmit","args","onSubmit","onFormCancel","onCancel","prevProps","join","projectSettings","save","common","cancel","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Form, { ISubmitEvent, IChangeEvent, Widget } from \"react-jsonschema-form\";\nimport { IActiveLearningSettings, ModelPathType } from \"../../../../models/applicationState\";\nimport { strings, addLocValues } from \"../../../../common/strings\";\nimport CustomFieldTemplate from \"../../common/customField/customFieldTemplate\";\nimport LocalFolderPicker from \"../../common/localFolderPicker/localFolderPicker\";\nimport { CustomWidget } from \"../../common/customField/customField\";\nimport Checkbox from \"rc-checkbox\";\n\n// tslint:disable-next-line:no-var-requires\nconst formSchema = addLocValues(require(\"./activeLearningForm.json\"));\n// tslint:disable-next-line:no-var-requires\nconst uiSchema = addLocValues(require(\"./activeLearningForm.ui.json\"));\n\nexport interface IActiveLearningFormProps extends React.Props<ActiveLearningForm> {\n    settings: IActiveLearningSettings;\n    onSubmit: (settings: IActiveLearningSettings) => void;\n    onChange?: (settings: IActiveLearningSettings) => void;\n    onCancel?: () => void;\n}\n\nexport interface IActiveLearningFormState {\n    classNames: string[];\n    formData: IActiveLearningSettings;\n    uiSchema: any;\n    formSchema: any;\n}\n\nexport class ActiveLearningForm extends React.Component<IActiveLearningFormProps, IActiveLearningFormState> {\n    public state: IActiveLearningFormState = {\n        classNames: [\"needs-validation\"],\n        uiSchema: { ...uiSchema },\n        formSchema: { ...formSchema },\n        formData: {\n            ...this.props.settings,\n        },\n    };\n\n    private widgets = {\n        localFolderPicker: (LocalFolderPicker as any) as Widget,\n        checkbox: CustomWidget(Checkbox, (props) => ({\n            checked: props.value,\n            onChange: (value) => props.onChange(value.target.checked),\n            disabled: props.disabled,\n        })),\n    };\n\n    public componentDidUpdate(prevProps: Readonly<IActiveLearningFormProps>) {\n        if (this.props.settings !== prevProps.settings) {\n            this.setState({ formData: this.props.settings });\n        }\n    }\n\n    public render() {\n        return (\n            <Form\n                className={this.state.classNames.join(\" \")}\n                showErrorList={false}\n                liveValidate={true}\n                noHtml5Validate={true}\n                FieldTemplate={CustomFieldTemplate}\n                widgets={this.widgets}\n                schema={this.state.formSchema}\n                uiSchema={this.state.uiSchema}\n                formData={this.state.formData}\n                onChange={this.onFormChange}\n                onSubmit={this.onFormSubmit}>\n                <div>\n                    <button className=\"btn btn-success mr-1\" type=\"submit\">{strings.projectSettings.save}</button>\n                    <button className=\"btn btn-secondary btn-cancel\"\n                        type=\"button\"\n                        onClick={this.onFormCancel}>{strings.common.cancel}</button>\n                </div>\n            </Form>\n        );\n    }\n\n    private onFormChange = (changeEvent: IChangeEvent<IActiveLearningSettings>): void => {\n        let updatedSettings = changeEvent.formData;\n\n        if (changeEvent.formData.modelPathType !== this.state.formData.modelPathType) {\n            updatedSettings = {\n                ...changeEvent.formData,\n                modelPath: null,\n                modelUrl: null,\n            };\n        }\n\n        this.setState({\n            formData: updatedSettings,\n        }, () => {\n            if (this.props.onChange) {\n                this.props.onChange(updatedSettings);\n            }\n        });\n    }\n\n    private onFormSubmit = (args: ISubmitEvent<IActiveLearningSettings>): void => {\n        const settings: IActiveLearningSettings = {\n            ...args.formData,\n        };\n\n        this.setState({ formData: settings });\n        this.props.onSubmit(settings);\n    }\n\n    private onFormCancel = (): void => {\n        if (this.props.onCancel) {\n            this.props.onCancel();\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}