{"ast":null,"code":"import _objectSpread from \"/home/jw/Documents/code/VoTT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/jw/Documents/code/VoTT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/jw/Documents/code/VoTT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/jw/Documents/code/VoTT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/jw/Documents/code/VoTT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/jw/Documents/code/VoTT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/jw/Documents/code/VoTT/src/react/components/shell/titleBar.tsx\";\nimport React from \"react\";\nimport Menu, { MenuItem, SubMenu, Divider } from \"rc-menu\";\nimport { PlatformType } from \"../../../common/hostProcess\";\nimport \"./titleBar.scss\";\nimport { strings } from \"../../../common/strings\";\nexport var TitleBar =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TitleBar, _React$Component);\n\n  function TitleBar() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TitleBar);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TitleBar)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      isElectron: false,\n      platform: global && global.process && global.process.platform ? global.process.platform : \"web\",\n      maximized: false,\n      fullscreen: false,\n      menu: null\n    };\n    _this.menu = React.createRef();\n\n    _this.onMaximize = function (isMaximized) {\n      _this.setState({\n        maximized: isMaximized\n      });\n    };\n\n    _this.onFullScreen = function (isFullScreen) {\n      _this.setState({\n        fullscreen: isFullScreen\n      });\n    };\n\n    _this.renderMenu = function (menu) {\n      if (!menu) {\n        return null;\n      }\n\n      return menu.items.map(_this.renderMenuItem);\n    };\n\n    _this.renderMenuItem = function (menuItem, index) {\n      if (!menuItem.visible) {\n        return null;\n      }\n\n      var itemType = menuItem[\"type\"];\n\n      switch (itemType) {\n        case \"submenu\":\n          return React.createElement(SubMenu, {\n            title: menuItem.label,\n            key: menuItem.label,\n            popupOffset: [0, 0],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 147\n            },\n            __self: this\n          }, _this.renderMenu(menuItem[\"submenu\"]));\n\n        case \"separator\":\n          return React.createElement(Divider, {\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 152\n            },\n            __self: this\n          });\n\n        case \"checkbox\":\n          return React.createElement(MenuItem, {\n            key: menuItem.label,\n            disabled: !menuItem.enabled,\n            onClick: function onClick(e) {\n              return _this.onMenuItemClick(e, menuItem);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 155\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"menu-item-container\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 158\n            },\n            __self: this\n          }, Boolean(menuItem.checked) && React.createElement(\"div\", {\n            className: \"menu-item-checkbox\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 160\n            },\n            __self: this\n          }, React.createElement(\"i\", {\n            className: \"fas fa-check\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 161\n            },\n            __self: this\n          })), React.createElement(\"div\", {\n            className: \"menu-item-label\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 164\n            },\n            __self: this\n          }, menuItem.label, menuItem[\"sublabel\"]), React.createElement(\"div\", {\n            className: \"menu-item-accelerator\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 165\n            },\n            __self: this\n          }, _this.getAcceleratorString(menuItem))));\n\n        case \"normal\":\n          return React.createElement(MenuItem, {\n            key: menuItem.label,\n            disabled: !menuItem.enabled,\n            onClick: function onClick(e) {\n              return _this.onMenuItemClick(e, menuItem);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 170\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"menu-item-container\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 173\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"menu-item-label\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 174\n            },\n            __self: this\n          }, menuItem.label, menuItem[\"sublabel\"]), React.createElement(\"div\", {\n            className: \"menu-item-accelerator\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 175\n            },\n            __self: this\n          }, _this.getAcceleratorString(menuItem))));\n      }\n    };\n\n    _this.syncTitle = function () {\n      if (_this.state.isElectron) {\n        _this.currentWindow.setTitle(\"\".concat(_this.props.title, \" - VoTT\"));\n      }\n    };\n\n    _this.minimizeWindow = function () {\n      _this.currentWindow.minimize();\n    };\n\n    _this.maximizeWindow = function () {\n      _this.currentWindow.maximize();\n    };\n\n    _this.unmaximizeWindow = function () {\n      _this.currentWindow.unmaximize();\n    };\n\n    _this.closeWindow = function () {\n      _this.currentWindow.close();\n    };\n\n    _this.onMenuItemSelected = function (key, item) {\n      // Required to auto-close the menu after user selects an item.\n      _this.menu.current.store.setState({\n        openKeys: [],\n        selectedKeys: []\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(TitleBar, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var isElectron = !!window[\"require\"];\n\n      if (isElectron) {\n        this.remote = window.require(\"electron\").remote;\n        this.currentWindow = this.remote.getCurrentWindow();\n        this.currentWindow.on(\"maximize\", function () {\n          return _this2.onMaximize(true);\n        });\n        this.currentWindow.on(\"unmaximize\", function () {\n          return _this2.onMaximize(false);\n        });\n        this.currentWindow.on(\"enter-full-screen\", function () {\n          return _this2.onFullScreen(true);\n        });\n        this.currentWindow.on(\"leave-full-screen\", function () {\n          return _this2.onFullScreen(false);\n        });\n        this.setState({\n          isElectron: true,\n          maximized: this.currentWindow.isMaximized(),\n          fullscreen: this.currentWindow.isFullScreen(),\n          menu: this.remote.Menu.getApplicationMenu()\n        });\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.title !== prevProps.title) {\n        this.syncTitle();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.fullscreen) {\n        return null;\n      }\n\n      return React.createElement(\"div\", {\n        className: \"title-bar bg-lighter-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, (this.state.platform === PlatformType.Windows || this.state.platform === PlatformType.Web) && React.createElement(\"div\", {\n        className: \"title-bar-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, typeof this.props.icon === \"string\" && React.createElement(\"i\", {\n        className: \"\".concat(this.props.icon),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }), typeof this.props.icon !== \"string\" && this.props.icon), this.state.platform === PlatformType.Windows && React.createElement(\"div\", {\n        className: \"title-bar-menu\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(Menu, {\n        ref: this.menu,\n        mode: \"horizontal\",\n        selectable: false,\n        triggerSubMenuAction: \"click\",\n        onClick: this.onMenuItemSelected,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, this.renderMenu(this.state.menu))), React.createElement(\"div\", {\n        className: \"title-bar-main\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, this.props.title || \"Welcome\", \" - VoTT\"), React.createElement(\"div\", {\n        className: \"title-bar-controls\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, this.props.children, this.state.platform === PlatformType.Windows && React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        title: strings.titleBar.minimize,\n        className: \"btn-window-minimize\",\n        onClick: this.minimizeWindow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"far fa-window-minimize\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      })), !this.state.maximized && React.createElement(\"li\", {\n        title: strings.titleBar.maximize,\n        className: \"btn-window-maximize\",\n        onClick: this.maximizeWindow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"far fa-window-maximize\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      })), this.state.maximized && React.createElement(\"li\", {\n        title: strings.titleBar.restore,\n        className: \"btn-window-restore\",\n        onClick: this.unmaximizeWindow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"far fa-window-restore\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      })), React.createElement(\"li\", {\n        title: strings.titleBar.close,\n        className: \"btn-window-close\",\n        onClick: this.closeWindow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-times\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      })))));\n    }\n  }, {\n    key: \"onMenuItemClick\",\n    value: function onMenuItemClick(e, menuItem) {\n      if (menuItem.click) {\n        menuItem.click.call(menuItem, menuItem, this.currentWindow);\n      }\n\n      this.setState({\n        menu: _objectSpread({}, this.state.menu)\n      });\n    }\n  }, {\n    key: \"getAcceleratorString\",\n    value: function getAcceleratorString(menuItem) {\n      var accelerator = menuItem[\"accelerator\"] || this.getAcceleratorFromRole(menuItem[\"role\"]);\n\n      if (accelerator) {\n        return accelerator.replace(\"CmdOrCtrl\", \"Ctrl\");\n      }\n\n      return null;\n    }\n  }, {\n    key: \"getAcceleratorFromRole\",\n    value: function getAcceleratorFromRole(role) {\n      switch (role) {\n        case \"undo\":\n          return \"CmdOrCtrl+Z\";\n\n        case \"redo\":\n          return \"CmdOrCtrl+Y\";\n\n        case \"cut\":\n          return \"CmdOrCtrl+X\";\n\n        case \"copy\":\n          return \"CmdOrCtrl+C\";\n\n        case \"paste\":\n          return \"CmdOrCtrl+V\";\n\n        case \"selectall\":\n          return \"CmdOrCtrl+A\";\n\n        case \"minimize\":\n          return \"CmdOrCtrl+M\";\n\n        case \"close\":\n          return \"CmdOrCtrl+W\";\n\n        case \"quit\":\n          return \"CmdOrCtrl+Q\";\n\n        case \"reload\":\n          return \"CmdOrCtrl+R\";\n\n        case \"togglefullscreen\":\n          return \"F11\";\n\n        case \"toggledevtools\":\n          return \"CmdOrCtrl+Shift+I\";\n\n        case \"resetzoom\":\n          return \"CmdOrCtrl+0\";\n\n        case \"zoomin\":\n          return \"CmdOrCtrl+Shift+=\";\n\n        case \"zoomout\":\n          return \"CmdOrCtrl+-\";\n      }\n    }\n  }]);\n\n  return TitleBar;\n}(React.Component);","map":{"version":3,"sources":["/home/jw/Documents/code/VoTT/src/react/components/shell/titleBar.tsx"],"names":["React","Menu","MenuItem","SubMenu","Divider","PlatformType","strings","TitleBar","state","isElectron","platform","global","process","maximized","fullscreen","menu","createRef","onMaximize","isMaximized","setState","onFullScreen","isFullScreen","renderMenu","items","map","renderMenuItem","menuItem","index","visible","itemType","label","enabled","e","onMenuItemClick","Boolean","checked","getAcceleratorString","syncTitle","currentWindow","setTitle","props","title","minimizeWindow","minimize","maximizeWindow","maximize","unmaximizeWindow","unmaximize","closeWindow","close","onMenuItemSelected","key","item","current","store","openKeys","selectedKeys","window","remote","require","getCurrentWindow","on","getApplicationMenu","prevProps","Windows","Web","icon","children","titleBar","restore","click","call","accelerator","getAcceleratorFromRole","replace","role","Component"],"mappings":"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","sourcesContent":["import React, { Fragment } from \"react\";\nimport Menu, { MenuItem, SubMenu, Divider } from \"rc-menu\";\nimport { PlatformType } from \"../../../common/hostProcess\";\nimport \"./titleBar.scss\";\nimport { strings } from \"../../../common/strings\";\nimport { HelpMenu } from \"./helpMenu\";\n\nexport interface ITitleBarProps extends React.Props<TitleBar> {\n    icon?: string | JSX.Element;\n    title?: string;\n}\n\nexport interface ITitleBarState {\n    isElectron: boolean;\n    platform: string;\n    maximized: boolean;\n    fullscreen: boolean;\n    menu: Electron.Menu;\n}\n\nexport class TitleBar extends React.Component<ITitleBarProps, ITitleBarState> {\n    public state: ITitleBarState = {\n        isElectron: false,\n        platform: global && global.process && global.process.platform ? global.process.platform : \"web\",\n        maximized: false,\n        fullscreen: false,\n        menu: null,\n    };\n\n    private menu: Menu = React.createRef();\n    private remote: Electron.Remote;\n    private currentWindow: Electron.BrowserWindow;\n\n    public componentDidMount() {\n        const isElectron: boolean = !!window[\"require\"];\n\n        if (isElectron) {\n            this.remote = (window as any).require(\"electron\").remote as Electron.Remote;\n            this.currentWindow = this.remote.getCurrentWindow();\n\n            this.currentWindow.on(\"maximize\", () => this.onMaximize(true));\n            this.currentWindow.on(\"unmaximize\", () => this.onMaximize(false));\n            this.currentWindow.on(\"enter-full-screen\", () => this.onFullScreen(true));\n            this.currentWindow.on(\"leave-full-screen\", () => this.onFullScreen(false));\n\n            this.setState({\n                isElectron: true,\n                maximized: this.currentWindow.isMaximized(),\n                fullscreen: this.currentWindow.isFullScreen(),\n                menu: this.remote.Menu.getApplicationMenu(),\n            });\n        }\n    }\n\n    public componentDidUpdate(prevProps: Readonly<ITitleBarProps>) {\n        if (this.props.title !== prevProps.title) {\n            this.syncTitle();\n        }\n    }\n\n    public render() {\n        if (this.state.fullscreen) {\n            return null;\n        }\n\n        return (\n            <div className=\"title-bar bg-lighter-3\">\n                {(this.state.platform === PlatformType.Windows || this.state.platform === PlatformType.Web) &&\n                    <div className=\"title-bar-icon\">\n                        {typeof (this.props.icon) === \"string\" && <i className={`${this.props.icon}`}></i>}\n                        {typeof (this.props.icon) !== \"string\" && this.props.icon}\n                    </div>\n                }\n                {this.state.platform === PlatformType.Windows &&\n                    <div className=\"title-bar-menu\">\n                        <Menu ref={this.menu}\n                            mode=\"horizontal\"\n                            selectable={false}\n                            triggerSubMenuAction=\"click\"\n                            onClick={this.onMenuItemSelected}>\n                            {this.renderMenu(this.state.menu)}\n                        </Menu>\n                    </div>\n                }\n                <div className=\"title-bar-main\">{this.props.title || \"Welcome\"} - VoTT</div>\n                <div className=\"title-bar-controls\">\n                    {this.props.children}\n                    {this.state.platform === PlatformType.Windows &&\n                        <ul>\n                            <li title={strings.titleBar.minimize} className=\"btn-window-minimize\"\n                                    onClick={this.minimizeWindow}>\n                                <i className=\"far fa-window-minimize\" />\n                            </li>\n                            {!this.state.maximized &&\n                                <li title={strings.titleBar.maximize} className=\"btn-window-maximize\"\n                                        onClick={this.maximizeWindow}>\n                                    <i className=\"far fa-window-maximize\" />\n                                </li>\n                            }\n                            {this.state.maximized &&\n                                <li title={strings.titleBar.restore} className=\"btn-window-restore\"\n                                        onClick={this.unmaximizeWindow}>\n                                    <i className=\"far fa-window-restore\" />\n                                </li>\n                            }\n                            <li title={strings.titleBar.close} className=\"btn-window-close\"\n                                    onClick={this.closeWindow}>\n                                <i className=\"fas fa-times\" />\n                            </li>\n                        </ul>\n                    }\n                </div>\n            </div>\n        );\n    }\n\n    private onMaximize = (isMaximized: boolean) => {\n        this.setState({\n            maximized: isMaximized,\n        });\n    }\n\n    private onFullScreen = (isFullScreen: boolean) => {\n        this.setState({\n            fullscreen: isFullScreen,\n        });\n    }\n\n    private renderMenu = (menu: Electron.Menu) => {\n        if (!menu) {\n            return null;\n        }\n\n        return menu.items.map(this.renderMenuItem);\n    }\n\n    private renderMenuItem = (menuItem: Electron.MenuItem, index: number) => {\n        if (!menuItem.visible) {\n            return null;\n        }\n\n        const itemType: string = menuItem[\"type\"];\n\n        switch (itemType) {\n            case \"submenu\":\n                return (\n                    <SubMenu title={menuItem.label} key={menuItem.label} popupOffset={[0, 0]}>\n                        {this.renderMenu(menuItem[\"submenu\"])}\n                    </SubMenu>\n                );\n            case \"separator\":\n                return (<Divider key={index} />);\n            case \"checkbox\":\n                return (\n                    <MenuItem key={menuItem.label}\n                        disabled={!menuItem.enabled}\n                        onClick={(e) => this.onMenuItemClick(e, menuItem)}>\n                        <div className=\"menu-item-container\">\n                            {Boolean(menuItem.checked) &&\n                                <div className=\"menu-item-checkbox\">\n                                    <i className=\"fas fa-check\" />\n                                </div>\n                            }\n                            <div className=\"menu-item-label\">{menuItem.label}{menuItem[\"sublabel\"]}</div>\n                            <div className=\"menu-item-accelerator\">{this.getAcceleratorString(menuItem)}</div>\n                        </div>\n                    </MenuItem>);\n            case \"normal\":\n                return (\n                    <MenuItem key={menuItem.label}\n                        disabled={!menuItem.enabled}\n                        onClick={(e) => this.onMenuItemClick(e, menuItem)}>\n                        <div className=\"menu-item-container\">\n                            <div className=\"menu-item-label\">{menuItem.label}{menuItem[\"sublabel\"]}</div>\n                            <div className=\"menu-item-accelerator\">{this.getAcceleratorString(menuItem)}</div>\n                        </div>\n                    </MenuItem>\n                );\n        }\n    }\n\n    private onMenuItemClick(e: any, menuItem: Electron.MenuItem) {\n        if (menuItem.click) {\n            menuItem.click.call(menuItem, menuItem, this.currentWindow);\n        }\n\n        this.setState({ menu: { ...this.state.menu } as Electron.Menu });\n    }\n\n    private syncTitle = (): void => {\n        if (this.state.isElectron) {\n            this.currentWindow.setTitle(`${this.props.title} - VoTT`);\n        }\n    }\n\n    private minimizeWindow = () => {\n        this.currentWindow.minimize();\n    }\n\n    private maximizeWindow = () => {\n        this.currentWindow.maximize();\n    }\n\n    private unmaximizeWindow = () => {\n        this.currentWindow.unmaximize();\n    }\n\n    private closeWindow = () => {\n        this.currentWindow.close();\n    }\n\n    private onMenuItemSelected = (key: string, item: React.Component) => {\n        // Required to auto-close the menu after user selects an item.\n        this.menu.current.store.setState({\n            openKeys: [],\n            selectedKeys: [],\n        });\n    }\n\n    private getAcceleratorString(menuItem: Electron.MenuItem) {\n        const accelerator = menuItem[\"accelerator\"] || this.getAcceleratorFromRole(menuItem[\"role\"]);\n        if (accelerator) {\n            return accelerator.replace(\"CmdOrCtrl\", \"Ctrl\");\n        }\n\n        return null;\n    }\n\n    private getAcceleratorFromRole(role: string) {\n        switch (role) {\n            case \"undo\":\n                return \"CmdOrCtrl+Z\";\n            case \"redo\":\n                return \"CmdOrCtrl+Y\";\n            case \"cut\":\n                return \"CmdOrCtrl+X\";\n            case \"copy\":\n                return \"CmdOrCtrl+C\";\n            case \"paste\":\n                return \"CmdOrCtrl+V\";\n            case \"selectall\":\n                return \"CmdOrCtrl+A\";\n            case \"minimize\":\n                return \"CmdOrCtrl+M\";\n            case \"close\":\n                return \"CmdOrCtrl+W\";\n            case \"quit\":\n                return \"CmdOrCtrl+Q\";\n            case \"reload\":\n                return \"CmdOrCtrl+R\";\n            case \"togglefullscreen\":\n                return \"F11\";\n            case \"toggledevtools\":\n                return \"CmdOrCtrl+Shift+I\";\n            case \"resetzoom\":\n                return \"CmdOrCtrl+0\";\n            case \"zoomin\":\n                return \"CmdOrCtrl+Shift+=\";\n            case \"zoomout\":\n                return \"CmdOrCtrl+-\";\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}