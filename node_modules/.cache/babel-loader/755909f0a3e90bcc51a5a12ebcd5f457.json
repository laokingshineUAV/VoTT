{"ast":null,"code":"import _objectSpread from \"/home/jw/Documents/code/VoTT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"/home/jw/Documents/code/VoTT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/jw/Documents/code/VoTT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/jw/Documents/code/VoTT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/jw/Documents/code/VoTT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/jw/Documents/code/VoTT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/jw/Documents/code/VoTT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/jw/Documents/code/VoTT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _ from \"lodash\";\nimport { ExportProvider } from \"./exportProvider\";\nimport Guard from \"../../common/guard\";\nimport { constants } from \"../../common/constants\";\nimport HtmlFileReader from \"../../common/htmlFileReader\";\n/**\n * VoTT Json Export Provider options\n */\n\n/**\n * @name - Vott Json Export Provider\n * @description - Exports a project into a single JSON file that include all configured assets\n */\nexport var VottJsonExportProvider =\n/*#__PURE__*/\nfunction (_ExportProvider) {\n  _inherits(VottJsonExportProvider, _ExportProvider);\n\n  function VottJsonExportProvider(project, options) {\n    var _this;\n\n    _classCallCheck(this, VottJsonExportProvider);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(VottJsonExportProvider).call(this, project, options));\n    Guard.null(options);\n    return _this;\n  }\n  /**\n   * Export project to VoTT JSON format\n   */\n\n\n  _createClass(VottJsonExportProvider, [{\n    key: \"export\",\n    value: function () {\n      var _export2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var _this2 = this;\n\n        var results, exportObject, fileName;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.getAssetsForExport();\n\n              case 2:\n                results = _context2.sent;\n\n                if (!this.options.includeImages) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                _context2.next = 6;\n                return results.forEachAsync(\n                /*#__PURE__*/\n                function () {\n                  var _ref = _asyncToGenerator(\n                  /*#__PURE__*/\n                  _regeneratorRuntime.mark(function _callee(assetMetadata) {\n                    var arrayBuffer, assetFilePath;\n                    return _regeneratorRuntime.wrap(function _callee$(_context) {\n                      while (1) {\n                        switch (_context.prev = _context.next) {\n                          case 0:\n                            _context.next = 2;\n                            return HtmlFileReader.getAssetArray(assetMetadata.asset);\n\n                          case 2:\n                            arrayBuffer = _context.sent;\n                            assetFilePath = \"vott-json-export/\".concat(assetMetadata.asset.name);\n                            _context.next = 6;\n                            return _this2.storageProvider.writeBinary(assetFilePath, Buffer.from(arrayBuffer));\n\n                          case 6:\n                          case \"end\":\n                            return _context.stop();\n                        }\n                      }\n                    }, _callee, this);\n                  }));\n\n                  return function (_x) {\n                    return _ref.apply(this, arguments);\n                  };\n                }());\n\n              case 6:\n                exportObject = _objectSpread({}, this.project);\n                exportObject.assets = _.keyBy(results, function (assetMetadata) {\n                  return assetMetadata.asset.id;\n                }); // We don't need these fields in the export JSON\n\n                delete exportObject.sourceConnection;\n                delete exportObject.targetConnection;\n                delete exportObject.exportFormat;\n                fileName = \"vott-json-export/\".concat(this.project.name.replace(/\\s/g, \"-\")).concat(constants.exportFileExtension);\n                _context2.next = 14;\n                return this.storageProvider.writeText(fileName, JSON.stringify(exportObject, null, 4));\n\n              case 14:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function _export() {\n        return _export2.apply(this, arguments);\n      }\n\n      return _export;\n    }()\n  }]);\n\n  return VottJsonExportProvider;\n}(ExportProvider);","map":{"version":3,"sources":["/home/jw/Documents/code/VoTT/src/providers/export/vottJson.ts"],"names":["_","ExportProvider","Guard","constants","HtmlFileReader","VottJsonExportProvider","project","options","null","getAssetsForExport","results","includeImages","forEachAsync","assetMetadata","getAssetArray","asset","arrayBuffer","assetFilePath","name","storageProvider","writeBinary","Buffer","from","exportObject","assets","keyBy","id","sourceConnection","targetConnection","exportFormat","fileName","replace","exportFileExtension","writeText","JSON","stringify"],"mappings":";;;;;;;;AAAA,OAAOA,CAAP,MAAc,QAAd;AACA,SAASC,cAAT,QAA+B,kBAA/B;AAEA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,SAAT,QAA0B,wBAA1B;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AAEA;;;;AAQA;;;;AAIA,WAAaC,sBAAb;AAAA;AAAA;AAAA;;AACI,kCAAYC,OAAZ,EAA+BC,OAA/B,EAAwE;AAAA;;AAAA;;AACpE,gGAAMD,OAAN,EAAeC,OAAf;AACAL,IAAAA,KAAK,CAACM,IAAN,CAAWD,OAAX;AAFoE;AAGvE;AAED;;;;;AANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAU8B,KAAKE,kBAAL,EAV9B;;AAAA;AAUcC,gBAAAA,OAVd;;AAAA,qBAYY,KAAKH,OAAL,CAAaI,aAZzB;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAakBD,OAAO,CAACE,YAAR;AAAA;AAAA;AAAA;AAAA;AAAA,2CAAqB,iBAAOC,aAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCACGT,cAAc,CAACU,aAAf,CAA6BD,aAAa,CAACE,KAA3C,CADH;;AAAA;AACjBC,4BAAAA,WADiB;AAEjBC,4BAAAA,aAFiB,8BAEmBJ,aAAa,CAACE,KAAd,CAAoBG,IAFvC;AAAA;AAAA,mCAGjB,MAAI,CAACC,eAAL,CAAqBC,WAArB,CAAiCH,aAAjC,EAAgDI,MAAM,CAACC,IAAP,CAAYN,WAAZ,CAAhD,CAHiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAArB;;AAAA;AAAA;AAAA;AAAA,oBAblB;;AAAA;AAoBcO,gBAAAA,YApBd,qBAoBkC,KAAKjB,OApBvC;AAqBQiB,gBAAAA,YAAY,CAACC,MAAb,GAAsBxB,CAAC,CAACyB,KAAF,CAAQf,OAAR,EAAiB,UAACG,aAAD;AAAA,yBAAmBA,aAAa,CAACE,KAAd,CAAoBW,EAAvC;AAAA,iBAAjB,CAAtB,CArBR,CAuBQ;;AACA,uBAAOH,YAAY,CAACI,gBAApB;AACA,uBAAOJ,YAAY,CAACK,gBAApB;AACA,uBAAOL,YAAY,CAACM,YAApB;AAEMC,gBAAAA,QA5Bd,8BA4B6C,KAAKxB,OAAL,CAAaY,IAAb,CAAkBa,OAAlB,CAA0B,KAA1B,EAAiC,GAAjC,CA5B7C,SA4BqF5B,SAAS,CAAC6B,mBA5B/F;AAAA;AAAA,uBA6Bc,KAAKb,eAAL,CAAqBc,SAArB,CAA+BH,QAA/B,EAAyCI,IAAI,CAACC,SAAL,CAAeZ,YAAf,EAA6B,IAA7B,EAAmC,CAAnC,CAAzC,CA7Bd;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,EAA4CtB,cAA5C","sourcesContent":["import _ from \"lodash\";\nimport { ExportProvider } from \"./exportProvider\";\nimport { IProject, IExportProviderOptions } from \"../../models/applicationState\";\nimport Guard from \"../../common/guard\";\nimport { constants } from \"../../common/constants\";\nimport HtmlFileReader from \"../../common/htmlFileReader\";\n\n/**\n * VoTT Json Export Provider options\n */\nexport interface IVottJsonExportProviderOptions extends IExportProviderOptions {\n    /** Whether or not to include binary assets in target connection */\n    includeImages: boolean;\n}\n\n/**\n * @name - Vott Json Export Provider\n * @description - Exports a project into a single JSON file that include all configured assets\n */\nexport class VottJsonExportProvider extends ExportProvider<IVottJsonExportProviderOptions> {\n    constructor(project: IProject, options: IVottJsonExportProviderOptions) {\n        super(project, options);\n        Guard.null(options);\n    }\n\n    /**\n     * Export project to VoTT JSON format\n     */\n    public async export(): Promise<void> {\n        const results = await this.getAssetsForExport();\n\n        if (this.options.includeImages) {\n            await results.forEachAsync(async (assetMetadata) => {\n                const arrayBuffer = await HtmlFileReader.getAssetArray(assetMetadata.asset);\n                const assetFilePath = `vott-json-export/${assetMetadata.asset.name}`;\n                await this.storageProvider.writeBinary(assetFilePath, Buffer.from(arrayBuffer));\n            });\n        }\n\n        const exportObject = { ...this.project };\n        exportObject.assets = _.keyBy(results, (assetMetadata) => assetMetadata.asset.id) as any;\n\n        // We don't need these fields in the export JSON\n        delete exportObject.sourceConnection;\n        delete exportObject.targetConnection;\n        delete exportObject.exportFormat;\n\n        const fileName = `vott-json-export/${this.project.name.replace(/\\s/g, \"-\")}${constants.exportFileExtension}`;\n        await this.storageProvider.writeText(fileName, JSON.stringify(exportObject, null, 4));\n    }\n}\n"]},"metadata":{},"sourceType":"module"}