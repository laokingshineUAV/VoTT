{"ast":null,"code":"import { ActionTypes } from \"./actionTypes\";\n\n/**\n * Creates action and validates type of action type name\n * @param type Name for action being created\n */\n// tslint:disable-next-line:max-line-length\nexport function createAction(type) {\n  return function () {\n    return {\n      type: type\n    };\n  };\n}\n/**\n * Create action with payload\n * @param type Name for action being created\n */\n// tslint:disable-next-line:max-line-length\n\nexport function createPayloadAction(type) {\n  return function (payload) {\n    return {\n      type: type,\n      payload: payload\n    };\n  };\n}\n/**\n * Catch-all for unregistered actions\n */\n\n/**\n * Helper instance of catch-all\n */\nexport var anyOtherAction = createAction(ActionTypes.ANY_OTHER_ACTION);\n/**\n * Used by reducers to type-check all actions\n */","map":{"version":3,"sources":["/home/jw/Documents/code/VoTT/src/redux/actions/actionCreators.ts"],"names":["ActionTypes","createAction","type","createPayloadAction","payload","anyOtherAction","ANY_OTHER_ACTION"],"mappings":"AAMA,SAASA,WAAT,QAA4B,eAA5B;;AA4BA;;;;AAIA;AACA,OAAO,SAASC,YAAT,CAA+DC,IAA/D,EAAqH;AACxH,SAAO;AAAA,WAAO;AACVA,MAAAA,IAAI,EAAJA;AADU,KAAP;AAAA,GAAP;AAGH;AAED;;;;AAIA;;AACA,OAAO,SAASC,mBAAT,CAAkGD,IAAlG,EAA+M;AAClN,SAAO,UAACE,OAAD;AAAA,WAAkC;AACrCF,MAAAA,IAAI,EAAJA,IADqC;AAErCE,MAAAA,OAAO,EAAPA;AAFqC,KAAlC;AAAA,GAAP;AAIH;AAED;;;;AAOA;;;AAGA,OAAO,IAAMC,cAAc,GAAGJ,YAAY,CAAeD,WAAW,CAACM,gBAA3B,CAAnC;AAEP","sourcesContent":["import { Action } from \"redux\";\nimport { IToggleDevToolsAction,\n         IRefreshApplicationAction,\n         ISaveAppSettingsAction,\n         IEnsureSecurityTokenAction,\n} from \"./applicationActions\";\nimport { ActionTypes } from \"./actionTypes\";\nimport {\n    ILoadConnectionAction,\n    ISaveConnectionAction,\n    IDeleteConnectionAction,\n} from \"./connectionActions\";\nimport {\n    ILoadProjectAction,\n    ICloseProjectAction,\n    ISaveProjectAction,\n    ILoadProjectAssetsAction,\n    ISaveAssetMetadataAction,\n    ILoadAssetMetadataAction,\n    IExportProjectAction,\n    IDeleteProjectAction,\n} from \"./projectActions\";\nimport {\n    IShowAppErrorAction,\n    IClearErrorAction,\n} from \"./appErrorActions\";\n\n/**\n * Data payload dispatched from the action and delivered to reducer\n */\nexport interface IPayloadAction<TType, TPayload> extends Action<TType> {\n    payload: TPayload;\n}\n\n/**\n * Creates action and validates type of action type name\n * @param type Name for action being created\n */\n// tslint:disable-next-line:max-line-length\nexport function createAction<TAction extends Action<TAction[\"type\"]>>(type: TAction[\"type\"]): () => Action<TAction[\"type\"]> {\n    return () => ({\n        type,\n    });\n}\n\n/**\n * Create action with payload\n * @param type Name for action being created\n */\n// tslint:disable-next-line:max-line-length\nexport function createPayloadAction<TAction extends IPayloadAction<TAction[\"type\"], TAction[\"payload\"]>>(type: TAction[\"type\"]): (payload: TAction[\"payload\"]) => IPayloadAction<TAction[\"type\"], TAction[\"payload\"]> {\n    return (payload: TAction[\"payload\"]) => ({\n        type,\n        payload,\n    });\n}\n\n/**\n * Catch-all for unregistered actions\n */\nexport interface IOtherAction extends Action<string> {\n    type: ActionTypes.ANY_OTHER_ACTION;\n}\n\n/**\n * Helper instance of catch-all\n */\nexport const anyOtherAction = createAction<IOtherAction>(ActionTypes.ANY_OTHER_ACTION);\n\n/**\n * Used by reducers to type-check all actions\n */\nexport type AnyAction = IOtherAction |\n    IToggleDevToolsAction |\n    IRefreshApplicationAction |\n    ISaveAppSettingsAction |\n    IEnsureSecurityTokenAction |\n    ILoadConnectionAction |\n    ISaveConnectionAction |\n    IDeleteConnectionAction |\n    ILoadProjectAction |\n    ICloseProjectAction |\n    ISaveProjectAction |\n    IDeleteProjectAction |\n    ILoadProjectAssetsAction |\n    ISaveAssetMetadataAction |\n    ILoadAssetMetadataAction |\n    IExportProjectAction |\n    IShowAppErrorAction |\n    IClearErrorAction;\n"]},"metadata":{},"sourceType":"module"}