{"ast":null,"code":"// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nimport { DataSanitizer, UrlHelper, DateTimeUtils } from '@microsoft/applicationinsights-common';\n\nvar XHRMonitoringState =\n/** @class */\nfunction () {\n  function XHRMonitoringState() {\n    this.openDone = false;\n    this.setRequestHeaderDone = false;\n    this.sendDone = false;\n    this.abortDone = false; //<summary>True, if onreadyStateChangeCallback function attached to xhr, otherwise false</summary>\n\n    this.onreadystatechangeCallbackAttached = false;\n  }\n\n  return XHRMonitoringState;\n}();\n\nexport { XHRMonitoringState };\n\nvar ajaxRecord =\n/** @class */\nfunction () {\n  function ajaxRecord(id, logger) {\n    this.completed = false;\n    this.requestHeadersSize = null;\n    this.ttfb = null;\n    this.responseReceivingDuration = null;\n    this.callbackDuration = null;\n    this.ajaxTotalDuration = null;\n    this.aborted = null;\n    this.pageUrl = null;\n    this.requestUrl = null;\n    this.requestSize = 0;\n    this.method = null; ///<summary>Returns the HTTP status code.</summary>\n\n    this.status = null; //<summary>The timestamp when open method was invoked</summary>\n\n    this.requestSentTime = null; //<summary>The timestamps when first byte was received</summary>\n\n    this.responseStartedTime = null; //<summary>The timestamp when last byte was received</summary>\n\n    this.responseFinishedTime = null; //<summary>The timestamp when onreadystatechange callback in readyState 4 finished</summary>\n\n    this.callbackFinishedTime = null; //<summary>The timestamp at which ajax was ended</summary>\n\n    this.endTime = null; //<summary>The original xhr onreadystatechange event</summary>\n\n    this.originalOnreadystatechage = null;\n    this.xhrMonitoringState = new XHRMonitoringState(); //<summary>Determines whether or not JavaScript exception occured in xhr.onreadystatechange code. 1 if occured, otherwise 0.</summary>\n\n    this.clientFailure = 0;\n\n    this.CalculateMetrics = function () {\n      var self = this; // round to 3 decimal points\n\n      self.ajaxTotalDuration = Math.round(DateTimeUtils.GetDuration(self.requestSentTime, self.responseFinishedTime) * 1000) / 1000;\n    };\n\n    this.id = id;\n    this._logger = logger;\n  }\n\n  ajaxRecord.prototype.getAbsoluteUrl = function () {\n    return this.requestUrl ? UrlHelper.getAbsoluteUrl(this.requestUrl) : null;\n  };\n\n  ajaxRecord.prototype.getPathName = function () {\n    return this.requestUrl ? DataSanitizer.sanitizeUrl(this._logger, UrlHelper.getCompleteUrl(this.method, this.requestUrl)) : null;\n  };\n\n  return ajaxRecord;\n}();\n\nexport { ajaxRecord };\n;","map":null,"metadata":{},"sourceType":"module"}