{"ast":null,"code":"var _jsxFileName = \"/home/jw/Documents/code/VoTT/src/react/components/common/connectionProviderPicker/connectionProviderPicker.tsx\";\nimport React from \"react\";\nimport _ from \"lodash\";\nimport { StorageProviderFactory } from \"../../../../providers/storage/storageProviderFactory\";\nimport { AssetProviderFactory } from \"../../../../providers/storage/assetProviderFactory\";\n/**\n * Properties for Connection Provider Picker\n * @member onChange - Function to call on change of selected value\n * @member id - ID of HTML select element\n * @member value - Selected value of picker\n */\n\n/**\n * Creates HTML select object for selecting an asset or storage provider\n * @param props Properties for picker\n */\nexport default function ConnectionProviderPicker(props) {\n  var storageProviders = _.values(StorageProviderFactory.providers);\n\n  var assetProviders = _.values(AssetProviderFactory.providers);\n\n  var allProviders = _([]).concat(assetProviders).concat(storageProviders).uniqBy(\"name\").orderBy(\"displayName\").value();\n\n  function onChange(e) {\n    props.onChange(e.target.value);\n  }\n\n  return React.createElement(\"select\", {\n    id: props.id,\n    className: \"form-control\",\n    value: props.value,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Select Provider\"), allProviders.map(function (provider) {\n    return React.createElement(\"option\", {\n      key: provider.name,\n      value: provider.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, provider.displayName);\n  }));\n}","map":{"version":3,"sources":["/home/jw/Documents/code/VoTT/src/react/components/common/connectionProviderPicker/connectionProviderPicker.tsx"],"names":["React","_","StorageProviderFactory","AssetProviderFactory","ConnectionProviderPicker","props","storageProviders","values","providers","assetProviders","allProviders","concat","uniqBy","orderBy","value","onChange","e","target","id","map","provider","name","displayName"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SAASC,sBAAT,QAAuC,sDAAvC;AACA,SAASC,oBAAT,QAAqC,oDAArC;AAEA;;;;;;;AAYA;;;;AAIA,eAAe,SAASC,wBAAT,CAAkCC,KAAlC,EAAyE;AACpF,MAAMC,gBAAgB,GAAGL,CAAC,CAACM,MAAF,CAASL,sBAAsB,CAACM,SAAhC,CAAzB;;AACA,MAAMC,cAAc,GAAGR,CAAC,CAACM,MAAF,CAASJ,oBAAoB,CAACK,SAA9B,CAAvB;;AAEA,MAAME,YAAY,GAAGT,CAAC,CAAC,EAAD,CAAD,CAChBU,MADgB,CACTF,cADS,EAEhBE,MAFgB,CAETL,gBAFS,EAGhBM,MAHgB,CAGT,MAHS,EAIhBC,OAJgB,CAIR,aAJQ,EAKhBC,KALgB,EAArB;;AAOA,WAASC,QAAT,CAAkBC,CAAlB,EAAqB;AACjBX,IAAAA,KAAK,CAACU,QAAN,CAAeC,CAAC,CAACC,MAAF,CAASH,KAAxB;AACH;;AAED,SACI;AAAQ,IAAA,EAAE,EAAET,KAAK,CAACa,EAAlB;AACI,IAAA,SAAS,EAAC,cADd;AAEI,IAAA,KAAK,EAAEb,KAAK,CAACS,KAFjB;AAGI,IAAA,QAAQ,EAAEC,QAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAII;AAAQ,IAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAJJ,EAMQL,YAAY,CAACS,GAAb,CAAiB,UAACC,QAAD;AAAA,WACb;AAAQ,MAAA,GAAG,EAAEA,QAAQ,CAACC,IAAtB;AAA4B,MAAA,KAAK,EAAED,QAAQ,CAACC,IAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKD,QAAQ,CAACE,WADd,CADa;AAAA,GAAjB,CANR,CADJ;AAcH","sourcesContent":["import React from \"react\";\nimport _ from \"lodash\";\nimport { StorageProviderFactory } from \"../../../../providers/storage/storageProviderFactory\";\nimport { AssetProviderFactory } from \"../../../../providers/storage/assetProviderFactory\";\n\n/**\n * Properties for Connection Provider Picker\n * @member onChange - Function to call on change of selected value\n * @member id - ID of HTML select element\n * @member value - Selected value of picker\n */\nexport interface IConnectionProviderPickerProps {\n    onChange: (value: string) => void;\n    id: string;\n    value: string;\n}\n\n/**\n * Creates HTML select object for selecting an asset or storage provider\n * @param props Properties for picker\n */\nexport default function ConnectionProviderPicker(props: IConnectionProviderPickerProps) {\n    const storageProviders = _.values(StorageProviderFactory.providers);\n    const assetProviders = _.values(AssetProviderFactory.providers);\n\n    const allProviders = _([])\n        .concat(assetProviders)\n        .concat(storageProviders)\n        .uniqBy(\"name\")\n        .orderBy(\"displayName\")\n        .value();\n\n    function onChange(e) {\n        props.onChange(e.target.value);\n    }\n\n    return (\n        <select id={props.id}\n            className=\"form-control\"\n            value={props.value}\n            onChange={onChange}>\n            <option value=\"\">Select Provider</option>\n            {\n                allProviders.map((provider) =>\n                    <option key={provider.name} value={provider.name}>\n                        {provider.displayName}\n                    </option>)\n            }\n        </select>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}