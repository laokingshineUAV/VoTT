{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"/home/jw/Documents/code/VoTT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar _classCallCheck = require(\"/home/jw/Documents/code/VoTT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/jw/Documents/code/VoTT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar XYZColor_1 = require(\"./XYZColor\");\n\nvar SRGBColor_1 = require(\"./SRGBColor\");\n/**\r\n * Represents the RGB color space.\r\n */\n\n\nvar RGBColor =\n/*#__PURE__*/\nfunction () {\n  _createClass(RGBColor, [{\n    key: \"r\",\n\n    /**\r\n     * The red-component of the color.\r\n     */\n    get: function get() {\n      return this.values[0];\n    }\n    /**\r\n     * The green-component of the color.\r\n     */\n\n  }, {\n    key: \"g\",\n    get: function get() {\n      return this.values[1];\n    }\n    /**\r\n     * The blue-component of the color.\r\n     */\n\n  }, {\n    key: \"b\",\n    get: function get() {\n      return this.values[2];\n    }\n    /**\r\n     * Creates new RGBColor\r\n     * @param r - Red component in the range [0, 1].\r\n     * @param g - Green component in the range [0, 1].\r\n     * @param b - Blue component in the range [0, 1].\r\n     */\n\n  }]);\n\n  function RGBColor(r, g, b) {\n    _classCallCheck(this, RGBColor);\n\n    this.values = [r, g, b];\n  }\n  /**\r\n   * Return a copy of color values in array format as [r, g, b].\r\n   */\n\n\n  _createClass(RGBColor, [{\n    key: \"toArray\",\n    value: function toArray() {\n      // copy\n      return this.values.map(function (v) {\n        return v;\n      });\n    }\n    /**\r\n     * Trasforms color to the XYZ format.\r\n     */\n\n  }, {\n    key: \"toXYZ\",\n    value: function toXYZ() {\n      var _this$values = _slicedToArray(this.values, 3),\n          r = _this$values[0],\n          g = _this$values[1],\n          b = _this$values[2];\n\n      var x = 0.4124 * r + 0.3576 * g + 0.1805 * b;\n      var y = 0.2126 * r + 0.7152 * g + 0.0722 * b;\n      var z = 0.0193 * r + 0.1192 * g + 0.9505 * b;\n      return new XYZColor_1.XYZColor(x, y, z);\n    }\n    /**\r\n     * Trasforms color to the sRGB values.\r\n     */\n\n  }, {\n    key: \"toSRGB\",\n    value: function toSRGB() {\n      var values = this.values.map(function (v) {\n        if (v < 0.0031308) {\n          return 12.92 * v;\n        } else {\n          return 1.055 * Math.pow(v, 1 / 2.4) - 0.055;\n        }\n      });\n      return new SRGBColor_1.SRGBColor(values[0], values[1], values[2]);\n    }\n    /**\r\n     * Trasforms color to the CIE LAB format.\r\n     */\n\n  }, {\n    key: \"toLAB\",\n    value: function toLAB() {\n      return this.toXYZ().toLAB();\n    }\n  }]);\n\n  return RGBColor;\n}();\n\nexports.RGBColor = RGBColor;","map":null,"metadata":{},"sourceType":"script"}