{"ast":null,"code":"import _objectSpread from \"/home/jw/Documents/code/VoTT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/jw/Documents/code/VoTT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/jw/Documents/code/VoTT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/jw/Documents/code/VoTT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/jw/Documents/code/VoTT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/jw/Documents/code/VoTT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/jw/Documents/code/VoTT/src/react/components/common/assetPreview/videoAsset.tsx\";\nimport React, { Fragment } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport _ from \"lodash\";\nimport { Player, BigPlayButton, ControlBar, CurrentTimeDisplay, TimeDivider, PlaybackRateMenuButton, VolumeMenuButton } from \"video-react\";\nimport { AssetType, AssetState } from \"../../../../models/applicationState\";\nimport { AssetService } from \"../../../../services/assetService\";\nimport { CustomVideoPlayerButton } from \"../../common/videoPlayer/customVideoPlayerButton\";\nimport { strings } from \"../../../../common/strings\";\n/**\n * VideoAsset component properties\n */\n\n/**\n * VideoAsset component used to display video based assets\n */\nexport var VideoAsset =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(VideoAsset, _React$Component);\n\n  function VideoAsset() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, VideoAsset);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(VideoAsset)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      loaded: false\n    };\n    _this.videoPlayer = React.createRef();\n    _this.timelineElement = null;\n\n    _this.movePreviousTaggedFrame = function () {\n      var currentTime = _this.getVideoPlayerState().currentTime;\n\n      var previousFrame = _.reverse(_this.props.childAssets).find(function (asset) {\n        return asset.state === AssetState.Tagged && asset.timestamp < currentTime;\n      });\n\n      if (previousFrame) {\n        _this.seekToTime(previousFrame.timestamp);\n      }\n    };\n\n    _this.moveNextTaggedFrame = function () {\n      var currentTime = _this.getVideoPlayerState().currentTime;\n\n      var nextFrame = _this.props.childAssets.find(function (asset) {\n        return asset.state === AssetState.Tagged && asset.timestamp > currentTime;\n      });\n\n      if (nextFrame) {\n        _this.seekToTime(nextFrame.timestamp);\n      }\n    };\n\n    _this.moveNextExpectedFrame = function () {\n      var currentTime = _this.getVideoPlayerState().currentTime; // Seek forward from the current time to the next logical frame based on project settings\n\n\n      var frameSkipTime = 1 / _this.props.additionalSettings.videoSettings.frameExtractionRate;\n      var seekTime = currentTime + frameSkipTime;\n\n      _this.seekToTime(seekTime);\n    };\n\n    _this.movePreviousExpectedFrame = function () {\n      var currentTime = _this.getVideoPlayerState().currentTime; // Seek backwards from the current time to the next logical frame based on project settings\n\n\n      var frameSkipTime = 1 / _this.props.additionalSettings.videoSettings.frameExtractionRate;\n      var seekTime = currentTime - frameSkipTime;\n\n      _this.seekToTime(seekTime);\n    };\n\n    _this.seekToTime = function (seekTime) {\n      var playerState = _this.getVideoPlayerState();\n\n      if (seekTime >= 0 && playerState.currentTime !== seekTime) {\n        // Verifies if the seek operation should continue\n        if (_this.props.onBeforeAssetChanged) {\n          if (!_this.props.onBeforeAssetChanged()) {\n            return;\n          }\n        } // Before seeking, pause the video\n\n\n        if (!playerState.paused) {\n          _this.videoPlayer.current.pause();\n        }\n\n        _this.videoPlayer.current.seek(seekTime);\n      }\n    };\n\n    _this.onVideoStateChange = function (state, prev) {\n      if (!_this.state.loaded && state.readyState === 4 && state.readyState !== prev.readyState) {\n        // Video initial load complete\n        _this.raiseLoaded();\n\n        _this.raiseActivated();\n\n        if (_this.props.autoPlay) {\n          _this.videoPlayer.current.play();\n        }\n      } else if (state.paused && (state.currentTime !== prev.currentTime || state.seeking !== prev.seeking)) {\n        // Video is paused, make sure we are on a key frame, and if we are not, seek to that\n        // before raising the child selected event\n        if (_this.isValidKeyFrame()) {\n          _this.raiseChildAssetSelected(state);\n\n          _this.raiseDeactivated();\n        }\n      } else if (!state.paused && state.paused !== prev.paused) {\n        // Video has resumed playing\n        _this.raiseActivated();\n      }\n    };\n\n    _this.raiseLoaded = function () {\n      _this.setState({\n        loaded: true\n      }, function () {\n        if (_this.props.onLoaded) {\n          _this.props.onLoaded(_this.videoPlayer.current.video.video);\n        } // Once the video is loaded, add any asset timeline tags\n\n\n        _this.addAssetTimelineTags(_this.props.childAssets, _this.getVideoPlayerState().duration);\n      });\n    };\n\n    _this.raiseChildAssetSelected = function (state) {\n      if (_this.props.onChildAssetSelected) {\n        var rootAsset = _this.props.asset.parent || _this.props.asset;\n        var childPath = \"\".concat(rootAsset.path, \"#t=\").concat(state.currentTime);\n        var childAsset = AssetService.createAssetFromFilePath(childPath);\n        childAsset.state = AssetState.NotVisited;\n        childAsset.type = AssetType.VideoFrame;\n        childAsset.parent = rootAsset;\n        childAsset.timestamp = state.currentTime;\n        childAsset.size = _objectSpread({}, _this.props.asset.size);\n\n        _this.props.onChildAssetSelected(childAsset);\n      }\n    };\n\n    _this.raiseActivated = function () {\n      if (_this.props.onActivated) {\n        _this.props.onActivated(_this.videoPlayer.current.video.video);\n      }\n    };\n\n    _this.raiseDeactivated = function () {\n      if (_this.props.onDeactivated) {\n        _this.props.onDeactivated(_this.videoPlayer.current.video.video);\n      }\n    };\n\n    _this.isValidKeyFrame = function () {\n      if (!_this.props.additionalSettings) {\n        return false;\n      }\n\n      var keyFrameTime = 1 / _this.props.additionalSettings.videoSettings.frameExtractionRate;\n\n      var timestamp = _this.getVideoPlayerState().currentTime; // Calculate the nearest key frame\n\n\n      var numberKeyFrames = Math.round(timestamp / keyFrameTime);\n      var seekTime = +(numberKeyFrames * keyFrameTime).toFixed(6);\n\n      if (seekTime !== timestamp) {\n        _this.seekToTime(seekTime);\n      }\n\n      return seekTime === timestamp;\n    };\n\n    _this.addAssetTimelineTags = function (childAssets, videoDuration) {\n      if (!_this.props.autoPlay) {\n        return;\n      }\n\n      var assetTimelineTagLines = _this.renderTimeline(childAssets, videoDuration);\n\n      var timelineSelector = \".editor-page-content-main-body .video-react-progress-control .video-timeline-root\";\n      _this.timelineElement = document.querySelector(timelineSelector);\n\n      if (!_this.timelineElement) {\n        var progressControlSelector = \".editor-page-content-main-body .video-react-progress-control\";\n        var progressHolderElement = document.querySelector(progressControlSelector); // If we found an element to hold the tags, add them to it\n\n        if (progressHolderElement) {\n          _this.timelineElement = document.createElement(\"div\");\n          _this.timelineElement.className = \"video-timeline-root\";\n          progressHolderElement.appendChild(_this.timelineElement);\n        }\n      }\n\n      if (_this.timelineElement) {\n        // Render the child asset elements to the dom\n        ReactDOM.render(assetTimelineTagLines, _this.timelineElement);\n      }\n    };\n\n    _this.renderTimeline = function (childAssets, videoDuration) {\n      return React.createElement(\"div\", {\n        className: \"video-timeline-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365\n        },\n        __self: this\n      }, childAssets.map(function (childAsset) {\n        return _this.renderChildAssetMarker(childAsset, videoDuration);\n      }));\n    };\n\n    _this.renderChildAssetMarker = function (childAsset, videoDuration) {\n      var className = childAsset.state === AssetState.Tagged ? \"video-timeline-tagged\" : \"video-timeline-visited\";\n      var childPosition = childAsset.timestamp / videoDuration;\n      var style = {\n        left: \"\".concat(childPosition * 100, \"%\")\n      };\n      return React.createElement(\"div\", {\n        key: childAsset.timestamp,\n        onClick: function onClick() {\n          return _this.seekToTime(childAsset.timestamp);\n        },\n        className: className,\n        style: style,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382\n        },\n        __self: this\n      });\n    };\n\n    _this.getVideoPlayerState = function () {\n      return _this.videoPlayer.current.getState().player;\n    };\n\n    return _this;\n  }\n\n  _createClass(VideoAsset, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          autoPlay = _this$props.autoPlay,\n          asset = _this$props.asset;\n      var videoPath = asset.path;\n\n      if (!autoPlay) {\n        videoPath = \"\".concat(asset.path, \"#t=5.0\");\n      }\n\n      return React.createElement(Player, {\n        ref: this.videoPlayer,\n        fluid: false,\n        width: \"100%\",\n        height: \"100%\",\n        autoPlay: autoPlay,\n        src: videoPath,\n        onError: this.props.onError,\n        crossOrigin: \"anonymous\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(BigPlayButton, {\n        position: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }), autoPlay && React.createElement(ControlBar, {\n        autoHide: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, !this.props.controlsEnabled && React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"video-react-control-bar-disabled\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      })), React.createElement(CustomVideoPlayerButton, {\n        order: 1.1,\n        accelerators: [\"ArrowLeft\", \"A\", \"a\"],\n        tooltip: strings.editorPage.videoPlayer.previousExpectedFrame.tooltip,\n        onClick: this.movePreviousExpectedFrame,\n        icon: \"fa-caret-left fa-lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-caret-left fa-lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      })), React.createElement(CustomVideoPlayerButton, {\n        order: 1.2,\n        accelerators: [\"ArrowRight\", \"D\", \"d\"],\n        tooltip: strings.editorPage.videoPlayer.nextExpectedFrame.tooltip,\n        onClick: this.moveNextExpectedFrame,\n        icon: \"fa-caret-right fa-lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-caret-right fa-lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      })), React.createElement(CurrentTimeDisplay, {\n        order: 1.3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }), React.createElement(TimeDivider, {\n        order: 1.4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }), React.createElement(PlaybackRateMenuButton, {\n        rates: [5, 2, 1, 0.5, 0.25],\n        order: 7.1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }), React.createElement(VolumeMenuButton, {\n        enabled: true,\n        order: 7.2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }), React.createElement(CustomVideoPlayerButton, {\n        order: 8.1,\n        accelerators: [\"Q\", \"q\"],\n        tooltip: strings.editorPage.videoPlayer.previousTaggedFrame.tooltip,\n        onClick: this.movePreviousTaggedFrame,\n        icon: \"fas fa-step-backward\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-step-backward\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      })), React.createElement(CustomVideoPlayerButton, {\n        order: 8.2,\n        accelerators: [\"E\", \"e\"],\n        tooltip: strings.editorPage.videoPlayer.nextTaggedFrame.tooltip,\n        onClick: this.moveNextTaggedFrame,\n        icon: \"fa-step-forward\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-step-forward\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }))));\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.autoPlay) {\n        // We only need to subscribe to state change notificeations if autoPlay\n        // is true, otherwise the video is simply a preview on the side bar that\n        // doesn't change\n        this.videoPlayer.current.subscribeToStateChange(this.onVideoStateChange);\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.asset.id !== prevProps.asset.id) {\n        this.setState({\n          loaded: false\n        });\n      }\n\n      if (this.props.childAssets !== prevProps.childAssets) {\n        this.addAssetTimelineTags(this.props.childAssets, this.getVideoPlayerState().duration);\n      }\n\n      if (this.props.timestamp !== prevProps.timestamp) {\n        this.seekToTime(this.props.timestamp);\n      }\n    }\n    /**\n     * Bound to the \"Previous Tagged Frame\" button\n     * Seeks the user to the previous tagged video frame\n     */\n\n  }]);\n\n  return VideoAsset;\n}(React.Component);\nVideoAsset.defaultProps = {\n  autoPlay: true,\n  controlsEnabled: true,\n  timestamp: null,\n  asset: null,\n  childAssets: []\n};","map":{"version":3,"sources":["/home/jw/Documents/code/VoTT/src/react/components/common/assetPreview/videoAsset.tsx"],"names":["React","Fragment","ReactDOM","_","Player","BigPlayButton","ControlBar","CurrentTimeDisplay","TimeDivider","PlaybackRateMenuButton","VolumeMenuButton","AssetType","AssetState","AssetService","CustomVideoPlayerButton","strings","VideoAsset","state","loaded","videoPlayer","createRef","timelineElement","movePreviousTaggedFrame","currentTime","getVideoPlayerState","previousFrame","reverse","props","childAssets","find","asset","Tagged","timestamp","seekToTime","moveNextTaggedFrame","nextFrame","moveNextExpectedFrame","frameSkipTime","additionalSettings","videoSettings","frameExtractionRate","seekTime","movePreviousExpectedFrame","playerState","onBeforeAssetChanged","paused","current","pause","seek","onVideoStateChange","prev","readyState","raiseLoaded","raiseActivated","autoPlay","play","seeking","isValidKeyFrame","raiseChildAssetSelected","raiseDeactivated","setState","onLoaded","video","addAssetTimelineTags","duration","onChildAssetSelected","rootAsset","parent","childPath","path","childAsset","createAssetFromFilePath","NotVisited","type","VideoFrame","size","onActivated","onDeactivated","keyFrameTime","numberKeyFrames","Math","round","toFixed","videoDuration","assetTimelineTagLines","renderTimeline","timelineSelector","document","querySelector","progressControlSelector","progressHolderElement","createElement","className","appendChild","render","map","renderChildAssetMarker","childPosition","style","left","getState","player","videoPath","onError","controlsEnabled","editorPage","previousExpectedFrame","tooltip","nextExpectedFrame","previousTaggedFrame","nextTaggedFrame","subscribeToStateChange","prevProps","id","Component","defaultProps"],"mappings":"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","sourcesContent":["import React, { SyntheticEvent, Fragment } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport _ from \"lodash\";\nimport {\n    Player, BigPlayButton, ControlBar, CurrentTimeDisplay,\n    TimeDivider, PlaybackRateMenuButton, VolumeMenuButton,\n} from \"video-react\";\nimport { IAssetProps } from \"./assetPreview\";\nimport { IAsset, AssetType, AssetState } from \"../../../../models/applicationState\";\nimport { AssetService } from \"../../../../services/assetService\";\nimport { CustomVideoPlayerButton } from \"../../common/videoPlayer/customVideoPlayerButton\";\nimport { strings } from \"../../../../common/strings\";\n\n/**\n * VideoAsset component properties\n */\nexport interface IVideoAssetProps extends IAssetProps, React.Props<VideoAsset> {\n    /** Whether or not the video asset should start playing automatically */\n    autoPlay?: boolean;\n    /** The timestamp that the video should seek to upon loading */\n    timestamp?: number;\n    /** The event handler that is fired when a child video frame is selected (ex. paused, seeked) */\n    onChildAssetSelected?: (asset: IAsset) => void;\n}\n\n/** VideoAsset internal component state */\nexport interface IVideoAssetState {\n    loaded: boolean;\n}\n\n/**\n * VideoPlayer internal video state\n */\nexport interface IVideoPlayerState {\n    readyState: number;\n    paused: boolean;\n    seeking: boolean;\n    currentTime: number;\n    duration: number;\n}\n\n/**\n * VideoAsset component used to display video based assets\n */\nexport class VideoAsset extends React.Component<IVideoAssetProps> {\n    /** Default properties for the VideoAsset if not defined */\n    public static defaultProps: IVideoAssetProps = {\n        autoPlay: true,\n        controlsEnabled: true,\n        timestamp: null,\n        asset: null,\n        childAssets: [],\n    };\n\n    public state: IVideoAssetState = {\n        loaded: false,\n    };\n\n    private videoPlayer: React.RefObject<Player> = React.createRef<Player>();\n    private timelineElement: Element = null;\n\n    public render() {\n        const { autoPlay, asset } = this.props;\n        let videoPath = asset.path;\n        if (!autoPlay) {\n            videoPath = `${asset.path}#t=5.0`;\n        }\n\n        return (\n            <Player ref={this.videoPlayer}\n                fluid={false}\n                width=\"100%\"\n                height=\"100%\"\n                autoPlay={autoPlay}\n                src={videoPath}\n                onError={this.props.onError}\n                crossOrigin=\"anonymous\">\n                <BigPlayButton position=\"center\" />\n                {autoPlay &&\n                    <ControlBar autoHide={false}>\n                        {!this.props.controlsEnabled &&\n                            <Fragment>\n                                <div className=\"video-react-control-bar-disabled\"></div>\n                            </Fragment>\n                        }\n                        <CustomVideoPlayerButton order={1.1}\n                            accelerators={[\"ArrowLeft\", \"A\", \"a\"]}\n                            tooltip={strings.editorPage.videoPlayer.previousExpectedFrame.tooltip}\n                            onClick={this.movePreviousExpectedFrame}\n                            icon={\"fa-caret-left fa-lg\"}\n                        >\n                            <i className=\"fas fa-caret-left fa-lg\" />\n                        </CustomVideoPlayerButton>\n                        <CustomVideoPlayerButton order={1.2}\n                            accelerators={[\"ArrowRight\", \"D\", \"d\"]}\n                            tooltip={strings.editorPage.videoPlayer.nextExpectedFrame.tooltip}\n                            onClick={this.moveNextExpectedFrame}\n                            icon={\"fa-caret-right fa-lg\"}\n                        >\n                            <i className=\"fas fa-caret-right fa-lg\" />\n                        </CustomVideoPlayerButton>\n                        <CurrentTimeDisplay order={1.3} />\n                        <TimeDivider order={1.4} />\n                        <PlaybackRateMenuButton rates={[5, 2, 1, 0.5, 0.25]} order={7.1} />\n                        <VolumeMenuButton enabled order={7.2} />\n                        <CustomVideoPlayerButton order={8.1}\n                            accelerators={[\"Q\", \"q\"]}\n                            tooltip={strings.editorPage.videoPlayer.previousTaggedFrame.tooltip}\n                            onClick={this.movePreviousTaggedFrame}\n                            icon={\"fas fa-step-backward\"}\n                        >\n                            <i className=\"fas fa-step-backward\"></i>\n                        </CustomVideoPlayerButton>\n                        <CustomVideoPlayerButton order={8.2}\n                            accelerators={[\"E\", \"e\"]}\n                            tooltip={strings.editorPage.videoPlayer.nextTaggedFrame.tooltip}\n                            onClick={this.moveNextTaggedFrame}\n                            icon={\"fa-step-forward\"}\n                        >\n                            <i className=\"fas fa-step-forward\"></i>\n                        </CustomVideoPlayerButton>\n                    </ControlBar>\n                }\n            </Player >\n        );\n    }\n\n    public componentDidMount() {\n        if (this.props.autoPlay) {\n            // We only need to subscribe to state change notificeations if autoPlay\n            // is true, otherwise the video is simply a preview on the side bar that\n            // doesn't change\n            this.videoPlayer.current.subscribeToStateChange(this.onVideoStateChange);\n        }\n    }\n\n    public componentDidUpdate(prevProps: Readonly<IVideoAssetProps>) {\n        if (this.props.asset.id !== prevProps.asset.id) {\n            this.setState({ loaded: false });\n        }\n\n        if (this.props.childAssets !== prevProps.childAssets) {\n            this.addAssetTimelineTags(this.props.childAssets, this.getVideoPlayerState().duration);\n        }\n\n        if (this.props.timestamp !== prevProps.timestamp) {\n            this.seekToTime(this.props.timestamp);\n        }\n    }\n\n    /**\n     * Bound to the \"Previous Tagged Frame\" button\n     * Seeks the user to the previous tagged video frame\n     */\n    private movePreviousTaggedFrame = () => {\n        const currentTime = this.getVideoPlayerState().currentTime;\n        const previousFrame = _\n            .reverse(this.props.childAssets)\n            .find((asset) => asset.state === AssetState.Tagged && asset.timestamp < currentTime);\n\n        if (previousFrame) {\n            this.seekToTime(previousFrame.timestamp);\n        }\n    }\n\n    /**\n     * Bound to the \"Next Tagged Frame\" button\n     * Seeks the user to the next tagged video frame\n     */\n    private moveNextTaggedFrame = () => {\n        const currentTime = this.getVideoPlayerState().currentTime;\n        const nextFrame = this.props.childAssets\n            .find((asset) => asset.state === AssetState.Tagged && asset.timestamp > currentTime);\n\n        if (nextFrame) {\n            this.seekToTime(nextFrame.timestamp);\n        }\n    }\n\n    /**\n     * Moves the videos current position forward one frame based on the current\n     * project settings for frame rate extraction\n     */\n    private moveNextExpectedFrame = () => {\n        const currentTime = this.getVideoPlayerState().currentTime;\n        // Seek forward from the current time to the next logical frame based on project settings\n        const frameSkipTime: number = (1 / this.props.additionalSettings.videoSettings.frameExtractionRate);\n        const seekTime: number = (currentTime + frameSkipTime);\n        this.seekToTime(seekTime);\n    }\n\n    /**\n     * Moves the videos current position backward one frame based on the current\n     * project settings for frame rate extraction\n     */\n    private movePreviousExpectedFrame = () => {\n        const currentTime = this.getVideoPlayerState().currentTime;\n        // Seek backwards from the current time to the next logical frame based on project settings\n        const frameSkipTime: number = (1 / this.props.additionalSettings.videoSettings.frameExtractionRate);\n        const seekTime: number = (currentTime - frameSkipTime);\n        this.seekToTime(seekTime);\n    }\n\n    /**\n     * Seeks the current video to the passed in time stamp, pausing the video before hand\n     * @param seekTime - Time (in seconds) in the video to seek to\n     */\n    private seekToTime = (seekTime: number) => {\n        const playerState = this.getVideoPlayerState();\n\n        if (seekTime >= 0 && playerState.currentTime !== seekTime) {\n            // Verifies if the seek operation should continue\n            if (this.props.onBeforeAssetChanged) {\n                if (!this.props.onBeforeAssetChanged()) {\n                    return;\n                }\n            }\n\n            // Before seeking, pause the video\n            if (!playerState.paused) {\n                this.videoPlayer.current.pause();\n            }\n            this.videoPlayer.current.seek(seekTime);\n        }\n    }\n\n    private onVideoStateChange = (state: Readonly<IVideoPlayerState>, prev: Readonly<IVideoPlayerState>) => {\n        if (!this.state.loaded && state.readyState === 4 && state.readyState !== prev.readyState) {\n            // Video initial load complete\n            this.raiseLoaded();\n            this.raiseActivated();\n\n            if (this.props.autoPlay) {\n                this.videoPlayer.current.play();\n            }\n        } else if (state.paused && (state.currentTime !== prev.currentTime || state.seeking !== prev.seeking)) {\n            // Video is paused, make sure we are on a key frame, and if we are not, seek to that\n            // before raising the child selected event\n            if (this.isValidKeyFrame()) {\n                this.raiseChildAssetSelected(state);\n                this.raiseDeactivated();\n            }\n        } else if (!state.paused && state.paused !== prev.paused) {\n            // Video has resumed playing\n            this.raiseActivated();\n        }\n    }\n\n    /**\n     * Raises the \"loaded\" event if available\n     */\n    private raiseLoaded = () => {\n        this.setState({\n            loaded: true,\n        }, () => {\n            if (this.props.onLoaded) {\n                this.props.onLoaded(this.videoPlayer.current.video.video);\n            }\n\n            // Once the video is loaded, add any asset timeline tags\n            this.addAssetTimelineTags(this.props.childAssets, this.getVideoPlayerState().duration);\n        });\n    }\n\n    /**\n     * Raises the \"childAssetSelected\" event if available\n     */\n    private raiseChildAssetSelected = (state: Readonly<IVideoPlayerState>) => {\n        if (this.props.onChildAssetSelected) {\n            const rootAsset = this.props.asset.parent || this.props.asset;\n            const childPath = `${rootAsset.path}#t=${state.currentTime}`;\n            const childAsset = AssetService.createAssetFromFilePath(childPath);\n            childAsset.state = AssetState.NotVisited;\n            childAsset.type = AssetType.VideoFrame;\n            childAsset.parent = rootAsset;\n            childAsset.timestamp = state.currentTime;\n            childAsset.size = { ...this.props.asset.size };\n\n            this.props.onChildAssetSelected(childAsset);\n        }\n    }\n\n    /**\n     * Raises the \"activated\" event if available\n     */\n    private raiseActivated = () => {\n        if (this.props.onActivated) {\n            this.props.onActivated(this.videoPlayer.current.video.video);\n        }\n    }\n\n    /**\n     * Raises the \"deactivated event if available\"\n     */\n    private raiseDeactivated = () => {\n        if (this.props.onDeactivated) {\n            this.props.onDeactivated(this.videoPlayer.current.video.video);\n        }\n    }\n\n    /**\n     * Move to the nearest key frame from where the video's current\n     * position is\n     * @returns true if moved to a new position; false otherwise\n     */\n    private isValidKeyFrame = (): boolean => {\n        if (!this.props.additionalSettings) {\n            return false;\n        }\n\n        const keyFrameTime = (1 / this.props.additionalSettings.videoSettings.frameExtractionRate);\n        const timestamp = this.getVideoPlayerState().currentTime;\n\n        // Calculate the nearest key frame\n        const numberKeyFrames = Math.round(timestamp / keyFrameTime);\n        const seekTime = +(numberKeyFrames * keyFrameTime).toFixed(6);\n\n        if (seekTime !== timestamp) {\n            this.seekToTime(seekTime);\n        }\n\n        return seekTime === timestamp;\n    }\n\n    /**\n     * Draws small lines to show where visited and tagged frames are on\n     * the video line\n     * @param childAssets - Array of child assets in the video\n     * @param videoDuration - Length (in seconds) of the video\n     */\n    private addAssetTimelineTags = (childAssets: any[], videoDuration: number) => {\n        if (!this.props.autoPlay) {\n            return;\n        }\n\n        const assetTimelineTagLines = this.renderTimeline(childAssets, videoDuration);\n        const timelineSelector = \".editor-page-content-main-body .video-react-progress-control .video-timeline-root\";\n        this.timelineElement = document.querySelector(timelineSelector);\n\n        if (!this.timelineElement) {\n            const progressControlSelector = \".editor-page-content-main-body .video-react-progress-control\";\n            const progressHolderElement = document.querySelector(progressControlSelector);\n\n            // If we found an element to hold the tags, add them to it\n            if (progressHolderElement) {\n                this.timelineElement = document.createElement(\"div\");\n                this.timelineElement.className = \"video-timeline-root\";\n                progressHolderElement.appendChild(this.timelineElement);\n            }\n        }\n\n        if (this.timelineElement) {\n            // Render the child asset elements to the dom\n            ReactDOM.render(assetTimelineTagLines, this.timelineElement);\n        }\n    }\n\n    /**\n     * Renders the timeline markers for the specified child assets\n     * @param childAssets - Array of child assets in the video\n     * @param videoDuration - Length (in seconds) of the video\n     */\n    private renderTimeline = (childAssets: IAsset[], videoDuration: number) => {\n        return (\n            <div className={\"video-timeline-container\"}>\n                {childAssets.map((childAsset) => this.renderChildAssetMarker(childAsset, videoDuration))}\n            </div>\n        );\n    }\n\n    /**\n     * Renders a timeline marker for the specified child asset\n     * @param childAsset The child asset to render\n     * @param videoDuration The total video duration\n     */\n    private renderChildAssetMarker = (childAsset: IAsset, videoDuration: number) => {\n        const className = childAsset.state === AssetState.Tagged ? \"video-timeline-tagged\" : \"video-timeline-visited\";\n        const childPosition: number = (childAsset.timestamp / videoDuration);\n        const style = { left: `${childPosition * 100}%` };\n\n        return (\n            <div key={childAsset.timestamp}\n                onClick={() => this.seekToTime(childAsset.timestamp)}\n                className={className}\n                style={style} />\n        );\n    }\n\n    /**\n     * Gets the current video player state\n     */\n    private getVideoPlayerState = (): Readonly<IVideoPlayerState> => {\n        return this.videoPlayer.current.getState().player;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}