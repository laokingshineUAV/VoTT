{"ast":null,"code":"/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\nimport * as tslib_1 from \"tslib\";\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as Mappers from \"../models/serviceMappers\";\nimport * as Parameters from \"../models/parameters\";\n/** Class representing a Service. */\n\nvar Service =\n/** @class */\nfunction () {\n  /**\n   * Create a Service.\n   * @param {StorageClientContext} client Reference to the service client.\n   */\n  function Service(client) {\n    this.client = client;\n  }\n\n  Service.prototype.setProperties = function (storageServiceProperties, options, callback) {\n    return this.client.sendOperationRequest({\n      storageServiceProperties: storageServiceProperties,\n      options: options\n    }, setPropertiesOperationSpec, callback);\n  };\n\n  Service.prototype.getProperties = function (options, callback) {\n    return this.client.sendOperationRequest({\n      options: options\n    }, getPropertiesOperationSpec, callback);\n  };\n\n  Service.prototype.getStatistics = function (options, callback) {\n    return this.client.sendOperationRequest({\n      options: options\n    }, getStatisticsOperationSpec, callback);\n  };\n\n  Service.prototype.listContainersSegment = function (options, callback) {\n    return this.client.sendOperationRequest({\n      options: options\n    }, listContainersSegmentOperationSpec, callback);\n  };\n\n  Service.prototype.getAccountInfo = function (options, callback) {\n    return this.client.sendOperationRequest({\n      options: options\n    }, getAccountInfoOperationSpec, callback);\n  };\n\n  return Service;\n}();\n\nexport { Service }; // Operation Specifications\n\nvar serializer = new msRest.Serializer(Mappers, true);\nvar setPropertiesOperationSpec = {\n  httpMethod: \"PUT\",\n  urlParameters: [Parameters.url],\n  queryParameters: [Parameters.timeout, Parameters.restype0, Parameters.comp0],\n  headerParameters: [Parameters.version, Parameters.requestId],\n  requestBody: {\n    parameterPath: \"storageServiceProperties\",\n    mapper: tslib_1.__assign({}, Mappers.StorageServiceProperties, {\n      required: true\n    })\n  },\n  contentType: \"application/xml; charset=utf-8\",\n  responses: {\n    202: {\n      headersMapper: Mappers.ServiceSetPropertiesHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError\n    }\n  },\n  isXML: true,\n  serializer: serializer\n};\nvar getPropertiesOperationSpec = {\n  httpMethod: \"GET\",\n  urlParameters: [Parameters.url],\n  queryParameters: [Parameters.timeout, Parameters.restype0, Parameters.comp0],\n  headerParameters: [Parameters.version, Parameters.requestId],\n  responses: {\n    200: {\n      bodyMapper: Mappers.StorageServiceProperties,\n      headersMapper: Mappers.ServiceGetPropertiesHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError\n    }\n  },\n  isXML: true,\n  serializer: serializer\n};\nvar getStatisticsOperationSpec = {\n  httpMethod: \"GET\",\n  urlParameters: [Parameters.url],\n  queryParameters: [Parameters.timeout, Parameters.restype0, Parameters.comp1],\n  headerParameters: [Parameters.version, Parameters.requestId],\n  responses: {\n    200: {\n      bodyMapper: Mappers.StorageServiceStats,\n      headersMapper: Mappers.ServiceGetStatisticsHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError\n    }\n  },\n  isXML: true,\n  serializer: serializer\n};\nvar listContainersSegmentOperationSpec = {\n  httpMethod: \"GET\",\n  urlParameters: [Parameters.url],\n  queryParameters: [Parameters.prefix, Parameters.marker, Parameters.maxresults, Parameters.include0, Parameters.timeout, Parameters.comp2],\n  headerParameters: [Parameters.version, Parameters.requestId],\n  responses: {\n    200: {\n      bodyMapper: Mappers.ListContainersSegmentResponse,\n      headersMapper: Mappers.ServiceListContainersSegmentHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError\n    }\n  },\n  isXML: true,\n  serializer: serializer\n};\nvar getAccountInfoOperationSpec = {\n  httpMethod: \"GET\",\n  urlParameters: [Parameters.url],\n  queryParameters: [Parameters.restype1, Parameters.comp0],\n  headerParameters: [Parameters.version],\n  responses: {\n    200: {\n      headersMapper: Mappers.ServiceGetAccountInfoHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError\n    }\n  },\n  isXML: true,\n  serializer: serializer\n};","map":null,"metadata":{},"sourceType":"module"}