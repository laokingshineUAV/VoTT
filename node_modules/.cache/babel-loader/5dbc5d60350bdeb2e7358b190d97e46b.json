{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/home/jw/Documents/code/VoTT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/jw/Documents/code/VoTT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/jw/Documents/code/VoTT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/jw/Documents/code/VoTT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/home/jw/Documents/code/VoTT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  }\n  result[\"default\"] = mod;\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar React = __importStar(require(\"react\"));\n\nvar react_jsonschema_form_1 = __importDefault(require(\"react-jsonschema-form\"));\n\nvar reactstrap_1 = require(\"reactstrap\");\n\nvar tagColors_1 = require(\"../common/tagColors\");\n\nvar defaultValues = {\n  tagColors: tagColors_1.tagColors,\n  tagNameText: \"Tag\",\n  editTagText: \"Edit Tag\",\n  tagColorText: \"Color\",\n  saveText: \"Save\",\n  cancelText: \"Cancel\"\n};\n/**\n * Simple modal for editing the name and color of project tags\n */\n\nvar TagEditorModal =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TagEditorModal, _React$Component);\n\n  function TagEditorModal() {\n    var _this;\n\n    _classCallCheck(this, TagEditorModal);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TagEditorModal).apply(this, arguments));\n    _this.state = {\n      originalTag: null,\n      currentTag: null,\n      isOpen: _this.props.show,\n      formSchema: TagEditorModal.createFormSchema(_this.props.tagColors || defaultValues.tagColors, _this.props.tagNameText || defaultValues.tagNameText, _this.props.tagColorText || defaultValues.tagColorText)\n    };\n    /**\n     * Open editor modal with tag\n     * @param tag Tag to be edited\n     */\n\n    _this.open = function (tag) {\n      console.log(\"aaaaaaa\");\n\n      _this.setState({\n        isOpen: true,\n        originalTag: tag,\n        currentTag: tag\n      });\n    };\n    /**\n     * Close editor modal and call `onCancel` if provided\n     */\n\n\n    _this.close = function () {\n      _this.setState({\n        isOpen: false\n      }, function () {\n        if (_this.props.onCancel) {\n          _this.props.onCancel();\n        }\n      });\n    };\n    /**\n     * Called when change made to modal form\n     */\n\n\n    _this.handleFormChange = function (args) {\n      var rgb = args.formData.color; //let hex = [];\n\n      if (rgb === undefined) {\n        rgb = \"please rgb.\";\n      }\n\n      console.error(rgb); //var splits = rgb.split(',')\n\n      var color_hex = args.formData.name; //if (splits.lenght == 3){\n      //    rgb.split(',').map(color => {hex.push(coverNumToHex(color));});\n      ///    color_hex:String = '#'+hex.join('');\n      //}\n\n      _this.setState({\n        currentTag: {\n          name: color_hex,\n          color: rgb\n        }\n      });\n    };\n    /**\n     * convert color rgb to hex\n     */\n\n\n    _this.coverNumToHex = function (num) {\n      return (num | 1 << 8).toString(16).slice(1);\n    };\n    /**\n     * Called when \"Ok\" is clicked\n     */\n\n\n    _this.handleOk = function (e) {\n      _this.props.onOk(_this.state.originalTag, _this.state.currentTag);\n    };\n\n    return _this;\n  }\n\n  _createClass(TagEditorModal, [{\n    key: \"render\",\n    value: function render() {\n      var closeBtn = React.createElement(\"button\", {\n        className: \"close\",\n        onClick: this.close\n      }, \"\\xD7\");\n      return React.createElement(\"div\", null, React.createElement(reactstrap_1.Modal, {\n        isOpen: this.state.isOpen,\n        centered: true\n      }, React.createElement(reactstrap_1.ModalHeader, {\n        toggle: this.close,\n        close: closeBtn\n      }, this.props.editTagText || defaultValues.editTagText), React.createElement(reactstrap_1.ModalBody, null, React.createElement(react_jsonschema_form_1.default, {\n        idPrefix: \"modal-form\",\n        schema: this.state.formSchema,\n        formData: this.state.currentTag,\n        onChange: this.handleFormChange\n      }, React.createElement(\"button\", {\n        style: {\n          display: \"none\"\n        },\n        type: \"submit\"\n      }))), React.createElement(reactstrap_1.ModalFooter, null, React.createElement(reactstrap_1.Button, {\n        color: \"success\",\n        onClick: this.handleOk\n      }, this.props.saveText || defaultValues.saveText), React.createElement(reactstrap_1.Button, {\n        color: \"secondary\",\n        onClick: this.close\n      }, this.props.cancelText || defaultValues.cancelText))));\n    }\n  }]);\n\n  return TagEditorModal;\n}(React.Component);\n\nTagEditorModal.createFormSchema = function (colors, tagNameText, tagColorText) {\n  var keys = Object.keys(colors);\n  var values = [];\n\n  for (var _i = 0; _i < keys.length; _i++) {\n    var key = keys[_i];\n    values.push(colors[key]);\n  }\n\n  console.log(values[0]);\n  return {\n    type: \"object\",\n    properties: {\n      name: {\n        title: tagNameText,\n        type: \"string\"\n      },\n      color: {\n        title: tagColorText,\n        type: \"string\" //enum: values,\n        //default: values[0],\n        //enumNames: keys,\n\n      }\n    }\n  };\n};\n\nexports.TagEditorModal = TagEditorModal;","map":null,"metadata":{},"sourceType":"script"}