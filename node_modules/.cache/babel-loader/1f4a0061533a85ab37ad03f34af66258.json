{"ast":null,"code":"import _construct from \"/home/jw/Documents/code/VoTT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/construct\";\nimport _toConsumableArray from \"/home/jw/Documents/code/VoTT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport LocalizedStrings from \"react-localization\";\nimport { english } from \"./localization/en-us\";\nimport { spanish } from \"./localization/es-cl\";\nimport { japanese } from \"./localization/ja\";\nimport { chinesetw } from \"./localization/zh-tw\";\nimport { korean } from \"./localization/ko-kr\";\nimport { chinese } from \"./localization/zh-ch\";\n/**\n * Interface for all required strings in application\n * Language must add all strings to be compliant for localization\n */\n\nexport var strings = new LocalizedStrings({\n  // TODO: Need to comment out other languages which will not be used\n  en: english,\n  es: spanish,\n  ja: japanese,\n  tw: chinesetw,\n  ko: korean,\n  ch: chinese\n});\n/**\n * Add localization values to JSON object. Substitutes value\n * of variable placeholders with value of currently set language\n * Example variable: ${strings.profile.settings}\n * @param json JSON object containing variable placeholders\n */\n\nexport function addLocValues(json) {\n  return interpolateJson(json, {\n    strings: strings\n  });\n}\n/**\n * Stringifies the JSON and substitutes values from params\n * @param json JSON object\n * @param params Parameters for substitution\n */\n\nexport function interpolateJson(json, params) {\n  var template = JSON.stringify(json);\n  var outputJson = interpolate(template, params);\n  return JSON.parse(outputJson);\n}\n/**\n * Makes substitution of values in string\n * @param template String containing variables\n * @param params Params containing substitution values\n */\n\nexport function interpolate(template, params) {\n  var names = Object.keys(params);\n  var vals = Object[\"values\"](params);\n  return _construct(Function, _toConsumableArray(names).concat([\"return `\".concat(template, \"`;\")])).apply(void 0, _toConsumableArray(vals));\n}","map":{"version":3,"sources":["/home/jw/Documents/code/VoTT/src/common/strings.ts"],"names":["LocalizedStrings","english","spanish","japanese","chinesetw","korean","chinese","strings","en","es","ja","tw","ko","ch","addLocValues","json","interpolateJson","params","template","JSON","stringify","outputJson","interpolate","parse","names","Object","keys","vals","Function"],"mappings":";;AAAA,OAAOA,gBAAP,MAA0D,oBAA1D;AACA,SAASC,OAAT,QAAwB,sBAAxB;AACA,SAASC,OAAT,QAAwB,sBAAxB;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,SAASC,SAAT,QAA0B,sBAA1B;AACA,SAASC,MAAT,QAAuB,sBAAvB;AACA,SAASC,OAAT,QAAwB,sBAAxB;AAEA;;;;;AAicA,OAAO,IAAMC,OAAiB,GAAG,IAAIP,gBAAJ,CAAqB;AACtD;AACIQ,EAAAA,EAAE,EAAEP,OAF8C;AAGlDQ,EAAAA,EAAE,EAAEP,OAH8C;AAIlDQ,EAAAA,EAAE,EAAEP,QAJ8C;AAKlDQ,EAAAA,EAAE,EAAEP,SAL8C;AAMlDQ,EAAAA,EAAE,EAAEP,MAN8C;AAOlDQ,EAAAA,EAAE,EAAEP;AAP8C,CAArB,CAA1B;AAUP;;;;;;;AAMA,OAAO,SAASQ,YAAT,CAAsBC,IAAtB,EAAiC;AACpC,SAAOC,eAAe,CAACD,IAAD,EAAO;AAAER,IAAAA,OAAO,EAAPA;AAAF,GAAP,CAAtB;AACH;AAED;;;;;;AAKA,OAAO,SAASS,eAAT,CAAyBD,IAAzB,EAAoCE,MAApC,EAAiD;AACpD,MAAMC,QAAQ,GAAGC,IAAI,CAACC,SAAL,CAAeL,IAAf,CAAjB;AACA,MAAMM,UAAU,GAAGC,WAAW,CAACJ,QAAD,EAAWD,MAAX,CAA9B;AACA,SAAOE,IAAI,CAACI,KAAL,CAAWF,UAAX,CAAP;AACH;AAED;;;;;;AAKA,OAAO,SAASC,WAAT,CAAqBJ,QAArB,EAAuCD,MAAvC,EAAoD;AACvD,MAAMO,KAAK,GAAGC,MAAM,CAACC,IAAP,CAAYT,MAAZ,CAAd;AACA,MAAMU,IAAI,GAAGF,MAAM,CAAC,QAAD,CAAN,CAAiBR,MAAjB,CAAb;AACA,SAAO,WAAIW,QAAJ,qBAAgBJ,KAAhB,4BAAmCN,QAAnC,4CAAqDS,IAArD,EAAP;AACH","sourcesContent":["import LocalizedStrings, { LocalizedStringsMethods } from \"react-localization\";\nimport { english } from \"./localization/en-us\";\nimport { spanish } from \"./localization/es-cl\";\nimport { japanese } from \"./localization/ja\";\nimport { chinesetw } from \"./localization/zh-tw\";\nimport { korean } from \"./localization/ko-kr\";\nimport { chinese } from \"./localization/zh-ch\";\n\n/**\n * Interface for all required strings in application\n * Language must add all strings to be compliant for localization\n */\nexport interface IAppStrings {\n    appName: string;\n    common: {\n        displayName: string;\n        description: string;\n        submit: string;\n        cancel: string;\n        save: string;\n        delete: string;\n        provider: string;\n        homePage: string;\n    };\n    titleBar: {\n        help: string;\n        minimize: string;\n        maximize: string;\n        restore: string;\n        close: string;\n    };\n    homePage: {\n        newProject: string;\n        openLocalProject: {\n            title: string;\n        },\n        openCloudProject: {\n            title: string;\n            selectConnection: string;\n        },\n        deleteProject: {\n            title: string;\n            confirmation: string;\n        },\n        importProject: {\n            title: string;\n            confirmation: string;\n        },\n        recentProjects: string,\n        messages: {\n            deleteSuccess: string,\n        },\n    };\n    appSettings: {\n        title: string;\n        storageTitle: string;\n        uiHelp: string;\n        save: string;\n        securityToken: {\n            name: {\n                title: string;\n            },\n            key: {\n                title: string;\n            },\n        },\n        securityTokens: {\n            title: string;\n            description: string;\n        },\n        version: {\n            description: string;\n        },\n        commit: string,\n        devTools: {\n            description: string;\n            button: string;\n        },\n        reload: {\n            description: string;\n            button: string;\n        },\n        messages: {\n            saveSuccess: string;\n        },\n    };\n    projectSettings: {\n        title: string;\n        securityToken: {\n            title: string;\n            description: string;\n        },\n        save: string;\n        sourceConnection: {\n            title: string;\n            description: string;\n        },\n        targetConnection: {\n            title: string;\n            description: string;\n        },\n        videoSettings: {\n            title: string;\n            description: string;\n            frameExtractionRate: string;\n        },\n        addConnection: string,\n        messages: {\n            saveSuccess: string;\n        },\n    };\n    projectMetrics: {\n        title: string;\n        assetsSectionTitle: string\n        totalAssetCount: string;\n        visitedAssets: string;\n        taggedAssets: string;\n        nonVisitedAssets: string;\n        nonTaggedAssets: string;\n        tagsSectionTitle: string;\n        totalRegionCount: string;\n        totalTagCount: string;\n        avgTagCountPerAsset: string;\n    };\n    tags: {\n        title: string;\n        placeholder: string;\n        editor: string;\n        modal: {\n            name: string;\n            color: string;\n        }\n        toolbar: {\n            add: string;\n            search: string;\n            lock: string;\n            edit: string;\n            moveUp: string;\n            moveDown: string;\n            delete: string;\n        }\n        colors: {\n            white: string;\n            gray: string;\n            red: string;\n            maroon: string;\n            yellow: string;\n            olive: string;\n            lime: string;\n            green: string;\n            aqua: string;\n            teal: string;\n            blue: string;\n            navy: string;\n            fuschia: string;\n            purple: string;\n        }\n        warnings: {\n            existingName: string;\n            emptyName: string;\n            unknownTagName: string;\n        }\n    };\n    connections: {\n        title: string;\n        details: string;\n        settings: string;\n        instructions: string;\n        save: string;\n        messages: {\n            saveSuccess: string;\n            deleteSuccess: string;\n        },\n        imageCorsWarning: string;\n        blobCorsWarning: string;\n        azDocLinkText: string;\n        providers: {\n            azureBlob: {\n                title: string;\n                description: string,\n                accountName: {\n                    title: string,\n                    description: string,\n                },\n                containerName: {\n                    title: string,\n                    description: string,\n                },\n                sas: {\n                    title: string,\n                    description: string,\n                },\n                createContainer: {\n                    title: string,\n                    description: string,\n                }\n            },\n            bing: {\n                title: string;\n                options: string;\n                apiKey: string;\n                query: string;\n                aspectRatio: {\n                    title: string;\n                    all: string;\n                    square: string;\n                    wide: string;\n                    tall: string;\n                }\n            },\n            local: {\n                title: string;\n                folderPath: string;\n                selectFolder: string;\n                chooseFolder: string;\n            },\n        }\n    };\n    editorPage: {\n        width: string;\n        height: string;\n        tagged: string;\n        visited: string;\n        toolbar: {\n            select: string;\n            pan: string;\n            drawRectangle: string;\n            drawPolygon: string;\n            copyRectangle: string;\n            copy: string;\n            cut: string;\n            paste: string;\n            removeAllRegions: string;\n            previousAsset: string;\n            nextAsset: string;\n            saveProject: string;\n            exportProject: string;\n            activeLearning: string;\n        }\n        videoPlayer: {\n            nextTaggedFrame: {\n                tooltip: string,\n            },\n            previousTaggedFrame: {\n                tooltip: string,\n            },\n            nextExpectedFrame: {\n                tooltip: string,\n            },\n            previousExpectedFrame: {\n                tooltip: string,\n            },\n        }\n        help: {\n            title: string;\n            escape: string;\n        }\n        assetError: string;\n        tags: {\n            hotKey: {\n                apply: string;\n                lock: string;\n            },\n            rename: {\n                title: string;\n                confirmation: string;\n            },\n            delete: {\n                title: string;\n                confirmation: string;\n            },\n        }\n        canvas: {\n            removeAllRegions: {\n                title: string;\n                confirmation: string;\n            },\n        },\n        messages: {\n            enforceTaggedRegions: {\n                title: string,\n                description: string,\n            },\n        }\n    };\n    export: {\n        title: string;\n        settings: string;\n        saveSettings: string;\n        providers: {\n            common: {\n                properties: {\n                    assetState: {\n                        title: string,\n                        description: string,\n                        options: {\n                            all: string,\n                            visited: string,\n                            tagged: string,\n                        },\n                    },\n                    testTrainSplit: {\n                        title: string,\n                        description: string,\n                    },\n                    includeImages: {\n                        title: string,\n                        description: string,\n                    },\n                },\n            },\n            vottJson: {\n                displayName: string,\n            },\n            azureCV: {\n                displayName: string,\n                regions: {\n                    eastUs: string,\n                    eastUs2: string,\n                    northCentralUs: string,\n                    southCentralUs: string,\n                    westUs2: string,\n                    westEurope: string,\n                    northEurope: string,\n                    southeastAsia: string,\n                    australiaEast: string,\n                    centralIndia: string,\n                    ukSouth: string,\n                    japanEast: string,\n                },\n                properties: {\n                    apiKey: {\n                        title: string,\n                    },\n                    region: {\n                        title: string,\n                        description: string,\n                    },\n                    newOrExisting: {\n                        title: string,\n                        options: {\n                            new: string,\n                            existing: string,\n                        },\n                    },\n                    name: {\n                        title: string,\n                    },\n                    description: {\n                        title: string,\n                    },\n                    projectType: {\n                        title: string,\n                        options: {\n                            classification: string,\n                            objectDetection: string,\n                        },\n                    },\n                    classificationType: {\n                        title: string,\n                        options: {\n                            multiLabel: string,\n                            multiClass: string,\n                        },\n                    },\n                    domainId: {\n                        title: string,\n                    },\n                    projectId: {\n                        title: string,\n                    },\n                },\n            },\n            tfRecords: {\n                displayName: string,\n            },\n            pascalVoc: {\n                displayName: string,\n                exportUnassigned: {\n                    title: string,\n                    description: string,\n                },\n            },\n            cntk: {\n                displayName: string,\n            },\n            csv: {\n                displayName: string,\n            },\n        },\n        messages: {\n            saveSuccess: string;\n        },\n    };\n    activeLearning: {\n        title: string;\n        form: {\n            properties: {\n                modelPathType: {\n                    title: string,\n                    description: string,\n                    options: {\n                        preTrained: string,\n                        customFilePath: string,\n                        customWebUrl: string,\n                    },\n                },\n                autoDetect: {\n                    title: string,\n                    description: string,\n                },\n                predictTag: {\n                    title: string,\n                    description: string,\n                },\n                modelPath: {\n                    title: string,\n                    description: string,\n                },\n                modelUrl: {\n                    title: string,\n                    description: string,\n                },\n            },\n        }\n        messages: {\n            loadingModel: string;\n            errorLoadModel: string;\n            saveSuccess: string;\n        }\n    };\n    profile: {\n        settings: string;\n    };\n    errors: {\n        unknown: IErrorMetadata,\n        projectInvalidJson: IErrorMetadata,\n        projectInvalidSecurityToken: IErrorMetadata,\n        projectUploadError: IErrorMetadata,\n        projectDeleteError: IErrorMetadata,\n        genericRenderError: IErrorMetadata,\n        securityTokenNotFound: IErrorMetadata,\n        canvasError: IErrorMetadata,\n        importError: IErrorMetadata,\n        pasteRegionTooBigError: IErrorMetadata,\n        exportFormatNotFound: IErrorMetadata,\n        activeLearningPredictionError: IErrorMetadata,\n    };\n}\n\ninterface IErrorMetadata {\n    title: string;\n    message: string;\n}\n\ninterface IStrings extends LocalizedStringsMethods, IAppStrings { }\n\nexport const strings: IStrings = new LocalizedStrings({\n// TODO: Need to comment out other languages which will not be used\n    en: english,\n    es: spanish,\n    ja: japanese,\n    tw: chinesetw,\n    ko: korean,\n    ch: chinese,\n});\n\n/**\n * Add localization values to JSON object. Substitutes value\n * of variable placeholders with value of currently set language\n * Example variable: ${strings.profile.settings}\n * @param json JSON object containing variable placeholders\n */\nexport function addLocValues(json: any) {\n    return interpolateJson(json, { strings });\n}\n\n/**\n * Stringifies the JSON and substitutes values from params\n * @param json JSON object\n * @param params Parameters for substitution\n */\nexport function interpolateJson(json: any, params: any) {\n    const template = JSON.stringify(json);\n    const outputJson = interpolate(template, params);\n    return JSON.parse(outputJson);\n}\n\n/**\n * Makes substitution of values in string\n * @param template String containing variables\n * @param params Params containing substitution values\n */\nexport function interpolate(template: string, params: any) {\n    const names = Object.keys(params);\n    const vals = Object[\"values\"](params);\n    return new Function(...names, `return \\`${template}\\`;`)(...vals);\n}\n"]},"metadata":{},"sourceType":"module"}