{"ast":null,"code":"import _objectSpread from \"/home/jw/Documents/code/VoTT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/home/jw/Documents/code/VoTT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { ActionTypes } from \"../actions/actionTypes\";\n\n/**\n * Reducer for application connections. Actions handled:\n * SAVE_CONNECTION_SUCCESS\n * DELETE_CONNECTION_SUCCESS\n * LOAD_PROJECT_SUCCESS\n * @param state - Current array of connections\n * @param action - Action that was dispatched\n */\nexport var reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (!state) {\n    state = [];\n  }\n\n  switch (action.type) {\n    case ActionTypes.SAVE_CONNECTION_SUCCESS:\n      return [_objectSpread({}, action.payload)].concat(_toConsumableArray(state.filter(function (connection) {\n        return connection.id !== action.payload.id;\n      })));\n\n    case ActionTypes.DELETE_CONNECTION_SUCCESS:\n      return _toConsumableArray(state.filter(function (connection) {\n        return connection.id !== action.payload.id;\n      }));\n\n    case ActionTypes.LOAD_PROJECT_SUCCESS:\n      var isSourceTargetEqual = action.payload.sourceConnection.id === action.payload.targetConnection.id;\n\n      if (isSourceTargetEqual) {\n        return [_objectSpread({}, action.payload.sourceConnection)].concat(_toConsumableArray(state.filter(function (connection) {\n          return connection.id !== action.payload.sourceConnection.id;\n        })));\n      }\n\n      return [_objectSpread({}, action.payload.sourceConnection), _objectSpread({}, action.payload.targetConnection)].concat(_toConsumableArray(state.filter(function (connection) {\n        return connection.id !== action.payload.sourceConnection.id && connection.id !== action.payload.targetConnection.id;\n      })));\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/jw/Documents/code/VoTT/src/redux/reducers/connectionsReducer.ts"],"names":["ActionTypes","reducer","state","action","type","SAVE_CONNECTION_SUCCESS","payload","filter","connection","id","DELETE_CONNECTION_SUCCESS","LOAD_PROJECT_SUCCESS","isSourceTargetEqual","sourceConnection","targetConnection"],"mappings":";;AACA,SAASA,WAAT,QAA4B,wBAA5B;;AAIA;;;;;;;;AAQA,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAiE;AAAA,MAAhEC,KAAgE,uEAAzC,EAAyC;AAAA,MAArCC,MAAqC;;AACpF,MAAI,CAACD,KAAL,EAAY;AACRA,IAAAA,KAAK,GAAG,EAAR;AACH;;AAED,UAAQC,MAAM,CAACC,IAAf;AACI,SAAKJ,WAAW,CAACK,uBAAjB;AACI,gCACSF,MAAM,CAACG,OADhB,6BAEOJ,KAAK,CAACK,MAAN,CAAa,UAACC,UAAD;AAAA,eAAgBA,UAAU,CAACC,EAAX,KAAkBN,MAAM,CAACG,OAAP,CAAeG,EAAjD;AAAA,OAAb,CAFP;;AAIJ,SAAKT,WAAW,CAACU,yBAAjB;AACI,gCAAWR,KAAK,CAACK,MAAN,CAAa,UAACC,UAAD;AAAA,eAAgBA,UAAU,CAACC,EAAX,KAAkBN,MAAM,CAACG,OAAP,CAAeG,EAAjD;AAAA,OAAb,CAAX;;AACJ,SAAKT,WAAW,CAACW,oBAAjB;AACI,UAAMC,mBAAmB,GAAGT,MAAM,CAACG,OAAP,CAAeO,gBAAf,CAAgCJ,EAAhC,KAAuCN,MAAM,CAACG,OAAP,CAAeQ,gBAAf,CAAgCL,EAAnG;;AACA,UAAIG,mBAAJ,EAAyB;AACrB,kCACST,MAAM,CAACG,OAAP,CAAeO,gBADxB,6BAEOX,KAAK,CAACK,MAAN,CAAa,UAACC,UAAD;AAAA,iBAAgBA,UAAU,CAACC,EAAX,KAAkBN,MAAM,CAACG,OAAP,CAAeO,gBAAf,CAAgCJ,EAAlE;AAAA,SAAb,CAFP;AAIH;;AAED,gCACSN,MAAM,CAACG,OAAP,CAAeO,gBADxB,qBAESV,MAAM,CAACG,OAAP,CAAeQ,gBAFxB,6BAGOZ,KAAK,CAACK,MAAN,CAAa,UAACC,UAAD,EAAgB;AAC5B,eAAOA,UAAU,CAACC,EAAX,KAAkBN,MAAM,CAACG,OAAP,CAAeO,gBAAf,CAAgCJ,EAAlD,IACHD,UAAU,CAACC,EAAX,KAAkBN,MAAM,CAACG,OAAP,CAAeQ,gBAAf,CAAgCL,EADtD;AAEH,OAHE,CAHP;;AAOJ;AACI,aAAOP,KAAP;AAzBR;AA2BH,CAhCM","sourcesContent":["import _ from \"lodash\";\nimport { ActionTypes } from \"../actions/actionTypes\";\nimport { IConnection } from \"../../models/applicationState\";\nimport { AnyAction } from \"../actions/actionCreators\";\n\n/**\n * Reducer for application connections. Actions handled:\n * SAVE_CONNECTION_SUCCESS\n * DELETE_CONNECTION_SUCCESS\n * LOAD_PROJECT_SUCCESS\n * @param state - Current array of connections\n * @param action - Action that was dispatched\n */\nexport const reducer = (state: IConnection[] = [], action: AnyAction): IConnection[] => {\n    if (!state) {\n        state = [];\n    }\n\n    switch (action.type) {\n        case ActionTypes.SAVE_CONNECTION_SUCCESS:\n            return [\n                { ...action.payload },\n                ...state.filter((connection) => connection.id !== action.payload.id),\n            ];\n        case ActionTypes.DELETE_CONNECTION_SUCCESS:\n            return [...state.filter((connection) => connection.id !== action.payload.id)];\n        case ActionTypes.LOAD_PROJECT_SUCCESS:\n            const isSourceTargetEqual = action.payload.sourceConnection.id === action.payload.targetConnection.id;\n            if (isSourceTargetEqual) {\n                return [\n                    { ...action.payload.sourceConnection },\n                    ...state.filter((connection) => connection.id !== action.payload.sourceConnection.id),\n                ];\n            }\n\n            return [\n                { ...action.payload.sourceConnection },\n                { ...action.payload.targetConnection },\n                ...state.filter((connection) => {\n                    return connection.id !== action.payload.sourceConnection.id &&\n                        connection.id !== action.payload.targetConnection.id;\n                })];\n        default:\n            return state;\n    }\n};\n"]},"metadata":{},"sourceType":"module"}