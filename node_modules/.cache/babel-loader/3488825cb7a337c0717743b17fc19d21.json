{"ast":null,"code":"import _regeneratorRuntime from \"/home/jw/Documents/code/VoTT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/jw/Documents/code/VoTT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/jw/Documents/code/VoTT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/jw/Documents/code/VoTT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/jw/Documents/code/VoTT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/jw/Documents/code/VoTT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/jw/Documents/code/VoTT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\n\nvar _dec,\n    _class,\n    _jsxFileName = \"/home/jw/Documents/code/VoTT/src/react/components/pages/homepage/homePage.tsx\";\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { strings, interpolate } from \"../../../../common/strings\";\nimport * as projectActions from \"../../../../redux/actions/projectActions\";\nimport * as applicationActions from \"../../../../redux/actions/applicationActions\";\nimport { CloudFilePicker } from \"../../common/cloudFilePicker/cloudFilePicker\";\nimport CondensedList from \"../../common/condensedList/condensedList\";\nimport Confirm from \"../../common/confirm/confirm\";\nimport FilePicker from \"../../common/filePicker/filePicker\";\nimport \"./homePage.scss\";\nimport RecentProjectItem from \"./recentProjectItem\";\nimport { constants } from \"../../../../common/constants\";\nimport { ErrorCode, AppError } from \"../../../../models/applicationState\";\nimport ImportService from \"../../../../services/importService\";\nimport { toast } from \"react-toastify\";\nimport { isElectron } from \"../../../../common/hostProcess\";\n\nfunction mapStateToProps(state) {\n  return {\n    recentProjects: state.recentProjects,\n    connections: state.connections,\n    appSettings: state.appSettings,\n    project: state.currentProject\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators(projectActions, dispatch),\n    applicationActions: bindActionCreators(applicationActions, dispatch)\n  };\n}\n\nvar HomePage = (_dec = connect(mapStateToProps, mapDispatchToProps), _dec(_class =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(HomePage, _React$Component);\n\n  function HomePage() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, HomePage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(HomePage)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      cloudPickerOpen: false\n    };\n    _this.filePicker = React.createRef();\n    _this.deleteConfirm = React.createRef();\n    _this.cloudFilePicker = React.createRef();\n    _this.importConfirm = React.createRef();\n\n    _this.createNewProject = function (e) {\n      _this.props.actions.closeProject();\n\n      _this.props.history.push(\"/projects/create\");\n\n      e.preventDefault();\n    };\n\n    _this.handleOpenCloudProjectClick = function () {\n      _this.cloudFilePicker.current.open();\n    };\n\n    _this.onProjectFileUpload =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e, project) {\n        var projectJson;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                projectJson = JSON.parse(project.content);\n                _context.next = 7;\n                break;\n\n              case 4:\n                _context.prev = 4;\n                _context.t0 = _context[\"catch\"](0);\n                throw new AppError(ErrorCode.ProjectInvalidJson, \"Error parsing JSON\");\n\n              case 7:\n                if (!(projectJson.name === null || projectJson.name === undefined)) {\n                  _context.next = 18;\n                  break;\n                }\n\n                _context.prev = 8;\n                _context.next = 11;\n                return _this.importConfirm.current.open(project);\n\n              case 11:\n                _context.next = 16;\n                break;\n\n              case 13:\n                _context.prev = 13;\n                _context.t1 = _context[\"catch\"](8);\n                throw new Error(_context.t1.message);\n\n              case 16:\n                _context.next = 20;\n                break;\n\n              case 18:\n                _context.next = 20;\n                return _this.loadSelectedProject(projectJson);\n\n              case 20:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 4], [8, 13]]);\n      }));\n\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.onProjectFileUploadError = function (e, error) {\n      if (error instanceof AppError) {\n        throw error;\n      }\n\n      throw new AppError(ErrorCode.ProjectUploadError, \"Error uploading project file\");\n    };\n\n    _this.loadSelectedProject =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(project) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return _this.props.actions.loadProject(project);\n\n              case 2:\n                _this.props.history.push(\"/projects/\".concat(project.id, \"/edit\"));\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function (_x3) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    _this.deleteProject =\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(project) {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                _context3.next = 3;\n                return _this.props.actions.deleteProject(project);\n\n              case 3:\n                toast.info(interpolate(strings.homePage.messages.deleteSuccess, {\n                  project: project\n                }));\n                _context3.next = 9;\n                break;\n\n              case 6:\n                _context3.prev = 6;\n                _context3.t0 = _context3[\"catch\"](0);\n                throw new AppError(ErrorCode.ProjectDeleteError, \"Error deleting project file\");\n\n              case 9:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[0, 6]]);\n      }));\n\n      return function (_x4) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    _this.convertProject =\n    /*#__PURE__*/\n    function () {\n      var _ref4 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(projectInfo) {\n        var importService, generatedAssetMetadata, project;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                importService = new ImportService();\n                _context4.prev = 1;\n                _context4.next = 4;\n                return importService.convertProject(projectInfo);\n\n              case 4:\n                project = _context4.sent;\n                _context4.next = 10;\n                break;\n\n              case 7:\n                _context4.prev = 7;\n                _context4.t0 = _context4[\"catch\"](1);\n                throw new AppError(ErrorCode.V1ImportError, \"Error converting v1 project file\");\n\n              case 10:\n                _this.props.applicationActions.ensureSecurityToken(project);\n\n                _context4.prev = 11;\n                _context4.next = 14;\n                return importService.generateAssets(projectInfo, project);\n\n              case 14:\n                generatedAssetMetadata = _context4.sent;\n                _context4.next = 17;\n                return _this.props.actions.saveProject(project);\n\n              case 17:\n                _context4.next = 19;\n                return _this.props.actions.loadProject(project);\n\n              case 19:\n                _context4.next = 21;\n                return generatedAssetMetadata.mapAsync(function (assetMetadata) {\n                  return _this.props.actions.saveAssetMetadata(_this.props.project, assetMetadata);\n                });\n\n              case 21:\n                _context4.next = 26;\n                break;\n\n              case 23:\n                _context4.prev = 23;\n                _context4.t1 = _context4[\"catch\"](11);\n                throw new Error(\"Error importing project information - \".concat(_context4.t1.message));\n\n              case 26:\n                _context4.next = 28;\n                return _this.props.actions.saveProject(_this.props.project);\n\n              case 28:\n                _context4.next = 30;\n                return _this.loadSelectedProject(_this.props.project);\n\n              case 30:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this, [[1, 7], [11, 23]]);\n      }));\n\n      return function (_x5) {\n        return _ref4.apply(this, arguments);\n      };\n    }();\n\n    return _this;\n  }\n\n  _createClass(HomePage, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"app-homepage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"app-homepage-main\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"#\",\n        onClick: this.createNewProject,\n        className: \"p-5 new-project\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-folder-plus fa-9x\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }), React.createElement(\"h6\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, strings.homePage.newProject))), isElectron() && React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"#\",\n        className: \"p-5 file-upload\",\n        onClick: function onClick() {\n          return _this2.filePicker.current.upload();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-folder-open fa-9x\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), React.createElement(\"h6\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, strings.homePage.openLocalProject.title)), React.createElement(FilePicker, {\n        ref: this.filePicker,\n        onChange: this.onProjectFileUpload,\n        onError: this.onProjectFileUploadError,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      })), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"#\",\n        onClick: this.handleOpenCloudProjectClick,\n        className: \"p-5 cloud-open-project\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-cloud fa-9x\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }), React.createElement(\"h6\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, strings.homePage.openCloudProject.title)), React.createElement(CloudFilePicker, {\n        ref: this.cloudFilePicker,\n        connections: this.props.connections,\n        onSubmit: function onSubmit(content) {\n          return _this2.loadSelectedProject(JSON.parse(content));\n        },\n        fileExtension: constants.projectFileExtension,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      })))), this.props.recentProjects && this.props.recentProjects.length > 0 && React.createElement(\"div\", {\n        className: \"app-homepage-recent bg-lighter-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(CondensedList, {\n        title: strings.homePage.recentProjects,\n        Component: RecentProjectItem,\n        items: this.props.recentProjects,\n        onClick: this.loadSelectedProject,\n        onDelete: function onDelete(project) {\n          return _this2.deleteConfirm.current.open(project);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      })), React.createElement(Confirm, {\n        title: \"Delete Project\",\n        ref: this.deleteConfirm,\n        message: function message(project) {\n          return \"\".concat(strings.homePage.deleteProject.confirmation, \" \").concat(project.name, \"?\");\n        },\n        confirmButtonColor: \"danger\",\n        onConfirm: this.deleteProject,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }), React.createElement(Confirm, {\n        title: \"Import Project\",\n        ref: this.importConfirm,\n        message: function message(project) {\n          return interpolate(strings.homePage.importProject.confirmation, {\n            project: project\n          });\n        },\n        confirmButtonColor: \"danger\",\n        onConfirm: this.convertProject,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return HomePage;\n}(React.Component)) || _class);\nexport { HomePage as default };","map":{"version":3,"sources":["/home/jw/Documents/code/VoTT/src/react/components/pages/homepage/homePage.tsx"],"names":["React","connect","bindActionCreators","strings","interpolate","projectActions","applicationActions","CloudFilePicker","CondensedList","Confirm","FilePicker","RecentProjectItem","constants","ErrorCode","AppError","ImportService","toast","isElectron","mapStateToProps","state","recentProjects","connections","appSettings","project","currentProject","mapDispatchToProps","dispatch","actions","HomePage","cloudPickerOpen","filePicker","createRef","deleteConfirm","cloudFilePicker","importConfirm","createNewProject","e","props","closeProject","history","push","preventDefault","handleOpenCloudProjectClick","current","open","onProjectFileUpload","projectJson","JSON","parse","content","ProjectInvalidJson","name","undefined","Error","message","loadSelectedProject","onProjectFileUploadError","error","ProjectUploadError","loadProject","id","deleteProject","info","homePage","messages","deleteSuccess","ProjectDeleteError","convertProject","projectInfo","importService","V1ImportError","ensureSecurityToken","generateAssets","generatedAssetMetadata","saveProject","mapAsync","assetMetadata","saveAssetMetadata","newProject","upload","openLocalProject","title","openCloudProject","projectFileExtension","length","confirmation","importProject","Component"],"mappings":"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","sourcesContent":["import React, { SyntheticEvent } from \"react\";\nimport { connect } from \"react-redux\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport { bindActionCreators } from \"redux\";\nimport { strings, interpolate } from \"../../../../common/strings\";\nimport IProjectActions, * as projectActions from \"../../../../redux/actions/projectActions\";\nimport IApplicationActions, * as applicationActions from \"../../../../redux/actions/applicationActions\";\nimport { CloudFilePicker } from \"../../common/cloudFilePicker/cloudFilePicker\";\nimport CondensedList from \"../../common/condensedList/condensedList\";\nimport Confirm from \"../../common/confirm/confirm\";\nimport FilePicker from \"../../common/filePicker/filePicker\";\nimport \"./homePage.scss\";\nimport RecentProjectItem from \"./recentProjectItem\";\nimport { constants } from \"../../../../common/constants\";\nimport {\n    IApplicationState, IConnection, IProject, IFileInfo,\n    ErrorCode, AppError, IAppError, IAppSettings, IAsset,\n} from \"../../../../models/applicationState\";\nimport ImportService from \"../../../../services/importService\";\nimport { IAssetMetadata } from \"../../../../models/applicationState\";\nimport { toast } from \"react-toastify\";\nimport MessageBox from \"../../common/messageBox/messageBox\";\nimport { isElectron } from \"../../../../common/hostProcess\";\n\nexport interface IHomePageProps extends RouteComponentProps, React.Props<HomePage> {\n    recentProjects: IProject[];\n    connections: IConnection[];\n    actions: IProjectActions;\n    applicationActions: IApplicationActions;\n    appSettings: IAppSettings;\n    project: IProject;\n}\n\nexport interface IHomePageState {\n    cloudPickerOpen: boolean;\n}\n\nfunction mapStateToProps(state: IApplicationState) {\n    return {\n        recentProjects: state.recentProjects,\n        connections: state.connections,\n        appSettings: state.appSettings,\n        project: state.currentProject,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators(projectActions, dispatch),\n        applicationActions: bindActionCreators(applicationActions, dispatch),\n    };\n}\n\n@connect(mapStateToProps, mapDispatchToProps)\nexport default class HomePage extends React.Component<IHomePageProps, IHomePageState> {\n    public state: IHomePageState = {\n        cloudPickerOpen: false,\n    };\n    private filePicker: React.RefObject<FilePicker> = React.createRef();\n    private deleteConfirm: React.RefObject<Confirm> = React.createRef();\n    private cloudFilePicker: React.RefObject<CloudFilePicker> = React.createRef();\n    private importConfirm: React.RefObject<Confirm> = React.createRef();\n\n    public render() {\n        return (\n            <div className=\"app-homepage\">\n                <div className=\"app-homepage-main\">\n                    <ul>\n                        <li>\n                            <a href=\"#\" onClick={this.createNewProject} className=\"p-5 new-project\">\n                                <i className=\"fas fa-folder-plus fa-9x\"></i>\n                                <h6>{strings.homePage.newProject}</h6>\n                            </a>\n                        </li>\n                        {isElectron() &&\n                            <li>\n                                <a href=\"#\" className=\"p-5 file-upload\"\n                                    onClick={() => this.filePicker.current.upload()} >\n                                    <i className=\"fas fa-folder-open fa-9x\"></i>\n                                    <h6>{strings.homePage.openLocalProject.title}</h6>\n                                </a>\n                                <FilePicker ref={this.filePicker}\n                                    onChange={this.onProjectFileUpload}\n                                    onError={this.onProjectFileUploadError} />\n                            </li>\n                        }\n                        <li>\n                            {/*Open Cloud Project*/}\n                            <a href=\"#\" onClick={this.handleOpenCloudProjectClick} className=\"p-5 cloud-open-project\">\n                                <i className=\"fas fa-cloud fa-9x\"></i>\n                                <h6>{strings.homePage.openCloudProject.title}</h6>\n                            </a>\n                            <CloudFilePicker\n                                ref={this.cloudFilePicker}\n                                connections={this.props.connections}\n                                onSubmit={(content) => this.loadSelectedProject(JSON.parse(content))}\n                                fileExtension={constants.projectFileExtension}\n                            />\n                        </li>\n                    </ul>\n                </div>\n                {(this.props.recentProjects && this.props.recentProjects.length > 0) &&\n                    <div className=\"app-homepage-recent bg-lighter-1\">\n                        <CondensedList\n                            title={strings.homePage.recentProjects}\n                            Component={RecentProjectItem}\n                            items={this.props.recentProjects}\n                            onClick={this.loadSelectedProject}\n                            onDelete={(project) => this.deleteConfirm.current.open(project)} />\n                    </div>\n                }\n                <Confirm title=\"Delete Project\"\n                    ref={this.deleteConfirm as any}\n                    message={(project: IProject) => `${strings.homePage.deleteProject.confirmation} ${project.name}?`}\n                    confirmButtonColor=\"danger\"\n                    onConfirm={this.deleteProject} />\n                <Confirm title=\"Import Project\"\n                    ref={this.importConfirm as any}\n                    message={(project: IFileInfo) =>\n                        interpolate(strings.homePage.importProject.confirmation, { project })}\n                    confirmButtonColor=\"danger\"\n                    onConfirm={this.convertProject} />\n            </div>\n        );\n    }\n\n    private createNewProject = (e: SyntheticEvent) => {\n        this.props.actions.closeProject();\n        this.props.history.push(\"/projects/create\");\n\n        e.preventDefault();\n    }\n\n    private handleOpenCloudProjectClick = () => {\n        this.cloudFilePicker.current.open();\n    }\n\n    private onProjectFileUpload = async (e, project) => {\n        let projectJson: IProject;\n\n        try {\n            projectJson = JSON.parse(project.content);\n        } catch (error) {\n            throw new AppError(ErrorCode.ProjectInvalidJson, \"Error parsing JSON\");\n        }\n\n        // need a better check to tell if its v1\n        if (projectJson.name === null || projectJson.name === undefined) {\n            try {\n                await this.importConfirm.current.open(project);\n            } catch (e) {\n                throw new Error(e.message);\n            }\n        } else {\n            await this.loadSelectedProject(projectJson);\n        }\n    }\n\n    private onProjectFileUploadError = (e, error: any) => {\n        if (error instanceof AppError) {\n            throw error;\n        }\n\n        throw new AppError(ErrorCode.ProjectUploadError, \"Error uploading project file\");\n    }\n\n    private loadSelectedProject = async (project: IProject) => {\n        await this.props.actions.loadProject(project);\n        this.props.history.push(`/projects/${project.id}/edit`);\n    }\n\n    private deleteProject = async (project: IProject) => {\n        try {\n            await this.props.actions.deleteProject(project);\n            toast.info(interpolate(strings.homePage.messages.deleteSuccess, { project }));\n        } catch (error) {\n            throw new AppError(ErrorCode.ProjectDeleteError, \"Error deleting project file\");\n        }\n    }\n\n    private convertProject = async (projectInfo: IFileInfo) => {\n        const importService = new ImportService();\n        let generatedAssetMetadata: IAssetMetadata[];\n        let project: IProject;\n\n        try {\n            project = await importService.convertProject(projectInfo);\n        } catch (e) {\n            throw new AppError(ErrorCode.V1ImportError, \"Error converting v1 project file\");\n        }\n\n        this.props.applicationActions.ensureSecurityToken(project);\n\n        try {\n            generatedAssetMetadata = await importService.generateAssets(projectInfo, project);\n            await this.props.actions.saveProject(project);\n            await this.props.actions.loadProject(project);\n            await generatedAssetMetadata.mapAsync((assetMetadata) => {\n                return this.props.actions.saveAssetMetadata(this.props.project, assetMetadata);\n            });\n        } catch (e) {\n            throw new Error(`Error importing project information - ${e.message}`);\n        }\n\n        await this.props.actions.saveProject(this.props.project);\n        await this.loadSelectedProject(this.props.project);\n    }\n}\n"]},"metadata":{},"sourceType":"module"}