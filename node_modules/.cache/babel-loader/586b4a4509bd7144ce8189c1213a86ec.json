{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/home/jw/Documents/code/VoTT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _possibleConstructorReturn = require(\"/home/jw/Documents/code/VoTT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/jw/Documents/code/VoTT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _createClass = require(\"/home/jw/Documents/code/VoTT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/home/jw/Documents/code/VoTT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Point2D_1 = require(\"../../Core/Point2D\");\n\nvar Rect_1 = require(\"../../Core/Rect\");\n\nvar Element_1 = require(\"./Element\");\n/**\r\n * The rect element for selectors\r\n */\n\n\nvar RectElement =\n/*#__PURE__*/\nfunction (_Element_1$Element) {\n  _inherits(RectElement, _Element_1$Element);\n\n  _createClass(RectElement, [{\n    key: \"x\",\n\n    /**\r\n     * The `x`-coordinate of the cross center.\r\n     */\n    get: function get() {\n      return this.originPoint.x;\n    }\n    /**\r\n     * The `y`-coordinate of the cross center.\r\n     */\n\n  }, {\n    key: \"y\",\n    get: function get() {\n      return this.originPoint.y;\n    }\n    /**\r\n     * Creates the new `RectElement`.\r\n     * @param paper - The `Snap.Paper` object to draw on.\r\n     * @param boundRect - The parent bounding box for selection.\r\n     * @param rect - The rect size.\r\n     */\n\n  }]);\n\n  function RectElement(paper, boundRect, rect) {\n    var _this;\n\n    _classCallCheck(this, RectElement);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RectElement).call(this, paper, boundRect));\n    _this.rect = new Rect_1.Rect(rect.width, rect.height);\n    _this.originPoint = new Point2D_1.Point2D(0, 0);\n\n    _this.buildUIElements();\n\n    _this.hide();\n\n    return _this;\n  }\n  /**\r\n   * Moves rect element to specified location.\r\n   * @param p - The new rect location.\r\n   */\n\n\n  _createClass(RectElement, [{\n    key: \"move\",\n    value: function move(p) {\n      this.node.node.setAttribute(\"x\", p.x.toString());\n      this.node.node.setAttribute(\"y\", p.y.toString());\n      this.originPoint.move(p);\n    }\n    /**\r\n     * Resizes the element to specified `width` and `height`.\r\n     * @param width - The new `width`.\r\n     * @param height - The new `height`.\r\n     */\n\n  }, {\n    key: \"resize\",\n    value: function resize(width, height) {\n      this.rect.resize(width, height);\n      this.node.node.setAttribute(\"height\", height.toString());\n      this.node.node.setAttribute(\"width\", width.toString());\n    }\n    /**\r\n     * Builds the visual presentation of the element.\r\n     */\n\n  }, {\n    key: \"buildUIElements\",\n    value: function buildUIElements() {\n      this.node = this.paper.rect(0, 0, this.rect.width, this.rect.height);\n    }\n  }]);\n\n  return RectElement;\n}(Element_1.Element);\n\nexports.RectElement = RectElement;","map":null,"metadata":{},"sourceType":"script"}