{"ast":null,"code":"import _regeneratorRuntime from \"/home/jw/Documents/code/VoTT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/jw/Documents/code/VoTT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/jw/Documents/code/VoTT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/jw/Documents/code/VoTT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/jw/Documents/code/VoTT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/jw/Documents/code/VoTT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/jw/Documents/code/VoTT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/jw/Documents/code/VoTT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/jw/Documents/code/VoTT/src/react/components/common/protectedInput/protectedInput.tsx\";\nimport React from \"react\";\n/**\n * Protected input properties\n * @member value - The value to bind to the component\n * @member securityToken - Optional value used to encrypt/decrypt the value\n */\n\n/**\n * Protected input Component\n * @description - Used for sensitive fields such as passwords, keys, tokens, etc\n */\nexport var ProtectedInput =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ProtectedInput, _React$Component);\n\n  function ProtectedInput(props) {\n    var _this;\n\n    _classCallCheck(this, ProtectedInput);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ProtectedInput).call(this, props));\n    _this.inputElement = React.createRef();\n    _this.state = {\n      showKey: false,\n      value: _this.props.value || \"\"\n    };\n    _this.toggleKeyVisibility = _this.toggleKeyVisibility.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.copyKey = _this.copyKey.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onChange = _this.onChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(ProtectedInput, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.onChange(this.props.value);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          id = _this$props.id,\n          readOnly = _this$props.readOnly;\n      var _this$state = this.state,\n          showKey = _this$state.showKey,\n          value = _this$state.value;\n      return React.createElement(\"div\", {\n        className: \"input-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: id,\n        ref: this.inputElement,\n        type: showKey ? \"text\" : \"password\",\n        readOnly: readOnly,\n        className: \"form-control\",\n        value: value,\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"input-group-append\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        title: showKey ? \"Hide\" : \"Show\",\n        className: \"btn btn-primary btn-visibility\",\n        onClick: this.toggleKeyVisibility,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: showKey ? \"fas fa-eye-slash\" : \"fas fa-eye\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        type: \"button\",\n        title: \"Copy\",\n        className: \"btn btn-primary btn-copy\",\n        onClick: this.copyKey,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-copy\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }))));\n    }\n  }, {\n    key: \"onChange\",\n    value: function onChange(e) {\n      var _this2 = this;\n\n      var input = e.target;\n      var value = input.value ? input.value : undefined;\n      this.setState({\n        value: value\n      }, function () {\n        return _this2.props.onChange(value);\n      });\n    }\n  }, {\n    key: \"toggleKeyVisibility\",\n    value: function toggleKeyVisibility() {\n      this.setState({\n        showKey: !this.state.showKey\n      });\n    }\n  }, {\n    key: \"copyKey\",\n    value: function () {\n      var _copyKey = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var clipboard;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                clipboard = navigator.clipboard;\n                _context.next = 3;\n                return clipboard.writeText(this.inputElement.current.value);\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function copyKey() {\n        return _copyKey.apply(this, arguments);\n      }\n\n      return copyKey;\n    }()\n  }]);\n\n  return ProtectedInput;\n}(React.Component);","map":{"version":3,"sources":["/home/jw/Documents/code/VoTT/src/react/components/common/protectedInput/protectedInput.tsx"],"names":["React","ProtectedInput","props","inputElement","createRef","state","showKey","value","toggleKeyVisibility","bind","copyKey","onChange","id","readOnly","e","input","target","undefined","setState","clipboard","navigator","writeText","current","Component"],"mappings":"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","sourcesContent":["import React, { RefObject, SyntheticEvent } from \"react\";\n\n/**\n * Protected input properties\n * @member value - The value to bind to the component\n * @member securityToken - Optional value used to encrypt/decrypt the value\n */\nexport interface IProtectedInputProps extends React.Props<ProtectedInput> {\n    id: string;\n    value: string;\n    readOnly?: boolean;\n    onChange: (value: string) => void;\n}\n\n/** Protected input state\n * @member showKey - Whether or not the input field renders as text or password field type\n * @member decryptedValue - The decrypted value to bind to the input field\n */\nexport interface IProtectedInputState {\n    showKey: boolean;\n    value: string;\n}\n\n/**\n * Protected input Component\n * @description - Used for sensitive fields such as passwords, keys, tokens, etc\n */\nexport class ProtectedInput extends React.Component<IProtectedInputProps, IProtectedInputState> {\n    private inputElement: RefObject<HTMLInputElement> = React.createRef<HTMLInputElement>();\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            showKey: false,\n            value: this.props.value || \"\",\n        };\n\n        this.toggleKeyVisibility = this.toggleKeyVisibility.bind(this);\n        this.copyKey = this.copyKey.bind(this);\n        this.onChange = this.onChange.bind(this);\n    }\n\n    public componentDidMount() {\n        this.props.onChange(this.props.value);\n    }\n\n    public render() {\n        const { id, readOnly } = this.props;\n        const { showKey, value } = this.state;\n\n        return (\n            <div className=\"input-group\">\n                <input id={id}\n                    ref={this.inputElement}\n                    type={showKey ? \"text\" : \"password\"}\n                    readOnly={readOnly}\n                    className=\"form-control\"\n                    value={value}\n                    onChange={this.onChange} />\n                <div className=\"input-group-append\">\n                    <button type=\"button\"\n                        title={showKey ? \"Hide\" : \"Show\"}\n                        className=\"btn btn-primary btn-visibility\"\n                        onClick={this.toggleKeyVisibility}>\n                        <i className={showKey ? \"fas fa-eye-slash\" : \"fas fa-eye\"}></i>\n                    </button>\n                    <button type=\"button\"\n                        title=\"Copy\"\n                        className=\"btn btn-primary btn-copy\"\n                        onClick={this.copyKey}>\n                        <i className=\"fas fa-copy\"></i>\n                    </button>\n                </div>\n            </div>\n        );\n    }\n\n    private onChange(e: SyntheticEvent) {\n        const input = e.target as HTMLInputElement;\n        const value = input.value ? input.value : undefined;\n        this.setState({ value }, () => this.props.onChange(value));\n    }\n\n    private toggleKeyVisibility() {\n        this.setState({\n            showKey: !this.state.showKey,\n        });\n    }\n\n    private async copyKey() {\n        const clipboard = (navigator as any).clipboard;\n        await clipboard.writeText(this.inputElement.current.value);\n    }\n}\n"]},"metadata":{},"sourceType":"module"}