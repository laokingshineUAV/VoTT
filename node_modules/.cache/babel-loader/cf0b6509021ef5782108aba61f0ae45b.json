{"ast":null,"code":"/* eslint-disable */\n\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\nvar jspb = require('google-protobuf');\n\nvar goog = jspb;\nvar global = Function('return this')();\ngoog.exportSymbol('proto.tensorflow.BytesList', null, global);\ngoog.exportSymbol('proto.tensorflow.Feature', null, global);\ngoog.exportSymbol('proto.tensorflow.FeatureList', null, global);\ngoog.exportSymbol('proto.tensorflow.FeatureLists', null, global);\ngoog.exportSymbol('proto.tensorflow.Features', null, global);\ngoog.exportSymbol('proto.tensorflow.FloatList', null, global);\ngoog.exportSymbol('proto.tensorflow.Int64List', null, global);\ngoog.exportSymbol('proto.tensorflow.TFRecordsImageMessage', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\nproto.tensorflow.BytesList = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.tensorflow.BytesList.repeatedFields_, null);\n};\n\ngoog.inherits(proto.tensorflow.BytesList, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  proto.tensorflow.BytesList.displayName = 'proto.tensorflow.BytesList';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.tensorflow.BytesList.repeatedFields_ = [1];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto suitable for use in Soy templates.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n   *     for transitional soy proto support: http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.tensorflow.BytesList.prototype.toObject = function (opt_includeInstance) {\n    return proto.tensorflow.BytesList.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Whether to include the JSPB\n   *     instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.tensorflow.BytesList} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.tensorflow.BytesList.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      valueList: msg.getValueList_asB64()\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.tensorflow.BytesList}\n */\n\n\nproto.tensorflow.BytesList.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.tensorflow.BytesList();\n  return proto.tensorflow.BytesList.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.tensorflow.BytesList} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.tensorflow.BytesList}\n */\n\n\nproto.tensorflow.BytesList.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.addValue(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.tensorflow.BytesList.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.tensorflow.BytesList.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.tensorflow.BytesList} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.tensorflow.BytesList.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getValueList_asU8();\n\n  if (f.length > 0) {\n    writer.writeRepeatedBytes(1, f);\n  }\n};\n/**\n * repeated bytes value = 1;\n * @return {!(Array<!Uint8Array>|Array<string>)}\n */\n\n\nproto.tensorflow.BytesList.prototype.getValueList = function () {\n  return (\n    /** @type {!(Array<!Uint8Array>|Array<string>)} */\n    jspb.Message.getRepeatedField(this, 1)\n  );\n};\n/**\n * repeated bytes value = 1;\n * This is a type-conversion wrapper around `getValueList()`\n * @return {!Array<string>}\n */\n\n\nproto.tensorflow.BytesList.prototype.getValueList_asB64 = function () {\n  return (\n    /** @type {!Array<string>} */\n    jspb.Message.bytesListAsB64(this.getValueList())\n  );\n};\n/**\n * repeated bytes value = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getValueList()`\n * @return {!Array<!Uint8Array>}\n */\n\n\nproto.tensorflow.BytesList.prototype.getValueList_asU8 = function () {\n  return (\n    /** @type {!Array<!Uint8Array>} */\n    jspb.Message.bytesListAsU8(this.getValueList())\n  );\n};\n/** @param {!(Array<!Uint8Array>|Array<string>)} value */\n\n\nproto.tensorflow.BytesList.prototype.setValueList = function (value) {\n  jspb.Message.setField(this, 1, value || []);\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @param {number=} opt_index\n */\n\n\nproto.tensorflow.BytesList.prototype.addValue = function (value, opt_index) {\n  jspb.Message.addToRepeatedField(this, 1, value, opt_index);\n};\n\nproto.tensorflow.BytesList.prototype.clearValueList = function () {\n  this.setValueList([]);\n};\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.tensorflow.FloatList = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.tensorflow.FloatList.repeatedFields_, null);\n};\n\ngoog.inherits(proto.tensorflow.FloatList, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  proto.tensorflow.FloatList.displayName = 'proto.tensorflow.FloatList';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.tensorflow.FloatList.repeatedFields_ = [1];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto suitable for use in Soy templates.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n   *     for transitional soy proto support: http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.tensorflow.FloatList.prototype.toObject = function (opt_includeInstance) {\n    return proto.tensorflow.FloatList.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Whether to include the JSPB\n   *     instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.tensorflow.FloatList} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.tensorflow.FloatList.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      valueList: jspb.Message.getRepeatedFloatingPointField(msg, 1)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.tensorflow.FloatList}\n */\n\n\nproto.tensorflow.FloatList.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.tensorflow.FloatList();\n  return proto.tensorflow.FloatList.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.tensorflow.FloatList} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.tensorflow.FloatList}\n */\n\n\nproto.tensorflow.FloatList.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {!Array<number>} */\n        reader.readPackedFloat();\n        msg.setValueList(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.tensorflow.FloatList.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.tensorflow.FloatList.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.tensorflow.FloatList} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.tensorflow.FloatList.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getValueList();\n\n  if (f.length > 0) {\n    writer.writePackedFloat(1, f);\n  }\n};\n/**\n * repeated float value = 1;\n * @return {!Array<number>}\n */\n\n\nproto.tensorflow.FloatList.prototype.getValueList = function () {\n  return (\n    /** @type {!Array<number>} */\n    jspb.Message.getRepeatedFloatingPointField(this, 1)\n  );\n};\n/** @param {!Array<number>} value */\n\n\nproto.tensorflow.FloatList.prototype.setValueList = function (value) {\n  jspb.Message.setField(this, 1, value || []);\n};\n/**\n * @param {!number} value\n * @param {number=} opt_index\n */\n\n\nproto.tensorflow.FloatList.prototype.addValue = function (value, opt_index) {\n  jspb.Message.addToRepeatedField(this, 1, value, opt_index);\n};\n\nproto.tensorflow.FloatList.prototype.clearValueList = function () {\n  this.setValueList([]);\n};\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.tensorflow.Int64List = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.tensorflow.Int64List.repeatedFields_, null);\n};\n\ngoog.inherits(proto.tensorflow.Int64List, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  proto.tensorflow.Int64List.displayName = 'proto.tensorflow.Int64List';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.tensorflow.Int64List.repeatedFields_ = [1];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto suitable for use in Soy templates.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n   *     for transitional soy proto support: http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.tensorflow.Int64List.prototype.toObject = function (opt_includeInstance) {\n    return proto.tensorflow.Int64List.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Whether to include the JSPB\n   *     instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.tensorflow.Int64List} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.tensorflow.Int64List.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      valueList: jspb.Message.getRepeatedField(msg, 1)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.tensorflow.Int64List}\n */\n\n\nproto.tensorflow.Int64List.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.tensorflow.Int64List();\n  return proto.tensorflow.Int64List.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.tensorflow.Int64List} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.tensorflow.Int64List}\n */\n\n\nproto.tensorflow.Int64List.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {!Array<number>} */\n        reader.readPackedInt64();\n        msg.setValueList(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.tensorflow.Int64List.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.tensorflow.Int64List.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.tensorflow.Int64List} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.tensorflow.Int64List.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getValueList();\n\n  if (f.length > 0) {\n    writer.writePackedInt64(1, f);\n  }\n};\n/**\n * repeated int64 value = 1;\n * @return {!Array<number>}\n */\n\n\nproto.tensorflow.Int64List.prototype.getValueList = function () {\n  return (\n    /** @type {!Array<number>} */\n    jspb.Message.getRepeatedField(this, 1)\n  );\n};\n/** @param {!Array<number>} value */\n\n\nproto.tensorflow.Int64List.prototype.setValueList = function (value) {\n  jspb.Message.setField(this, 1, value || []);\n};\n/**\n * @param {!number} value\n * @param {number=} opt_index\n */\n\n\nproto.tensorflow.Int64List.prototype.addValue = function (value, opt_index) {\n  jspb.Message.addToRepeatedField(this, 1, value, opt_index);\n};\n\nproto.tensorflow.Int64List.prototype.clearValueList = function () {\n  this.setValueList([]);\n};\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.tensorflow.Feature = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.tensorflow.Feature.oneofGroups_);\n};\n\ngoog.inherits(proto.tensorflow.Feature, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  proto.tensorflow.Feature.displayName = 'proto.tensorflow.Feature';\n}\n/**\n * Oneof group definitions for this message. Each group defines the field\n * numbers belonging to that group. When of these fields' value is set, all\n * other fields in the group are cleared. During deserialization, if multiple\n * fields are encountered for a group, only the last value seen will be kept.\n * @private {!Array<!Array<number>>}\n * @const\n */\n\n\nproto.tensorflow.Feature.oneofGroups_ = [[1, 2, 3]];\n/**\n * @enum {number}\n */\n\nproto.tensorflow.Feature.KindCase = {\n  KIND_NOT_SET: 0,\n  BYTES_LIST: 1,\n  FLOAT_LIST: 2,\n  INT64_LIST: 3\n};\n/**\n * @return {proto.tensorflow.Feature.KindCase}\n */\n\nproto.tensorflow.Feature.prototype.getKindCase = function () {\n  return (\n    /** @type {proto.tensorflow.Feature.KindCase} */\n    jspb.Message.computeOneofCase(this, proto.tensorflow.Feature.oneofGroups_[0])\n  );\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto suitable for use in Soy templates.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n   *     for transitional soy proto support: http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.tensorflow.Feature.prototype.toObject = function (opt_includeInstance) {\n    return proto.tensorflow.Feature.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Whether to include the JSPB\n   *     instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.tensorflow.Feature} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.tensorflow.Feature.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      bytesList: (f = msg.getBytesList()) && proto.tensorflow.BytesList.toObject(includeInstance, f),\n      floatList: (f = msg.getFloatList()) && proto.tensorflow.FloatList.toObject(includeInstance, f),\n      int64List: (f = msg.getInt64List()) && proto.tensorflow.Int64List.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.tensorflow.Feature}\n */\n\n\nproto.tensorflow.Feature.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.tensorflow.Feature();\n  return proto.tensorflow.Feature.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.tensorflow.Feature} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.tensorflow.Feature}\n */\n\n\nproto.tensorflow.Feature.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto.tensorflow.BytesList();\n        reader.readMessage(value, proto.tensorflow.BytesList.deserializeBinaryFromReader);\n        msg.setBytesList(value);\n        break;\n\n      case 2:\n        var value = new proto.tensorflow.FloatList();\n        reader.readMessage(value, proto.tensorflow.FloatList.deserializeBinaryFromReader);\n        msg.setFloatList(value);\n        break;\n\n      case 3:\n        var value = new proto.tensorflow.Int64List();\n        reader.readMessage(value, proto.tensorflow.Int64List.deserializeBinaryFromReader);\n        msg.setInt64List(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.tensorflow.Feature.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.tensorflow.Feature.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.tensorflow.Feature} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.tensorflow.Feature.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getBytesList();\n\n  if (f != null) {\n    writer.writeMessage(1, f, proto.tensorflow.BytesList.serializeBinaryToWriter);\n  }\n\n  f = message.getFloatList();\n\n  if (f != null) {\n    writer.writeMessage(2, f, proto.tensorflow.FloatList.serializeBinaryToWriter);\n  }\n\n  f = message.getInt64List();\n\n  if (f != null) {\n    writer.writeMessage(3, f, proto.tensorflow.Int64List.serializeBinaryToWriter);\n  }\n};\n/**\n * optional BytesList bytes_list = 1;\n * @return {?proto.tensorflow.BytesList}\n */\n\n\nproto.tensorflow.Feature.prototype.getBytesList = function () {\n  return (\n    /** @type{?proto.tensorflow.BytesList} */\n    jspb.Message.getWrapperField(this, proto.tensorflow.BytesList, 1)\n  );\n};\n/** @param {?proto.tensorflow.BytesList|undefined} value */\n\n\nproto.tensorflow.Feature.prototype.setBytesList = function (value) {\n  jspb.Message.setOneofWrapperField(this, 1, proto.tensorflow.Feature.oneofGroups_[0], value);\n};\n\nproto.tensorflow.Feature.prototype.clearBytesList = function () {\n  this.setBytesList(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\n\n\nproto.tensorflow.Feature.prototype.hasBytesList = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * optional FloatList float_list = 2;\n * @return {?proto.tensorflow.FloatList}\n */\n\n\nproto.tensorflow.Feature.prototype.getFloatList = function () {\n  return (\n    /** @type{?proto.tensorflow.FloatList} */\n    jspb.Message.getWrapperField(this, proto.tensorflow.FloatList, 2)\n  );\n};\n/** @param {?proto.tensorflow.FloatList|undefined} value */\n\n\nproto.tensorflow.Feature.prototype.setFloatList = function (value) {\n  jspb.Message.setOneofWrapperField(this, 2, proto.tensorflow.Feature.oneofGroups_[0], value);\n};\n\nproto.tensorflow.Feature.prototype.clearFloatList = function () {\n  this.setFloatList(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\n\n\nproto.tensorflow.Feature.prototype.hasFloatList = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n/**\n * optional Int64List int64_list = 3;\n * @return {?proto.tensorflow.Int64List}\n */\n\n\nproto.tensorflow.Feature.prototype.getInt64List = function () {\n  return (\n    /** @type{?proto.tensorflow.Int64List} */\n    jspb.Message.getWrapperField(this, proto.tensorflow.Int64List, 3)\n  );\n};\n/** @param {?proto.tensorflow.Int64List|undefined} value */\n\n\nproto.tensorflow.Feature.prototype.setInt64List = function (value) {\n  jspb.Message.setOneofWrapperField(this, 3, proto.tensorflow.Feature.oneofGroups_[0], value);\n};\n\nproto.tensorflow.Feature.prototype.clearInt64List = function () {\n  this.setInt64List(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\n\n\nproto.tensorflow.Feature.prototype.hasInt64List = function () {\n  return jspb.Message.getField(this, 3) != null;\n};\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.tensorflow.Features = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.tensorflow.Features, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  proto.tensorflow.Features.displayName = 'proto.tensorflow.Features';\n}\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto suitable for use in Soy templates.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n   *     for transitional soy proto support: http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.tensorflow.Features.prototype.toObject = function (opt_includeInstance) {\n    return proto.tensorflow.Features.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Whether to include the JSPB\n   *     instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.tensorflow.Features} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.tensorflow.Features.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      featureMap: (f = msg.getFeatureMap()) ? f.toObject(includeInstance, proto.tensorflow.Feature.toObject) : []\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.tensorflow.Features}\n */\n\n\nproto.tensorflow.Features.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.tensorflow.Features();\n  return proto.tensorflow.Features.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.tensorflow.Features} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.tensorflow.Features}\n */\n\n\nproto.tensorflow.Features.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = msg.getFeatureMap();\n        reader.readMessage(value, function (message, reader) {\n          jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.tensorflow.Feature.deserializeBinaryFromReader, \"\");\n        });\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.tensorflow.Features.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.tensorflow.Features.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.tensorflow.Features} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.tensorflow.Features.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getFeatureMap(true);\n\n  if (f && f.getLength() > 0) {\n    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.tensorflow.Feature.serializeBinaryToWriter);\n  }\n};\n/**\n * map<string, Feature> feature = 1;\n * @param {boolean=} opt_noLazyCreate Do not create the map if\n * empty, instead returning `undefined`\n * @return {!jspb.Map<string,!proto.tensorflow.Feature>}\n */\n\n\nproto.tensorflow.Features.prototype.getFeatureMap = function (opt_noLazyCreate) {\n  return (\n    /** @type {!jspb.Map<string,!proto.tensorflow.Feature>} */\n    jspb.Message.getMapField(this, 1, opt_noLazyCreate, proto.tensorflow.Feature)\n  );\n};\n\nproto.tensorflow.Features.prototype.clearFeatureMap = function () {\n  this.getFeatureMap().clear();\n};\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.tensorflow.FeatureList = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.tensorflow.FeatureList.repeatedFields_, null);\n};\n\ngoog.inherits(proto.tensorflow.FeatureList, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  proto.tensorflow.FeatureList.displayName = 'proto.tensorflow.FeatureList';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.tensorflow.FeatureList.repeatedFields_ = [1];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto suitable for use in Soy templates.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n   *     for transitional soy proto support: http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.tensorflow.FeatureList.prototype.toObject = function (opt_includeInstance) {\n    return proto.tensorflow.FeatureList.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Whether to include the JSPB\n   *     instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.tensorflow.FeatureList} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.tensorflow.FeatureList.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      featureList: jspb.Message.toObjectList(msg.getFeatureList(), proto.tensorflow.Feature.toObject, includeInstance)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.tensorflow.FeatureList}\n */\n\n\nproto.tensorflow.FeatureList.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.tensorflow.FeatureList();\n  return proto.tensorflow.FeatureList.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.tensorflow.FeatureList} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.tensorflow.FeatureList}\n */\n\n\nproto.tensorflow.FeatureList.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto.tensorflow.Feature();\n        reader.readMessage(value, proto.tensorflow.Feature.deserializeBinaryFromReader);\n        msg.addFeature(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.tensorflow.FeatureList.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.tensorflow.FeatureList.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.tensorflow.FeatureList} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.tensorflow.FeatureList.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getFeatureList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(1, f, proto.tensorflow.Feature.serializeBinaryToWriter);\n  }\n};\n/**\n * repeated Feature feature = 1;\n * @return {!Array<!proto.tensorflow.Feature>}\n */\n\n\nproto.tensorflow.FeatureList.prototype.getFeatureList = function () {\n  return (\n    /** @type{!Array<!proto.tensorflow.Feature>} */\n    jspb.Message.getRepeatedWrapperField(this, proto.tensorflow.Feature, 1)\n  );\n};\n/** @param {!Array<!proto.tensorflow.Feature>} value */\n\n\nproto.tensorflow.FeatureList.prototype.setFeatureList = function (value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n/**\n * @param {!proto.tensorflow.Feature=} opt_value\n * @param {number=} opt_index\n * @return {!proto.tensorflow.Feature}\n */\n\n\nproto.tensorflow.FeatureList.prototype.addFeature = function (opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.tensorflow.Feature, opt_index);\n};\n\nproto.tensorflow.FeatureList.prototype.clearFeatureList = function () {\n  this.setFeatureList([]);\n};\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.tensorflow.FeatureLists = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.tensorflow.FeatureLists, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  proto.tensorflow.FeatureLists.displayName = 'proto.tensorflow.FeatureLists';\n}\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto suitable for use in Soy templates.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n   *     for transitional soy proto support: http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.tensorflow.FeatureLists.prototype.toObject = function (opt_includeInstance) {\n    return proto.tensorflow.FeatureLists.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Whether to include the JSPB\n   *     instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.tensorflow.FeatureLists} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.tensorflow.FeatureLists.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      featureListMap: (f = msg.getFeatureListMap()) ? f.toObject(includeInstance, proto.tensorflow.FeatureList.toObject) : []\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.tensorflow.FeatureLists}\n */\n\n\nproto.tensorflow.FeatureLists.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.tensorflow.FeatureLists();\n  return proto.tensorflow.FeatureLists.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.tensorflow.FeatureLists} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.tensorflow.FeatureLists}\n */\n\n\nproto.tensorflow.FeatureLists.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = msg.getFeatureListMap();\n        reader.readMessage(value, function (message, reader) {\n          jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.tensorflow.FeatureList.deserializeBinaryFromReader, \"\");\n        });\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.tensorflow.FeatureLists.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.tensorflow.FeatureLists.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.tensorflow.FeatureLists} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.tensorflow.FeatureLists.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getFeatureListMap(true);\n\n  if (f && f.getLength() > 0) {\n    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.tensorflow.FeatureList.serializeBinaryToWriter);\n  }\n};\n/**\n * map<string, FeatureList> feature_list = 1;\n * @param {boolean=} opt_noLazyCreate Do not create the map if\n * empty, instead returning `undefined`\n * @return {!jspb.Map<string,!proto.tensorflow.FeatureList>}\n */\n\n\nproto.tensorflow.FeatureLists.prototype.getFeatureListMap = function (opt_noLazyCreate) {\n  return (\n    /** @type {!jspb.Map<string,!proto.tensorflow.FeatureList>} */\n    jspb.Message.getMapField(this, 1, opt_noLazyCreate, proto.tensorflow.FeatureList)\n  );\n};\n\nproto.tensorflow.FeatureLists.prototype.clearFeatureListMap = function () {\n  this.getFeatureListMap().clear();\n};\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.tensorflow.TFRecordsImageMessage = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.tensorflow.TFRecordsImageMessage, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  proto.tensorflow.TFRecordsImageMessage.displayName = 'proto.tensorflow.TFRecordsImageMessage';\n}\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto suitable for use in Soy templates.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n   *     for transitional soy proto support: http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.tensorflow.TFRecordsImageMessage.prototype.toObject = function (opt_includeInstance) {\n    return proto.tensorflow.TFRecordsImageMessage.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Whether to include the JSPB\n   *     instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.tensorflow.TFRecordsImageMessage} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.tensorflow.TFRecordsImageMessage.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      context: (f = msg.getContext()) && proto.tensorflow.Features.toObject(includeInstance, f),\n      featureLists: (f = msg.getFeatureLists()) && proto.tensorflow.FeatureLists.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.tensorflow.TFRecordsImageMessage}\n */\n\n\nproto.tensorflow.TFRecordsImageMessage.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.tensorflow.TFRecordsImageMessage();\n  return proto.tensorflow.TFRecordsImageMessage.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.tensorflow.TFRecordsImageMessage} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.tensorflow.TFRecordsImageMessage}\n */\n\n\nproto.tensorflow.TFRecordsImageMessage.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto.tensorflow.Features();\n        reader.readMessage(value, proto.tensorflow.Features.deserializeBinaryFromReader);\n        msg.setContext(value);\n        break;\n\n      case 2:\n        var value = new proto.tensorflow.FeatureLists();\n        reader.readMessage(value, proto.tensorflow.FeatureLists.deserializeBinaryFromReader);\n        msg.setFeatureLists(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.tensorflow.TFRecordsImageMessage.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.tensorflow.TFRecordsImageMessage.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.tensorflow.TFRecordsImageMessage} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.tensorflow.TFRecordsImageMessage.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getContext();\n\n  if (f != null) {\n    writer.writeMessage(1, f, proto.tensorflow.Features.serializeBinaryToWriter);\n  }\n\n  f = message.getFeatureLists();\n\n  if (f != null) {\n    writer.writeMessage(2, f, proto.tensorflow.FeatureLists.serializeBinaryToWriter);\n  }\n};\n/**\n * optional Features context = 1;\n * @return {?proto.tensorflow.Features}\n */\n\n\nproto.tensorflow.TFRecordsImageMessage.prototype.getContext = function () {\n  return (\n    /** @type{?proto.tensorflow.Features} */\n    jspb.Message.getWrapperField(this, proto.tensorflow.Features, 1)\n  );\n};\n/** @param {?proto.tensorflow.Features|undefined} value */\n\n\nproto.tensorflow.TFRecordsImageMessage.prototype.setContext = function (value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\nproto.tensorflow.TFRecordsImageMessage.prototype.clearContext = function () {\n  this.setContext(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\n\n\nproto.tensorflow.TFRecordsImageMessage.prototype.hasContext = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * optional FeatureLists feature_lists = 2;\n * @return {?proto.tensorflow.FeatureLists}\n */\n\n\nproto.tensorflow.TFRecordsImageMessage.prototype.getFeatureLists = function () {\n  return (\n    /** @type{?proto.tensorflow.FeatureLists} */\n    jspb.Message.getWrapperField(this, proto.tensorflow.FeatureLists, 2)\n  );\n};\n/** @param {?proto.tensorflow.FeatureLists|undefined} value */\n\n\nproto.tensorflow.TFRecordsImageMessage.prototype.setFeatureLists = function (value) {\n  jspb.Message.setWrapperField(this, 2, value);\n};\n\nproto.tensorflow.TFRecordsImageMessage.prototype.clearFeatureLists = function () {\n  this.setFeatureLists(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\n\n\nproto.tensorflow.TFRecordsImageMessage.prototype.hasFeatureLists = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n\ngoog.object.extend(exports, proto.tensorflow);","map":{"version":3,"sources":["/home/jw/Documents/code/VoTT/src/providers/export/tensorFlowRecords/tensorFlowRecordsProtoBuf_pb.js"],"names":["jspb","require","goog","global","Function","exportSymbol","proto","tensorflow","BytesList","opt_data","Message","initialize","repeatedFields_","inherits","DEBUG","COMPILED","displayName","GENERATE_TO_OBJECT","prototype","toObject","opt_includeInstance","includeInstance","msg","f","obj","valueList","getValueList_asB64","$jspbMessageInstance","deserializeBinary","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","field","getFieldNumber","value","readBytes","addValue","skipField","serializeBinary","writer","BinaryWriter","serializeBinaryToWriter","getResultBuffer","message","undefined","getValueList_asU8","length","writeRepeatedBytes","getValueList","getRepeatedField","bytesListAsB64","bytesListAsU8","setValueList","setField","opt_index","addToRepeatedField","clearValueList","FloatList","getRepeatedFloatingPointField","readPackedFloat","writePackedFloat","Int64List","readPackedInt64","writePackedInt64","Feature","oneofGroups_","KindCase","KIND_NOT_SET","BYTES_LIST","FLOAT_LIST","INT64_LIST","getKindCase","computeOneofCase","bytesList","getBytesList","floatList","getFloatList","int64List","getInt64List","readMessage","setBytesList","setFloatList","setInt64List","writeMessage","getWrapperField","setOneofWrapperField","clearBytesList","hasBytesList","getField","clearFloatList","hasFloatList","clearInt64List","hasInt64List","Features","featureMap","getFeatureMap","Map","readString","getLength","writeString","opt_noLazyCreate","getMapField","clearFeatureMap","clear","FeatureList","featureList","toObjectList","getFeatureList","addFeature","writeRepeatedMessage","getRepeatedWrapperField","setFeatureList","setRepeatedWrapperField","opt_value","addToRepeatedWrapperField","clearFeatureList","FeatureLists","featureListMap","getFeatureListMap","clearFeatureListMap","TFRecordsImageMessage","context","getContext","featureLists","getFeatureLists","setContext","setFeatureLists","setWrapperField","clearContext","hasContext","clearFeatureLists","hasFeatureLists","object","extend","exports"],"mappings":"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","sourcesContent":["/* eslint-disable */\n\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\ngoog.exportSymbol('proto.tensorflow.BytesList', null, global);\ngoog.exportSymbol('proto.tensorflow.Feature', null, global);\ngoog.exportSymbol('proto.tensorflow.FeatureList', null, global);\ngoog.exportSymbol('proto.tensorflow.FeatureLists', null, global);\ngoog.exportSymbol('proto.tensorflow.Features', null, global);\ngoog.exportSymbol('proto.tensorflow.FloatList', null, global);\ngoog.exportSymbol('proto.tensorflow.Int64List', null, global);\ngoog.exportSymbol('proto.tensorflow.TFRecordsImageMessage', null, global);\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.tensorflow.BytesList = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.tensorflow.BytesList.repeatedFields_, null);\n};\ngoog.inherits(proto.tensorflow.BytesList, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.tensorflow.BytesList.displayName = 'proto.tensorflow.BytesList';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.tensorflow.BytesList.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.tensorflow.BytesList.prototype.toObject = function(opt_includeInstance) {\n  return proto.tensorflow.BytesList.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.tensorflow.BytesList} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tensorflow.BytesList.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    valueList: msg.getValueList_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.tensorflow.BytesList}\n */\nproto.tensorflow.BytesList.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.tensorflow.BytesList;\n  return proto.tensorflow.BytesList.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.tensorflow.BytesList} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.tensorflow.BytesList}\n */\nproto.tensorflow.BytesList.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.addValue(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.tensorflow.BytesList.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.tensorflow.BytesList.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.tensorflow.BytesList} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tensorflow.BytesList.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getValueList_asU8();\n  if (f.length > 0) {\n    writer.writeRepeatedBytes(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * repeated bytes value = 1;\n * @return {!(Array<!Uint8Array>|Array<string>)}\n */\nproto.tensorflow.BytesList.prototype.getValueList = function() {\n  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 1));\n};\n\n\n/**\n * repeated bytes value = 1;\n * This is a type-conversion wrapper around `getValueList()`\n * @return {!Array<string>}\n */\nproto.tensorflow.BytesList.prototype.getValueList_asB64 = function() {\n  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(\n      this.getValueList()));\n};\n\n\n/**\n * repeated bytes value = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getValueList()`\n * @return {!Array<!Uint8Array>}\n */\nproto.tensorflow.BytesList.prototype.getValueList_asU8 = function() {\n  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(\n      this.getValueList()));\n};\n\n\n/** @param {!(Array<!Uint8Array>|Array<string>)} value */\nproto.tensorflow.BytesList.prototype.setValueList = function(value) {\n  jspb.Message.setField(this, 1, value || []);\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @param {number=} opt_index\n */\nproto.tensorflow.BytesList.prototype.addValue = function(value, opt_index) {\n  jspb.Message.addToRepeatedField(this, 1, value, opt_index);\n};\n\n\nproto.tensorflow.BytesList.prototype.clearValueList = function() {\n  this.setValueList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.tensorflow.FloatList = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.tensorflow.FloatList.repeatedFields_, null);\n};\ngoog.inherits(proto.tensorflow.FloatList, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.tensorflow.FloatList.displayName = 'proto.tensorflow.FloatList';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.tensorflow.FloatList.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.tensorflow.FloatList.prototype.toObject = function(opt_includeInstance) {\n  return proto.tensorflow.FloatList.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.tensorflow.FloatList} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tensorflow.FloatList.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    valueList: jspb.Message.getRepeatedFloatingPointField(msg, 1)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.tensorflow.FloatList}\n */\nproto.tensorflow.FloatList.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.tensorflow.FloatList;\n  return proto.tensorflow.FloatList.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.tensorflow.FloatList} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.tensorflow.FloatList}\n */\nproto.tensorflow.FloatList.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Array<number>} */ (reader.readPackedFloat());\n      msg.setValueList(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.tensorflow.FloatList.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.tensorflow.FloatList.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.tensorflow.FloatList} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tensorflow.FloatList.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getValueList();\n  if (f.length > 0) {\n    writer.writePackedFloat(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * repeated float value = 1;\n * @return {!Array<number>}\n */\nproto.tensorflow.FloatList.prototype.getValueList = function() {\n  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 1));\n};\n\n\n/** @param {!Array<number>} value */\nproto.tensorflow.FloatList.prototype.setValueList = function(value) {\n  jspb.Message.setField(this, 1, value || []);\n};\n\n\n/**\n * @param {!number} value\n * @param {number=} opt_index\n */\nproto.tensorflow.FloatList.prototype.addValue = function(value, opt_index) {\n  jspb.Message.addToRepeatedField(this, 1, value, opt_index);\n};\n\n\nproto.tensorflow.FloatList.prototype.clearValueList = function() {\n  this.setValueList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.tensorflow.Int64List = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.tensorflow.Int64List.repeatedFields_, null);\n};\ngoog.inherits(proto.tensorflow.Int64List, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.tensorflow.Int64List.displayName = 'proto.tensorflow.Int64List';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.tensorflow.Int64List.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.tensorflow.Int64List.prototype.toObject = function(opt_includeInstance) {\n  return proto.tensorflow.Int64List.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.tensorflow.Int64List} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tensorflow.Int64List.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    valueList: jspb.Message.getRepeatedField(msg, 1)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.tensorflow.Int64List}\n */\nproto.tensorflow.Int64List.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.tensorflow.Int64List;\n  return proto.tensorflow.Int64List.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.tensorflow.Int64List} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.tensorflow.Int64List}\n */\nproto.tensorflow.Int64List.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Array<number>} */ (reader.readPackedInt64());\n      msg.setValueList(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.tensorflow.Int64List.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.tensorflow.Int64List.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.tensorflow.Int64List} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tensorflow.Int64List.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getValueList();\n  if (f.length > 0) {\n    writer.writePackedInt64(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * repeated int64 value = 1;\n * @return {!Array<number>}\n */\nproto.tensorflow.Int64List.prototype.getValueList = function() {\n  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 1));\n};\n\n\n/** @param {!Array<number>} value */\nproto.tensorflow.Int64List.prototype.setValueList = function(value) {\n  jspb.Message.setField(this, 1, value || []);\n};\n\n\n/**\n * @param {!number} value\n * @param {number=} opt_index\n */\nproto.tensorflow.Int64List.prototype.addValue = function(value, opt_index) {\n  jspb.Message.addToRepeatedField(this, 1, value, opt_index);\n};\n\n\nproto.tensorflow.Int64List.prototype.clearValueList = function() {\n  this.setValueList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.tensorflow.Feature = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.tensorflow.Feature.oneofGroups_);\n};\ngoog.inherits(proto.tensorflow.Feature, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.tensorflow.Feature.displayName = 'proto.tensorflow.Feature';\n}\n/**\n * Oneof group definitions for this message. Each group defines the field\n * numbers belonging to that group. When of these fields' value is set, all\n * other fields in the group are cleared. During deserialization, if multiple\n * fields are encountered for a group, only the last value seen will be kept.\n * @private {!Array<!Array<number>>}\n * @const\n */\nproto.tensorflow.Feature.oneofGroups_ = [[1,2,3]];\n\n/**\n * @enum {number}\n */\nproto.tensorflow.Feature.KindCase = {\n  KIND_NOT_SET: 0,\n  BYTES_LIST: 1,\n  FLOAT_LIST: 2,\n  INT64_LIST: 3\n};\n\n/**\n * @return {proto.tensorflow.Feature.KindCase}\n */\nproto.tensorflow.Feature.prototype.getKindCase = function() {\n  return /** @type {proto.tensorflow.Feature.KindCase} */(jspb.Message.computeOneofCase(this, proto.tensorflow.Feature.oneofGroups_[0]));\n};\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.tensorflow.Feature.prototype.toObject = function(opt_includeInstance) {\n  return proto.tensorflow.Feature.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.tensorflow.Feature} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tensorflow.Feature.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    bytesList: (f = msg.getBytesList()) && proto.tensorflow.BytesList.toObject(includeInstance, f),\n    floatList: (f = msg.getFloatList()) && proto.tensorflow.FloatList.toObject(includeInstance, f),\n    int64List: (f = msg.getInt64List()) && proto.tensorflow.Int64List.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.tensorflow.Feature}\n */\nproto.tensorflow.Feature.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.tensorflow.Feature;\n  return proto.tensorflow.Feature.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.tensorflow.Feature} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.tensorflow.Feature}\n */\nproto.tensorflow.Feature.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.tensorflow.BytesList;\n      reader.readMessage(value,proto.tensorflow.BytesList.deserializeBinaryFromReader);\n      msg.setBytesList(value);\n      break;\n    case 2:\n      var value = new proto.tensorflow.FloatList;\n      reader.readMessage(value,proto.tensorflow.FloatList.deserializeBinaryFromReader);\n      msg.setFloatList(value);\n      break;\n    case 3:\n      var value = new proto.tensorflow.Int64List;\n      reader.readMessage(value,proto.tensorflow.Int64List.deserializeBinaryFromReader);\n      msg.setInt64List(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.tensorflow.Feature.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.tensorflow.Feature.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.tensorflow.Feature} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tensorflow.Feature.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getBytesList();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.tensorflow.BytesList.serializeBinaryToWriter\n    );\n  }\n  f = message.getFloatList();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      proto.tensorflow.FloatList.serializeBinaryToWriter\n    );\n  }\n  f = message.getInt64List();\n  if (f != null) {\n    writer.writeMessage(\n      3,\n      f,\n      proto.tensorflow.Int64List.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional BytesList bytes_list = 1;\n * @return {?proto.tensorflow.BytesList}\n */\nproto.tensorflow.Feature.prototype.getBytesList = function() {\n  return /** @type{?proto.tensorflow.BytesList} */ (\n    jspb.Message.getWrapperField(this, proto.tensorflow.BytesList, 1));\n};\n\n\n/** @param {?proto.tensorflow.BytesList|undefined} value */\nproto.tensorflow.Feature.prototype.setBytesList = function(value) {\n  jspb.Message.setOneofWrapperField(this, 1, proto.tensorflow.Feature.oneofGroups_[0], value);\n};\n\n\nproto.tensorflow.Feature.prototype.clearBytesList = function() {\n  this.setBytesList(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.tensorflow.Feature.prototype.hasBytesList = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional FloatList float_list = 2;\n * @return {?proto.tensorflow.FloatList}\n */\nproto.tensorflow.Feature.prototype.getFloatList = function() {\n  return /** @type{?proto.tensorflow.FloatList} */ (\n    jspb.Message.getWrapperField(this, proto.tensorflow.FloatList, 2));\n};\n\n\n/** @param {?proto.tensorflow.FloatList|undefined} value */\nproto.tensorflow.Feature.prototype.setFloatList = function(value) {\n  jspb.Message.setOneofWrapperField(this, 2, proto.tensorflow.Feature.oneofGroups_[0], value);\n};\n\n\nproto.tensorflow.Feature.prototype.clearFloatList = function() {\n  this.setFloatList(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.tensorflow.Feature.prototype.hasFloatList = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional Int64List int64_list = 3;\n * @return {?proto.tensorflow.Int64List}\n */\nproto.tensorflow.Feature.prototype.getInt64List = function() {\n  return /** @type{?proto.tensorflow.Int64List} */ (\n    jspb.Message.getWrapperField(this, proto.tensorflow.Int64List, 3));\n};\n\n\n/** @param {?proto.tensorflow.Int64List|undefined} value */\nproto.tensorflow.Feature.prototype.setInt64List = function(value) {\n  jspb.Message.setOneofWrapperField(this, 3, proto.tensorflow.Feature.oneofGroups_[0], value);\n};\n\n\nproto.tensorflow.Feature.prototype.clearInt64List = function() {\n  this.setInt64List(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.tensorflow.Feature.prototype.hasInt64List = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.tensorflow.Features = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.tensorflow.Features, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.tensorflow.Features.displayName = 'proto.tensorflow.Features';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.tensorflow.Features.prototype.toObject = function(opt_includeInstance) {\n  return proto.tensorflow.Features.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.tensorflow.Features} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tensorflow.Features.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    featureMap: (f = msg.getFeatureMap()) ? f.toObject(includeInstance, proto.tensorflow.Feature.toObject) : []\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.tensorflow.Features}\n */\nproto.tensorflow.Features.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.tensorflow.Features;\n  return proto.tensorflow.Features.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.tensorflow.Features} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.tensorflow.Features}\n */\nproto.tensorflow.Features.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = msg.getFeatureMap();\n      reader.readMessage(value, function(message, reader) {\n        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.tensorflow.Feature.deserializeBinaryFromReader, \"\");\n         });\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.tensorflow.Features.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.tensorflow.Features.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.tensorflow.Features} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tensorflow.Features.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getFeatureMap(true);\n  if (f && f.getLength() > 0) {\n    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.tensorflow.Feature.serializeBinaryToWriter);\n  }\n};\n\n\n/**\n * map<string, Feature> feature = 1;\n * @param {boolean=} opt_noLazyCreate Do not create the map if\n * empty, instead returning `undefined`\n * @return {!jspb.Map<string,!proto.tensorflow.Feature>}\n */\nproto.tensorflow.Features.prototype.getFeatureMap = function(opt_noLazyCreate) {\n  return /** @type {!jspb.Map<string,!proto.tensorflow.Feature>} */ (\n      jspb.Message.getMapField(this, 1, opt_noLazyCreate,\n      proto.tensorflow.Feature));\n};\n\n\nproto.tensorflow.Features.prototype.clearFeatureMap = function() {\n  this.getFeatureMap().clear();\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.tensorflow.FeatureList = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.tensorflow.FeatureList.repeatedFields_, null);\n};\ngoog.inherits(proto.tensorflow.FeatureList, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.tensorflow.FeatureList.displayName = 'proto.tensorflow.FeatureList';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.tensorflow.FeatureList.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.tensorflow.FeatureList.prototype.toObject = function(opt_includeInstance) {\n  return proto.tensorflow.FeatureList.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.tensorflow.FeatureList} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tensorflow.FeatureList.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    featureList: jspb.Message.toObjectList(msg.getFeatureList(),\n    proto.tensorflow.Feature.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.tensorflow.FeatureList}\n */\nproto.tensorflow.FeatureList.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.tensorflow.FeatureList;\n  return proto.tensorflow.FeatureList.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.tensorflow.FeatureList} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.tensorflow.FeatureList}\n */\nproto.tensorflow.FeatureList.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.tensorflow.Feature;\n      reader.readMessage(value,proto.tensorflow.Feature.deserializeBinaryFromReader);\n      msg.addFeature(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.tensorflow.FeatureList.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.tensorflow.FeatureList.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.tensorflow.FeatureList} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tensorflow.FeatureList.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getFeatureList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.tensorflow.Feature.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated Feature feature = 1;\n * @return {!Array<!proto.tensorflow.Feature>}\n */\nproto.tensorflow.FeatureList.prototype.getFeatureList = function() {\n  return /** @type{!Array<!proto.tensorflow.Feature>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.tensorflow.Feature, 1));\n};\n\n\n/** @param {!Array<!proto.tensorflow.Feature>} value */\nproto.tensorflow.FeatureList.prototype.setFeatureList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.tensorflow.Feature=} opt_value\n * @param {number=} opt_index\n * @return {!proto.tensorflow.Feature}\n */\nproto.tensorflow.FeatureList.prototype.addFeature = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.tensorflow.Feature, opt_index);\n};\n\n\nproto.tensorflow.FeatureList.prototype.clearFeatureList = function() {\n  this.setFeatureList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.tensorflow.FeatureLists = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.tensorflow.FeatureLists, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.tensorflow.FeatureLists.displayName = 'proto.tensorflow.FeatureLists';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.tensorflow.FeatureLists.prototype.toObject = function(opt_includeInstance) {\n  return proto.tensorflow.FeatureLists.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.tensorflow.FeatureLists} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tensorflow.FeatureLists.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    featureListMap: (f = msg.getFeatureListMap()) ? f.toObject(includeInstance, proto.tensorflow.FeatureList.toObject) : []\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.tensorflow.FeatureLists}\n */\nproto.tensorflow.FeatureLists.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.tensorflow.FeatureLists;\n  return proto.tensorflow.FeatureLists.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.tensorflow.FeatureLists} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.tensorflow.FeatureLists}\n */\nproto.tensorflow.FeatureLists.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = msg.getFeatureListMap();\n      reader.readMessage(value, function(message, reader) {\n        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.tensorflow.FeatureList.deserializeBinaryFromReader, \"\");\n         });\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.tensorflow.FeatureLists.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.tensorflow.FeatureLists.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.tensorflow.FeatureLists} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tensorflow.FeatureLists.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getFeatureListMap(true);\n  if (f && f.getLength() > 0) {\n    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.tensorflow.FeatureList.serializeBinaryToWriter);\n  }\n};\n\n\n/**\n * map<string, FeatureList> feature_list = 1;\n * @param {boolean=} opt_noLazyCreate Do not create the map if\n * empty, instead returning `undefined`\n * @return {!jspb.Map<string,!proto.tensorflow.FeatureList>}\n */\nproto.tensorflow.FeatureLists.prototype.getFeatureListMap = function(opt_noLazyCreate) {\n  return /** @type {!jspb.Map<string,!proto.tensorflow.FeatureList>} */ (\n      jspb.Message.getMapField(this, 1, opt_noLazyCreate,\n      proto.tensorflow.FeatureList));\n};\n\n\nproto.tensorflow.FeatureLists.prototype.clearFeatureListMap = function() {\n  this.getFeatureListMap().clear();\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.tensorflow.TFRecordsImageMessage = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.tensorflow.TFRecordsImageMessage, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.tensorflow.TFRecordsImageMessage.displayName = 'proto.tensorflow.TFRecordsImageMessage';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.tensorflow.TFRecordsImageMessage.prototype.toObject = function(opt_includeInstance) {\n  return proto.tensorflow.TFRecordsImageMessage.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.tensorflow.TFRecordsImageMessage} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tensorflow.TFRecordsImageMessage.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    context: (f = msg.getContext()) && proto.tensorflow.Features.toObject(includeInstance, f),\n    featureLists: (f = msg.getFeatureLists()) && proto.tensorflow.FeatureLists.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.tensorflow.TFRecordsImageMessage}\n */\nproto.tensorflow.TFRecordsImageMessage.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.tensorflow.TFRecordsImageMessage;\n  return proto.tensorflow.TFRecordsImageMessage.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.tensorflow.TFRecordsImageMessage} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.tensorflow.TFRecordsImageMessage}\n */\nproto.tensorflow.TFRecordsImageMessage.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.tensorflow.Features;\n      reader.readMessage(value,proto.tensorflow.Features.deserializeBinaryFromReader);\n      msg.setContext(value);\n      break;\n    case 2:\n      var value = new proto.tensorflow.FeatureLists;\n      reader.readMessage(value,proto.tensorflow.FeatureLists.deserializeBinaryFromReader);\n      msg.setFeatureLists(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.tensorflow.TFRecordsImageMessage.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.tensorflow.TFRecordsImageMessage.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.tensorflow.TFRecordsImageMessage} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tensorflow.TFRecordsImageMessage.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getContext();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.tensorflow.Features.serializeBinaryToWriter\n    );\n  }\n  f = message.getFeatureLists();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      proto.tensorflow.FeatureLists.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional Features context = 1;\n * @return {?proto.tensorflow.Features}\n */\nproto.tensorflow.TFRecordsImageMessage.prototype.getContext = function() {\n  return /** @type{?proto.tensorflow.Features} */ (\n    jspb.Message.getWrapperField(this, proto.tensorflow.Features, 1));\n};\n\n\n/** @param {?proto.tensorflow.Features|undefined} value */\nproto.tensorflow.TFRecordsImageMessage.prototype.setContext = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.tensorflow.TFRecordsImageMessage.prototype.clearContext = function() {\n  this.setContext(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.tensorflow.TFRecordsImageMessage.prototype.hasContext = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional FeatureLists feature_lists = 2;\n * @return {?proto.tensorflow.FeatureLists}\n */\nproto.tensorflow.TFRecordsImageMessage.prototype.getFeatureLists = function() {\n  return /** @type{?proto.tensorflow.FeatureLists} */ (\n    jspb.Message.getWrapperField(this, proto.tensorflow.FeatureLists, 2));\n};\n\n\n/** @param {?proto.tensorflow.FeatureLists|undefined} value */\nproto.tensorflow.TFRecordsImageMessage.prototype.setFeatureLists = function(value) {\n  jspb.Message.setWrapperField(this, 2, value);\n};\n\n\nproto.tensorflow.TFRecordsImageMessage.prototype.clearFeatureLists = function() {\n  this.setFeatureLists(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.tensorflow.TFRecordsImageMessage.prototype.hasFeatureLists = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\ngoog.object.extend(exports, proto.tensorflow);\n"]},"metadata":{},"sourceType":"module"}