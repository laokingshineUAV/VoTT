{"ast":null,"code":"/*!\n * Application Insights JavaScript SDK - Core, 2.0.0-beta.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n!function (e, t) {\n  \"object\" == typeof exports && \"undefined\" != typeof module ? t(exports) : \"function\" == typeof define && define.amd ? define([\"exports\"], t) : t((e.Microsoft = e.Microsoft || {}, e.Microsoft.ApplicationInsights = {}));\n}(this, function (a) {\n  \"use strict\";\n\n  var e,\n      t = {\n    Unknown: 0,\n    NonRetryableStatus: 1,\n    InvalidEvent: 2,\n    SizeLimitExceeded: 3,\n    KillSwitch: 4,\n    QueueFull: 5\n  },\n      f = function () {\n    function e() {}\n\n    return e.isNullOrUndefined = function (e) {\n      return null == e;\n    }, e.newGuid = function () {\n      return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(i, function (e) {\n        var t = 16 * Math.random() | 0;\n        return (\"x\" === e ? t : 3 & t | 8).toString(16);\n      });\n    }, e;\n  }(),\n      i = /[xy]/g,\n      u = function () {\n    function e() {\n      this.listeners = [];\n    }\n\n    return e.prototype.addNotificationListener = function (e) {\n      this.listeners.push(e);\n    }, e.prototype.removeNotificationListener = function (e) {\n      for (var t = this.listeners.indexOf(e); -1 < t;) {\n        this.listeners.splice(t, 1), t = this.listeners.indexOf(e);\n      }\n    }, e.prototype.eventsSent = function (t) {\n      for (var i = this, e = function e(_e) {\n        n.listeners[_e].eventsSent && setTimeout(function () {\n          return i.listeners[_e].eventsSent(t);\n        }, 0);\n      }, n = this, o = 0; o < this.listeners.length; ++o) {\n        e(o);\n      }\n    }, e.prototype.eventsDiscarded = function (t, i) {\n      for (var n = this, e = function e(_e2) {\n        o.listeners[_e2].eventsDiscarded && setTimeout(function () {\n          return n.listeners[_e2].eventsDiscarded(t, i);\n        }, 0);\n      }, o = this, r = 0; r < this.listeners.length; ++r) {\n        e(r);\n      }\n    }, e;\n  }();\n\n  (e = a.LoggingSeverity || (a.LoggingSeverity = {}))[e.CRITICAL = 1] = \"CRITICAL\", e[e.WARNING = 2] = \"WARNING\";\n\n  var s = {\n    BrowserDoesNotSupportLocalStorage: 0,\n    BrowserCannotReadLocalStorage: 1,\n    BrowserCannotReadSessionStorage: 2,\n    BrowserCannotWriteLocalStorage: 3,\n    BrowserCannotWriteSessionStorage: 4,\n    BrowserFailedRemovalFromLocalStorage: 5,\n    BrowserFailedRemovalFromSessionStorage: 6,\n    CannotSendEmptyTelemetry: 7,\n    ClientPerformanceMathError: 8,\n    ErrorParsingAISessionCookie: 9,\n    ErrorPVCalc: 10,\n    ExceptionWhileLoggingError: 11,\n    FailedAddingTelemetryToBuffer: 12,\n    FailedMonitorAjaxAbort: 13,\n    FailedMonitorAjaxDur: 14,\n    FailedMonitorAjaxOpen: 15,\n    FailedMonitorAjaxRSC: 16,\n    FailedMonitorAjaxSend: 17,\n    FailedMonitorAjaxGetCorrelationHeader: 18,\n    FailedToAddHandlerForOnBeforeUnload: 19,\n    FailedToSendQueuedTelemetry: 20,\n    FailedToReportDataLoss: 21,\n    FlushFailed: 22,\n    MessageLimitPerPVExceeded: 23,\n    MissingRequiredFieldSpecification: 24,\n    NavigationTimingNotSupported: 25,\n    OnError: 26,\n    SessionRenewalDateIsZero: 27,\n    SenderNotInitialized: 28,\n    StartTrackEventFailed: 29,\n    StopTrackEventFailed: 30,\n    StartTrackFailed: 31,\n    StopTrackFailed: 32,\n    TelemetrySampledAndNotSent: 33,\n    TrackEventFailed: 34,\n    TrackExceptionFailed: 35,\n    TrackMetricFailed: 36,\n    TrackPVFailed: 37,\n    TrackPVFailedCalc: 38,\n    TrackTraceFailed: 39,\n    TransmissionFailed: 40,\n    FailedToSetStorageBuffer: 41,\n    FailedToRestoreStorageBuffer: 42,\n    InvalidBackendResponse: 43,\n    FailedToFixDepricatedValues: 44,\n    InvalidDurationValue: 45,\n    TelemetryEnvelopeInvalid: 46,\n    CreateEnvelopeError: 47,\n    CannotSerializeObject: 48,\n    CannotSerializeObjectNonSerializable: 49,\n    CircularReferenceDetected: 50,\n    ClearAuthContextFailed: 51,\n    ExceptionTruncated: 52,\n    IllegalCharsInName: 53,\n    ItemNotInArray: 54,\n    MaxAjaxPerPVExceeded: 55,\n    MessageTruncated: 56,\n    NameTooLong: 57,\n    SampleRateOutOfRange: 58,\n    SetAuthContextFailed: 59,\n    SetAuthContextFailedAccountName: 60,\n    StringValueTooLong: 61,\n    StartCalledMoreThanOnce: 62,\n    StopCalledWithoutStart: 63,\n    TelemetryInitializerFailed: 64,\n    TrackArgumentsNotSpecified: 65,\n    UrlTooLong: 66,\n    SessionStorageBufferFull: 67,\n    CannotAccessCookie: 68,\n    IdTooLong: 69\n  },\n      l = function () {\n    function r(e, t, i, n) {\n      void 0 === i && (i = !1), this.messageId = e, this.message = (i ? r.AiUserActionablePrefix : r.AiNonUserActionablePrefix) + e;\n      var o = (t ? \" message:\" + r.sanitizeDiagnosticText(t) : \"\") + (n ? \" props:\" + r.sanitizeDiagnosticText(JSON.stringify(n)) : \"\");\n      this.message += o;\n    }\n\n    return r.sanitizeDiagnosticText = function (e) {\n      return '\"' + e.replace(/\\\"/g, \"\") + '\"';\n    }, r.dataType = \"MessageData\", r.AiNonUserActionablePrefix = \"AI (Internal): \", r.AiUserActionablePrefix = \"AI: \", r;\n  }(),\n      g = function () {\n    function e(e) {\n      this.AIInternalMessagePrefix = \"AITR_\", this.enableDebugExceptions = function () {\n        return !1;\n      }, this.consoleLoggingLevel = function () {\n        return 1;\n      }, this.telemetryLoggingLevel = function () {\n        return 0;\n      }, this.maxInternalMessageLimit = function () {\n        return 25;\n      }, this.queue = [], this._messageCount = 0, this._messageLogged = {}, f.isNullOrUndefined(e) || (f.isNullOrUndefined(e.loggingLevelConsole) || (this.consoleLoggingLevel = function () {\n        return e.loggingLevelConsole;\n      }), f.isNullOrUndefined(e.loggingLevelTelemetry) || (this.telemetryLoggingLevel = function () {\n        return e.loggingLevelTelemetry;\n      }), f.isNullOrUndefined(e.maxMessageLimit) || (this.maxInternalMessageLimit = function () {\n        return e.maxMessageLimit;\n      }), f.isNullOrUndefined(e.enableDebugExceptions) || (this.enableDebugExceptions = function () {\n        return e.enableDebugExceptions;\n      }));\n    }\n\n    return e.prototype.throwInternal = function (e, t, i, n, o) {\n      void 0 === o && (o = !1);\n      var r = new l(t, i, o, n);\n      if (this.enableDebugExceptions()) throw r;\n\n      if (void 0 !== r && r && void 0 !== r.message) {\n        if (o) {\n          var s = +r.messageId;\n          (!this._messageLogged[s] || this.consoleLoggingLevel() >= a.LoggingSeverity.WARNING) && (this.warnToConsole(r.message), this._messageLogged[s] = !0);\n        } else this.consoleLoggingLevel() >= a.LoggingSeverity.WARNING && this.warnToConsole(r.message);\n\n        this.logInternalMessage(e, r);\n      }\n    }, e.prototype.warnToConsole = function (e) {\n      \"undefined\" != typeof console && console && (\"function\" == typeof console.warn ? console.warn(e) : \"function\" == typeof console.log && console.log(e));\n    }, e.prototype.resetInternalMessageCount = function () {\n      this._messageCount = 0, this._messageLogged = {};\n    }, e.prototype.logInternalMessage = function (e, t) {\n      if (!this._areInternalMessagesThrottled()) {\n        var i = !0,\n            n = this.AIInternalMessagePrefix + t.messageId;\n\n        if (this._messageLogged[n] ? i = !1 : this._messageLogged[n] = !0, i && (e <= this.telemetryLoggingLevel() && (this.queue.push(t), this._messageCount++), this._messageCount == this.maxInternalMessageLimit())) {\n          var o = \"Internal events throttle limit per PageView reached for this app.\",\n              r = new l(s.MessageLimitPerPVExceeded, o, !1);\n          this.queue.push(r), this.warnToConsole(o);\n        }\n      }\n    }, e.prototype._areInternalMessagesThrottled = function () {\n      return this._messageCount >= this.maxInternalMessageLimit();\n    }, e;\n  }(),\n      n = function () {\n    function e() {\n      this._isInitialized = !1, this._extensions = new Array(), this._channelController = new o();\n    }\n\n    return e.prototype.initialize = function (e, t) {\n      var i = this;\n      if (this._isInitialized) throw Error(\"Core should not be initialized more than once\");\n      if (!e || f.isNullOrUndefined(e.instrumentationKey)) throw Error(\"Please provide instrumentation key\");\n\n      if (this.config = e, this._notificationManager = new u(), this.config.extensions = f.isNullOrUndefined(this.config.extensions) ? [] : this.config.extensions, this.config.extensionConfig = f.isNullOrUndefined(this.config.extensionConfig) ? {} : this.config.extensionConfig, this.config.extensionConfig.NotificationManager = this._notificationManager, this.logger = new g(e), t.forEach(function (e) {\n        if (f.isNullOrUndefined(e.initialize)) throw Error(h);\n      }), 0 < this.config.extensions.length) {\n        var n = !0,\n            o = !1;\n        if (this.config.extensions.forEach(function (e) {\n          f.isNullOrUndefined(e) && (n = !1), e.priority > p && (o = !0);\n        }), !n) throw Error(h);\n        if (o) throw Error(d);\n      }\n\n      (s = this._extensions).push.apply(s, [this._channelController].concat(t, this.config.extensions)), this._extensions = this._extensions.sort(function (e, t) {\n        var i = e,\n            n = t,\n            o = typeof i.processTelemetry,\n            r = typeof n.processTelemetry;\n        return \"function\" == o && \"function\" == r ? i.priority - n.priority : \"function\" == o && \"function\" != r ? 1 : \"function\" != o && \"function\" == r ? -1 : void 0;\n      });\n      var r = {};\n\n      this._extensions.forEach(function (e) {\n        var t = e;\n        t && t.priority && (f.isNullOrUndefined(r[t.priority]) ? r[t.priority] = t.identifier : i.logger.warnToConsole(\"Two extensions have same priority\" + r[t.priority] + \", \" + t.identifier));\n      });\n\n      for (var s, a = -1, l = 0; l < this._extensions.length - 1; l++) {\n        var c = this._extensions[l];\n\n        if (!c || \"function\" == typeof c.processTelemetry) {\n          if (c.priority === p) {\n            a = l + 1;\n            break;\n          }\n\n          this._extensions[l].setNextPlugin(this._extensions[l + 1]);\n        }\n      }\n\n      if (this._channelController.initialize(this.config, this, this._extensions), this._extensions.forEach(function (e) {\n        e && e.priority < p && e.initialize(i.config, i, i._extensions);\n      }), a < this._extensions.length && this._extensions.splice(a), 0 === this.getTransmissionControls().length) throw new Error(\"No channels available\");\n      this._isInitialized = !0;\n    }, e.prototype.getTransmissionControls = function () {\n      return this._channelController.ChannelControls;\n    }, e.prototype.track = function (e) {\n      if (null === e) throw this._notifiyInvalidEvent(e), Error(\"Invalid telemetry item\");\n      if (e.baseData && !e.baseType) throw this._notifiyInvalidEvent(e), Error(\"Provide data.baseType for data.baseData\");\n      e.baseType || (e.baseType = \"EventData\"), e.iKey || (e.iKey = this.config.instrumentationKey), e.time || (e.time = new Date().toISOString()), f.isNullOrUndefined(e.ver) && (e.ver = \"4.0\"), this._validateTelmetryItem(e), this._updateSdkVersion(e);\n\n      for (var t = 0; t < this._extensions.length;) {\n        if (this._extensions[t].processTelemetry) {\n          this._extensions[t].processTelemetry(e);\n\n          break;\n        }\n\n        t++;\n      }\n    }, e.prototype.addNotificationListener = function (e) {\n      this._notificationManager.addNotificationListener(e);\n    }, e.prototype.removeNotificationListener = function (e) {\n      this._notificationManager.removeNotificationListener(e);\n    }, e.prototype.pollInternalLogs = function () {\n      var i = this,\n          e = this.config.diagnosticLogInterval;\n      return 0 < e || (e = 1e4), setInterval(function () {\n        var e = i.logger.queue;\n        e.forEach(function (e) {\n          var t = {\n            name: \"InternalMessageId: \" + e.messageId,\n            iKey: i.config.instrumentationKey,\n            time: new Date().toISOString(),\n            baseType: l.dataType,\n            baseData: {\n              message: e.message\n            }\n          };\n          i.track(t);\n        }), e.length = 0;\n      }, e);\n    }, e.prototype._validateTelmetryItem = function (e) {\n      if (f.isNullOrUndefined(e.name)) throw this._notifiyInvalidEvent(e), Error(\"telemetry name required\");\n      if (f.isNullOrUndefined(e.time)) throw this._notifiyInvalidEvent(e), Error(\"telemetry timestamp required\");\n      if (f.isNullOrUndefined(e.iKey)) throw this._notifiyInvalidEvent(e), Error(\"telemetry instrumentationKey required\");\n    }, e.prototype._updateSdkVersion = function (e) {\n      e.ext || (e.ext = {}), e.ext.sdk || (e.ext.sdk = {});\n\n      for (var t = \"\", i = 0; i < this._extensions.length; i++) {\n        var n = this._extensions[i];\n\n        if (n.identifier && n.version) {\n          var o = n.identifier + \":\" + n.version + \";\";\n          t = t.concat(o);\n        }\n      }\n\n      \"\" != t && (e.ext.sdk.libVer = t);\n    }, e.prototype._notifiyInvalidEvent = function (e) {\n      this._notificationManager.eventsDiscarded([e], t.InvalidEvent);\n    }, e;\n  }(),\n      o = function () {\n    function e() {\n      this.identifier = \"ChannelControllerPlugin\", this.priority = p;\n    }\n\n    return e.prototype.processTelemetry = function (t) {\n      this.channelQueue.forEach(function (e) {\n        0 < e.length && e[0].processTelemetry(t);\n      });\n    }, Object.defineProperty(e.prototype, \"ChannelControls\", {\n      get: function get() {\n        return this.channelQueue;\n      },\n      enumerable: !0,\n      configurable: !0\n    }), e.prototype.initialize = function (i, n, o) {\n      var r = this;\n\n      if (this.channelQueue = new Array(), i.channels) {\n        var s = void 0;\n        i.channels.forEach(function (e) {\n          if (e && 0 < e.length) {\n            if ((e = e.sort(function (e, t) {\n              return e.priority - t.priority;\n            })).forEach(function (e) {\n              e.priority < p && (s = e.identifier), e.initialize(i, n, o);\n            }), s) throw Error(c + s);\n\n            for (var t = 1; t < e.length; t++) {\n              e[t - 1].setNextPlugin(e[t]);\n            }\n\n            r.channelQueue.push(e);\n          }\n        });\n      }\n\n      for (var e = new Array(), t = 0; t < o.length; t++) {\n        var a = o[t];\n        a.priority > p && e.push(a);\n      }\n\n      if (0 < e.length) {\n        (e = e.sort(function (e, t) {\n          return e.priority - t.priority;\n        })).forEach(function (e) {\n          return e.initialize(i, n, o);\n        });\n\n        for (t = 1; t < e.length; t++) {\n          e[t - 1].setNextPlugin(e[t]);\n        }\n\n        this.channelQueue.push(e);\n      }\n    }, e;\n  }(),\n      h = \"Extensions must provide callback to initialize\",\n      d = \"Channels must be provided through config.channels only\",\n      p = 500,\n      c = \"Channel has invalid priority\";\n\n  a.MinChannelPriorty = 100, a.EventsDiscardedReason = t, a.AppInsightsCore = n, a.CoreUtils = f, a.NotificationManager = u, a.DiagnosticLogger = g, a._InternalLogMessage = l, a._InternalMessageId = s, Object.defineProperty(a, \"__esModule\", {\n    value: !0\n  });\n});","map":null,"metadata":{},"sourceType":"script"}