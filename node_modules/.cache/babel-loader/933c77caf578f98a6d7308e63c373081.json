{"ast":null,"code":"import _toConsumableArray from \"/home/jw/Documents/code/VoTT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/home/jw/Documents/code/VoTT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/jw/Documents/code/VoTT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/jw/Documents/code/VoTT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/jw/Documents/code/VoTT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/jw/Documents/code/VoTT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/jw/Documents/code/VoTT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/jw/Documents/code/VoTT/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/jw/Documents/code/VoTT/src/react/components/pages/connections/connectionForm.tsx\";\nimport React from \"react\";\nimport Form from \"react-jsonschema-form\";\nimport LocalFolderPicker from \"../../common/localFolderPicker/localFolderPicker\";\nimport { strings, addLocValues } from \"../../../../common/strings\";\nimport CustomFieldTemplate from \"../../common/customField/customFieldTemplate\";\nimport ConnectionProviderPicker from \"../../common/connectionProviderPicker/connectionProviderPicker\";\nimport { ProtectedInput } from \"../../common/protectedInput/protectedInput\";\nimport Checkbox from \"rc-checkbox\";\nimport \"rc-checkbox/assets/index.css\";\nimport { CustomWidget } from \"../../common/customField/customField\";\nimport { isBrowser } from \"../../../../common/hostProcess\"; // tslint:disable-next-line:no-var-requires\n\nvar formSchema = addLocValues(require(\"./connectionForm.json\")); // tslint:disable-next-line:no-var-requires\n\nvar uiSchema = addLocValues(require(\"./connectionForm.ui.json\"));\n/**\n * Properties for Connection form\n * @member connection - Form being viewed/edited\n * @member onSubmit - Function called upon form submission\n * @member onCancel - Function called upon cancellation of form\n */\n\n/**\n * Form for viewing, creating and editing connections\n */\nvar ConnectionForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ConnectionForm, _React$Component);\n\n  function ConnectionForm(_props, context) {\n    var _this;\n\n    _classCallCheck(this, ConnectionForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ConnectionForm).call(this, _props, context));\n    _this.widgets = {\n      localFolderPicker: LocalFolderPicker,\n      connectionProviderPicker: ConnectionProviderPicker,\n      protectedInput: ProtectedInput,\n      checkbox: CustomWidget(Checkbox, function (props) {\n        return {\n          checked: props.value,\n          onChange: function onChange(value) {\n            return props.onChange(value.target.checked);\n          },\n          disabled: props.disabled\n        };\n      })\n    };\n\n    _this.onFormChange = function (args) {\n      var providerType = args.formData.providerType;\n\n      if (providerType !== _this.state.providerName) {\n        _this.bindForm(args.formData, true);\n      } else {\n        _this.setState({\n          formData: args.formData\n        });\n      }\n    };\n\n    _this.state = {\n      classNames: [\"needs-validation\"],\n      formSchema: _objectSpread({}, formSchema),\n      uiSchema: _objectSpread({}, uiSchema),\n      providerName: _this.props.connection ? _this.props.connection.providerType : null,\n      formData: _this.props.connection\n    };\n\n    if (_this.props.connection) {\n      _this.bindForm(_this.props.connection);\n    }\n\n    _this.onFormCancel = _this.onFormCancel.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onFormValidate = _this.onFormValidate.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onFormChange = _this.onFormChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(ConnectionForm, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.connection !== this.props.connection) {\n        this.bindForm(this.props.connection);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"app-connections-page-detail m-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-plug fa-1x\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"px-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, strings.connections.settings)), React.createElement(\"div\", {\n        className: \"m-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, isBrowser() && this.state.providerName === \"bingImageSearch\" && React.createElement(\"div\", {\n        className: \"alert alert-warning\",\n        role: \"alert\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-exclamation-circle mr-1\",\n        \"aria-hidden\": \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }), strings.connections.imageCorsWarning), isBrowser() && this.state.providerName === \"azureBlobStorage\" && React.createElement(\"div\", {\n        className: \"alert alert-warning\",\n        role: \"alert\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-exclamation-circle mr-1\",\n        \"aria-hidden\": \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }), strings.formatString(strings.connections.blobCorsWarning, React.createElement(\"a\", {\n        href: \"https://aka.ms/blob-cors\",\n        target: \"_blank\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, strings.connections.azDocLinkText))), React.createElement(Form, {\n        className: this.state.classNames.join(\" \"),\n        showErrorList: false,\n        liveValidate: true,\n        noHtml5Validate: true,\n        FieldTemplate: CustomFieldTemplate,\n        validate: this.onFormValidate,\n        widgets: this.widgets,\n        schema: this.state.formSchema,\n        uiSchema: this.state.uiSchema,\n        formData: this.state.formData,\n        onChange: this.onFormChange,\n        onSubmit: function onSubmit(form) {\n          return _this2.props.onSubmit(form.formData);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-success mr-1\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, strings.connections.save), React.createElement(\"button\", {\n        className: \"btn btn-secondary btn-cancel\",\n        type: \"button\",\n        onClick: this.onFormCancel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, strings.common.cancel)))));\n    }\n  }, {\n    key: \"onFormValidate\",\n    value: function onFormValidate(connection, errors) {\n      if (connection.providerType === \"\") {\n        errors.providerType.addError(\"is a required property\");\n      }\n\n      if (this.state.classNames.indexOf(\"was-validated\") === -1) {\n        this.setState({\n          classNames: [].concat(_toConsumableArray(this.state.classNames), [\"was-validated\"])\n        });\n      }\n\n      return errors;\n    }\n  }, {\n    key: \"onFormCancel\",\n    value: function onFormCancel() {\n      if (this.props.onCancel) {\n        this.props.onCancel();\n      }\n    }\n  }, {\n    key: \"bindForm\",\n    value: function bindForm(connection) {\n      var resetProviderOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var providerType = connection ? connection.providerType : null;\n      var newFormSchema = this.state.formSchema;\n      var newUiSchema = this.state.uiSchema;\n\n      if (providerType) {\n        var providerSchema = addLocValues(require(\"../../../../providers/storage/\".concat(providerType, \".json\")));\n        var providerUiSchema = addLocValues(require(\"../../../../providers/storage/\".concat(providerType, \".ui.json\")));\n        newFormSchema = _objectSpread({}, formSchema);\n        newFormSchema.properties[\"providerOptions\"] = providerSchema;\n        newUiSchema = _objectSpread({}, uiSchema);\n        newUiSchema[\"providerOptions\"] = providerUiSchema;\n      } else {\n        newFormSchema = _objectSpread({}, formSchema);\n        delete newFormSchema.properties[\"providerOptions\"];\n        newUiSchema = _objectSpread({}, uiSchema);\n        delete newUiSchema[\"providerOptions\"];\n        resetProviderOptions = true;\n      }\n\n      var formData = _objectSpread({}, connection);\n\n      if (resetProviderOptions) {\n        formData.providerOptions = {};\n      }\n\n      this.setState({\n        providerName: providerType,\n        formSchema: newFormSchema,\n        uiSchema: newUiSchema,\n        formData: formData\n      });\n    }\n  }]);\n\n  return ConnectionForm;\n}(React.Component);\n\nexport { ConnectionForm as default };","map":{"version":3,"sources":["/home/jw/Documents/code/VoTT/src/react/components/pages/connections/connectionForm.tsx"],"names":["React","Form","LocalFolderPicker","strings","addLocValues","CustomFieldTemplate","ConnectionProviderPicker","ProtectedInput","Checkbox","CustomWidget","isBrowser","formSchema","require","uiSchema","ConnectionForm","props","context","widgets","localFolderPicker","connectionProviderPicker","protectedInput","checkbox","checked","value","onChange","target","disabled","onFormChange","args","providerType","formData","state","providerName","bindForm","setState","classNames","connection","onFormCancel","bind","onFormValidate","prevProps","connections","settings","imageCorsWarning","formatString","blobCorsWarning","azDocLinkText","join","form","onSubmit","save","common","cancel","errors","addError","indexOf","onCancel","resetProviderOptions","newFormSchema","newUiSchema","providerSchema","providerUiSchema","properties","providerOptions","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Form, { Widget, IChangeEvent, FormValidation } from \"react-jsonschema-form\";\nimport { IConnection } from \"../../../../models/applicationState\";\nimport LocalFolderPicker from \"../../common/localFolderPicker/localFolderPicker\";\nimport { strings, addLocValues } from \"../../../../common/strings\";\nimport CustomFieldTemplate from \"../../common/customField/customFieldTemplate\";\nimport ConnectionProviderPicker from \"../../common/connectionProviderPicker/connectionProviderPicker\";\nimport { ProtectedInput } from \"../../common/protectedInput/protectedInput\";\nimport Checkbox from \"rc-checkbox\";\nimport \"rc-checkbox/assets/index.css\";\nimport { CustomWidget } from \"../../common/customField/customField\";\nimport { isBrowser } from \"../../../../common/hostProcess\";\n// tslint:disable-next-line:no-var-requires\nconst formSchema = addLocValues(require(\"./connectionForm.json\"));\n// tslint:disable-next-line:no-var-requires\nconst uiSchema = addLocValues(require(\"./connectionForm.ui.json\"));\n\n/**\n * Properties for Connection form\n * @member connection - Form being viewed/edited\n * @member onSubmit - Function called upon form submission\n * @member onCancel - Function called upon cancellation of form\n */\nexport interface IConnectionFormProps extends React.Props<ConnectionForm> {\n    connection: IConnection;\n    onSubmit: (connection: IConnection) => void;\n    onCancel?: () => void;\n}\n\n/**\n * State for Connection Form\n * @member providerName - Name of connection provider\n * @member formSchema - JSON Form Schema\n * @member uiSchema - JSON Form UI Schema\n * @member formData - Current state of form data as a Connection\n * @member classNames - HTML Class names for form element\n */\nexport interface IConnectionFormState {\n    providerName: string;\n    formSchema: any;\n    uiSchema: any;\n    formData: IConnection;\n    classNames: string[];\n}\n\n/**\n * Form for viewing, creating and editing connections\n */\nexport default class ConnectionForm extends React.Component<IConnectionFormProps, IConnectionFormState> {\n    private widgets = {\n        localFolderPicker: (LocalFolderPicker as any) as Widget,\n        connectionProviderPicker: (ConnectionProviderPicker as any) as Widget,\n        protectedInput: (ProtectedInput as any) as Widget,\n        checkbox: CustomWidget(Checkbox, (props) => ({\n            checked: props.value,\n            onChange: (value) => props.onChange(value.target.checked),\n            disabled: props.disabled,\n        })),\n    };\n\n    constructor(props, context) {\n        super(props, context);\n\n        this.state = {\n            classNames: [\"needs-validation\"],\n            formSchema: { ...formSchema },\n            uiSchema: { ...uiSchema },\n            providerName: this.props.connection ? this.props.connection.providerType : null,\n            formData: this.props.connection,\n        };\n\n        if (this.props.connection) {\n            this.bindForm(this.props.connection);\n        }\n\n        this.onFormCancel = this.onFormCancel.bind(this);\n        this.onFormValidate = this.onFormValidate.bind(this);\n        this.onFormChange = this.onFormChange.bind(this);\n    }\n\n    public componentDidUpdate(prevProps: IConnectionFormProps) {\n        if (prevProps.connection !== this.props.connection) {\n            this.bindForm(this.props.connection);\n        }\n    }\n\n    public render() {\n        return (\n            <div className=\"app-connections-page-detail m-3\">\n                <h3>\n                    <i className=\"fas fa-plug fa-1x\"></i>\n                    <span className=\"px-2\">\n                        {strings.connections.settings}\n                    </span>\n                </h3>\n                <div className=\"m-3\">\n                    { isBrowser() && this.state.providerName === \"bingImageSearch\" &&\n                    <div className=\"alert alert-warning\" role=\"alert\">\n                        <i className=\"fas fa-exclamation-circle mr-1\" aria-hidden=\"true\"></i>\n                        { strings.connections.imageCorsWarning }\n                    </div>\n                    }\n                    { isBrowser() && this.state.providerName === \"azureBlobStorage\" &&\n                    <div className=\"alert alert-warning\" role=\"alert\">\n                        <i className=\"fas fa-exclamation-circle mr-1\" aria-hidden=\"true\"></i>\n                        { strings.formatString(\n                            strings.connections.blobCorsWarning,\n                            <a href=\"https://aka.ms/blob-cors\" target=\"_blank\">{strings.connections.azDocLinkText}</a>)\n                        }\n                    </div>\n                    }\n                    <Form\n                        className={this.state.classNames.join(\" \")}\n                        showErrorList={false}\n                        liveValidate={true}\n                        noHtml5Validate={true}\n                        FieldTemplate={CustomFieldTemplate}\n                        validate={this.onFormValidate}\n                        widgets={this.widgets}\n                        schema={this.state.formSchema}\n                        uiSchema={this.state.uiSchema}\n                        formData={this.state.formData}\n                        onChange={this.onFormChange}\n                        onSubmit={(form) => this.props.onSubmit(form.formData)}>\n                        <div>\n                            <button className=\"btn btn-success mr-1\" type=\"submit\">{strings.connections.save}</button>\n                            <button className=\"btn btn-secondary btn-cancel\"\n                                type=\"button\"\n                                onClick={this.onFormCancel}>{strings.common.cancel}</button>\n                        </div>\n                    </Form>\n                </div>\n            </div>\n        );\n    }\n\n    private onFormValidate(connection: IConnection, errors: FormValidation) {\n        if (connection.providerType === \"\") {\n            errors.providerType.addError(\"is a required property\");\n        }\n\n        if (this.state.classNames.indexOf(\"was-validated\") === -1) {\n            this.setState({\n                classNames: [...this.state.classNames, \"was-validated\"],\n            });\n        }\n\n        return errors;\n    }\n\n    private onFormChange = (args: IChangeEvent<IConnection>) => {\n        const providerType = args.formData.providerType;\n\n        if (providerType !== this.state.providerName) {\n            this.bindForm(args.formData, true);\n        } else {\n            this.setState({\n                formData: args.formData,\n            });\n        }\n    }\n\n    private onFormCancel() {\n        if (this.props.onCancel) {\n            this.props.onCancel();\n        }\n    }\n\n    private bindForm(connection: IConnection, resetProviderOptions: boolean = false) {\n        const providerType = connection ? connection.providerType : null;\n        let newFormSchema: any = this.state.formSchema;\n        let newUiSchema: any = this.state.uiSchema;\n\n        if (providerType) {\n            const providerSchema = addLocValues(require(`../../../../providers/storage/${providerType}.json`));\n            const providerUiSchema = addLocValues(require(`../../../../providers/storage/${providerType}.ui.json`));\n\n            newFormSchema = { ...formSchema };\n            newFormSchema.properties[\"providerOptions\"] = providerSchema;\n\n            newUiSchema = { ...uiSchema };\n            newUiSchema[\"providerOptions\"] = providerUiSchema;\n        } else {\n            newFormSchema = { ...formSchema };\n            delete newFormSchema.properties[\"providerOptions\"];\n\n            newUiSchema = { ...uiSchema };\n            delete newUiSchema[\"providerOptions\"];\n\n            resetProviderOptions = true;\n        }\n\n        const formData = { ...connection };\n        if (resetProviderOptions) {\n            formData.providerOptions = {};\n        }\n\n        this.setState({\n            providerName: providerType,\n            formSchema: newFormSchema,\n            uiSchema: newUiSchema,\n            formData,\n        });\n    }\n}\n"]},"metadata":{},"sourceType":"module"}