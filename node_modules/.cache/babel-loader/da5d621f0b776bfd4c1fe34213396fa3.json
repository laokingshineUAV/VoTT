{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar guard_1 = __importDefault(require(\"./guard\"));\n/**\n * Generates a random integer in provided range\n * @param min Lower bound of random number generation - INCLUSIVE\n * @param max Upper bound of random number generation - EXCLUSIVE\n */\n\n\nfunction randomIntInRange(min, max) {\n  if (min > max) {\n    throw new Error(\"min (\".concat(min, \") can\\\"t be bigger than max (\").concat(max, \")\"));\n  }\n\n  if (min === max) {\n    return min;\n  }\n\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min)) + min; // The maximum is exclusive and the minimum is inclusive\n}\n\nexports.randomIntInRange = randomIntInRange;\n/**\n * Common key codes used throughout application\n */\n\nexports.KeyCodes = {\n  comma: 188,\n  enter: 13,\n  backspace: 8,\n  ctrl: 17,\n  shift: 16,\n  tab: 9\n};\n/**\n * Generates a query string from the key/values of a JSON object\n * @param object The json object\n * @returns A value representing a URL compatible query string\n */\n\nfunction createQueryString(object) {\n  guard_1.default.null(object);\n  var parts = [];\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = Object.getOwnPropertyNames(object)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var key = _step.value;\n      parts.push(\"\".concat(key, \"=\").concat(encodeURIComponent(object[key])));\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return != null) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return parts.join(\"&\");\n}\n\nexports.createQueryString = createQueryString;","map":null,"metadata":{},"sourceType":"script"}