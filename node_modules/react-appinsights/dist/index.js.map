{"version":3,"file":"index.js","sources":["../node_modules/@microsoft/applicationinsights-common/dist-esm/Enums.js","../node_modules/@microsoft/applicationinsights-core-js/dist-esm/JavaScriptSDK/CoreUtils.js","../node_modules/@microsoft/applicationinsights-core-js/dist-esm/JavaScriptSDK.Enums/LoggingEnums.js","../node_modules/@microsoft/applicationinsights-core-js/dist-esm/JavaScriptSDK/AppInsightsCore.js","../node_modules/@microsoft/applicationinsights-common/dist-esm/Telemetry/Common/DataSanitizer.js","../node_modules/@microsoft/applicationinsights-common/dist-esm/Util.js","../node_modules/tslib/tslib.es6.js","../node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/DataPointType.js","../node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/Base.js","../node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/Data.js","../node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/Envelope.js","../node_modules/@microsoft/applicationinsights-common/dist-esm/Telemetry/Common/Envelope.js","../node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/Domain.js","../node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/EventData.js","../node_modules/@microsoft/applicationinsights-common/dist-esm/Telemetry/Event.js","../node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/StackFrame.js","../node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/ExceptionData.js","../node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/ExceptionDetails.js","../node_modules/@microsoft/applicationinsights-common/dist-esm/Telemetry/Exception.js","../node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/MetricData.js","../node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/DataPoint.js","../node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/SeverityLevel.js","../node_modules/@microsoft/applicationinsights-common/dist-esm/Telemetry/Common/DataPoint.js","../node_modules/@microsoft/applicationinsights-common/dist-esm/Telemetry/Metric.js","../node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/PageViewData.js","../node_modules/@microsoft/applicationinsights-common/dist-esm/Telemetry/PageView.js","../node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/RemoteDependencyData.js","../node_modules/@microsoft/applicationinsights-common/dist-esm/Telemetry/RemoteDependencyData.js","../node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/MessageData.js","../node_modules/@microsoft/applicationinsights-common/dist-esm/Telemetry/Trace.js","../node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/PageViewPerfData.js","../node_modules/@microsoft/applicationinsights-common/dist-esm/Telemetry/PageViewPerformance.js","../node_modules/@microsoft/applicationinsights-common/dist-esm/Telemetry/Common/Data.js","../node_modules/@microsoft/applicationinsights-common/dist-esm/applicationinsights-common.js","../dist-esm/src/ReactAI.js","../dist-esm/src/withAITracking.js"],"sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n/**\r\n* Type of storage to differentiate between local storage and session storage\r\n*/\r\nexport var StorageType;\r\n(function (StorageType) {\r\n    StorageType[StorageType[\"LocalStorage\"] = 0] = \"LocalStorage\";\r\n    StorageType[StorageType[\"SessionStorage\"] = 1] = \"SessionStorage\";\r\n})(StorageType || (StorageType = {}));\r\n/**\r\n * Enum is used in aiDataContract to describe how fields are serialized.\r\n * For instance: (Fieldtype.Required | FieldType.Array) will mark the field as required and indicate it's an array\r\n */\r\nexport var FieldType;\r\n(function (FieldType) {\r\n    FieldType[FieldType[\"Default\"] = 0] = \"Default\";\r\n    FieldType[FieldType[\"Required\"] = 1] = \"Required\";\r\n    FieldType[FieldType[\"Array\"] = 2] = \"Array\";\r\n    FieldType[FieldType[\"Hidden\"] = 4] = \"Hidden\";\r\n})(FieldType || (FieldType = {}));\r\n;\r\n//# sourceMappingURL=Enums.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\"use strict\";\r\nvar CoreUtils = /** @class */ (function () {\r\n    function CoreUtils() {\r\n    }\r\n    CoreUtils.isNullOrUndefined = function (input) {\r\n        return input === null || input === undefined;\r\n    };\r\n    /**\r\n* Creates a new GUID.\r\n* @return {string} A GUID.\r\n*/\r\n    CoreUtils.newGuid = function () {\r\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(GuidRegex, function (c) {\r\n            // tslint:disable-next-line:insecure-random\r\n            var r = (Math.random() * 16 | 0), v = (c === 'x' ? r : r & 0x3 | 0x8);\r\n            return v.toString(16);\r\n        });\r\n    };\r\n    return CoreUtils;\r\n}());\r\nexport { CoreUtils };\r\nvar GuidRegex = /[xy]/g;\r\n//# sourceMappingURL=CoreUtils.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nexport var LoggingSeverity;\r\n(function (LoggingSeverity) {\r\n    /**\r\n     * Error will be sent as internal telemetry\r\n     */\r\n    LoggingSeverity[LoggingSeverity[\"CRITICAL\"] = 1] = \"CRITICAL\";\r\n    /**\r\n     * Error will NOT be sent as internal telemetry, and will only be shown in browser console\r\n     */\r\n    LoggingSeverity[LoggingSeverity[\"WARNING\"] = 2] = \"WARNING\";\r\n})(LoggingSeverity || (LoggingSeverity = {}));\r\n/**\r\n * Internal message ID. Please create a new one for every conceptually different message. Please keep alphabetically ordered\r\n */\r\nexport var _InternalMessageId = {\r\n    // Non user actionable\r\n    BrowserDoesNotSupportLocalStorage: 0,\r\n    BrowserCannotReadLocalStorage: 1,\r\n    BrowserCannotReadSessionStorage: 2,\r\n    BrowserCannotWriteLocalStorage: 3,\r\n    BrowserCannotWriteSessionStorage: 4,\r\n    BrowserFailedRemovalFromLocalStorage: 5,\r\n    BrowserFailedRemovalFromSessionStorage: 6,\r\n    CannotSendEmptyTelemetry: 7,\r\n    ClientPerformanceMathError: 8,\r\n    ErrorParsingAISessionCookie: 9,\r\n    ErrorPVCalc: 10,\r\n    ExceptionWhileLoggingError: 11,\r\n    FailedAddingTelemetryToBuffer: 12,\r\n    FailedMonitorAjaxAbort: 13,\r\n    FailedMonitorAjaxDur: 14,\r\n    FailedMonitorAjaxOpen: 15,\r\n    FailedMonitorAjaxRSC: 16,\r\n    FailedMonitorAjaxSend: 17,\r\n    FailedMonitorAjaxGetCorrelationHeader: 18,\r\n    FailedToAddHandlerForOnBeforeUnload: 19,\r\n    FailedToSendQueuedTelemetry: 20,\r\n    FailedToReportDataLoss: 21,\r\n    FlushFailed: 22,\r\n    MessageLimitPerPVExceeded: 23,\r\n    MissingRequiredFieldSpecification: 24,\r\n    NavigationTimingNotSupported: 25,\r\n    OnError: 26,\r\n    SessionRenewalDateIsZero: 27,\r\n    SenderNotInitialized: 28,\r\n    StartTrackEventFailed: 29,\r\n    StopTrackEventFailed: 30,\r\n    StartTrackFailed: 31,\r\n    StopTrackFailed: 32,\r\n    TelemetrySampledAndNotSent: 33,\r\n    TrackEventFailed: 34,\r\n    TrackExceptionFailed: 35,\r\n    TrackMetricFailed: 36,\r\n    TrackPVFailed: 37,\r\n    TrackPVFailedCalc: 38,\r\n    TrackTraceFailed: 39,\r\n    TransmissionFailed: 40,\r\n    FailedToSetStorageBuffer: 41,\r\n    FailedToRestoreStorageBuffer: 42,\r\n    InvalidBackendResponse: 43,\r\n    FailedToFixDepricatedValues: 44,\r\n    InvalidDurationValue: 45,\r\n    TelemetryEnvelopeInvalid: 46,\r\n    CreateEnvelopeError: 47,\r\n    // User actionable\r\n    CannotSerializeObject: 48,\r\n    CannotSerializeObjectNonSerializable: 49,\r\n    CircularReferenceDetected: 50,\r\n    ClearAuthContextFailed: 51,\r\n    ExceptionTruncated: 52,\r\n    IllegalCharsInName: 53,\r\n    ItemNotInArray: 54,\r\n    MaxAjaxPerPVExceeded: 55,\r\n    MessageTruncated: 56,\r\n    NameTooLong: 57,\r\n    SampleRateOutOfRange: 58,\r\n    SetAuthContextFailed: 59,\r\n    SetAuthContextFailedAccountName: 60,\r\n    StringValueTooLong: 61,\r\n    StartCalledMoreThanOnce: 62,\r\n    StopCalledWithoutStart: 63,\r\n    TelemetryInitializerFailed: 64,\r\n    TrackArgumentsNotSpecified: 65,\r\n    UrlTooLong: 66,\r\n    SessionStorageBufferFull: 67,\r\n    CannotAccessCookie: 68,\r\n    IdTooLong: 69,\r\n};\r\n//# sourceMappingURL=LoggingEnums.js.map","import { EventsDiscardedReason } from \"../JavaScriptSDK.Enums/EventsDiscardedReason\";\r\nimport { CoreUtils } from \"./CoreUtils\";\r\nimport { NotificationManager } from \"./NotificationManager\";\r\nimport { _InternalLogMessage, DiagnosticLogger } from \"./DiagnosticLogger\";\r\n\"use strict\";\r\nvar AppInsightsCore = /** @class */ (function () {\r\n    function AppInsightsCore() {\r\n        this._isInitialized = false;\r\n        this._extensions = new Array();\r\n        this._channelController = new ChannelController();\r\n    }\r\n    AppInsightsCore.prototype.initialize = function (config, extensions) {\r\n        var _this = this;\r\n        // Make sure core is only initialized once\r\n        if (this._isInitialized) {\r\n            throw Error(\"Core should not be initialized more than once\");\r\n        }\r\n        if (!config || CoreUtils.isNullOrUndefined(config.instrumentationKey)) {\r\n            throw Error(\"Please provide instrumentation key\");\r\n        }\r\n        this.config = config;\r\n        this._notificationManager = new NotificationManager();\r\n        this.config.extensions = CoreUtils.isNullOrUndefined(this.config.extensions) ? [] : this.config.extensions;\r\n        // add notification to the extensions in the config so other plugins can access it\r\n        this.config.extensionConfig = CoreUtils.isNullOrUndefined(this.config.extensionConfig) ? {} : this.config.extensionConfig;\r\n        this.config.extensionConfig.NotificationManager = this._notificationManager;\r\n        this.logger = new DiagnosticLogger(config);\r\n        // Initial validation\r\n        extensions.forEach(function (extension) {\r\n            if (CoreUtils.isNullOrUndefined(extension.initialize)) {\r\n                throw Error(validationError);\r\n            }\r\n        });\r\n        if (this.config.extensions.length > 0) {\r\n            var isValid_1 = true;\r\n            var containsChannels_1 = false;\r\n            this.config.extensions.forEach(function (item) {\r\n                if (CoreUtils.isNullOrUndefined(item)) {\r\n                    isValid_1 = false;\r\n                }\r\n                if (item.priority > ChannelControllerPriority) {\r\n                    containsChannels_1 = true;\r\n                }\r\n            });\r\n            if (!isValid_1) {\r\n                throw Error(validationError);\r\n            }\r\n            if (containsChannels_1) {\r\n                throw Error(validationErrorInExt);\r\n            }\r\n        }\r\n        // Initial validation complete\r\n        // Concat all available extensions before sorting by priority\r\n        (_a = this._extensions).push.apply(_a, [this._channelController].concat(extensions, this.config.extensions));\r\n        this._extensions = this._extensions.sort(function (a, b) {\r\n            var extA = a;\r\n            var extB = b;\r\n            var typeExtA = typeof extA.processTelemetry;\r\n            var typeExtB = typeof extB.processTelemetry;\r\n            if (typeExtA === 'function' && typeExtB === 'function') {\r\n                return extA.priority - extB.priority;\r\n            }\r\n            if (typeExtA === 'function' && typeExtB !== 'function') {\r\n                // keep non telemetryplugin specific extensions at start\r\n                return 1;\r\n            }\r\n            if (typeExtA !== 'function' && typeExtB === 'function') {\r\n                return -1;\r\n            }\r\n        });\r\n        // sort complete\r\n        // Check if any two extensions have the same priority, then warn to console\r\n        var priority = {};\r\n        this._extensions.forEach(function (ext) {\r\n            var t = ext;\r\n            if (t && t.priority) {\r\n                if (!CoreUtils.isNullOrUndefined(priority[t.priority])) {\r\n                    _this.logger.warnToConsole(\"Two extensions have same priority\" + priority[t.priority] + \", \" + t.identifier);\r\n                }\r\n                else {\r\n                    priority[t.priority] = t.identifier; // set a value\r\n                }\r\n            }\r\n        });\r\n        var c = -1;\r\n        // Set next plugin for all until channel controller\r\n        for (var idx = 0; idx < this._extensions.length - 1; idx++) {\r\n            var curr = (this._extensions[idx]);\r\n            if (curr && typeof curr.processTelemetry !== 'function') {\r\n                // these are initialized only, allowing an entry point for extensions to be initialized when SDK initializes\r\n                continue;\r\n            }\r\n            if (curr.priority === ChannelControllerPriority) {\r\n                c = idx + 1;\r\n                break; // channel controller will set remaining pipeline\r\n            }\r\n            this._extensions[idx].setNextPlugin(this._extensions[idx + 1]); // set next plugin\r\n        }\r\n        // initialize channel controller first, this will initialize all channel plugins\r\n        this._channelController.initialize(this.config, this, this._extensions);\r\n        // initialize remaining regular plugins\r\n        this._extensions.forEach(function (ext) {\r\n            var e = ext;\r\n            if (e && e.priority < ChannelControllerPriority) {\r\n                ext.initialize(_this.config, _this, _this._extensions); // initialize\r\n            }\r\n        });\r\n        // Remove sender channels from main list\r\n        if (c < this._extensions.length) {\r\n            this._extensions.splice(c);\r\n        }\r\n        if (this.getTransmissionControls().length === 0) {\r\n            throw new Error(\"No channels available\");\r\n        }\r\n        this._isInitialized = true;\r\n        var _a;\r\n    };\r\n    AppInsightsCore.prototype.getTransmissionControls = function () {\r\n        return this._channelController.ChannelControls;\r\n    };\r\n    AppInsightsCore.prototype.track = function (telemetryItem) {\r\n        if (telemetryItem === null) {\r\n            this._notifiyInvalidEvent(telemetryItem);\r\n            // throw error\r\n            throw Error(\"Invalid telemetry item\");\r\n        }\r\n        if (telemetryItem.baseData && !telemetryItem.baseType) {\r\n            this._notifiyInvalidEvent(telemetryItem);\r\n            throw Error(\"Provide data.baseType for data.baseData\");\r\n        }\r\n        if (!telemetryItem.baseType) {\r\n            // Hard coded from Common::Event.ts::Event.dataType\r\n            telemetryItem.baseType = \"EventData\";\r\n        }\r\n        if (!telemetryItem.iKey) {\r\n            // setup default iKey if not passed in\r\n            telemetryItem.iKey = this.config.instrumentationKey;\r\n        }\r\n        if (!telemetryItem.time) {\r\n            // add default timestamp if not passed in\r\n            telemetryItem.time = new Date().toISOString();\r\n        }\r\n        if (CoreUtils.isNullOrUndefined(telemetryItem.ver)) {\r\n            // CommonSchema 4.0\r\n            telemetryItem.ver = \"4.0\";\r\n        }\r\n        // do basic validation before sending it through the pipeline\r\n        this._validateTelmetryItem(telemetryItem);\r\n        this._updateSdkVersion(telemetryItem);\r\n        // invoke any common telemetry processors before sending through pipeline\r\n        var i = 0;\r\n        while (i < this._extensions.length) {\r\n            if (this._extensions[i].processTelemetry) {\r\n                this._extensions[i].processTelemetry(telemetryItem); // pass on to first extension that can support processing\r\n                break;\r\n            }\r\n            i++;\r\n        }\r\n    };\r\n    /**\r\n     * Adds a notification listener. The SDK calls methods on the listener when an appropriate notification is raised.\r\n     * The added plugins must raise notifications. If the plugins do not implement the notifications, then no methods will be\r\n     * called.\r\n     * @param {INotificationListener} listener - An INotificationListener object.\r\n     */\r\n    AppInsightsCore.prototype.addNotificationListener = function (listener) {\r\n        this._notificationManager.addNotificationListener(listener);\r\n    };\r\n    /**\r\n     * Removes all instances of the listener.\r\n     * @param {INotificationListener} listener - INotificationListener to remove.\r\n     */\r\n    AppInsightsCore.prototype.removeNotificationListener = function (listener) {\r\n        this._notificationManager.removeNotificationListener(listener);\r\n    };\r\n    /**\r\n     * Periodically check logger.queue for\r\n     */\r\n    AppInsightsCore.prototype.pollInternalLogs = function () {\r\n        var _this = this;\r\n        var interval = this.config.diagnosticLogInterval;\r\n        if (!(interval > 0)) {\r\n            interval = 10000;\r\n        }\r\n        return setInterval(function () {\r\n            var queue = _this.logger.queue;\r\n            queue.forEach(function (logMessage) {\r\n                var item = {\r\n                    name: \"InternalMessageId: \" + logMessage.messageId,\r\n                    iKey: _this.config.instrumentationKey,\r\n                    time: new Date().toISOString(),\r\n                    baseType: _InternalLogMessage.dataType,\r\n                    baseData: { message: logMessage.message }\r\n                };\r\n                _this.track(item);\r\n            });\r\n            queue.length = 0;\r\n        }, interval);\r\n    };\r\n    AppInsightsCore.prototype._validateTelmetryItem = function (telemetryItem) {\r\n        if (CoreUtils.isNullOrUndefined(telemetryItem.name)) {\r\n            this._notifiyInvalidEvent(telemetryItem);\r\n            throw Error(\"telemetry name required\");\r\n        }\r\n        if (CoreUtils.isNullOrUndefined(telemetryItem.time)) {\r\n            this._notifiyInvalidEvent(telemetryItem);\r\n            throw Error(\"telemetry timestamp required\");\r\n        }\r\n        if (CoreUtils.isNullOrUndefined(telemetryItem.iKey)) {\r\n            this._notifiyInvalidEvent(telemetryItem);\r\n            throw Error(\"telemetry instrumentationKey required\");\r\n        }\r\n    };\r\n    AppInsightsCore.prototype._updateSdkVersion = function (telemetryItem) {\r\n        if (!telemetryItem.ext) {\r\n            telemetryItem.ext = {};\r\n        }\r\n        if (!telemetryItem.ext.sdk) {\r\n            telemetryItem.ext.sdk = {};\r\n        }\r\n        var version = \"\";\r\n        for (var i = 0; i < this._extensions.length; i++) {\r\n            var ext = this._extensions[i];\r\n            if (ext.identifier && ext.version) {\r\n                var str = ext.identifier + \":\" + ext.version + \";\";\r\n                version = version.concat(str);\r\n            }\r\n        }\r\n        if (version != \"\") {\r\n            telemetryItem.ext.sdk['libVer'] = version;\r\n        }\r\n    };\r\n    AppInsightsCore.prototype._notifiyInvalidEvent = function (telemetryItem) {\r\n        this._notificationManager.eventsDiscarded([telemetryItem], EventsDiscardedReason.InvalidEvent);\r\n    };\r\n    return AppInsightsCore;\r\n}());\r\nexport { AppInsightsCore };\r\nvar ChannelController = /** @class */ (function () {\r\n    function ChannelController() {\r\n        this.identifier = \"ChannelControllerPlugin\";\r\n        this.priority = ChannelControllerPriority; // in reserved range 100 to 200\r\n    }\r\n    ChannelController.prototype.processTelemetry = function (item) {\r\n        this.channelQueue.forEach(function (queues) {\r\n            // pass on to first item in queue\r\n            if (queues.length > 0) {\r\n                queues[0].processTelemetry(item);\r\n            }\r\n        });\r\n    };\r\n    Object.defineProperty(ChannelController.prototype, \"ChannelControls\", {\r\n        get: function () {\r\n            return this.channelQueue;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ChannelController.prototype.initialize = function (config, core, extensions) {\r\n        var _this = this;\r\n        this.channelQueue = new Array();\r\n        if (config.channels) {\r\n            var invalidChannelIdentifier_1 = undefined;\r\n            config.channels.forEach(function (queue) {\r\n                if (queue && queue.length > 0) {\r\n                    queue = queue.sort(function (a, b) {\r\n                        return a.priority - b.priority;\r\n                    });\r\n                    // Initialize each plugin\r\n                    queue.forEach(function (queueItem) {\r\n                        if (queueItem.priority < ChannelControllerPriority) {\r\n                            invalidChannelIdentifier_1 = queueItem.identifier;\r\n                        }\r\n                        queueItem.initialize(config, core, extensions);\r\n                    });\r\n                    if (invalidChannelIdentifier_1) {\r\n                        throw Error(ChannelValidationMessage + invalidChannelIdentifier_1);\r\n                    }\r\n                    for (var i = 1; i < queue.length; i++) {\r\n                        queue[i - 1].setNextPlugin(queue[i]); // setup processing chain\r\n                    }\r\n                    _this.channelQueue.push(queue);\r\n                }\r\n            });\r\n        }\r\n        var arr = new Array();\r\n        for (var i = 0; i < extensions.length; i++) {\r\n            var plugin = extensions[i];\r\n            if (plugin.priority > ChannelControllerPriority) {\r\n                arr.push(plugin);\r\n            }\r\n        }\r\n        if (arr.length > 0) {\r\n            // sort if not sorted\r\n            arr = arr.sort(function (a, b) {\r\n                return a.priority - b.priority;\r\n            });\r\n            // Initialize each plugin\r\n            arr.forEach(function (queueItem) { return queueItem.initialize(config, core, extensions); });\r\n            // setup next plugin\r\n            for (var i = 1; i < arr.length; i++) {\r\n                arr[i - 1].setNextPlugin(arr[i]);\r\n            }\r\n            this.channelQueue.push(arr);\r\n        }\r\n    };\r\n    return ChannelController;\r\n}());\r\nvar validationError = \"Extensions must provide callback to initialize\";\r\nvar validationErrorInExt = \"Channels must be provided through config.channels only\";\r\nvar ChannelControllerPriority = 500;\r\nvar ChannelValidationMessage = \"Channel has invalid priority\";\r\n//# sourceMappingURL=AppInsightsCore.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { LoggingSeverity, _InternalMessageId } from '@microsoft/applicationinsights-core-js';\r\nvar DataSanitizer = /** @class */ (function () {\r\n    function DataSanitizer() {\r\n    }\r\n    DataSanitizer.sanitizeKeyAndAddUniqueness = function (logger, key, map) {\r\n        var origLength = key.length;\r\n        var field = DataSanitizer.sanitizeKey(logger, key);\r\n        // validation truncated the length.  We need to add uniqueness\r\n        if (field.length !== origLength) {\r\n            var i = 0;\r\n            var uniqueField = field;\r\n            while (map[uniqueField] !== undefined) {\r\n                i++;\r\n                uniqueField = field.substring(0, DataSanitizer.MAX_NAME_LENGTH - 3) + DataSanitizer.padNumber(i);\r\n            }\r\n            field = uniqueField;\r\n        }\r\n        return field;\r\n    };\r\n    DataSanitizer.sanitizeKey = function (logger, name) {\r\n        if (name) {\r\n            // Remove any leading or trailing whitepace\r\n            name = DataSanitizer.trim(name.toString());\r\n            // truncate the string to 150 chars\r\n            if (name.length > DataSanitizer.MAX_NAME_LENGTH) {\r\n                name = name.substring(0, DataSanitizer.MAX_NAME_LENGTH);\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.NameTooLong, \"name is too long.  It has been truncated to \" + DataSanitizer.MAX_NAME_LENGTH + \" characters.\", { name: name }, true);\r\n            }\r\n        }\r\n        return name;\r\n    };\r\n    DataSanitizer.sanitizeString = function (logger, value, maxLength) {\r\n        if (maxLength === void 0) { maxLength = DataSanitizer.MAX_STRING_LENGTH; }\r\n        if (value) {\r\n            maxLength = maxLength ? maxLength : DataSanitizer.MAX_STRING_LENGTH; // in case default parameters dont work\r\n            value = DataSanitizer.trim(value);\r\n            if (value.toString().length > maxLength) {\r\n                value = value.toString().substring(0, maxLength);\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.StringValueTooLong, \"string value is too long. It has been truncated to \" + maxLength + \" characters.\", { value: value }, true);\r\n            }\r\n        }\r\n        return value;\r\n    };\r\n    DataSanitizer.sanitizeUrl = function (logger, url) {\r\n        return DataSanitizer.sanitizeInput(logger, url, DataSanitizer.MAX_URL_LENGTH, _InternalMessageId.UrlTooLong);\r\n    };\r\n    DataSanitizer.sanitizeMessage = function (logger, message) {\r\n        if (message) {\r\n            if (message.length > DataSanitizer.MAX_MESSAGE_LENGTH) {\r\n                message = message.substring(0, DataSanitizer.MAX_MESSAGE_LENGTH);\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.MessageTruncated, \"message is too long, it has been truncated to \" + DataSanitizer.MAX_MESSAGE_LENGTH + \" characters.\", { message: message }, true);\r\n            }\r\n        }\r\n        return message;\r\n    };\r\n    DataSanitizer.sanitizeException = function (logger, exception) {\r\n        if (exception) {\r\n            if (exception.length > DataSanitizer.MAX_EXCEPTION_LENGTH) {\r\n                exception = exception.substring(0, DataSanitizer.MAX_EXCEPTION_LENGTH);\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.ExceptionTruncated, \"exception is too long, it has been truncated to \" + DataSanitizer.MAX_EXCEPTION_LENGTH + \" characters.\", { exception: exception }, true);\r\n            }\r\n        }\r\n        return exception;\r\n    };\r\n    DataSanitizer.sanitizeProperties = function (logger, properties) {\r\n        if (properties) {\r\n            var tempProps = {};\r\n            for (var prop in properties) {\r\n                var value = DataSanitizer.sanitizeString(logger, properties[prop], DataSanitizer.MAX_PROPERTY_LENGTH);\r\n                prop = DataSanitizer.sanitizeKeyAndAddUniqueness(logger, prop, tempProps);\r\n                tempProps[prop] = value;\r\n            }\r\n            properties = tempProps;\r\n        }\r\n        return properties;\r\n    };\r\n    DataSanitizer.sanitizeMeasurements = function (logger, measurements) {\r\n        if (measurements) {\r\n            var tempMeasurements = {};\r\n            for (var measure in measurements) {\r\n                var value = measurements[measure];\r\n                measure = DataSanitizer.sanitizeKeyAndAddUniqueness(logger, measure, tempMeasurements);\r\n                tempMeasurements[measure] = value;\r\n            }\r\n            measurements = tempMeasurements;\r\n        }\r\n        return measurements;\r\n    };\r\n    DataSanitizer.sanitizeId = function (logger, id) {\r\n        return id ? DataSanitizer.sanitizeInput(logger, id, DataSanitizer.MAX_ID_LENGTH, _InternalMessageId.IdTooLong).toString() : id;\r\n    };\r\n    DataSanitizer.sanitizeInput = function (logger, input, maxLength, _msgId) {\r\n        if (input) {\r\n            input = DataSanitizer.trim(input);\r\n            if (input.length > maxLength) {\r\n                input = input.substring(0, maxLength);\r\n                logger.throwInternal(LoggingSeverity.WARNING, _msgId, \"input is too long, it has been truncated to \" + maxLength + \" characters.\", { data: input }, true);\r\n            }\r\n        }\r\n        return input;\r\n    };\r\n    DataSanitizer.padNumber = function (num) {\r\n        var s = \"00\" + num;\r\n        return s.substr(s.length - 3);\r\n    };\r\n    /**\r\n     * helper method to trim strings (IE8 does not implement String.prototype.trim)\r\n     */\r\n    DataSanitizer.trim = function (str) {\r\n        if (typeof str !== \"string\")\r\n            return str;\r\n        return str.replace(/^\\s+|\\s+$/g, \"\");\r\n    };\r\n    /**\r\n    * Max length allowed for custom names.\r\n    */\r\n    DataSanitizer.MAX_NAME_LENGTH = 150;\r\n    /**\r\n     * Max length allowed for Id field in page views.\r\n     */\r\n    DataSanitizer.MAX_ID_LENGTH = 128;\r\n    /**\r\n     * Max length allowed for custom values.\r\n     */\r\n    DataSanitizer.MAX_PROPERTY_LENGTH = 8192;\r\n    /**\r\n     * Max length allowed for names\r\n     */\r\n    DataSanitizer.MAX_STRING_LENGTH = 1024;\r\n    /**\r\n     * Max length allowed for url.\r\n     */\r\n    DataSanitizer.MAX_URL_LENGTH = 2048;\r\n    /**\r\n     * Max length allowed for messages.\r\n     */\r\n    DataSanitizer.MAX_MESSAGE_LENGTH = 32768;\r\n    /**\r\n     * Max length allowed for exceptions.\r\n     */\r\n    DataSanitizer.MAX_EXCEPTION_LENGTH = 32768;\r\n    return DataSanitizer;\r\n}());\r\nexport { DataSanitizer };\r\n//# sourceMappingURL=DataSanitizer.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { StorageType } from \"./Enums\";\r\nimport { CoreUtils, _InternalMessageId, LoggingSeverity } from \"@microsoft/applicationinsights-core-js\";\r\nimport { RequestHeaders } from \"./RequestResponseHeaders\";\r\nimport { DataSanitizer } from \"./Telemetry/Common/DataSanitizer\";\r\nvar Util = /** @class */ (function () {\r\n    function Util() {\r\n    }\r\n    /*\r\n     * Force the SDK not to use local and session storage\r\n    */\r\n    Util.disableStorage = function () {\r\n        Util._canUseLocalStorage = false;\r\n        Util._canUseSessionStorage = false;\r\n    };\r\n    /**\r\n     * Gets the localStorage object if available\r\n     * @return {Storage} - Returns the storage object if available else returns null\r\n     */\r\n    Util._getLocalStorageObject = function () {\r\n        if (Util.canUseLocalStorage()) {\r\n            return Util._getVerifiedStorageObject(StorageType.LocalStorage);\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Tests storage object (localStorage or sessionStorage) to verify that it is usable\r\n     * More details here: https://mathiasbynens.be/notes/localstorage-pattern\r\n     * @param storageType Type of storage\r\n     * @return {Storage} Returns storage object verified that it is usable\r\n     */\r\n    Util._getVerifiedStorageObject = function (storageType) {\r\n        var storage = null;\r\n        var fail;\r\n        var uid;\r\n        try {\r\n            if (typeof window === 'undefined') {\r\n                return null;\r\n            }\r\n            uid = new Date;\r\n            storage = storageType === StorageType.LocalStorage ? window.localStorage : window.sessionStorage;\r\n            storage.setItem(uid, uid);\r\n            fail = storage.getItem(uid) != uid;\r\n            storage.removeItem(uid);\r\n            if (fail) {\r\n                storage = null;\r\n            }\r\n        }\r\n        catch (exception) {\r\n            storage = null;\r\n        }\r\n        return storage;\r\n    };\r\n    /**\r\n     *  Checks if endpoint URL is application insights internal injestion service URL.\r\n     *\r\n     *  @param endpointUrl Endpoint URL to check.\r\n     *  @returns {boolean} True if if endpoint URL is application insights internal injestion service URL.\r\n     */\r\n    Util.isInternalApplicationInsightsEndpoint = function (endpointUrl) {\r\n        return Util._internalEndpoints.indexOf(endpointUrl.toLowerCase()) !== -1;\r\n    };\r\n    /**\r\n     *  Check if the browser supports local storage.\r\n     *\r\n     *  @returns {boolean} True if local storage is supported.\r\n     */\r\n    Util.canUseLocalStorage = function () {\r\n        if (Util._canUseLocalStorage === undefined) {\r\n            Util._canUseLocalStorage = !!Util._getVerifiedStorageObject(StorageType.LocalStorage);\r\n        }\r\n        return Util._canUseLocalStorage;\r\n    };\r\n    /**\r\n     *  Get an object from the browser's local storage\r\n     *\r\n     *  @param {string} name - the name of the object to get from storage\r\n     *  @returns {string} The contents of the storage object with the given name. Null if storage is not supported.\r\n     */\r\n    Util.getStorage = function (logger, name) {\r\n        var storage = Util._getLocalStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                return storage.getItem(name);\r\n            }\r\n            catch (e) {\r\n                Util._canUseLocalStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserCannotReadLocalStorage, \"Browser failed read of local storage. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     *  Set the contents of an object in the browser's local storage\r\n     *\r\n     *  @param {string} name - the name of the object to set in storage\r\n     *  @param {string} data - the contents of the object to set in storage\r\n     *  @returns {boolean} True if the storage object could be written.\r\n     */\r\n    Util.setStorage = function (logger, name, data) {\r\n        var storage = Util._getLocalStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                storage.setItem(name, data);\r\n                return true;\r\n            }\r\n            catch (e) {\r\n                Util._canUseLocalStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserCannotWriteLocalStorage, \"Browser failed write to local storage. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     *  Remove an object from the browser's local storage\r\n     *\r\n     *  @param {string} name - the name of the object to remove from storage\r\n     *  @returns {boolean} True if the storage object could be removed.\r\n     */\r\n    Util.removeStorage = function (logger, name) {\r\n        var storage = Util._getLocalStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                storage.removeItem(name);\r\n                return true;\r\n            }\r\n            catch (e) {\r\n                Util._canUseLocalStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserFailedRemovalFromLocalStorage, \"Browser failed removal of local storage item. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * Gets the sessionStorage object if available\r\n     * @return {Storage} - Returns the storage object if available else returns null\r\n     */\r\n    Util._getSessionStorageObject = function () {\r\n        if (Util.canUseSessionStorage()) {\r\n            return Util._getVerifiedStorageObject(StorageType.SessionStorage);\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     *  Check if the browser supports session storage.\r\n     *\r\n     *  @returns {boolean} True if session storage is supported.\r\n     */\r\n    Util.canUseSessionStorage = function () {\r\n        if (Util._canUseSessionStorage === undefined) {\r\n            Util._canUseSessionStorage = !!Util._getVerifiedStorageObject(StorageType.SessionStorage);\r\n        }\r\n        return Util._canUseSessionStorage;\r\n    };\r\n    /**\r\n     *  Gets the list of session storage keys\r\n     *\r\n     *  @returns {string[]} List of session storage keys\r\n     */\r\n    Util.getSessionStorageKeys = function () {\r\n        var keys = [];\r\n        if (Util.canUseSessionStorage()) {\r\n            for (var key in window.sessionStorage) {\r\n                keys.push(key);\r\n            }\r\n        }\r\n        return keys;\r\n    };\r\n    /**\r\n     *  Get an object from the browser's session storage\r\n     *\r\n     *  @param {string} name - the name of the object to get from storage\r\n     *  @returns {string} The contents of the storage object with the given name. Null if storage is not supported.\r\n     */\r\n    Util.getSessionStorage = function (logger, name) {\r\n        var storage = Util._getSessionStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                return storage.getItem(name);\r\n            }\r\n            catch (e) {\r\n                Util._canUseSessionStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserCannotReadSessionStorage, \"Browser failed read of session storage. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     *  Set the contents of an object in the browser's session storage\r\n     *\r\n     *  @param {string} name - the name of the object to set in storage\r\n     *  @param {string} data - the contents of the object to set in storage\r\n     *  @returns {boolean} True if the storage object could be written.\r\n     */\r\n    Util.setSessionStorage = function (logger, name, data) {\r\n        var storage = Util._getSessionStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                storage.setItem(name, data);\r\n                return true;\r\n            }\r\n            catch (e) {\r\n                Util._canUseSessionStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserCannotWriteSessionStorage, \"Browser failed write to session storage. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     *  Remove an object from the browser's session storage\r\n     *\r\n     *  @param {string} name - the name of the object to remove from storage\r\n     *  @returns {boolean} True if the storage object could be removed.\r\n     */\r\n    Util.removeSessionStorage = function (logger, name) {\r\n        var storage = Util._getSessionStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                storage.removeItem(name);\r\n                return true;\r\n            }\r\n            catch (e) {\r\n                Util._canUseSessionStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserFailedRemovalFromSessionStorage, \"Browser failed removal of session storage item. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /*\r\n     * Force the SDK not to store and read any data from cookies\r\n     */\r\n    Util.disableCookies = function () {\r\n        Util._canUseCookies = false;\r\n    };\r\n    /*\r\n     * helper method to tell if document.cookie object is available\r\n     */\r\n    Util.canUseCookies = function (logger) {\r\n        if (Util._canUseCookies === undefined) {\r\n            Util._canUseCookies = false;\r\n            try {\r\n                Util._canUseCookies = Util.document.cookie !== undefined;\r\n            }\r\n            catch (e) {\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.CannotAccessCookie, \"Cannot access document.cookie - \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n            ;\r\n        }\r\n        return Util._canUseCookies;\r\n    };\r\n    /**\r\n     * helper method to set userId and sessionId cookie\r\n     */\r\n    Util.setCookie = function (logger, name, value, domain) {\r\n        var domainAttrib = \"\";\r\n        var secureAttrib = \"\";\r\n        if (domain) {\r\n            domainAttrib = \";domain=\" + domain;\r\n        }\r\n        if (Util.document.location && Util.document.location.protocol === \"https:\") {\r\n            secureAttrib = \";secure\";\r\n        }\r\n        if (Util.canUseCookies(logger)) {\r\n            Util.document.cookie = name + \"=\" + value + domainAttrib + \";path=/\" + secureAttrib;\r\n        }\r\n    };\r\n    Util.stringToBoolOrDefault = function (str, defaultValue) {\r\n        if (defaultValue === void 0) { defaultValue = false; }\r\n        if (str === undefined || str === null) {\r\n            return defaultValue;\r\n        }\r\n        return str.toString().toLowerCase() === \"true\";\r\n    };\r\n    /**\r\n     * helper method to access userId and sessionId cookie\r\n     */\r\n    Util.getCookie = function (logger, name) {\r\n        if (!Util.canUseCookies(logger)) {\r\n            return;\r\n        }\r\n        var value = \"\";\r\n        if (name && name.length) {\r\n            var cookieName = name + \"=\";\r\n            var cookies = Util.document.cookie.split(\";\");\r\n            for (var i = 0; i < cookies.length; i++) {\r\n                var cookie = cookies[i];\r\n                cookie = Util.trim(cookie);\r\n                if (cookie && cookie.indexOf(cookieName) === 0) {\r\n                    value = cookie.substring(cookieName.length, cookies[i].length);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return value;\r\n    };\r\n    /**\r\n     * Deletes a cookie by setting it's expiration time in the past.\r\n     * @param name - The name of the cookie to delete.\r\n     */\r\n    Util.deleteCookie = function (logger, name) {\r\n        if (Util.canUseCookies(logger)) {\r\n            // Setting the expiration date in the past immediately removes the cookie\r\n            Util.document.cookie = name + \"=;path=/;expires=Thu, 01 Jan 1970 00:00:01 GMT;\";\r\n        }\r\n    };\r\n    /**\r\n     * helper method to trim strings (IE8 does not implement String.prototype.trim)\r\n     */\r\n    Util.trim = function (str) {\r\n        if (typeof str !== \"string\")\r\n            return str;\r\n        return str.replace(/^\\s+|\\s+$/g, \"\");\r\n    };\r\n    /**\r\n     * generate random id string\r\n     */\r\n    Util.newId = function () {\r\n        var base64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\r\n        var result = \"\";\r\n        // tslint:disable-next-line:insecure-random\r\n        var random = Math.random() * 1073741824; //5 symbols in base64, almost maxint\r\n        while (random > 0) {\r\n            var char = base64chars.charAt(random % 64);\r\n            result += char;\r\n            random = Math.floor(random / 64);\r\n        }\r\n        return result;\r\n    };\r\n    /**\r\n     * Check if an object is of type Array\r\n     */\r\n    Util.isArray = function (obj) {\r\n        return Object.prototype.toString.call(obj) === \"[object Array]\";\r\n    };\r\n    /**\r\n     * Check if an object is of type Error\r\n     */\r\n    Util.isError = function (obj) {\r\n        return Object.prototype.toString.call(obj) === \"[object Error]\";\r\n    };\r\n    /**\r\n     * Check if an object is of type Date\r\n     */\r\n    Util.isDate = function (obj) {\r\n        return Object.prototype.toString.call(obj) === \"[object Date]\";\r\n    };\r\n    /**\r\n     * Convert a date to I.S.O. format in IE8\r\n     */\r\n    Util.toISOStringForIE8 = function (date) {\r\n        if (Util.isDate(date)) {\r\n            if (Date.prototype.toISOString) {\r\n                return date.toISOString();\r\n            }\r\n            else {\r\n                var pad = function (num) {\r\n                    var r = String(num);\r\n                    if (r.length === 1) {\r\n                        r = \"0\" + r;\r\n                    }\r\n                    return r;\r\n                };\r\n                return date.getUTCFullYear()\r\n                    + \"-\" + pad(date.getUTCMonth() + 1)\r\n                    + \"-\" + pad(date.getUTCDate())\r\n                    + \"T\" + pad(date.getUTCHours())\r\n                    + \":\" + pad(date.getUTCMinutes())\r\n                    + \":\" + pad(date.getUTCSeconds())\r\n                    + \".\" + String((date.getUTCMilliseconds() / 1000).toFixed(3)).slice(2, 5)\r\n                    + \"Z\";\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Gets IE version if we are running on IE, or null otherwise\r\n     */\r\n    Util.getIEVersion = function (userAgentStr) {\r\n        if (userAgentStr === void 0) { userAgentStr = null; }\r\n        var myNav = userAgentStr ? userAgentStr.toLowerCase() : navigator.userAgent.toLowerCase();\r\n        return (myNav.indexOf('msie') != -1) ? parseInt(myNav.split('msie')[1]) : null;\r\n    };\r\n    /**\r\n     * Convert ms to c# time span format\r\n     */\r\n    Util.msToTimeSpan = function (totalms) {\r\n        if (isNaN(totalms) || totalms < 0) {\r\n            totalms = 0;\r\n        }\r\n        totalms = Math.round(totalms);\r\n        var ms = \"\" + totalms % 1000;\r\n        var sec = \"\" + Math.floor(totalms / 1000) % 60;\r\n        var min = \"\" + Math.floor(totalms / (1000 * 60)) % 60;\r\n        var hour = \"\" + Math.floor(totalms / (1000 * 60 * 60)) % 24;\r\n        var days = Math.floor(totalms / (1000 * 60 * 60 * 24));\r\n        ms = ms.length === 1 ? \"00\" + ms : ms.length === 2 ? \"0\" + ms : ms;\r\n        sec = sec.length < 2 ? \"0\" + sec : sec;\r\n        min = min.length < 2 ? \"0\" + min : min;\r\n        hour = hour.length < 2 ? \"0\" + hour : hour;\r\n        return (days > 0 ? days + \".\" : \"\") + hour + \":\" + min + \":\" + sec + \".\" + ms;\r\n    };\r\n    /**\r\n    * Checks if error has no meaningful data inside. Ususally such errors are received by window.onerror when error\r\n    * happens in a script from other domain (cross origin, CORS).\r\n    */\r\n    Util.isCrossOriginError = function (message, url, lineNumber, columnNumber, error) {\r\n        return (message === \"Script error.\" || message === \"Script error\") && !error;\r\n    };\r\n    /**\r\n    * Returns string representation of an object suitable for diagnostics logging.\r\n    */\r\n    Util.dump = function (object) {\r\n        var objectTypeDump = Object.prototype.toString.call(object);\r\n        var propertyValueDump = JSON.stringify(object);\r\n        if (objectTypeDump === \"[object Error]\") {\r\n            propertyValueDump = \"{ stack: '\" + object.stack + \"', message: '\" + object.message + \"', name: '\" + object.name + \"'\";\r\n        }\r\n        return objectTypeDump + propertyValueDump;\r\n    };\r\n    /**\r\n    * Returns the name of object if it's an Error. Otherwise, returns empty string.\r\n    */\r\n    Util.getExceptionName = function (object) {\r\n        var objectTypeDump = Object.prototype.toString.call(object);\r\n        if (objectTypeDump === \"[object Error]\") {\r\n            return object.name;\r\n        }\r\n        return \"\";\r\n    };\r\n    /**\r\n     * Adds an event handler for the specified event\r\n     * @param eventName {string} - The name of the event\r\n     * @param callback {any} - The callback function that needs to be executed for the given event\r\n     * @return {boolean} - true if the handler was successfully added\r\n     */\r\n    Util.addEventHandler = function (eventName, callback) {\r\n        if (typeof window === 'undefined' || !window || typeof eventName !== 'string' || typeof callback !== 'function') {\r\n            return false;\r\n        }\r\n        // Create verb for the event\r\n        var verbEventName = 'on' + eventName;\r\n        // check if addEventListener is available\r\n        if (window.addEventListener) {\r\n            window.addEventListener(eventName, callback, false);\r\n        }\r\n        else if (window[\"attachEvent\"]) {\r\n            window[\"attachEvent\"](verbEventName, callback);\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     * Tells if a browser supports a Beacon API\r\n     */\r\n    Util.IsBeaconApiSupported = function () {\r\n        return ('sendBeacon' in navigator && navigator.sendBeacon);\r\n    };\r\n    Util.document = typeof document !== \"undefined\" ? document : {};\r\n    Util._canUseCookies = undefined;\r\n    Util._canUseLocalStorage = undefined;\r\n    Util._canUseSessionStorage = undefined;\r\n    // listing only non-geo specific locations \r\n    Util._internalEndpoints = [\r\n        \"https://dc.services.visualstudio.com/v2/track\",\r\n        \"https://breeze.aimon.applicationinsights.io/v2/track\",\r\n        \"https://dc-int.services.visualstudio.com/v2/track\"\r\n    ];\r\n    Util.NotSpecified = \"not_specified\";\r\n    return Util;\r\n}());\r\nexport { Util };\r\nvar UrlHelper = /** @class */ (function () {\r\n    function UrlHelper() {\r\n    }\r\n    UrlHelper.parseUrl = function (url) {\r\n        if (!UrlHelper.htmlAnchorElement) {\r\n            UrlHelper.htmlAnchorElement = !!UrlHelper.document.createElement ? UrlHelper.document.createElement('a') : {};\r\n        }\r\n        UrlHelper.htmlAnchorElement.href = url;\r\n        return UrlHelper.htmlAnchorElement;\r\n    };\r\n    UrlHelper.getAbsoluteUrl = function (url) {\r\n        var result;\r\n        var a = UrlHelper.parseUrl(url);\r\n        if (a) {\r\n            result = a.href;\r\n        }\r\n        return result;\r\n    };\r\n    UrlHelper.getPathName = function (url) {\r\n        var result;\r\n        var a = UrlHelper.parseUrl(url);\r\n        if (a) {\r\n            result = a.pathname;\r\n        }\r\n        return result;\r\n    };\r\n    UrlHelper.getCompleteUrl = function (method, absoluteUrl) {\r\n        if (method) {\r\n            return method.toUpperCase() + \" \" + absoluteUrl;\r\n        }\r\n        else {\r\n            return absoluteUrl;\r\n        }\r\n    };\r\n    UrlHelper.document = typeof document !== \"undefined\" ? document : {};\r\n    return UrlHelper;\r\n}());\r\nexport { UrlHelper };\r\nvar CorrelationIdHelper = /** @class */ (function () {\r\n    function CorrelationIdHelper() {\r\n    }\r\n    /**\r\n    * Checks if a request url is not on a excluded domain list and if it is safe to add correlation headers\r\n    */\r\n    CorrelationIdHelper.canIncludeCorrelationHeader = function (config, requestUrl, currentHost) {\r\n        if (config && config.disableCorrelationHeaders) {\r\n            return false;\r\n        }\r\n        if (!requestUrl) {\r\n            return false;\r\n        }\r\n        var requestHost = UrlHelper.parseUrl(requestUrl).host.toLowerCase();\r\n        if ((!config || !config.enableCorsCorrelation) && requestHost !== currentHost) {\r\n            return false;\r\n        }\r\n        var excludedDomains = config && config.correlationHeaderExcludedDomains;\r\n        if (!excludedDomains || excludedDomains.length == 0) {\r\n            return true;\r\n        }\r\n        for (var i = 0; i < excludedDomains.length; i++) {\r\n            var regex = new RegExp(excludedDomains[i].toLowerCase().replace(/\\./g, \"\\.\").replace(/\\*/g, \".*\"));\r\n            if (regex.test(requestHost)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n    * Combines target appId and target role name from response header.\r\n    */\r\n    CorrelationIdHelper.getCorrelationContext = function (responseHeader) {\r\n        if (responseHeader) {\r\n            var correlationId = CorrelationIdHelper.getCorrelationContextValue(responseHeader, RequestHeaders.requestContextTargetKey);\r\n            if (correlationId && correlationId !== CorrelationIdHelper.correlationIdPrefix) {\r\n                return correlationId;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n    * Gets key from correlation response header\r\n    */\r\n    CorrelationIdHelper.getCorrelationContextValue = function (responseHeader, key) {\r\n        if (responseHeader) {\r\n            var keyValues = responseHeader.split(\",\");\r\n            for (var i = 0; i < keyValues.length; ++i) {\r\n                var keyValue = keyValues[i].split(\"=\");\r\n                if (keyValue.length == 2 && keyValue[0] == key) {\r\n                    return keyValue[1];\r\n                }\r\n            }\r\n        }\r\n    };\r\n    CorrelationIdHelper.correlationIdPrefix = \"cid-v1:\";\r\n    return CorrelationIdHelper;\r\n}());\r\nexport { CorrelationIdHelper };\r\nvar AjaxHelper = /** @class */ (function () {\r\n    function AjaxHelper() {\r\n    }\r\n    AjaxHelper.ParseDependencyPath = function (logger, absoluteUrl, method, commandName) {\r\n        var target, name = commandName, data = commandName;\r\n        if (absoluteUrl && absoluteUrl.length > 0) {\r\n            var parsedUrl = UrlHelper.parseUrl(absoluteUrl);\r\n            target = parsedUrl.host;\r\n            if (!name) {\r\n                if (parsedUrl.pathname != null) {\r\n                    var pathName = (parsedUrl.pathname.length === 0) ? \"/\" : parsedUrl.pathname;\r\n                    if (pathName.charAt(0) !== '/') {\r\n                        pathName = \"/\" + pathName;\r\n                    }\r\n                    data = parsedUrl.pathname;\r\n                    name = DataSanitizer.sanitizeString(logger, method ? method + \" \" + pathName : pathName);\r\n                }\r\n                else {\r\n                    name = DataSanitizer.sanitizeString(logger, absoluteUrl);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            target = commandName;\r\n            name = commandName;\r\n        }\r\n        return {\r\n            target: target,\r\n            name: name,\r\n            data: data\r\n        };\r\n    };\r\n    return AjaxHelper;\r\n}());\r\nexport { AjaxHelper };\r\n/**\r\n * A utility class that helps getting time related parameters\r\n */\r\nvar DateTimeUtils = /** @class */ (function () {\r\n    function DateTimeUtils() {\r\n    }\r\n    /**\r\n     * Get the number of milliseconds since 1970/01/01 in local timezone\r\n     */\r\n    DateTimeUtils.Now = (typeof window === 'undefined') ? function () { return new Date().getTime(); } :\r\n        (window.performance && window.performance.now && window.performance.timing) ?\r\n            function () {\r\n                return window.performance.now() + window.performance.timing.navigationStart;\r\n            }\r\n            :\r\n                function () {\r\n                    return new Date().getTime();\r\n                };\r\n    /**\r\n     * Gets duration between two timestamps\r\n     */\r\n    DateTimeUtils.GetDuration = function (start, end) {\r\n        var result = null;\r\n        if (start !== 0 && end !== 0 && !CoreUtils.isNullOrUndefined(start) && !CoreUtils.isNullOrUndefined(end)) {\r\n            result = end - start;\r\n        }\r\n        return result;\r\n    };\r\n    return DateTimeUtils;\r\n}());\r\nexport { DateTimeUtils };\r\n//# sourceMappingURL=Util.js.map","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\n/**\r\n * Type of the metric data measurement.\r\n */\r\nexport var DataPointType;\r\n(function (DataPointType) {\r\n    DataPointType[DataPointType[\"Measurement\"] = 0] = \"Measurement\";\r\n    DataPointType[DataPointType[\"Aggregation\"] = 1] = \"Aggregation\";\r\n})(DataPointType || (DataPointType = {}));\r\n//# sourceMappingURL=DataPointType.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\n/**\r\n     * Data struct to contain only C section with custom fields.\r\n     */\r\nvar Base = /** @class */ (function () {\r\n    function Base() {\r\n    }\r\n    return Base;\r\n}());\r\nexport { Base };\r\n//# sourceMappingURL=Base.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { Base } from './Base';\r\n/**\r\n * Data struct to contain both B and C sections.\r\n */\r\nvar Data = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Data, _super);\r\n    function Data() {\r\n        return _super.call(this) || this;\r\n    }\r\n    return Data;\r\n}(Base));\r\nexport { Data };\r\n//# sourceMappingURL=Data.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n/**\r\n * System variables for a telemetry item.\r\n */\r\nvar Envelope = /** @class */ (function () {\r\n    function Envelope() {\r\n        this.ver = 1;\r\n        this.sampleRate = 100.0;\r\n        this.tags = {};\r\n    }\r\n    return Envelope;\r\n}());\r\nexport { Envelope };\r\n//# sourceMappingURL=Envelope.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Envelope as AIEnvelope } from '../../Interfaces/Contracts/Generated/Envelope';\r\nimport { DataSanitizer } from './DataSanitizer';\r\nimport { FieldType } from '../../Enums';\r\nimport { Util } from '../../Util';\r\nvar Envelope = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Envelope, _super);\r\n    /**\r\n     * Constructs a new instance of telemetry data.\r\n     */\r\n    function Envelope(logger, data, name) {\r\n        var _this = _super.call(this) || this;\r\n        _this.name = DataSanitizer.sanitizeString(logger, name) || Util.NotSpecified;\r\n        _this.data = data;\r\n        _this.time = Util.toISOStringForIE8(new Date());\r\n        _this.aiDataContract = {\r\n            time: FieldType.Required,\r\n            iKey: FieldType.Required,\r\n            name: FieldType.Required,\r\n            sampleRate: function () {\r\n                return (_this.sampleRate == 100) ? FieldType.Hidden : FieldType.Required;\r\n            },\r\n            tags: FieldType.Required,\r\n            data: FieldType.Required\r\n        };\r\n        return _this;\r\n    }\r\n    return Envelope;\r\n}(AIEnvelope));\r\nexport { Envelope };\r\n//# sourceMappingURL=Envelope.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\n/**\r\n * The abstract common base of all domains.\r\n */\r\nvar Domain = /** @class */ (function () {\r\n    function Domain() {\r\n    }\r\n    return Domain;\r\n}());\r\nexport { Domain };\r\n//# sourceMappingURL=Domain.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { Domain } from './Domain';\r\n/**\r\n * Instances of Event represent structured event records that can be grouped and searched by their properties. Event data item also creates a metric of event count by name.\r\n */\r\nvar EventData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(EventData, _super);\r\n    function EventData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return EventData;\r\n}(Domain));\r\nexport { EventData };\r\n//# sourceMappingURL=EventData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { EventData } from '../Interfaces/Contracts/Generated/EventData';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { Util } from '../Util';\r\nvar Event = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Event, _super);\r\n    /**\r\n     * Constructs a new instance of the EventTelemetry object\r\n     */\r\n    function Event(logger, name, properties, measurements) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            name: FieldType.Required,\r\n            properties: FieldType.Default,\r\n            measurements: FieldType.Default\r\n        };\r\n        _this.name = DataSanitizer.sanitizeString(logger, name) || Util.NotSpecified;\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        _this.measurements = DataSanitizer.sanitizeMeasurements(logger, measurements);\r\n        return _this;\r\n    }\r\n    Event.envelopeType = \"Microsoft.ApplicationInsights.{0}.Event\";\r\n    Event.dataType = \"EventData\";\r\n    return Event;\r\n}(EventData));\r\nexport { Event };\r\n//# sourceMappingURL=Event.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\n/**\r\n * Stack frame information.\r\n */\r\nvar StackFrame = /** @class */ (function () {\r\n    function StackFrame() {\r\n    }\r\n    return StackFrame;\r\n}());\r\nexport { StackFrame };\r\n//# sourceMappingURL=StackFrame.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Domain } from './Domain';\r\n/**\r\n * An instance of Exception represents a handled or unhandled exception that occurred during execution of the monitored application.\r\n */\r\nvar ExceptionData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ExceptionData, _super);\r\n    function ExceptionData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.exceptions = [];\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return ExceptionData;\r\n}(Domain));\r\nexport { ExceptionData };\r\n//# sourceMappingURL=ExceptionData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n/**\r\n * Exception details of the exception in a chain.\r\n */\r\nvar ExceptionDetails = /** @class */ (function () {\r\n    function ExceptionDetails() {\r\n        this.hasFullStack = true;\r\n        this.parsedStack = [];\r\n    }\r\n    return ExceptionDetails;\r\n}());\r\nexport { ExceptionDetails };\r\n//# sourceMappingURL=ExceptionDetails.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { StackFrame } from '../Interfaces/Contracts/Generated/StackFrame';\r\nimport { ExceptionData } from '../Interfaces/Contracts/Generated/ExceptionData';\r\nimport { ExceptionDetails } from '../Interfaces/Contracts/Generated/ExceptionDetails';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { Util } from '../Util';\r\nvar Exception = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Exception, _super);\r\n    /**\r\n    * Constructs a new isntance of the ExceptionTelemetry object\r\n    */\r\n    function Exception(logger, exception, properties, measurements, severityLevel) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            exceptions: FieldType.Required,\r\n            severityLevel: FieldType.Default,\r\n            properties: FieldType.Default,\r\n            measurements: FieldType.Default\r\n        };\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        _this.measurements = DataSanitizer.sanitizeMeasurements(logger, measurements);\r\n        _this.exceptions = [new _ExceptionDetails(logger, exception)];\r\n        if (severityLevel) {\r\n            _this.severityLevel = severityLevel;\r\n        }\r\n        return _this;\r\n    }\r\n    /**\r\n    * Creates a simple exception with 1 stack frame. Useful for manual constracting of exception.\r\n    */\r\n    Exception.CreateSimpleException = function (message, typeName, assembly, fileName, details, line) {\r\n        return {\r\n            exceptions: [\r\n                {\r\n                    hasFullStack: true,\r\n                    message: message,\r\n                    stack: details,\r\n                    typeName: typeName\r\n                }\r\n            ]\r\n        };\r\n    };\r\n    Exception.envelopeType = \"Microsoft.ApplicationInsights.{0}.Exception\";\r\n    Exception.dataType = \"ExceptionData\";\r\n    return Exception;\r\n}(ExceptionData));\r\nexport { Exception };\r\nvar _ExceptionDetails = /** @class */ (function (_super) {\r\n    tslib_1.__extends(_ExceptionDetails, _super);\r\n    function _ExceptionDetails(logger, exception) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            id: FieldType.Default,\r\n            outerId: FieldType.Default,\r\n            typeName: FieldType.Required,\r\n            message: FieldType.Required,\r\n            hasFullStack: FieldType.Default,\r\n            stack: FieldType.Default,\r\n            parsedStack: FieldType.Array\r\n        };\r\n        _this.typeName = DataSanitizer.sanitizeString(logger, exception.name) || Util.NotSpecified;\r\n        _this.message = DataSanitizer.sanitizeMessage(logger, exception.message) || Util.NotSpecified;\r\n        var stack = exception[\"stack\"];\r\n        _this.parsedStack = _this.parseStack(stack);\r\n        _this.stack = DataSanitizer.sanitizeException(logger, stack);\r\n        _this.hasFullStack = Util.isArray(_this.parsedStack) && _this.parsedStack.length > 0;\r\n        return _this;\r\n    }\r\n    _ExceptionDetails.prototype.parseStack = function (stack) {\r\n        var parsedStack = undefined;\r\n        if (typeof stack === \"string\") {\r\n            var frames = stack.split('\\n');\r\n            parsedStack = [];\r\n            var level = 0;\r\n            var totalSizeInBytes = 0;\r\n            for (var i = 0; i <= frames.length; i++) {\r\n                var frame = frames[i];\r\n                if (_StackFrame.regex.test(frame)) {\r\n                    var parsedFrame = new _StackFrame(frames[i], level++);\r\n                    totalSizeInBytes += parsedFrame.sizeInBytes;\r\n                    parsedStack.push(parsedFrame);\r\n                }\r\n            }\r\n            // DP Constraint - exception parsed stack must be < 32KB\r\n            // remove frames from the middle to meet the threshold\r\n            var exceptionParsedStackThreshold = 32 * 1024;\r\n            if (totalSizeInBytes > exceptionParsedStackThreshold) {\r\n                var left = 0;\r\n                var right = parsedStack.length - 1;\r\n                var size = 0;\r\n                var acceptedLeft = left;\r\n                var acceptedRight = right;\r\n                while (left < right) {\r\n                    // check size\r\n                    var lSize = parsedStack[left].sizeInBytes;\r\n                    var rSize = parsedStack[right].sizeInBytes;\r\n                    size += lSize + rSize;\r\n                    if (size > exceptionParsedStackThreshold) {\r\n                        // remove extra frames from the middle\r\n                        var howMany = acceptedRight - acceptedLeft + 1;\r\n                        parsedStack.splice(acceptedLeft, howMany);\r\n                        break;\r\n                    }\r\n                    // update pointers\r\n                    acceptedLeft = left;\r\n                    acceptedRight = right;\r\n                    left++;\r\n                    right--;\r\n                }\r\n            }\r\n        }\r\n        return parsedStack;\r\n    };\r\n    return _ExceptionDetails;\r\n}(ExceptionDetails));\r\nvar _StackFrame = /** @class */ (function (_super) {\r\n    tslib_1.__extends(_StackFrame, _super);\r\n    function _StackFrame(frame, level) {\r\n        var _this = _super.call(this) || this;\r\n        _this.sizeInBytes = 0;\r\n        _this.aiDataContract = {\r\n            level: FieldType.Required,\r\n            method: FieldType.Required,\r\n            assembly: FieldType.Default,\r\n            fileName: FieldType.Default,\r\n            line: FieldType.Default\r\n        };\r\n        _this.level = level;\r\n        _this.method = \"<no_method>\";\r\n        _this.assembly = Util.trim(frame);\r\n        var matches = frame.match(_StackFrame.regex);\r\n        if (matches && matches.length >= 5) {\r\n            _this.method = Util.trim(matches[2]) || _this.method;\r\n            _this.fileName = Util.trim(matches[4]);\r\n            _this.line = parseInt(matches[5]) || 0;\r\n        }\r\n        _this.sizeInBytes += _this.method.length;\r\n        _this.sizeInBytes += _this.fileName.length;\r\n        _this.sizeInBytes += _this.assembly.length;\r\n        // todo: these might need to be removed depending on how the back-end settles on their size calculation\r\n        _this.sizeInBytes += _StackFrame.baseSize;\r\n        _this.sizeInBytes += _this.level.toString().length;\r\n        _this.sizeInBytes += _this.line.toString().length;\r\n        return _this;\r\n    }\r\n    // regex to match stack frames from ie/chrome/ff\r\n    // methodName=$2, fileName=$4, lineNo=$5, column=$6\r\n    _StackFrame.regex = /^([\\s]+at)?(.*?)(\\@|\\s\\(|\\s)([^\\(\\@\\n]+):([0-9]+):([0-9]+)(\\)?)$/;\r\n    _StackFrame.baseSize = 58; //'{\"method\":\"\",\"level\":,\"assembly\":\"\",\"fileName\":\"\",\"line\":}'.length\r\n    return _StackFrame;\r\n}(StackFrame));\r\nexport { _StackFrame };\r\n//# sourceMappingURL=Exception.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { Domain } from './Domain';\r\n/**\r\n * An instance of the Metric item is a list of measurements (single data points) and/or aggregations.\r\n */\r\nvar MetricData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(MetricData, _super);\r\n    function MetricData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.metrics = [];\r\n        _this.properties = {};\r\n        return _this;\r\n    }\r\n    return MetricData;\r\n}(Domain));\r\nexport { MetricData };\r\n//# sourceMappingURL=MetricData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { DataPointType } from './DataPointType';\r\n/**\r\n * Metric data single measurement.\r\n */\r\nvar DataPoint = /** @class */ (function () {\r\n    function DataPoint() {\r\n        this.kind = DataPointType.Measurement;\r\n    }\r\n    return DataPoint;\r\n}());\r\nexport { DataPoint };\r\n//# sourceMappingURL=DataPoint.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\n/**\r\n* Defines the level of severity for the event.\r\n*/\r\nexport var SeverityLevel;\r\n(function (SeverityLevel) {\r\n    SeverityLevel[SeverityLevel[\"Verbose\"] = 0] = \"Verbose\";\r\n    SeverityLevel[SeverityLevel[\"Information\"] = 1] = \"Information\";\r\n    SeverityLevel[SeverityLevel[\"Warning\"] = 2] = \"Warning\";\r\n    SeverityLevel[SeverityLevel[\"Error\"] = 3] = \"Error\";\r\n    SeverityLevel[SeverityLevel[\"Critical\"] = 4] = \"Critical\";\r\n})(SeverityLevel || (SeverityLevel = {}));\r\n//# sourceMappingURL=SeverityLevel.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { DataPoint as AIDataPoint } from '../../Interfaces/Contracts/Generated/DataPoint';\r\nimport { FieldType } from '../../Enums';\r\nvar DataPoint = /** @class */ (function (_super) {\r\n    tslib_1.__extends(DataPoint, _super);\r\n    function DataPoint() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * The data contract for serializing this object.\r\n         */\r\n        _this.aiDataContract = {\r\n            name: FieldType.Required,\r\n            kind: FieldType.Default,\r\n            value: FieldType.Required,\r\n            count: FieldType.Default,\r\n            min: FieldType.Default,\r\n            max: FieldType.Default,\r\n            stdDev: FieldType.Default\r\n        };\r\n        return _this;\r\n    }\r\n    return DataPoint;\r\n}(AIDataPoint));\r\nexport { DataPoint };\r\n//# sourceMappingURL=DataPoint.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { MetricData } from '../Interfaces/Contracts/Generated/MetricData';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { DataPoint } from './Common/DataPoint';\r\nimport { Util } from '../Util';\r\nvar Metric = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Metric, _super);\r\n    /**\r\n     * Constructs a new instance of the MetricTelemetry object\r\n     */\r\n    function Metric(logger, name, value, count, min, max, properties) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            metrics: FieldType.Required,\r\n            properties: FieldType.Default\r\n        };\r\n        var dataPoint = new DataPoint();\r\n        dataPoint.count = count > 0 ? count : undefined;\r\n        dataPoint.max = isNaN(max) || max === null ? undefined : max;\r\n        dataPoint.min = isNaN(min) || min === null ? undefined : min;\r\n        dataPoint.name = DataSanitizer.sanitizeString(logger, name) || Util.NotSpecified;\r\n        dataPoint.value = value;\r\n        _this.metrics = [dataPoint];\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        return _this;\r\n    }\r\n    Metric.envelopeType = \"Microsoft.ApplicationInsights.{0}.Metric\";\r\n    Metric.dataType = \"MetricData\";\r\n    return Metric;\r\n}(MetricData));\r\nexport { Metric };\r\n//# sourceMappingURL=Metric.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { EventData } from './EventData';\r\n/**\r\n * An instance of PageView represents a generic action on a page like a button click. It is also the base type for PageView.\r\n */\r\nvar PageViewData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PageViewData, _super);\r\n    function PageViewData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return PageViewData;\r\n}(EventData));\r\nexport { PageViewData };\r\n//# sourceMappingURL=PageViewData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { PageViewData } from '../Interfaces/Contracts/Generated/PageViewData';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { Util } from '../Util';\r\nvar PageView = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PageView, _super);\r\n    /**\r\n     * Constructs a new instance of the PageEventTelemetry object\r\n     */\r\n    function PageView(logger, name, url, durationMs, properties, measurements, id) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            name: FieldType.Default,\r\n            url: FieldType.Default,\r\n            duration: FieldType.Default,\r\n            properties: FieldType.Default,\r\n            measurements: FieldType.Default,\r\n            id: FieldType.Default\r\n        };\r\n        _this.id = DataSanitizer.sanitizeId(logger, id);\r\n        _this.url = DataSanitizer.sanitizeUrl(logger, url);\r\n        _this.name = DataSanitizer.sanitizeString(logger, name) || Util.NotSpecified;\r\n        if (!isNaN(durationMs)) {\r\n            _this.duration = Util.msToTimeSpan(durationMs);\r\n        }\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        _this.measurements = DataSanitizer.sanitizeMeasurements(logger, measurements);\r\n        return _this;\r\n    }\r\n    PageView.envelopeType = \"Microsoft.ApplicationInsights.{0}.Pageview\";\r\n    PageView.dataType = \"PageviewData\";\r\n    return PageView;\r\n}(PageViewData));\r\nexport { PageView };\r\n//# sourceMappingURL=PageView.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { Domain } from './Domain';\r\n/**\r\n * An instance of Remote Dependency represents an interaction of the monitored component with a remote component/service like SQL or an HTTP endpoint.\r\n */\r\nvar RemoteDependencyData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RemoteDependencyData, _super);\r\n    function RemoteDependencyData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.success = true;\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return RemoteDependencyData;\r\n}(Domain));\r\nexport { RemoteDependencyData };\r\n//# sourceMappingURL=RemoteDependencyData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { Util } from '../Util';\r\nimport { AjaxHelper } from '../Util';\r\nimport { RemoteDependencyData as GeneratedRemoteDependencyData } from '../Interfaces/Contracts/Generated/RemoteDependencyData';\r\nvar RemoteDependencyData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RemoteDependencyData, _super);\r\n    /**\r\n     * Constructs a new instance of the RemoteDependencyData object\r\n     */\r\n    function RemoteDependencyData(logger, id, absoluteUrl, commandName, value, success, resultCode, method, requestAPI, properties, measurements) {\r\n        if (requestAPI === void 0) { requestAPI = \"Ajax\"; }\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            id: FieldType.Required,\r\n            ver: FieldType.Required,\r\n            name: FieldType.Default,\r\n            resultCode: FieldType.Default,\r\n            duration: FieldType.Default,\r\n            success: FieldType.Default,\r\n            data: FieldType.Default,\r\n            target: FieldType.Default,\r\n            type: FieldType.Default,\r\n            properties: FieldType.Default,\r\n            measurements: FieldType.Default,\r\n            kind: FieldType.Default,\r\n            value: FieldType.Default,\r\n            count: FieldType.Default,\r\n            min: FieldType.Default,\r\n            max: FieldType.Default,\r\n            stdDev: FieldType.Default,\r\n            dependencyKind: FieldType.Default,\r\n            dependencySource: FieldType.Default,\r\n            commandName: FieldType.Default,\r\n            dependencyTypeName: FieldType.Default,\r\n        };\r\n        _this.id = id;\r\n        _this.duration = Util.msToTimeSpan(value);\r\n        _this.success = success;\r\n        _this.resultCode = resultCode + \"\";\r\n        _this.type = DataSanitizer.sanitizeString(logger, requestAPI);\r\n        var dependencyFields = AjaxHelper.ParseDependencyPath(logger, absoluteUrl, method, commandName);\r\n        _this.data = DataSanitizer.sanitizeUrl(logger, commandName) || dependencyFields.data; // get a value from hosturl if commandName not available\r\n        _this.target = dependencyFields.target;\r\n        _this.name = dependencyFields.name;\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        _this.measurements = DataSanitizer.sanitizeMeasurements(logger, measurements);\r\n        return _this;\r\n    }\r\n    RemoteDependencyData.envelopeType = \"Microsoft.ApplicationInsights.{0}.RemoteDependency\";\r\n    RemoteDependencyData.dataType = \"RemoteDependencyData\";\r\n    return RemoteDependencyData;\r\n}(GeneratedRemoteDependencyData));\r\nexport { RemoteDependencyData };\r\n//# sourceMappingURL=RemoteDependencyData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { Domain } from './Domain';\r\n/**\r\n * Instances of Message represent printf-like trace statements that are text-searched. Log4Net, NLog and other text-based log file entries are translated into intances of this type. The message does not have measurements.\r\n */\r\nvar MessageData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(MessageData, _super);\r\n    function MessageData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.properties = {};\r\n        return _this;\r\n    }\r\n    return MessageData;\r\n}(Domain));\r\nexport { MessageData };\r\n//# sourceMappingURL=MessageData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { MessageData } from '../Interfaces/Contracts/Generated/MessageData';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { Util } from '../Util';\r\nvar Trace = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Trace, _super);\r\n    /**\r\n     * Constructs a new instance of the TraceTelemetry object\r\n     */\r\n    function Trace(logger, message, severityLevel, properties) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            message: FieldType.Required,\r\n            severityLevel: FieldType.Default,\r\n            properties: FieldType.Default\r\n        };\r\n        message = message || Util.NotSpecified;\r\n        _this.message = DataSanitizer.sanitizeMessage(logger, message);\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        if (severityLevel) {\r\n            _this.severityLevel = severityLevel;\r\n        }\r\n        return _this;\r\n    }\r\n    Trace.envelopeType = \"Microsoft.ApplicationInsights.{0}.Message\";\r\n    Trace.dataType = \"MessageData\";\r\n    return Trace;\r\n}(MessageData));\r\nexport { Trace };\r\n//# sourceMappingURL=Trace.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { PageViewData } from './PageViewData';\r\n/**\r\n * An instance of PageViewPerf represents: a page view with no performance data, a page view with performance data, or just the performance data of an earlier page request.\r\n */\r\nvar PageViewPerfData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PageViewPerfData, _super);\r\n    function PageViewPerfData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return PageViewPerfData;\r\n}(PageViewData));\r\nexport { PageViewPerfData };\r\n//# sourceMappingURL=PageViewPerfData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { PageViewPerfData } from '../Interfaces/Contracts/Generated/PageViewPerfData';\r\nimport { FieldType } from '../Enums';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { Util } from '../Util';\r\nimport { _InternalMessageId, LoggingSeverity } from '@microsoft/applicationinsights-core-js';\r\nvar PageViewPerformance = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PageViewPerformance, _super);\r\n    /**\r\n     * Constructs a new instance of the PageEventTelemetry object\r\n     */\r\n    function PageViewPerformance(logger, name, url, unused, properties, measurements) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            name: FieldType.Default,\r\n            url: FieldType.Default,\r\n            duration: FieldType.Default,\r\n            perfTotal: FieldType.Default,\r\n            networkConnect: FieldType.Default,\r\n            sentRequest: FieldType.Default,\r\n            receivedResponse: FieldType.Default,\r\n            domProcessing: FieldType.Default,\r\n            properties: FieldType.Default,\r\n            measurements: FieldType.Default\r\n        };\r\n        _this.isValid = false;\r\n        /*\r\n         * http://www.w3.org/TR/navigation-timing/#processing-model\r\n         *  |-navigationStart\r\n         *  |             |-connectEnd\r\n         *  |             ||-requestStart\r\n         *  |             ||             |-responseStart\r\n         *  |             ||             |              |-responseEnd\r\n         *  |             ||             |              |\r\n         *  |             ||             |              |         |-loadEventEnd\r\n         *  |---network---||---request---|---response---|---dom---|\r\n         *  |--------------------------total----------------------|\r\n         */\r\n        var timing = PageViewPerformance.getPerformanceTiming();\r\n        if (timing) {\r\n            var total = PageViewPerformance.getDuration(timing.navigationStart, timing.loadEventEnd);\r\n            var network = PageViewPerformance.getDuration(timing.navigationStart, timing.connectEnd);\r\n            var request = PageViewPerformance.getDuration(timing.requestStart, timing.responseStart);\r\n            var response = PageViewPerformance.getDuration(timing.responseStart, timing.responseEnd);\r\n            var dom = PageViewPerformance.getDuration(timing.responseEnd, timing.loadEventEnd);\r\n            if (total == 0) {\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.ErrorPVCalc, \"error calculating page view performance.\", { total: total, network: network, request: request, response: response, dom: dom });\r\n            }\r\n            else if (!PageViewPerformance.shouldCollectDuration(total, network, request, response, dom)) {\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.InvalidDurationValue, \"Invalid page load duration value. Browser perf data won't be sent.\", { total: total, network: network, request: request, response: response, dom: dom });\r\n            }\r\n            else if (total < Math.floor(network) + Math.floor(request) + Math.floor(response) + Math.floor(dom)) {\r\n                // some browsers may report individual components incorrectly so that the sum of the parts will be bigger than total PLT\r\n                // in this case, don't report client performance from this page\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.ClientPerformanceMathError, \"client performance math error.\", { total: total, network: network, request: request, response: response, dom: dom });\r\n            }\r\n            else {\r\n                _this.durationMs = total;\r\n                // convert to timespans\r\n                _this.perfTotal = _this.duration = Util.msToTimeSpan(total);\r\n                _this.networkConnect = Util.msToTimeSpan(network);\r\n                _this.sentRequest = Util.msToTimeSpan(request);\r\n                _this.receivedResponse = Util.msToTimeSpan(response);\r\n                _this.domProcessing = Util.msToTimeSpan(dom);\r\n                _this.isValid = true;\r\n            }\r\n        }\r\n        _this.url = DataSanitizer.sanitizeUrl(logger, url);\r\n        _this.name = DataSanitizer.sanitizeString(logger, name) || Util.NotSpecified;\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        _this.measurements = DataSanitizer.sanitizeMeasurements(logger, measurements);\r\n        return _this;\r\n    }\r\n    /**\r\n     * Indicates whether this instance of PageViewPerformance is valid and should be sent\r\n     */\r\n    PageViewPerformance.prototype.getIsValid = function () {\r\n        return this.isValid;\r\n    };\r\n    /**\r\n    * Gets the total duration (PLT) in milliseconds. Check getIsValid() before using this method.\r\n    */\r\n    PageViewPerformance.prototype.getDurationMs = function () {\r\n        return this.durationMs;\r\n    };\r\n    PageViewPerformance.getPerformanceTiming = function () {\r\n        if (PageViewPerformance.isPerformanceTimingSupported()) {\r\n            return window.performance.timing;\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n    * Returns true is window performance timing API is supported, false otherwise.\r\n    */\r\n    PageViewPerformance.isPerformanceTimingSupported = function () {\r\n        return typeof window != \"undefined\" && window.performance && window.performance.timing;\r\n    };\r\n    /**\r\n     * As page loads different parts of performance timing numbers get set. When all of them are set we can report it.\r\n     * Returns true if ready, false otherwise.\r\n     */\r\n    PageViewPerformance.isPerformanceTimingDataReady = function () {\r\n        var timing = window.performance.timing;\r\n        return timing.domainLookupStart > 0\r\n            && timing.navigationStart > 0\r\n            && timing.responseStart > 0\r\n            && timing.requestStart > 0\r\n            && timing.loadEventEnd > 0\r\n            && timing.responseEnd > 0\r\n            && timing.connectEnd > 0\r\n            && timing.domLoading > 0;\r\n    };\r\n    PageViewPerformance.getDuration = function (start, end) {\r\n        var duration = undefined;\r\n        if (!(isNaN(start) || isNaN(end))) {\r\n            duration = Math.max(end - start, 0);\r\n        }\r\n        return duration;\r\n    };\r\n    /**\r\n     * This method tells if given durations should be excluded from collection.\r\n     */\r\n    PageViewPerformance.shouldCollectDuration = function () {\r\n        var durations = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            durations[_i] = arguments[_i];\r\n        }\r\n        // a full list of Google crawlers user agent strings - https://support.google.com/webmasters/answer/1061943?hl=en\r\n        var botAgentNames = ['googlebot', 'adsbot-google', 'apis-google', 'mediapartners-google'];\r\n        var userAgent = navigator.userAgent;\r\n        var isGoogleBot = false;\r\n        if (userAgent) {\r\n            for (var i_1 = 0; i_1 < botAgentNames.length; i_1++) {\r\n                isGoogleBot = isGoogleBot || userAgent.toLowerCase().indexOf(botAgentNames[i_1]) !== -1;\r\n            }\r\n        }\r\n        if (isGoogleBot) {\r\n            // Don't report durations for GoogleBot, it is returning invalid values in performance.timing API.\r\n            return false;\r\n        }\r\n        else {\r\n            // for other page views, don't report if it's outside of a reasonable range\r\n            for (var i = 0; i < durations.length; i++) {\r\n                if (durations[i] >= PageViewPerformance.MAX_DURATION_ALLOWED) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    PageViewPerformance.envelopeType = \"Microsoft.ApplicationInsights.{0}.PageviewPerformance\";\r\n    PageViewPerformance.dataType = \"PageviewPerformanceData\";\r\n    PageViewPerformance.MAX_DURATION_ALLOWED = 3600000; // 1h\r\n    return PageViewPerformance;\r\n}(PageViewPerfData));\r\nexport { PageViewPerformance };\r\n//# sourceMappingURL=PageViewPerformance.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Data as AIData } from '../../Interfaces/Contracts/Generated/Data';\r\nimport { FieldType } from '../../Enums';\r\nvar Data = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Data, _super);\r\n    /**\r\n     * Constructs a new instance of telemetry data.\r\n     */\r\n    function Data(baseType, data) {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * The data contract for serializing this object.\r\n         */\r\n        _this.aiDataContract = {\r\n            baseType: FieldType.Required,\r\n            baseData: FieldType.Required\r\n        };\r\n        _this.baseType = baseType;\r\n        _this.baseData = data;\r\n        return _this;\r\n    }\r\n    return Data;\r\n}(AIData));\r\nexport { Data };\r\n//# sourceMappingURL=Data.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nexport { Util, CorrelationIdHelper, UrlHelper, DateTimeUtils } from './Util';\r\nexport { FieldType } from './Enums';\r\nexport { RequestHeaders } from './RequestResponseHeaders';\r\nexport { DisabledPropertyName, ProcessLegacy, SampleRate, HttpMethod } from './Constants';\r\nexport { Data as AIData } from './Interfaces/Contracts/Generated/Data';\r\nexport { Base as AIBase } from './Interfaces/Contracts/Generated/Base';\r\nexport { Envelope } from './Telemetry/Common/Envelope';\r\nexport { Event } from './Telemetry/Event';\r\nexport { Exception } from './Telemetry/Exception';\r\nexport { Metric } from './Telemetry/Metric';\r\nexport { PageView } from './Telemetry/PageView';\r\nexport { PageViewData } from './Interfaces/Contracts/Generated/PageViewData';\r\nexport { RemoteDependencyData } from './Telemetry/RemoteDependencyData';\r\nexport { Trace } from './Telemetry/Trace';\r\nexport { PageViewPerformance } from './Telemetry/PageViewPerformance';\r\nexport { Data } from './Telemetry/Common/Data';\r\nexport { SeverityLevel } from './Interfaces/Contracts/Generated/SeverityLevel';\r\nexport { ConfigurationManager } from './Interfaces/IConfig';\r\nexport { ContextTagKeys } from './Interfaces/Contracts/Generated/ContextTagKeys';\r\nexport { DataSanitizer } from './Telemetry/Common/DataSanitizer';\r\nexport { TelemetryItemCreator } from './TelemetryItemCreator';\r\nexport { CtxTagKeys, Extensions, SDKExtensionKeys } from './Interfaces/PartAExtensions';\r\nexport var PropertiesPluginIdentifier = \"AppInsightsPropertiesPlugin\";\r\n//# sourceMappingURL=applicationinsights-common.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { PropertiesPluginIdentifier } from \"@microsoft/applicationinsights-common\";\r\n/**\r\n * Module to include Microsoft Application Insights in React applications.\r\n *\r\n * @export\r\n * @class ReactAI\r\n */\r\nvar ReactAI = /** @class */ (function () {\r\n    function ReactAI() {\r\n        this.extensionId = \"ApplicationInsightsReactUsage\";\r\n        this.ApplicationInsightsAnalyticsIdentifier = \"ApplicationInsightsAnalytics\";\r\n        this.identifier = this.extensionId;\r\n        this.priority = 190;\r\n        this.contextProps = {};\r\n        this.debug = false;\r\n        this.processTelemetry = this.customDimensionsInitializer.bind(this);\r\n    }\r\n    ReactAI.prototype.setNextPlugin = function (plugin) {\r\n        this.nextPlugin = plugin;\r\n    };\r\n    Object.defineProperty(ReactAI.prototype, \"context\", {\r\n        /**\r\n         * Returns the current value of context/custom dimensions.\r\n         *\r\n         * @readonly\r\n         * @type {{ [key: string]: any }}\r\n         * @memberof ReactAI\r\n         */\r\n        get: function () {\r\n            return this.contextProps || {};\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReactAI.prototype, \"isDebugMode\", {\r\n        /**\r\n         * Returns if ReactAI is in debug mode.\r\n         *\r\n         * @readonly\r\n         * @type {boolean}\r\n         * @memberof ReactAI\r\n         */\r\n        get: function () {\r\n            return this.debug;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Initializes a singleton instance of ReactAI based on supplied parameters.\r\n     *\r\n     * @param {IReactAISettings} settings\r\n     * @memberof ReactAI\r\n     */\r\n    ReactAI.prototype.initialize = function (settings, core, extensions) {\r\n        var _this = this;\r\n        var reactAISettings = settings.extensionConfig && settings.extensionConfig[this.identifier]\r\n            ? settings.extensionConfig[this.identifier]\r\n            : { debug: false };\r\n        this.debug = reactAISettings.debug || false;\r\n        this.setContext(reactAISettings.initialContext || {}, true);\r\n        extensions.forEach(function (ext) {\r\n            var identifier = ext.identifier;\r\n            if (identifier === _this.ApplicationInsightsAnalyticsIdentifier) {\r\n                _this.appInsights = ext;\r\n            }\r\n            if (identifier === PropertiesPluginIdentifier) {\r\n                _this.propertiesPlugin = ext;\r\n            }\r\n        });\r\n        if (reactAISettings.history) {\r\n            this.addHistoryListener(reactAISettings.history);\r\n            var pageViewTelemetry = {\r\n                uri: reactAISettings.history.location.pathname,\r\n                properties: this.context\r\n            };\r\n            this._trackInitialPageViewInternal(pageViewTelemetry);\r\n        }\r\n    };\r\n    // internal only, public method for testing\r\n    ReactAI.prototype._trackInitialPageViewInternal = function (telemetry) {\r\n        // Record initial page view, since history.listen is not fired for the initial page\r\n        // (see: https://github.com/ReactTraining/history/issues/479#issuecomment-307544999 )\r\n        this.appInsights.trackPageView(telemetry);\r\n        this.debugLog(\"recording initial page view.\", \"uri: \" + location.pathname);\r\n    };\r\n    /**\r\n     * Set custom context/custom dimensions for Application Insights\r\n     *\r\n     * @param {{ [key: string]: any }} properties - custom properties to add to all outbound Application Insights telemetry\r\n     * @param {boolean} [clearPrevious=false] - if false(default) multiple calls to setContext will append to/overwrite existing custom dimensions, if true the values are reset\r\n     * @memberof ReactAI\r\n     */\r\n    ReactAI.prototype.setContext = function (properties, clearPrevious) {\r\n        if (clearPrevious === void 0) { clearPrevious = false; }\r\n        if (clearPrevious) {\r\n            this.contextProps = {};\r\n            this.debugLog(\"context is reset.\");\r\n        }\r\n        properties = properties || {};\r\n        for (var key in properties) {\r\n            if (properties.hasOwnProperty(key)) {\r\n                this.contextProps[key] = properties[key];\r\n            }\r\n        }\r\n        this.debugLog(\"context is set to:\", this.context);\r\n    };\r\n    ReactAI.prototype.customDimensionsInitializer = function (envelope) {\r\n        envelope.baseData = envelope.baseData || {};\r\n        envelope.baseData.properties = envelope.baseData.properties || {};\r\n        var properties = envelope.baseData.properties;\r\n        var props = this.context;\r\n        for (var key in props) {\r\n            if (props.hasOwnProperty(key)) {\r\n                properties[key] = props[key];\r\n            }\r\n        }\r\n        if (this.nextPlugin != null) {\r\n            this.nextPlugin.processTelemetry(envelope);\r\n        }\r\n    };\r\n    ReactAI.prototype.addHistoryListener = function (history) {\r\n        var _this = this;\r\n        history.listen(function (location, action) {\r\n            // Timeout to ensure any changes to the DOM made by route changes get included in pageView telemetry\r\n            setTimeout(function () {\r\n                var pageViewTelemetry = { uri: location.pathname, properties: _this.context };\r\n                _this.appInsights.trackPageView(pageViewTelemetry);\r\n                _this.debugLog(\"recording page view.\", \"uri: \" + location.pathname + \" action: \" + action);\r\n            }, 500);\r\n        });\r\n    };\r\n    ReactAI.prototype.debugLog = function (message, payload) {\r\n        if (this.isDebugMode) {\r\n            console.log(\"ReactAI: \" + message, payload === undefined ? \"\" : payload);\r\n        }\r\n    };\r\n    return ReactAI;\r\n}());\r\nexport var reactAI = new ReactAI();\r\n//# sourceMappingURL=ReactAI.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport * as React from \"react\";\r\nimport { reactAI } from \"./ReactAI\";\r\n/**\r\n * Higher-order component function to hook Application Insights tracking\r\n * in a React component's lifecycle.\r\n *\r\n * @param Component the component to be instrumented with Application Insights tracking\r\n * @param componentName (optional) component name\r\n */\r\nexport default function withAITracking(Component, componentName) {\r\n    if (componentName === undefined || componentName === null || typeof componentName !== 'string') {\r\n        componentName = Component.prototype.constructor.name;\r\n    }\r\n    return /** @class */ (function (_super) {\r\n        tslib_1.__extends(class_1, _super);\r\n        function class_1() {\r\n            var _this = _super !== null && _super.apply(this, arguments) || this;\r\n            _this.mountTimestamp = 0;\r\n            _this.firstActiveTimestamp = 0;\r\n            _this.idleStartTimestamp = 0;\r\n            _this.lastActiveTimestamp = 0;\r\n            _this.totalIdleTime = 0;\r\n            _this.idleCount = 0;\r\n            _this.idleTimeout = 5000;\r\n            _this.trackActivity = function (e) {\r\n                if (_this.firstActiveTimestamp === 0) {\r\n                    _this.firstActiveTimestamp = Date.now();\r\n                    _this.lastActiveTimestamp = _this.firstActiveTimestamp;\r\n                }\r\n                else {\r\n                    _this.lastActiveTimestamp = Date.now();\r\n                }\r\n                if (_this.idleStartTimestamp > 0) {\r\n                    var lastIdleTime = _this.lastActiveTimestamp - _this.idleStartTimestamp;\r\n                    _this.totalIdleTime += lastIdleTime;\r\n                    _this.debugLog(\"trackActivity\", \"Idle to active added \" + lastIdleTime / 1000 + \" seconds of idle time.\");\r\n                    _this.idleStartTimestamp = 0;\r\n                }\r\n            };\r\n            return _this;\r\n        }\r\n        class_1.prototype.componentDidMount = function () {\r\n            var _this = this;\r\n            this.mountTimestamp = Date.now();\r\n            this.firstActiveTimestamp = 0;\r\n            this.totalIdleTime = 0;\r\n            this.lastActiveTimestamp = 0;\r\n            this.idleStartTimestamp = 0;\r\n            this.idleCount = 0;\r\n            this.intervalId = setInterval(function () {\r\n                if (_this.lastActiveTimestamp > 0 && _this.idleStartTimestamp === 0 && Date.now() - _this.lastActiveTimestamp >= _this.idleTimeout) {\r\n                    _this.idleStartTimestamp = Date.now();\r\n                    _this.idleCount++;\r\n                    _this.debugLog(\"componentDidMount\", \"Starting idle time.\");\r\n                }\r\n            }, 100);\r\n        };\r\n        class_1.prototype.componentWillUnmount = function () {\r\n            if (this.mountTimestamp === 0) {\r\n                throw new Error(\"withAITracking:componentWillUnmount: mountTimestamp isn't initialized.\");\r\n            }\r\n            if (!reactAI.appInsights) {\r\n                throw new Error(\"withAITracking:componentWillUnmount: ReactAI isn't initialized.\");\r\n            }\r\n            if (this.intervalId) {\r\n                clearInterval(this.intervalId);\r\n            }\r\n            if (this.firstActiveTimestamp === 0) {\r\n                this.debugLog(\"componentWillUnmount\", \"Nothing to track.\");\r\n                return;\r\n            }\r\n            var engagementTime = this.getEngagementTimeSeconds();\r\n            var metricData = {\r\n                average: engagementTime,\r\n                name: \"React Component Engaged Time (seconds)\",\r\n                sampleCount: 1\r\n            };\r\n            var additionalProperties = { \"Component Name\": componentName };\r\n            this.debugLog(\"componentWillUnmount\", \"Tracking \" + engagementTime + \" seconds of engagement time for \" + componentName + \".\");\r\n            reactAI.appInsights.trackMetric(metricData, additionalProperties);\r\n        };\r\n        class_1.prototype.render = function () {\r\n            return (React.createElement(\"div\", { onKeyDown: this.trackActivity, onMouseMove: this.trackActivity, onScroll: this.trackActivity, onMouseDown: this.trackActivity, onTouchStart: this.trackActivity, onTouchMove: this.trackActivity },\r\n                React.createElement(Component, tslib_1.__assign({}, this.props))));\r\n        };\r\n        class_1.prototype.debugLog = function (from, message) {\r\n            if (reactAI.isDebugMode) {\r\n                console.log(\"withAITracking:\" + componentName + \":\" + from + \": \" + message, {\r\n                    engagementTime: this.getEngagementTimeSeconds(),\r\n                    firstActiveTime: this.firstActiveTimestamp,\r\n                    idleStartTime: this.idleStartTimestamp,\r\n                    idleTimeMs: this.totalIdleTime,\r\n                    lastActiveTime: this.lastActiveTimestamp,\r\n                    mountTimestamp: this.mountTimestamp\r\n                });\r\n            }\r\n        };\r\n        class_1.prototype.getEngagementTimeSeconds = function () {\r\n            return (Date.now() - this.firstActiveTimestamp - this.totalIdleTime - this.idleCount * this.idleTimeout) / 1000;\r\n        };\r\n        return class_1;\r\n    }(React.Component));\r\n}\r\n//# sourceMappingURL=withAITracking.js.map"],"names":["StorageType","FieldType","LoggingSeverity","CoreUtils","isNullOrUndefined","input","newGuid","replace","GuidRegex","c","r","Math","random","toString","_InternalMessageId","BrowserDoesNotSupportLocalStorage","BrowserCannotReadLocalStorage","BrowserCannotReadSessionStorage","BrowserCannotWriteLocalStorage","BrowserCannotWriteSessionStorage","BrowserFailedRemovalFromLocalStorage","BrowserFailedRemovalFromSessionStorage","CannotSendEmptyTelemetry","ClientPerformanceMathError","ErrorParsingAISessionCookie","ErrorPVCalc","ExceptionWhileLoggingError","FailedAddingTelemetryToBuffer","FailedMonitorAjaxAbort","FailedMonitorAjaxDur","FailedMonitorAjaxOpen","FailedMonitorAjaxRSC","FailedMonitorAjaxSend","FailedMonitorAjaxGetCorrelationHeader","FailedToAddHandlerForOnBeforeUnload","FailedToSendQueuedTelemetry","FailedToReportDataLoss","FlushFailed","MessageLimitPerPVExceeded","MissingRequiredFieldSpecification","NavigationTimingNotSupported","OnError","SessionRenewalDateIsZero","SenderNotInitialized","StartTrackEventFailed","StopTrackEventFailed","StartTrackFailed","StopTrackFailed","TelemetrySampledAndNotSent","TrackEventFailed","TrackExceptionFailed","TrackMetricFailed","TrackPVFailed","TrackPVFailedCalc","TrackTraceFailed","TransmissionFailed","FailedToSetStorageBuffer","FailedToRestoreStorageBuffer","InvalidBackendResponse","FailedToFixDepricatedValues","InvalidDurationValue","TelemetryEnvelopeInvalid","CreateEnvelopeError","CannotSerializeObject","CannotSerializeObjectNonSerializable","CircularReferenceDetected","ClearAuthContextFailed","ExceptionTruncated","IllegalCharsInName","ItemNotInArray","MaxAjaxPerPVExceeded","MessageTruncated","NameTooLong","SampleRateOutOfRange","SetAuthContextFailed","SetAuthContextFailedAccountName","StringValueTooLong","StartCalledMoreThanOnce","StopCalledWithoutStart","TelemetryInitializerFailed","TrackArgumentsNotSpecified","UrlTooLong","SessionStorageBufferFull","CannotAccessCookie","IdTooLong","ChannelController","this","identifier","priority","ChannelControllerPriority","prototype","processTelemetry","item","channelQueue","forEach","queues","length","Object","defineProperty","get","enumerable","configurable","initialize","config","core","extensions","_this","Array","channels","invalidChannelIdentifier_1","undefined","queue","sort","a","b","queueItem","Error","ChannelValidationMessage","i","setNextPlugin","push","arr","plugin","DataSanitizer","sanitizeKeyAndAddUniqueness","logger","key","map","origLength","field","sanitizeKey","uniqueField","substring","MAX_NAME_LENGTH","padNumber","name","trim","throwInternal","WARNING","sanitizeString","value","maxLength","MAX_STRING_LENGTH","sanitizeUrl","url","sanitizeInput","MAX_URL_LENGTH","sanitizeMessage","message","MAX_MESSAGE_LENGTH","sanitizeException","exception","MAX_EXCEPTION_LENGTH","sanitizeProperties","properties","tempProps","prop","MAX_PROPERTY_LENGTH","sanitizeMeasurements","measurements","tempMeasurements","measure","sanitizeId","id","MAX_ID_LENGTH","_msgId","data","num","s","substr","str","Util","disableStorage","_canUseLocalStorage","_canUseSessionStorage","_getLocalStorageObject","canUseLocalStorage","_getVerifiedStorageObject","LocalStorage","storageType","fail","uid","storage","window","Date","localStorage","sessionStorage","setItem","getItem","removeItem","isInternalApplicationInsightsEndpoint","endpointUrl","_internalEndpoints","indexOf","toLowerCase","getStorage","e","getExceptionName","dump","setStorage","removeStorage","_getSessionStorageObject","canUseSessionStorage","SessionStorage","getSessionStorageKeys","keys","getSessionStorage","setSessionStorage","removeSessionStorage","disableCookies","_canUseCookies","canUseCookies","document","cookie","setCookie","domain","domainAttrib","secureAttrib","location","protocol","stringToBoolOrDefault","defaultValue","getCookie","cookieName","cookies","split","deleteCookie","newId","result","charAt","floor","isArray","obj","call","isError","isDate","toISOStringForIE8","date","toISOString","pad","String","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","toFixed","slice","getIEVersion","userAgentStr","myNav","navigator","userAgent","parseInt","msToTimeSpan","totalms","isNaN","ms","round","sec","min","hour","days","isCrossOriginError","lineNumber","columnNumber","error","object","objectTypeDump","propertyValueDump","JSON","stringify","stack","addEventHandler","eventName","callback","verbEventName","addEventListener","IsBeaconApiSupported","sendBeacon","NotSpecified","UrlHelper","parseUrl","htmlAnchorElement","createElement","href","getAbsoluteUrl","getPathName","pathname","getCompleteUrl","method","absoluteUrl","toUpperCase","AjaxHelper","ParseDependencyPath","commandName","target","parsedUrl","host","pathName","DateTimeUtils","Now","getTime","performance","now","timing","navigationStart","GetDuration","start","end","extendStatics","d","setPrototypeOf","__proto__","p","hasOwnProperty","__extends","__","constructor","create","DataPointType","__assign","assign","t","n","arguments","apply","Base","Data","_super","tslib_1.__extends","Envelope","ver","sampleRate","tags","time","aiDataContract","Required","iKey","Hidden","AIEnvelope","Domain","EventData","Event","Default","envelopeType","dataType","StackFrame","ExceptionData","exceptions","ExceptionDetails","hasFullStack","parsedStack","Exception","severityLevel","_ExceptionDetails","CreateSimpleException","typeName","assembly","fileName","details","line","outerId","parseStack","frames","level","totalSizeInBytes","frame","_StackFrame","regex","test","parsedFrame","sizeInBytes","left","right","size","acceptedLeft","acceptedRight","howMany","splice","matches","match","baseSize","MetricData","metrics","SeverityLevel","DataPoint","kind","Measurement","count","max","stdDev","AIDataPoint","Metric","dataPoint","PageViewData","PageView","durationMs","duration","RemoteDependencyData","success","resultCode","requestAPI","type","dependencyKind","dependencySource","dependencyTypeName","dependencyFields","GeneratedRemoteDependencyData","MessageData","Trace","PageViewPerfData","PageViewPerformance","unused","perfTotal","networkConnect","sentRequest","receivedResponse","domProcessing","isValid","getPerformanceTiming","total","getDuration","loadEventEnd","network","connectEnd","request","requestStart","responseStart","response","responseEnd","dom","shouldCollectDuration","getIsValid","getDurationMs","isPerformanceTimingSupported","isPerformanceTimingDataReady","domainLookupStart","domLoading","durations","_i","botAgentNames","isGoogleBot","i_1","MAX_DURATION_ALLOWED","baseType","baseData","AIData","PropertiesPluginIdentifier","ReactAI","extensionId","ApplicationInsightsAnalyticsIdentifier","contextProps","debug","customDimensionsInitializer","bind","nextPlugin","settings","reactAISettings","extensionConfig","setContext","initialContext","ext","appInsights","propertiesPlugin","history","addHistoryListener","pageViewTelemetry","uri","context","_trackInitialPageViewInternal","telemetry","trackPageView","debugLog","clearPrevious","envelope","props","listen","action","setTimeout","payload","isDebugMode","console","log","reactAI","withAITracking","Component","componentName","class_1","mountTimestamp","firstActiveTimestamp","idleStartTimestamp","lastActiveTimestamp","totalIdleTime","idleCount","idleTimeout","trackActivity","lastIdleTime","componentDidMount","intervalId","setInterval","componentWillUnmount","clearInterval","engagementTime","getEngagementTimeSeconds","metricData","average","sampleCount","additionalProperties","Component Name","trackMetric","render","React.createElement","onKeyDown","onMouseMove","onScroll","onMouseDown","onTouchStart","onTouchMove","tslib_1.__assign","from","firstActiveTime","idleStartTime","idleTimeMs","lastActiveTime","React.Component"],"mappings":"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"}