import * as React from "react";
import { ITag } from "../../models/models";
/**
 * Properties for Tag Editor Modal
 */
export interface ITagEditorModalProps extends React.Props<TagEditorModal> {
    /** Function to call when "Ok" button is clicked */
    onOk: (oldTag: ITag, newTag: ITag) => void;
    /**
     * Dictionary of colors indexed by color name, value is color code.
     * Used to choose colors available to apply to tags
     */
    tagColors?: {
        [id: string]: string;
    };
    /** Allows for substitution of English word "Tag" */
    tagNameText?: string;
    /** Allows for substitution of English word "Color" */
    tagColorText?: string;
    /** Allows for substitution of English words "Edit Tag" */
    editTagText?: string;
    /** Allows for substitution of English word "Save" */
    saveText?: string;
    /** Allows for substitution of English word "Cancel" */
    cancelText?: string;
    /** Modal is visible. Won't have tag unless `open` is called with tag */
    show?: boolean;
    /** Function to call when "Cancel" button is clicked or modal closed */
    onCancel?: () => void;
}
/**
 * State for Tag Editor Modal
 */
export interface ITagEditorModalState {
    /**  Tag originally opened with */
    originalTag: ITag;
    /** Current tag as modified by modal */
    currentTag: ITag;
    /** Modal is open */
    isOpen: boolean;
    /** JSON form schema for modal body form */
    formSchema: any;
}
/**
 * Simple modal for editing the name and color of project tags
 */
export declare class TagEditorModal extends React.Component<ITagEditorModalProps, ITagEditorModalState> {
    private static createFormSchema;
    state: ITagEditorModalState;
    render(): JSX.Element;
    /**
     * Open editor modal with tag
     * @param tag Tag to be edited
     */
    open: (tag: ITag) => void;
    /**
     * Close editor modal and call `onCancel` if provided
     */
    close: () => void;
    /**
     * Called when change made to modal form
     */
    private handleFormChange;
    /**
     * Called when "Ok" is clicked
     */
    private handleOk;
}
