{"version":3,"file":"applicationinsights-channel-js.min.js","sources":["../../../common/temp/node_modules/tslib/tslib.es6.js","../../../shared/AppInsightsCommon/dist-esm/Enums.js","../../../shared/AppInsightsCore/dist-esm/JavaScriptSDK/CoreUtils.js","../../../shared/AppInsightsCore/dist-esm/JavaScriptSDK.Enums/LoggingEnums.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/DataPointType.js","../../../shared/AppInsightsCore/dist-esm/JavaScriptSDK/AppInsightsCore.js","../../../shared/AppInsightsCommon/dist-esm/RequestResponseHeaders.js","../../../shared/AppInsightsCommon/dist-esm/Telemetry/Common/DataSanitizer.js","../../../shared/AppInsightsCommon/dist-esm/Util.js","../../../shared/AppInsightsCommon/dist-esm/Constants.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/Data.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/Base.js","../../../shared/AppInsightsCommon/dist-esm/Telemetry/Common/Envelope.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/Envelope.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/Domain.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/EventData.js","../../../shared/AppInsightsCommon/dist-esm/Telemetry/Event.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/StackFrame.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/ExceptionDetails.js","../../../shared/AppInsightsCommon/dist-esm/Telemetry/Exception.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/ExceptionData.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/MetricData.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/DataPoint.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/SeverityLevel.js","../../../shared/AppInsightsCommon/dist-esm/Telemetry/Common/DataPoint.js","../../../shared/AppInsightsCommon/dist-esm/Telemetry/Metric.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/PageViewData.js","../../../shared/AppInsightsCommon/dist-esm/Telemetry/PageView.js","../../../shared/AppInsightsCommon/dist-esm/Telemetry/RemoteDependencyData.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/RemoteDependencyData.js","../../../shared/AppInsightsCommon/dist-esm/Telemetry/Trace.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/MessageData.js","../../../shared/AppInsightsCommon/dist-esm/Telemetry/PageViewPerformance.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/PageViewPerfData.js","../../../shared/AppInsightsCommon/dist-esm/Telemetry/Common/Data.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/IConfig.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/PartAExtensions.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/ContextTagKeys.js","../dist-esm/SendBuffer.js","../dist-esm/EnvelopeCreator.js","../dist-esm/TelemetryValidation/EventValidator.js","../dist-esm/TelemetryValidation/TraceValidator.js","../dist-esm/TelemetryValidation/ExceptionValidator.js","../dist-esm/TelemetryValidation/MetricValidator.js","../dist-esm/TelemetryValidation/PageViewPerformanceValidator.js","../dist-esm/TelemetryValidation/PageViewValidator.js","../dist-esm/TelemetryValidation/RemoteDepdencyValidator.js","../dist-esm/Serializer.js","../dist-esm/Offline.js","../dist-esm/Sender.js"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n/**\r\n* Type of storage to differentiate between local storage and session storage\r\n*/\r\nexport var StorageType;\r\n(function (StorageType) {\r\n    StorageType[StorageType[\"LocalStorage\"] = 0] = \"LocalStorage\";\r\n    StorageType[StorageType[\"SessionStorage\"] = 1] = \"SessionStorage\";\r\n})(StorageType || (StorageType = {}));\r\n/**\r\n * Enum is used in aiDataContract to describe how fields are serialized.\r\n * For instance: (Fieldtype.Required | FieldType.Array) will mark the field as required and indicate it's an array\r\n */\r\nexport var FieldType;\r\n(function (FieldType) {\r\n    FieldType[FieldType[\"Default\"] = 0] = \"Default\";\r\n    FieldType[FieldType[\"Required\"] = 1] = \"Required\";\r\n    FieldType[FieldType[\"Array\"] = 2] = \"Array\";\r\n    FieldType[FieldType[\"Hidden\"] = 4] = \"Hidden\";\r\n})(FieldType || (FieldType = {}));\r\n;\r\n//# sourceMappingURL=Enums.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\"use strict\";\r\nvar CoreUtils = /** @class */ (function () {\r\n    function CoreUtils() {\r\n    }\r\n    CoreUtils.isNullOrUndefined = function (input) {\r\n        return input === null || input === undefined;\r\n    };\r\n    /**\r\n* Creates a new GUID.\r\n* @return {string} A GUID.\r\n*/\r\n    CoreUtils.newGuid = function () {\r\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(GuidRegex, function (c) {\r\n            // tslint:disable-next-line:insecure-random\r\n            var r = (Math.random() * 16 | 0), v = (c === 'x' ? r : r & 0x3 | 0x8);\r\n            return v.toString(16);\r\n        });\r\n    };\r\n    return CoreUtils;\r\n}());\r\nexport { CoreUtils };\r\nvar GuidRegex = /[xy]/g;\r\n//# sourceMappingURL=CoreUtils.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nexport var LoggingSeverity;\r\n(function (LoggingSeverity) {\r\n    /**\r\n     * Error will be sent as internal telemetry\r\n     */\r\n    LoggingSeverity[LoggingSeverity[\"CRITICAL\"] = 1] = \"CRITICAL\";\r\n    /**\r\n     * Error will NOT be sent as internal telemetry, and will only be shown in browser console\r\n     */\r\n    LoggingSeverity[LoggingSeverity[\"WARNING\"] = 2] = \"WARNING\";\r\n})(LoggingSeverity || (LoggingSeverity = {}));\r\n/**\r\n * Internal message ID. Please create a new one for every conceptually different message. Please keep alphabetically ordered\r\n */\r\nexport var _InternalMessageId = {\r\n    // Non user actionable\r\n    BrowserDoesNotSupportLocalStorage: 0,\r\n    BrowserCannotReadLocalStorage: 1,\r\n    BrowserCannotReadSessionStorage: 2,\r\n    BrowserCannotWriteLocalStorage: 3,\r\n    BrowserCannotWriteSessionStorage: 4,\r\n    BrowserFailedRemovalFromLocalStorage: 5,\r\n    BrowserFailedRemovalFromSessionStorage: 6,\r\n    CannotSendEmptyTelemetry: 7,\r\n    ClientPerformanceMathError: 8,\r\n    ErrorParsingAISessionCookie: 9,\r\n    ErrorPVCalc: 10,\r\n    ExceptionWhileLoggingError: 11,\r\n    FailedAddingTelemetryToBuffer: 12,\r\n    FailedMonitorAjaxAbort: 13,\r\n    FailedMonitorAjaxDur: 14,\r\n    FailedMonitorAjaxOpen: 15,\r\n    FailedMonitorAjaxRSC: 16,\r\n    FailedMonitorAjaxSend: 17,\r\n    FailedMonitorAjaxGetCorrelationHeader: 18,\r\n    FailedToAddHandlerForOnBeforeUnload: 19,\r\n    FailedToSendQueuedTelemetry: 20,\r\n    FailedToReportDataLoss: 21,\r\n    FlushFailed: 22,\r\n    MessageLimitPerPVExceeded: 23,\r\n    MissingRequiredFieldSpecification: 24,\r\n    NavigationTimingNotSupported: 25,\r\n    OnError: 26,\r\n    SessionRenewalDateIsZero: 27,\r\n    SenderNotInitialized: 28,\r\n    StartTrackEventFailed: 29,\r\n    StopTrackEventFailed: 30,\r\n    StartTrackFailed: 31,\r\n    StopTrackFailed: 32,\r\n    TelemetrySampledAndNotSent: 33,\r\n    TrackEventFailed: 34,\r\n    TrackExceptionFailed: 35,\r\n    TrackMetricFailed: 36,\r\n    TrackPVFailed: 37,\r\n    TrackPVFailedCalc: 38,\r\n    TrackTraceFailed: 39,\r\n    TransmissionFailed: 40,\r\n    FailedToSetStorageBuffer: 41,\r\n    FailedToRestoreStorageBuffer: 42,\r\n    InvalidBackendResponse: 43,\r\n    FailedToFixDepricatedValues: 44,\r\n    InvalidDurationValue: 45,\r\n    TelemetryEnvelopeInvalid: 46,\r\n    CreateEnvelopeError: 47,\r\n    // User actionable\r\n    CannotSerializeObject: 48,\r\n    CannotSerializeObjectNonSerializable: 49,\r\n    CircularReferenceDetected: 50,\r\n    ClearAuthContextFailed: 51,\r\n    ExceptionTruncated: 52,\r\n    IllegalCharsInName: 53,\r\n    ItemNotInArray: 54,\r\n    MaxAjaxPerPVExceeded: 55,\r\n    MessageTruncated: 56,\r\n    NameTooLong: 57,\r\n    SampleRateOutOfRange: 58,\r\n    SetAuthContextFailed: 59,\r\n    SetAuthContextFailedAccountName: 60,\r\n    StringValueTooLong: 61,\r\n    StartCalledMoreThanOnce: 62,\r\n    StopCalledWithoutStart: 63,\r\n    TelemetryInitializerFailed: 64,\r\n    TrackArgumentsNotSpecified: 65,\r\n    UrlTooLong: 66,\r\n    SessionStorageBufferFull: 67,\r\n    CannotAccessCookie: 68,\r\n    IdTooLong: 69,\r\n};\r\n//# sourceMappingURL=LoggingEnums.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\n/**\r\n * Type of the metric data measurement.\r\n */\r\nexport var DataPointType;\r\n(function (DataPointType) {\r\n    DataPointType[DataPointType[\"Measurement\"] = 0] = \"Measurement\";\r\n    DataPointType[DataPointType[\"Aggregation\"] = 1] = \"Aggregation\";\r\n})(DataPointType || (DataPointType = {}));\r\n//# sourceMappingURL=DataPointType.js.map","import { EventsDiscardedReason } from \"../JavaScriptSDK.Enums/EventsDiscardedReason\";\r\nimport { CoreUtils } from \"./CoreUtils\";\r\nimport { NotificationManager } from \"./NotificationManager\";\r\nimport { _InternalLogMessage, DiagnosticLogger } from \"./DiagnosticLogger\";\r\n\"use strict\";\r\nvar AppInsightsCore = /** @class */ (function () {\r\n    function AppInsightsCore() {\r\n        this._isInitialized = false;\r\n        this._extensions = new Array();\r\n        this._channelController = new ChannelController();\r\n    }\r\n    AppInsightsCore.prototype.initialize = function (config, extensions) {\r\n        var _this = this;\r\n        // Make sure core is only initialized once\r\n        if (this._isInitialized) {\r\n            throw Error(\"Core should not be initialized more than once\");\r\n        }\r\n        if (!config || CoreUtils.isNullOrUndefined(config.instrumentationKey)) {\r\n            throw Error(\"Please provide instrumentation key\");\r\n        }\r\n        this.config = config;\r\n        this._notificationManager = new NotificationManager();\r\n        this.config.extensions = CoreUtils.isNullOrUndefined(this.config.extensions) ? [] : this.config.extensions;\r\n        // add notification to the extensions in the config so other plugins can access it\r\n        this.config.extensionConfig = CoreUtils.isNullOrUndefined(this.config.extensionConfig) ? {} : this.config.extensionConfig;\r\n        this.config.extensionConfig.NotificationManager = this._notificationManager;\r\n        this.logger = new DiagnosticLogger(config);\r\n        // Initial validation\r\n        extensions.forEach(function (extension) {\r\n            if (CoreUtils.isNullOrUndefined(extension.initialize)) {\r\n                throw Error(validationError);\r\n            }\r\n        });\r\n        if (this.config.extensions.length > 0) {\r\n            var isValid_1 = true;\r\n            var containsChannels_1 = false;\r\n            this.config.extensions.forEach(function (item) {\r\n                if (CoreUtils.isNullOrUndefined(item)) {\r\n                    isValid_1 = false;\r\n                }\r\n                if (item.priority > ChannelControllerPriority) {\r\n                    containsChannels_1 = true;\r\n                }\r\n            });\r\n            if (!isValid_1) {\r\n                throw Error(validationError);\r\n            }\r\n            if (containsChannels_1) {\r\n                throw Error(validationErrorInExt);\r\n            }\r\n        }\r\n        // Initial validation complete\r\n        // Concat all available extensions before sorting by priority\r\n        (_a = this._extensions).push.apply(_a, [this._channelController].concat(extensions, this.config.extensions));\r\n        this._extensions = this._extensions.sort(function (a, b) {\r\n            var extA = a;\r\n            var extB = b;\r\n            var typeExtA = typeof extA.processTelemetry;\r\n            var typeExtB = typeof extB.processTelemetry;\r\n            if (typeExtA === 'function' && typeExtB === 'function') {\r\n                return extA.priority - extB.priority;\r\n            }\r\n            if (typeExtA === 'function' && typeExtB !== 'function') {\r\n                // keep non telemetryplugin specific extensions at start\r\n                return 1;\r\n            }\r\n            if (typeExtA !== 'function' && typeExtB === 'function') {\r\n                return -1;\r\n            }\r\n        });\r\n        // sort complete\r\n        // Check if any two extensions have the same priority, then warn to console\r\n        var priority = {};\r\n        this._extensions.forEach(function (ext) {\r\n            var t = ext;\r\n            if (t && t.priority) {\r\n                if (!CoreUtils.isNullOrUndefined(priority[t.priority])) {\r\n                    _this.logger.warnToConsole(\"Two extensions have same priority\" + priority[t.priority] + \", \" + t.identifier);\r\n                }\r\n                else {\r\n                    priority[t.priority] = t.identifier; // set a value\r\n                }\r\n            }\r\n        });\r\n        var c = -1;\r\n        // Set next plugin for all until channel controller\r\n        for (var idx = 0; idx < this._extensions.length - 1; idx++) {\r\n            var curr = (this._extensions[idx]);\r\n            if (curr && typeof curr.processTelemetry !== 'function') {\r\n                // these are initialized only, allowing an entry point for extensions to be initialized when SDK initializes\r\n                continue;\r\n            }\r\n            if (curr.priority === ChannelControllerPriority) {\r\n                c = idx + 1;\r\n                break; // channel controller will set remaining pipeline\r\n            }\r\n            this._extensions[idx].setNextPlugin(this._extensions[idx + 1]); // set next plugin\r\n        }\r\n        // initialize channel controller first, this will initialize all channel plugins\r\n        this._channelController.initialize(this.config, this, this._extensions);\r\n        // initialize remaining regular plugins\r\n        this._extensions.forEach(function (ext) {\r\n            var e = ext;\r\n            if (e && e.priority < ChannelControllerPriority) {\r\n                ext.initialize(_this.config, _this, _this._extensions); // initialize\r\n            }\r\n        });\r\n        // Remove sender channels from main list\r\n        if (c < this._extensions.length) {\r\n            this._extensions.splice(c);\r\n        }\r\n        if (this.getTransmissionControls().length === 0) {\r\n            throw new Error(\"No channels available\");\r\n        }\r\n        this._isInitialized = true;\r\n        var _a;\r\n    };\r\n    AppInsightsCore.prototype.getTransmissionControls = function () {\r\n        return this._channelController.ChannelControls;\r\n    };\r\n    AppInsightsCore.prototype.track = function (telemetryItem) {\r\n        if (telemetryItem === null) {\r\n            this._notifiyInvalidEvent(telemetryItem);\r\n            // throw error\r\n            throw Error(\"Invalid telemetry item\");\r\n        }\r\n        if (telemetryItem.baseData && !telemetryItem.baseType) {\r\n            this._notifiyInvalidEvent(telemetryItem);\r\n            throw Error(\"Provide data.baseType for data.baseData\");\r\n        }\r\n        if (!telemetryItem.baseType) {\r\n            // Hard coded from Common::Event.ts::Event.dataType\r\n            telemetryItem.baseType = \"EventData\";\r\n        }\r\n        if (!telemetryItem.iKey) {\r\n            // setup default iKey if not passed in\r\n            telemetryItem.iKey = this.config.instrumentationKey;\r\n        }\r\n        if (!telemetryItem.time) {\r\n            // add default timestamp if not passed in\r\n            telemetryItem.time = new Date().toISOString();\r\n        }\r\n        if (CoreUtils.isNullOrUndefined(telemetryItem.ver)) {\r\n            // CommonSchema 4.0\r\n            telemetryItem.ver = \"4.0\";\r\n        }\r\n        // do basic validation before sending it through the pipeline\r\n        this._validateTelmetryItem(telemetryItem);\r\n        this._updateSdkVersion(telemetryItem);\r\n        // invoke any common telemetry processors before sending through pipeline\r\n        var i = 0;\r\n        while (i < this._extensions.length) {\r\n            if (this._extensions[i].processTelemetry) {\r\n                this._extensions[i].processTelemetry(telemetryItem); // pass on to first extension that can support processing\r\n                break;\r\n            }\r\n            i++;\r\n        }\r\n    };\r\n    /**\r\n     * Adds a notification listener. The SDK calls methods on the listener when an appropriate notification is raised.\r\n     * The added plugins must raise notifications. If the plugins do not implement the notifications, then no methods will be\r\n     * called.\r\n     * @param {INotificationListener} listener - An INotificationListener object.\r\n     */\r\n    AppInsightsCore.prototype.addNotificationListener = function (listener) {\r\n        this._notificationManager.addNotificationListener(listener);\r\n    };\r\n    /**\r\n     * Removes all instances of the listener.\r\n     * @param {INotificationListener} listener - INotificationListener to remove.\r\n     */\r\n    AppInsightsCore.prototype.removeNotificationListener = function (listener) {\r\n        this._notificationManager.removeNotificationListener(listener);\r\n    };\r\n    /**\r\n     * Periodically check logger.queue for\r\n     */\r\n    AppInsightsCore.prototype.pollInternalLogs = function () {\r\n        var _this = this;\r\n        var interval = this.config.diagnosticLogInterval;\r\n        if (!(interval > 0)) {\r\n            interval = 10000;\r\n        }\r\n        return setInterval(function () {\r\n            var queue = _this.logger.queue;\r\n            queue.forEach(function (logMessage) {\r\n                var item = {\r\n                    name: \"InternalMessageId: \" + logMessage.messageId,\r\n                    iKey: _this.config.instrumentationKey,\r\n                    time: new Date().toISOString(),\r\n                    baseType: _InternalLogMessage.dataType,\r\n                    baseData: { message: logMessage.message }\r\n                };\r\n                _this.track(item);\r\n            });\r\n            queue.length = 0;\r\n        }, interval);\r\n    };\r\n    AppInsightsCore.prototype._validateTelmetryItem = function (telemetryItem) {\r\n        if (CoreUtils.isNullOrUndefined(telemetryItem.name)) {\r\n            this._notifiyInvalidEvent(telemetryItem);\r\n            throw Error(\"telemetry name required\");\r\n        }\r\n        if (CoreUtils.isNullOrUndefined(telemetryItem.time)) {\r\n            this._notifiyInvalidEvent(telemetryItem);\r\n            throw Error(\"telemetry timestamp required\");\r\n        }\r\n        if (CoreUtils.isNullOrUndefined(telemetryItem.iKey)) {\r\n            this._notifiyInvalidEvent(telemetryItem);\r\n            throw Error(\"telemetry instrumentationKey required\");\r\n        }\r\n    };\r\n    AppInsightsCore.prototype._updateSdkVersion = function (telemetryItem) {\r\n        if (!telemetryItem.ext) {\r\n            telemetryItem.ext = {};\r\n        }\r\n        if (!telemetryItem.ext.sdk) {\r\n            telemetryItem.ext.sdk = {};\r\n        }\r\n        var version = \"\";\r\n        for (var i = 0; i < this._extensions.length; i++) {\r\n            var ext = this._extensions[i];\r\n            if (ext.identifier && ext.version) {\r\n                var str = ext.identifier + \":\" + ext.version + \";\";\r\n                version = version.concat(str);\r\n            }\r\n        }\r\n        if (version != \"\") {\r\n            telemetryItem.ext.sdk['libVer'] = version;\r\n        }\r\n    };\r\n    AppInsightsCore.prototype._notifiyInvalidEvent = function (telemetryItem) {\r\n        this._notificationManager.eventsDiscarded([telemetryItem], EventsDiscardedReason.InvalidEvent);\r\n    };\r\n    return AppInsightsCore;\r\n}());\r\nexport { AppInsightsCore };\r\nvar ChannelController = /** @class */ (function () {\r\n    function ChannelController() {\r\n        this.identifier = \"ChannelControllerPlugin\";\r\n        this.priority = ChannelControllerPriority; // in reserved range 100 to 200\r\n    }\r\n    ChannelController.prototype.processTelemetry = function (item) {\r\n        this.channelQueue.forEach(function (queues) {\r\n            // pass on to first item in queue\r\n            if (queues.length > 0) {\r\n                queues[0].processTelemetry(item);\r\n            }\r\n        });\r\n    };\r\n    Object.defineProperty(ChannelController.prototype, \"ChannelControls\", {\r\n        get: function () {\r\n            return this.channelQueue;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ChannelController.prototype.initialize = function (config, core, extensions) {\r\n        var _this = this;\r\n        this.channelQueue = new Array();\r\n        if (config.channels) {\r\n            var invalidChannelIdentifier_1 = undefined;\r\n            config.channels.forEach(function (queue) {\r\n                if (queue && queue.length > 0) {\r\n                    queue = queue.sort(function (a, b) {\r\n                        return a.priority - b.priority;\r\n                    });\r\n                    // Initialize each plugin\r\n                    queue.forEach(function (queueItem) {\r\n                        if (queueItem.priority < ChannelControllerPriority) {\r\n                            invalidChannelIdentifier_1 = queueItem.identifier;\r\n                        }\r\n                        queueItem.initialize(config, core, extensions);\r\n                    });\r\n                    if (invalidChannelIdentifier_1) {\r\n                        throw Error(ChannelValidationMessage + invalidChannelIdentifier_1);\r\n                    }\r\n                    for (var i = 1; i < queue.length; i++) {\r\n                        queue[i - 1].setNextPlugin(queue[i]); // setup processing chain\r\n                    }\r\n                    _this.channelQueue.push(queue);\r\n                }\r\n            });\r\n        }\r\n        var arr = new Array();\r\n        for (var i = 0; i < extensions.length; i++) {\r\n            var plugin = extensions[i];\r\n            if (plugin.priority > ChannelControllerPriority) {\r\n                arr.push(plugin);\r\n            }\r\n        }\r\n        if (arr.length > 0) {\r\n            // sort if not sorted\r\n            arr = arr.sort(function (a, b) {\r\n                return a.priority - b.priority;\r\n            });\r\n            // Initialize each plugin\r\n            arr.forEach(function (queueItem) { return queueItem.initialize(config, core, extensions); });\r\n            // setup next plugin\r\n            for (var i = 1; i < arr.length; i++) {\r\n                arr[i - 1].setNextPlugin(arr[i]);\r\n            }\r\n            this.channelQueue.push(arr);\r\n        }\r\n    };\r\n    return ChannelController;\r\n}());\r\nvar validationError = \"Extensions must provide callback to initialize\";\r\nvar validationErrorInExt = \"Channels must be provided through config.channels only\";\r\nvar ChannelControllerPriority = 500;\r\nvar ChannelValidationMessage = \"Channel has invalid priority\";\r\n//# sourceMappingURL=AppInsightsCore.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nvar RequestHeaders = /** @class */ (function () {\r\n    function RequestHeaders() {\r\n    }\r\n    /**\r\n     * Request-Context header\r\n     */\r\n    RequestHeaders.requestContextHeader = \"Request-Context\";\r\n    /**\r\n     * Target instrumentation header that is added to the response and retrieved by the\r\n     * calling application when processing incoming responses.\r\n     */\r\n    RequestHeaders.requestContextTargetKey = \"appId\";\r\n    /**\r\n     * Request-Context appId format\r\n     */\r\n    RequestHeaders.requestContextAppIdFormat = \"appId=cid-v1:\";\r\n    /**\r\n     * Request-Id header\r\n     */\r\n    RequestHeaders.requestIdHeader = \"Request-Id\";\r\n    /**\r\n     * Sdk-Context header\r\n     * If this header passed with appId in content then appId will be returned back by the backend.\r\n     */\r\n    RequestHeaders.sdkContextHeader = \"Sdk-Context\";\r\n    /**\r\n     * String to pass in header for requesting appId back from the backend.\r\n     */\r\n    RequestHeaders.sdkContextHeaderAppIdRequest = \"appId\";\r\n    RequestHeaders.requestContextHeaderLowerCase = \"request-context\";\r\n    return RequestHeaders;\r\n}());\r\nexport { RequestHeaders };\r\n//# sourceMappingURL=RequestResponseHeaders.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { LoggingSeverity, _InternalMessageId } from '@microsoft/applicationinsights-core-js';\r\nvar DataSanitizer = /** @class */ (function () {\r\n    function DataSanitizer() {\r\n    }\r\n    DataSanitizer.sanitizeKeyAndAddUniqueness = function (logger, key, map) {\r\n        var origLength = key.length;\r\n        var field = DataSanitizer.sanitizeKey(logger, key);\r\n        // validation truncated the length.  We need to add uniqueness\r\n        if (field.length !== origLength) {\r\n            var i = 0;\r\n            var uniqueField = field;\r\n            while (map[uniqueField] !== undefined) {\r\n                i++;\r\n                uniqueField = field.substring(0, DataSanitizer.MAX_NAME_LENGTH - 3) + DataSanitizer.padNumber(i);\r\n            }\r\n            field = uniqueField;\r\n        }\r\n        return field;\r\n    };\r\n    DataSanitizer.sanitizeKey = function (logger, name) {\r\n        if (name) {\r\n            // Remove any leading or trailing whitepace\r\n            name = DataSanitizer.trim(name.toString());\r\n            // truncate the string to 150 chars\r\n            if (name.length > DataSanitizer.MAX_NAME_LENGTH) {\r\n                name = name.substring(0, DataSanitizer.MAX_NAME_LENGTH);\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.NameTooLong, \"name is too long.  It has been truncated to \" + DataSanitizer.MAX_NAME_LENGTH + \" characters.\", { name: name }, true);\r\n            }\r\n        }\r\n        return name;\r\n    };\r\n    DataSanitizer.sanitizeString = function (logger, value, maxLength) {\r\n        if (maxLength === void 0) { maxLength = DataSanitizer.MAX_STRING_LENGTH; }\r\n        if (value) {\r\n            maxLength = maxLength ? maxLength : DataSanitizer.MAX_STRING_LENGTH; // in case default parameters dont work\r\n            value = DataSanitizer.trim(value);\r\n            if (value.toString().length > maxLength) {\r\n                value = value.toString().substring(0, maxLength);\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.StringValueTooLong, \"string value is too long. It has been truncated to \" + maxLength + \" characters.\", { value: value }, true);\r\n            }\r\n        }\r\n        return value;\r\n    };\r\n    DataSanitizer.sanitizeUrl = function (logger, url) {\r\n        return DataSanitizer.sanitizeInput(logger, url, DataSanitizer.MAX_URL_LENGTH, _InternalMessageId.UrlTooLong);\r\n    };\r\n    DataSanitizer.sanitizeMessage = function (logger, message) {\r\n        if (message) {\r\n            if (message.length > DataSanitizer.MAX_MESSAGE_LENGTH) {\r\n                message = message.substring(0, DataSanitizer.MAX_MESSAGE_LENGTH);\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.MessageTruncated, \"message is too long, it has been truncated to \" + DataSanitizer.MAX_MESSAGE_LENGTH + \" characters.\", { message: message }, true);\r\n            }\r\n        }\r\n        return message;\r\n    };\r\n    DataSanitizer.sanitizeException = function (logger, exception) {\r\n        if (exception) {\r\n            if (exception.length > DataSanitizer.MAX_EXCEPTION_LENGTH) {\r\n                exception = exception.substring(0, DataSanitizer.MAX_EXCEPTION_LENGTH);\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.ExceptionTruncated, \"exception is too long, it has been truncated to \" + DataSanitizer.MAX_EXCEPTION_LENGTH + \" characters.\", { exception: exception }, true);\r\n            }\r\n        }\r\n        return exception;\r\n    };\r\n    DataSanitizer.sanitizeProperties = function (logger, properties) {\r\n        if (properties) {\r\n            var tempProps = {};\r\n            for (var prop in properties) {\r\n                var value = properties[prop];\r\n                if (typeof value === \"object\" && typeof JSON !== \"undefined\") {\r\n                    // Stringify any part C properties\r\n                    try {\r\n                        value = JSON.stringify(value);\r\n                    }\r\n                    catch (e) {\r\n                        logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.CannotSerializeObjectNonSerializable, \"custom property is not valid\", { exception: e }, true);\r\n                    }\r\n                }\r\n                value = DataSanitizer.sanitizeString(logger, value, DataSanitizer.MAX_PROPERTY_LENGTH);\r\n                prop = DataSanitizer.sanitizeKeyAndAddUniqueness(logger, prop, tempProps);\r\n                tempProps[prop] = value;\r\n            }\r\n            properties = tempProps;\r\n        }\r\n        return properties;\r\n    };\r\n    DataSanitizer.sanitizeMeasurements = function (logger, measurements) {\r\n        if (measurements) {\r\n            var tempMeasurements = {};\r\n            for (var measure in measurements) {\r\n                var value = measurements[measure];\r\n                measure = DataSanitizer.sanitizeKeyAndAddUniqueness(logger, measure, tempMeasurements);\r\n                tempMeasurements[measure] = value;\r\n            }\r\n            measurements = tempMeasurements;\r\n        }\r\n        return measurements;\r\n    };\r\n    DataSanitizer.sanitizeId = function (logger, id) {\r\n        return id ? DataSanitizer.sanitizeInput(logger, id, DataSanitizer.MAX_ID_LENGTH, _InternalMessageId.IdTooLong).toString() : id;\r\n    };\r\n    DataSanitizer.sanitizeInput = function (logger, input, maxLength, _msgId) {\r\n        if (input) {\r\n            input = DataSanitizer.trim(input);\r\n            if (input.length > maxLength) {\r\n                input = input.substring(0, maxLength);\r\n                logger.throwInternal(LoggingSeverity.WARNING, _msgId, \"input is too long, it has been truncated to \" + maxLength + \" characters.\", { data: input }, true);\r\n            }\r\n        }\r\n        return input;\r\n    };\r\n    DataSanitizer.padNumber = function (num) {\r\n        var s = \"00\" + num;\r\n        return s.substr(s.length - 3);\r\n    };\r\n    /**\r\n     * helper method to trim strings (IE8 does not implement String.prototype.trim)\r\n     */\r\n    DataSanitizer.trim = function (str) {\r\n        if (typeof str !== \"string\")\r\n            return str;\r\n        return str.replace(/^\\s+|\\s+$/g, \"\");\r\n    };\r\n    /**\r\n    * Max length allowed for custom names.\r\n    */\r\n    DataSanitizer.MAX_NAME_LENGTH = 150;\r\n    /**\r\n     * Max length allowed for Id field in page views.\r\n     */\r\n    DataSanitizer.MAX_ID_LENGTH = 128;\r\n    /**\r\n     * Max length allowed for custom values.\r\n     */\r\n    DataSanitizer.MAX_PROPERTY_LENGTH = 8192;\r\n    /**\r\n     * Max length allowed for names\r\n     */\r\n    DataSanitizer.MAX_STRING_LENGTH = 1024;\r\n    /**\r\n     * Max length allowed for url.\r\n     */\r\n    DataSanitizer.MAX_URL_LENGTH = 2048;\r\n    /**\r\n     * Max length allowed for messages.\r\n     */\r\n    DataSanitizer.MAX_MESSAGE_LENGTH = 32768;\r\n    /**\r\n     * Max length allowed for exceptions.\r\n     */\r\n    DataSanitizer.MAX_EXCEPTION_LENGTH = 32768;\r\n    return DataSanitizer;\r\n}());\r\nexport { DataSanitizer };\r\n//# sourceMappingURL=DataSanitizer.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { StorageType } from \"./Enums\";\r\nimport { CoreUtils, _InternalMessageId, LoggingSeverity } from \"@microsoft/applicationinsights-core-js\";\r\nimport { RequestHeaders } from \"./RequestResponseHeaders\";\r\nimport { DataSanitizer } from \"./Telemetry/Common/DataSanitizer\";\r\nvar Util = /** @class */ (function () {\r\n    function Util() {\r\n    }\r\n    /*\r\n     * Force the SDK not to use local and session storage\r\n    */\r\n    Util.disableStorage = function () {\r\n        Util._canUseLocalStorage = false;\r\n        Util._canUseSessionStorage = false;\r\n    };\r\n    /**\r\n     * Gets the localStorage object if available\r\n     * @return {Storage} - Returns the storage object if available else returns null\r\n     */\r\n    Util._getLocalStorageObject = function () {\r\n        if (Util.canUseLocalStorage()) {\r\n            return Util._getVerifiedStorageObject(StorageType.LocalStorage);\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Tests storage object (localStorage or sessionStorage) to verify that it is usable\r\n     * More details here: https://mathiasbynens.be/notes/localstorage-pattern\r\n     * @param storageType Type of storage\r\n     * @return {Storage} Returns storage object verified that it is usable\r\n     */\r\n    Util._getVerifiedStorageObject = function (storageType) {\r\n        var storage = null;\r\n        var fail;\r\n        var uid;\r\n        try {\r\n            if (typeof window === 'undefined') {\r\n                return null;\r\n            }\r\n            uid = new Date;\r\n            storage = storageType === StorageType.LocalStorage ? window.localStorage : window.sessionStorage;\r\n            storage.setItem(uid, uid);\r\n            fail = storage.getItem(uid) != uid;\r\n            storage.removeItem(uid);\r\n            if (fail) {\r\n                storage = null;\r\n            }\r\n        }\r\n        catch (exception) {\r\n            storage = null;\r\n        }\r\n        return storage;\r\n    };\r\n    /**\r\n     *  Checks if endpoint URL is application insights internal injestion service URL.\r\n     *\r\n     *  @param endpointUrl Endpoint URL to check.\r\n     *  @returns {boolean} True if if endpoint URL is application insights internal injestion service URL.\r\n     */\r\n    Util.isInternalApplicationInsightsEndpoint = function (endpointUrl) {\r\n        return Util._internalEndpoints.indexOf(endpointUrl.toLowerCase()) !== -1;\r\n    };\r\n    /**\r\n     *  Check if the browser supports local storage.\r\n     *\r\n     *  @returns {boolean} True if local storage is supported.\r\n     */\r\n    Util.canUseLocalStorage = function () {\r\n        if (Util._canUseLocalStorage === undefined) {\r\n            Util._canUseLocalStorage = !!Util._getVerifiedStorageObject(StorageType.LocalStorage);\r\n        }\r\n        return Util._canUseLocalStorage;\r\n    };\r\n    /**\r\n     *  Get an object from the browser's local storage\r\n     *\r\n     *  @param {string} name - the name of the object to get from storage\r\n     *  @returns {string} The contents of the storage object with the given name. Null if storage is not supported.\r\n     */\r\n    Util.getStorage = function (logger, name) {\r\n        var storage = Util._getLocalStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                return storage.getItem(name);\r\n            }\r\n            catch (e) {\r\n                Util._canUseLocalStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserCannotReadLocalStorage, \"Browser failed read of local storage. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     *  Set the contents of an object in the browser's local storage\r\n     *\r\n     *  @param {string} name - the name of the object to set in storage\r\n     *  @param {string} data - the contents of the object to set in storage\r\n     *  @returns {boolean} True if the storage object could be written.\r\n     */\r\n    Util.setStorage = function (logger, name, data) {\r\n        var storage = Util._getLocalStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                storage.setItem(name, data);\r\n                return true;\r\n            }\r\n            catch (e) {\r\n                Util._canUseLocalStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserCannotWriteLocalStorage, \"Browser failed write to local storage. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     *  Remove an object from the browser's local storage\r\n     *\r\n     *  @param {string} name - the name of the object to remove from storage\r\n     *  @returns {boolean} True if the storage object could be removed.\r\n     */\r\n    Util.removeStorage = function (logger, name) {\r\n        var storage = Util._getLocalStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                storage.removeItem(name);\r\n                return true;\r\n            }\r\n            catch (e) {\r\n                Util._canUseLocalStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserFailedRemovalFromLocalStorage, \"Browser failed removal of local storage item. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * Gets the sessionStorage object if available\r\n     * @return {Storage} - Returns the storage object if available else returns null\r\n     */\r\n    Util._getSessionStorageObject = function () {\r\n        if (Util.canUseSessionStorage()) {\r\n            return Util._getVerifiedStorageObject(StorageType.SessionStorage);\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     *  Check if the browser supports session storage.\r\n     *\r\n     *  @returns {boolean} True if session storage is supported.\r\n     */\r\n    Util.canUseSessionStorage = function () {\r\n        if (Util._canUseSessionStorage === undefined) {\r\n            Util._canUseSessionStorage = !!Util._getVerifiedStorageObject(StorageType.SessionStorage);\r\n        }\r\n        return Util._canUseSessionStorage;\r\n    };\r\n    /**\r\n     *  Gets the list of session storage keys\r\n     *\r\n     *  @returns {string[]} List of session storage keys\r\n     */\r\n    Util.getSessionStorageKeys = function () {\r\n        var keys = [];\r\n        if (Util.canUseSessionStorage()) {\r\n            for (var key in window.sessionStorage) {\r\n                keys.push(key);\r\n            }\r\n        }\r\n        return keys;\r\n    };\r\n    /**\r\n     *  Get an object from the browser's session storage\r\n     *\r\n     *  @param {string} name - the name of the object to get from storage\r\n     *  @returns {string} The contents of the storage object with the given name. Null if storage is not supported.\r\n     */\r\n    Util.getSessionStorage = function (logger, name) {\r\n        var storage = Util._getSessionStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                return storage.getItem(name);\r\n            }\r\n            catch (e) {\r\n                Util._canUseSessionStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserCannotReadSessionStorage, \"Browser failed read of session storage. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     *  Set the contents of an object in the browser's session storage\r\n     *\r\n     *  @param {string} name - the name of the object to set in storage\r\n     *  @param {string} data - the contents of the object to set in storage\r\n     *  @returns {boolean} True if the storage object could be written.\r\n     */\r\n    Util.setSessionStorage = function (logger, name, data) {\r\n        var storage = Util._getSessionStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                storage.setItem(name, data);\r\n                return true;\r\n            }\r\n            catch (e) {\r\n                Util._canUseSessionStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserCannotWriteSessionStorage, \"Browser failed write to session storage. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     *  Remove an object from the browser's session storage\r\n     *\r\n     *  @param {string} name - the name of the object to remove from storage\r\n     *  @returns {boolean} True if the storage object could be removed.\r\n     */\r\n    Util.removeSessionStorage = function (logger, name) {\r\n        var storage = Util._getSessionStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                storage.removeItem(name);\r\n                return true;\r\n            }\r\n            catch (e) {\r\n                Util._canUseSessionStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserFailedRemovalFromSessionStorage, \"Browser failed removal of session storage item. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /*\r\n     * Force the SDK not to store and read any data from cookies\r\n     */\r\n    Util.disableCookies = function () {\r\n        Util._canUseCookies = false;\r\n    };\r\n    /*\r\n     * helper method to tell if document.cookie object is available\r\n     */\r\n    Util.canUseCookies = function (logger) {\r\n        if (Util._canUseCookies === undefined) {\r\n            Util._canUseCookies = false;\r\n            try {\r\n                Util._canUseCookies = Util.document.cookie !== undefined;\r\n            }\r\n            catch (e) {\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.CannotAccessCookie, \"Cannot access document.cookie - \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n            ;\r\n        }\r\n        return Util._canUseCookies;\r\n    };\r\n    /**\r\n     * helper method to set userId and sessionId cookie\r\n     */\r\n    Util.setCookie = function (logger, name, value, domain) {\r\n        var domainAttrib = \"\";\r\n        var secureAttrib = \"\";\r\n        if (domain) {\r\n            domainAttrib = \";domain=\" + domain;\r\n        }\r\n        if (Util.document.location && Util.document.location.protocol === \"https:\") {\r\n            secureAttrib = \";secure\";\r\n        }\r\n        if (Util.canUseCookies(logger)) {\r\n            Util.document.cookie = name + \"=\" + value + domainAttrib + \";path=/\" + secureAttrib;\r\n        }\r\n    };\r\n    Util.stringToBoolOrDefault = function (str, defaultValue) {\r\n        if (defaultValue === void 0) { defaultValue = false; }\r\n        if (str === undefined || str === null) {\r\n            return defaultValue;\r\n        }\r\n        return str.toString().toLowerCase() === \"true\";\r\n    };\r\n    /**\r\n     * helper method to access userId and sessionId cookie\r\n     */\r\n    Util.getCookie = function (logger, name) {\r\n        if (!Util.canUseCookies(logger)) {\r\n            return;\r\n        }\r\n        var value = \"\";\r\n        if (name && name.length) {\r\n            var cookieName = name + \"=\";\r\n            var cookies = Util.document.cookie.split(\";\");\r\n            for (var i = 0; i < cookies.length; i++) {\r\n                var cookie = cookies[i];\r\n                cookie = Util.trim(cookie);\r\n                if (cookie && cookie.indexOf(cookieName) === 0) {\r\n                    value = cookie.substring(cookieName.length, cookies[i].length);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return value;\r\n    };\r\n    /**\r\n     * Deletes a cookie by setting it's expiration time in the past.\r\n     * @param name - The name of the cookie to delete.\r\n     */\r\n    Util.deleteCookie = function (logger, name) {\r\n        if (Util.canUseCookies(logger)) {\r\n            // Setting the expiration date in the past immediately removes the cookie\r\n            Util.document.cookie = name + \"=;path=/;expires=Thu, 01 Jan 1970 00:00:01 GMT;\";\r\n        }\r\n    };\r\n    /**\r\n     * helper method to trim strings (IE8 does not implement String.prototype.trim)\r\n     */\r\n    Util.trim = function (str) {\r\n        if (typeof str !== \"string\")\r\n            return str;\r\n        return str.replace(/^\\s+|\\s+$/g, \"\");\r\n    };\r\n    /**\r\n     * generate random id string\r\n     */\r\n    Util.newId = function () {\r\n        var base64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\r\n        var result = \"\";\r\n        // tslint:disable-next-line:insecure-random\r\n        var random = Math.random() * 1073741824; //5 symbols in base64, almost maxint\r\n        while (random > 0) {\r\n            var char = base64chars.charAt(random % 64);\r\n            result += char;\r\n            random = Math.floor(random / 64);\r\n        }\r\n        return result;\r\n    };\r\n    /**\r\n     * Check if an object is of type Array\r\n     */\r\n    Util.isArray = function (obj) {\r\n        return Object.prototype.toString.call(obj) === \"[object Array]\";\r\n    };\r\n    /**\r\n     * Check if an object is of type Error\r\n     */\r\n    Util.isError = function (obj) {\r\n        return Object.prototype.toString.call(obj) === \"[object Error]\";\r\n    };\r\n    /**\r\n     * Check if an object is of type Date\r\n     */\r\n    Util.isDate = function (obj) {\r\n        return Object.prototype.toString.call(obj) === \"[object Date]\";\r\n    };\r\n    /**\r\n     * Convert a date to I.S.O. format in IE8\r\n     */\r\n    Util.toISOStringForIE8 = function (date) {\r\n        if (Util.isDate(date)) {\r\n            if (Date.prototype.toISOString) {\r\n                return date.toISOString();\r\n            }\r\n            else {\r\n                var pad = function (num) {\r\n                    var r = String(num);\r\n                    if (r.length === 1) {\r\n                        r = \"0\" + r;\r\n                    }\r\n                    return r;\r\n                };\r\n                return date.getUTCFullYear()\r\n                    + \"-\" + pad(date.getUTCMonth() + 1)\r\n                    + \"-\" + pad(date.getUTCDate())\r\n                    + \"T\" + pad(date.getUTCHours())\r\n                    + \":\" + pad(date.getUTCMinutes())\r\n                    + \":\" + pad(date.getUTCSeconds())\r\n                    + \".\" + String((date.getUTCMilliseconds() / 1000).toFixed(3)).slice(2, 5)\r\n                    + \"Z\";\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Gets IE version if we are running on IE, or null otherwise\r\n     */\r\n    Util.getIEVersion = function (userAgentStr) {\r\n        if (userAgentStr === void 0) { userAgentStr = null; }\r\n        var myNav = userAgentStr ? userAgentStr.toLowerCase() : navigator.userAgent.toLowerCase();\r\n        return (myNav.indexOf('msie') != -1) ? parseInt(myNav.split('msie')[1]) : null;\r\n    };\r\n    /**\r\n     * Convert ms to c# time span format\r\n     */\r\n    Util.msToTimeSpan = function (totalms) {\r\n        if (isNaN(totalms) || totalms < 0) {\r\n            totalms = 0;\r\n        }\r\n        totalms = Math.round(totalms);\r\n        var ms = \"\" + totalms % 1000;\r\n        var sec = \"\" + Math.floor(totalms / 1000) % 60;\r\n        var min = \"\" + Math.floor(totalms / (1000 * 60)) % 60;\r\n        var hour = \"\" + Math.floor(totalms / (1000 * 60 * 60)) % 24;\r\n        var days = Math.floor(totalms / (1000 * 60 * 60 * 24));\r\n        ms = ms.length === 1 ? \"00\" + ms : ms.length === 2 ? \"0\" + ms : ms;\r\n        sec = sec.length < 2 ? \"0\" + sec : sec;\r\n        min = min.length < 2 ? \"0\" + min : min;\r\n        hour = hour.length < 2 ? \"0\" + hour : hour;\r\n        return (days > 0 ? days + \".\" : \"\") + hour + \":\" + min + \":\" + sec + \".\" + ms;\r\n    };\r\n    /**\r\n    * Checks if error has no meaningful data inside. Ususally such errors are received by window.onerror when error\r\n    * happens in a script from other domain (cross origin, CORS).\r\n    */\r\n    Util.isCrossOriginError = function (message, url, lineNumber, columnNumber, error) {\r\n        return (message === \"Script error.\" || message === \"Script error\") && !error;\r\n    };\r\n    /**\r\n    * Returns string representation of an object suitable for diagnostics logging.\r\n    */\r\n    Util.dump = function (object) {\r\n        var objectTypeDump = Object.prototype.toString.call(object);\r\n        var propertyValueDump = JSON.stringify(object);\r\n        if (objectTypeDump === \"[object Error]\") {\r\n            propertyValueDump = \"{ stack: '\" + object.stack + \"', message: '\" + object.message + \"', name: '\" + object.name + \"'\";\r\n        }\r\n        return objectTypeDump + propertyValueDump;\r\n    };\r\n    /**\r\n    * Returns the name of object if it's an Error. Otherwise, returns empty string.\r\n    */\r\n    Util.getExceptionName = function (object) {\r\n        var objectTypeDump = Object.prototype.toString.call(object);\r\n        if (objectTypeDump === \"[object Error]\") {\r\n            return object.name;\r\n        }\r\n        return \"\";\r\n    };\r\n    /**\r\n     * Adds an event handler for the specified event\r\n     * @param eventName {string} - The name of the event\r\n     * @param callback {any} - The callback function that needs to be executed for the given event\r\n     * @return {boolean} - true if the handler was successfully added\r\n     */\r\n    Util.addEventHandler = function (eventName, callback) {\r\n        if (typeof window === 'undefined' || !window || typeof eventName !== 'string' || typeof callback !== 'function') {\r\n            return false;\r\n        }\r\n        // Create verb for the event\r\n        var verbEventName = 'on' + eventName;\r\n        // check if addEventListener is available\r\n        if (window.addEventListener) {\r\n            window.addEventListener(eventName, callback, false);\r\n        }\r\n        else if (window[\"attachEvent\"]) {\r\n            window[\"attachEvent\"](verbEventName, callback);\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     * Tells if a browser supports a Beacon API\r\n     */\r\n    Util.IsBeaconApiSupported = function () {\r\n        return ('sendBeacon' in navigator && navigator.sendBeacon);\r\n    };\r\n    Util.document = typeof document !== \"undefined\" ? document : {};\r\n    Util._canUseCookies = undefined;\r\n    Util._canUseLocalStorage = undefined;\r\n    Util._canUseSessionStorage = undefined;\r\n    // listing only non-geo specific locations \r\n    Util._internalEndpoints = [\r\n        \"https://dc.services.visualstudio.com/v2/track\",\r\n        \"https://breeze.aimon.applicationinsights.io/v2/track\",\r\n        \"https://dc-int.services.visualstudio.com/v2/track\"\r\n    ];\r\n    Util.NotSpecified = \"not_specified\";\r\n    return Util;\r\n}());\r\nexport { Util };\r\nvar UrlHelper = /** @class */ (function () {\r\n    function UrlHelper() {\r\n    }\r\n    UrlHelper.parseUrl = function (url) {\r\n        if (!UrlHelper.htmlAnchorElement) {\r\n            UrlHelper.htmlAnchorElement = !!UrlHelper.document.createElement ? UrlHelper.document.createElement('a') : {};\r\n        }\r\n        UrlHelper.htmlAnchorElement.href = url;\r\n        return UrlHelper.htmlAnchorElement;\r\n    };\r\n    UrlHelper.getAbsoluteUrl = function (url) {\r\n        var result;\r\n        var a = UrlHelper.parseUrl(url);\r\n        if (a) {\r\n            result = a.href;\r\n        }\r\n        return result;\r\n    };\r\n    UrlHelper.getPathName = function (url) {\r\n        var result;\r\n        var a = UrlHelper.parseUrl(url);\r\n        if (a) {\r\n            result = a.pathname;\r\n        }\r\n        return result;\r\n    };\r\n    UrlHelper.getCompleteUrl = function (method, absoluteUrl) {\r\n        if (method) {\r\n            return method.toUpperCase() + \" \" + absoluteUrl;\r\n        }\r\n        else {\r\n            return absoluteUrl;\r\n        }\r\n    };\r\n    UrlHelper.document = typeof document !== \"undefined\" ? document : {};\r\n    return UrlHelper;\r\n}());\r\nexport { UrlHelper };\r\nvar CorrelationIdHelper = /** @class */ (function () {\r\n    function CorrelationIdHelper() {\r\n    }\r\n    /**\r\n    * Checks if a request url is not on a excluded domain list and if it is safe to add correlation headers\r\n    */\r\n    CorrelationIdHelper.canIncludeCorrelationHeader = function (config, requestUrl, currentHost) {\r\n        if (config && config.disableCorrelationHeaders) {\r\n            return false;\r\n        }\r\n        if (!requestUrl) {\r\n            return false;\r\n        }\r\n        var requestHost = UrlHelper.parseUrl(requestUrl).host.toLowerCase();\r\n        if ((!config || !config.enableCorsCorrelation) && requestHost !== currentHost) {\r\n            return false;\r\n        }\r\n        var excludedDomains = config && config.correlationHeaderExcludedDomains;\r\n        if (!excludedDomains || excludedDomains.length == 0) {\r\n            return true;\r\n        }\r\n        for (var i = 0; i < excludedDomains.length; i++) {\r\n            var regex = new RegExp(excludedDomains[i].toLowerCase().replace(/\\./g, \"\\.\").replace(/\\*/g, \".*\"));\r\n            if (regex.test(requestHost)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n    * Combines target appId and target role name from response header.\r\n    */\r\n    CorrelationIdHelper.getCorrelationContext = function (responseHeader) {\r\n        if (responseHeader) {\r\n            var correlationId = CorrelationIdHelper.getCorrelationContextValue(responseHeader, RequestHeaders.requestContextTargetKey);\r\n            if (correlationId && correlationId !== CorrelationIdHelper.correlationIdPrefix) {\r\n                return correlationId;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n    * Gets key from correlation response header\r\n    */\r\n    CorrelationIdHelper.getCorrelationContextValue = function (responseHeader, key) {\r\n        if (responseHeader) {\r\n            var keyValues = responseHeader.split(\",\");\r\n            for (var i = 0; i < keyValues.length; ++i) {\r\n                var keyValue = keyValues[i].split(\"=\");\r\n                if (keyValue.length == 2 && keyValue[0] == key) {\r\n                    return keyValue[1];\r\n                }\r\n            }\r\n        }\r\n    };\r\n    CorrelationIdHelper.correlationIdPrefix = \"cid-v1:\";\r\n    return CorrelationIdHelper;\r\n}());\r\nexport { CorrelationIdHelper };\r\nvar AjaxHelper = /** @class */ (function () {\r\n    function AjaxHelper() {\r\n    }\r\n    AjaxHelper.ParseDependencyPath = function (logger, absoluteUrl, method, commandName) {\r\n        var target, name = commandName, data = commandName;\r\n        if (absoluteUrl && absoluteUrl.length > 0) {\r\n            var parsedUrl = UrlHelper.parseUrl(absoluteUrl);\r\n            target = parsedUrl.host;\r\n            if (!name) {\r\n                if (parsedUrl.pathname != null) {\r\n                    var pathName = (parsedUrl.pathname.length === 0) ? \"/\" : parsedUrl.pathname;\r\n                    if (pathName.charAt(0) !== '/') {\r\n                        pathName = \"/\" + pathName;\r\n                    }\r\n                    data = parsedUrl.pathname;\r\n                    name = DataSanitizer.sanitizeString(logger, method ? method + \" \" + pathName : pathName);\r\n                }\r\n                else {\r\n                    name = DataSanitizer.sanitizeString(logger, absoluteUrl);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            target = commandName;\r\n            name = commandName;\r\n        }\r\n        return {\r\n            target: target,\r\n            name: name,\r\n            data: data\r\n        };\r\n    };\r\n    return AjaxHelper;\r\n}());\r\nexport { AjaxHelper };\r\n/**\r\n * A utility class that helps getting time related parameters\r\n */\r\nvar DateTimeUtils = /** @class */ (function () {\r\n    function DateTimeUtils() {\r\n    }\r\n    /**\r\n     * Get the number of milliseconds since 1970/01/01 in local timezone\r\n     */\r\n    DateTimeUtils.Now = (typeof window === 'undefined') ? function () { return new Date().getTime(); } :\r\n        (window.performance && window.performance.now && window.performance.timing) ?\r\n            function () {\r\n                return window.performance.now() + window.performance.timing.navigationStart;\r\n            }\r\n            :\r\n                function () {\r\n                    return new Date().getTime();\r\n                };\r\n    /**\r\n     * Gets duration between two timestamps\r\n     */\r\n    DateTimeUtils.GetDuration = function (start, end) {\r\n        var result = null;\r\n        if (start !== 0 && end !== 0 && !CoreUtils.isNullOrUndefined(start) && !CoreUtils.isNullOrUndefined(end)) {\r\n            result = end - start;\r\n        }\r\n        return result;\r\n    };\r\n    return DateTimeUtils;\r\n}());\r\nexport { DateTimeUtils };\r\n//# sourceMappingURL=Util.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nexport var DisabledPropertyName = \"Microsoft_ApplicationInsights_BypassAjaxInstrumentation\";\r\nexport var SampleRate = \"sampleRate\";\r\nexport var ProcessLegacy = \"ProcessLegacy\";\r\nexport var HttpMethod = \"http.method\";\r\n//# sourceMappingURL=Constants.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { Base } from './Base';\r\n/**\r\n * Data struct to contain both B and C sections.\r\n */\r\nvar Data = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Data, _super);\r\n    function Data() {\r\n        return _super.call(this) || this;\r\n    }\r\n    return Data;\r\n}(Base));\r\nexport { Data };\r\n//# sourceMappingURL=Data.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\n/**\r\n     * Data struct to contain only C section with custom fields.\r\n     */\r\nvar Base = /** @class */ (function () {\r\n    function Base() {\r\n    }\r\n    return Base;\r\n}());\r\nexport { Base };\r\n//# sourceMappingURL=Base.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Envelope as AIEnvelope } from '../../Interfaces/Contracts/Generated/Envelope';\r\nimport { DataSanitizer } from './DataSanitizer';\r\nimport { FieldType } from '../../Enums';\r\nimport { Util } from '../../Util';\r\nvar Envelope = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Envelope, _super);\r\n    /**\r\n     * Constructs a new instance of telemetry data.\r\n     */\r\n    function Envelope(logger, data, name) {\r\n        var _this = _super.call(this) || this;\r\n        _this.name = DataSanitizer.sanitizeString(logger, name) || Util.NotSpecified;\r\n        _this.data = data;\r\n        _this.time = Util.toISOStringForIE8(new Date());\r\n        _this.aiDataContract = {\r\n            time: FieldType.Required,\r\n            iKey: FieldType.Required,\r\n            name: FieldType.Required,\r\n            sampleRate: function () {\r\n                return (_this.sampleRate == 100) ? FieldType.Hidden : FieldType.Required;\r\n            },\r\n            tags: FieldType.Required,\r\n            data: FieldType.Required\r\n        };\r\n        return _this;\r\n    }\r\n    return Envelope;\r\n}(AIEnvelope));\r\nexport { Envelope };\r\n//# sourceMappingURL=Envelope.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n/**\r\n * System variables for a telemetry item.\r\n */\r\nvar Envelope = /** @class */ (function () {\r\n    function Envelope() {\r\n        this.ver = 1;\r\n        this.sampleRate = 100.0;\r\n        this.tags = {};\r\n    }\r\n    return Envelope;\r\n}());\r\nexport { Envelope };\r\n//# sourceMappingURL=Envelope.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\n/**\r\n * The abstract common base of all domains.\r\n */\r\nvar Domain = /** @class */ (function () {\r\n    function Domain() {\r\n    }\r\n    return Domain;\r\n}());\r\nexport { Domain };\r\n//# sourceMappingURL=Domain.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { Domain } from './Domain';\r\n/**\r\n * Instances of Event represent structured event records that can be grouped and searched by their properties. Event data item also creates a metric of event count by name.\r\n */\r\nvar EventData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(EventData, _super);\r\n    function EventData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return EventData;\r\n}(Domain));\r\nexport { EventData };\r\n//# sourceMappingURL=EventData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { EventData } from '../Interfaces/Contracts/Generated/EventData';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { Util } from '../Util';\r\nvar Event = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Event, _super);\r\n    /**\r\n     * Constructs a new instance of the EventTelemetry object\r\n     */\r\n    function Event(logger, name, properties, measurements) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            name: FieldType.Required,\r\n            properties: FieldType.Default,\r\n            measurements: FieldType.Default\r\n        };\r\n        _this.name = DataSanitizer.sanitizeString(logger, name) || Util.NotSpecified;\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        _this.measurements = DataSanitizer.sanitizeMeasurements(logger, measurements);\r\n        return _this;\r\n    }\r\n    Event.envelopeType = \"Microsoft.ApplicationInsights.{0}.Event\";\r\n    Event.dataType = \"EventData\";\r\n    return Event;\r\n}(EventData));\r\nexport { Event };\r\n//# sourceMappingURL=Event.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\n/**\r\n * Stack frame information.\r\n */\r\nvar StackFrame = /** @class */ (function () {\r\n    function StackFrame() {\r\n    }\r\n    return StackFrame;\r\n}());\r\nexport { StackFrame };\r\n//# sourceMappingURL=StackFrame.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n/**\r\n * Exception details of the exception in a chain.\r\n */\r\nvar ExceptionDetails = /** @class */ (function () {\r\n    function ExceptionDetails() {\r\n        this.hasFullStack = true;\r\n        this.parsedStack = [];\r\n    }\r\n    return ExceptionDetails;\r\n}());\r\nexport { ExceptionDetails };\r\n//# sourceMappingURL=ExceptionDetails.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { StackFrame } from '../Interfaces/Contracts/Generated/StackFrame';\r\nimport { ExceptionData } from '../Interfaces/Contracts/Generated/ExceptionData';\r\nimport { ExceptionDetails } from '../Interfaces/Contracts/Generated/ExceptionDetails';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { Util } from '../Util';\r\nvar Exception = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Exception, _super);\r\n    /**\r\n    * Constructs a new isntance of the ExceptionTelemetry object\r\n    */\r\n    function Exception(logger, exception, properties, measurements, severityLevel) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            exceptions: FieldType.Required,\r\n            severityLevel: FieldType.Default,\r\n            properties: FieldType.Default,\r\n            measurements: FieldType.Default\r\n        };\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        _this.measurements = DataSanitizer.sanitizeMeasurements(logger, measurements);\r\n        _this.exceptions = [new _ExceptionDetails(logger, exception)];\r\n        if (severityLevel) {\r\n            _this.severityLevel = severityLevel;\r\n        }\r\n        return _this;\r\n    }\r\n    /**\r\n    * Creates a simple exception with 1 stack frame. Useful for manual constracting of exception.\r\n    */\r\n    Exception.CreateSimpleException = function (message, typeName, assembly, fileName, details, line) {\r\n        return {\r\n            exceptions: [\r\n                {\r\n                    hasFullStack: true,\r\n                    message: message,\r\n                    stack: details,\r\n                    typeName: typeName\r\n                }\r\n            ]\r\n        };\r\n    };\r\n    Exception.envelopeType = \"Microsoft.ApplicationInsights.{0}.Exception\";\r\n    Exception.dataType = \"ExceptionData\";\r\n    return Exception;\r\n}(ExceptionData));\r\nexport { Exception };\r\nvar _ExceptionDetails = /** @class */ (function (_super) {\r\n    tslib_1.__extends(_ExceptionDetails, _super);\r\n    function _ExceptionDetails(logger, exception) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            id: FieldType.Default,\r\n            outerId: FieldType.Default,\r\n            typeName: FieldType.Required,\r\n            message: FieldType.Required,\r\n            hasFullStack: FieldType.Default,\r\n            stack: FieldType.Default,\r\n            parsedStack: FieldType.Array\r\n        };\r\n        _this.typeName = DataSanitizer.sanitizeString(logger, exception.name) || Util.NotSpecified;\r\n        _this.message = DataSanitizer.sanitizeMessage(logger, exception.message) || Util.NotSpecified;\r\n        var stack = exception[\"stack\"];\r\n        _this.parsedStack = _this.parseStack(stack);\r\n        _this.stack = DataSanitizer.sanitizeException(logger, stack);\r\n        _this.hasFullStack = Util.isArray(_this.parsedStack) && _this.parsedStack.length > 0;\r\n        return _this;\r\n    }\r\n    _ExceptionDetails.prototype.parseStack = function (stack) {\r\n        var parsedStack = undefined;\r\n        if (typeof stack === \"string\") {\r\n            var frames = stack.split('\\n');\r\n            parsedStack = [];\r\n            var level = 0;\r\n            var totalSizeInBytes = 0;\r\n            for (var i = 0; i <= frames.length; i++) {\r\n                var frame = frames[i];\r\n                if (_StackFrame.regex.test(frame)) {\r\n                    var parsedFrame = new _StackFrame(frames[i], level++);\r\n                    totalSizeInBytes += parsedFrame.sizeInBytes;\r\n                    parsedStack.push(parsedFrame);\r\n                }\r\n            }\r\n            // DP Constraint - exception parsed stack must be < 32KB\r\n            // remove frames from the middle to meet the threshold\r\n            var exceptionParsedStackThreshold = 32 * 1024;\r\n            if (totalSizeInBytes > exceptionParsedStackThreshold) {\r\n                var left = 0;\r\n                var right = parsedStack.length - 1;\r\n                var size = 0;\r\n                var acceptedLeft = left;\r\n                var acceptedRight = right;\r\n                while (left < right) {\r\n                    // check size\r\n                    var lSize = parsedStack[left].sizeInBytes;\r\n                    var rSize = parsedStack[right].sizeInBytes;\r\n                    size += lSize + rSize;\r\n                    if (size > exceptionParsedStackThreshold) {\r\n                        // remove extra frames from the middle\r\n                        var howMany = acceptedRight - acceptedLeft + 1;\r\n                        parsedStack.splice(acceptedLeft, howMany);\r\n                        break;\r\n                    }\r\n                    // update pointers\r\n                    acceptedLeft = left;\r\n                    acceptedRight = right;\r\n                    left++;\r\n                    right--;\r\n                }\r\n            }\r\n        }\r\n        return parsedStack;\r\n    };\r\n    return _ExceptionDetails;\r\n}(ExceptionDetails));\r\nvar _StackFrame = /** @class */ (function (_super) {\r\n    tslib_1.__extends(_StackFrame, _super);\r\n    function _StackFrame(frame, level) {\r\n        var _this = _super.call(this) || this;\r\n        _this.sizeInBytes = 0;\r\n        _this.aiDataContract = {\r\n            level: FieldType.Required,\r\n            method: FieldType.Required,\r\n            assembly: FieldType.Default,\r\n            fileName: FieldType.Default,\r\n            line: FieldType.Default\r\n        };\r\n        _this.level = level;\r\n        _this.method = \"<no_method>\";\r\n        _this.assembly = Util.trim(frame);\r\n        var matches = frame.match(_StackFrame.regex);\r\n        if (matches && matches.length >= 5) {\r\n            _this.method = Util.trim(matches[2]) || _this.method;\r\n            _this.fileName = Util.trim(matches[4]);\r\n            _this.line = parseInt(matches[5]) || 0;\r\n        }\r\n        _this.sizeInBytes += _this.method.length;\r\n        _this.sizeInBytes += _this.fileName.length;\r\n        _this.sizeInBytes += _this.assembly.length;\r\n        // todo: these might need to be removed depending on how the back-end settles on their size calculation\r\n        _this.sizeInBytes += _StackFrame.baseSize;\r\n        _this.sizeInBytes += _this.level.toString().length;\r\n        _this.sizeInBytes += _this.line.toString().length;\r\n        return _this;\r\n    }\r\n    // regex to match stack frames from ie/chrome/ff\r\n    // methodName=$2, fileName=$4, lineNo=$5, column=$6\r\n    _StackFrame.regex = /^([\\s]+at)?(.*?)(\\@|\\s\\(|\\s)([^\\(\\@\\n]+):([0-9]+):([0-9]+)(\\)?)$/;\r\n    _StackFrame.baseSize = 58; //'{\"method\":\"\",\"level\":,\"assembly\":\"\",\"fileName\":\"\",\"line\":}'.length\r\n    return _StackFrame;\r\n}(StackFrame));\r\nexport { _StackFrame };\r\n//# sourceMappingURL=Exception.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Domain } from './Domain';\r\n/**\r\n * An instance of Exception represents a handled or unhandled exception that occurred during execution of the monitored application.\r\n */\r\nvar ExceptionData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ExceptionData, _super);\r\n    function ExceptionData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.exceptions = [];\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return ExceptionData;\r\n}(Domain));\r\nexport { ExceptionData };\r\n//# sourceMappingURL=ExceptionData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { Domain } from './Domain';\r\n/**\r\n * An instance of the Metric item is a list of measurements (single data points) and/or aggregations.\r\n */\r\nvar MetricData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(MetricData, _super);\r\n    function MetricData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.metrics = [];\r\n        _this.properties = {};\r\n        return _this;\r\n    }\r\n    return MetricData;\r\n}(Domain));\r\nexport { MetricData };\r\n//# sourceMappingURL=MetricData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { DataPointType } from './DataPointType';\r\n/**\r\n * Metric data single measurement.\r\n */\r\nvar DataPoint = /** @class */ (function () {\r\n    function DataPoint() {\r\n        this.kind = DataPointType.Measurement;\r\n    }\r\n    return DataPoint;\r\n}());\r\nexport { DataPoint };\r\n//# sourceMappingURL=DataPoint.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\n/**\r\n* Defines the level of severity for the event.\r\n*/\r\nexport var SeverityLevel;\r\n(function (SeverityLevel) {\r\n    SeverityLevel[SeverityLevel[\"Verbose\"] = 0] = \"Verbose\";\r\n    SeverityLevel[SeverityLevel[\"Information\"] = 1] = \"Information\";\r\n    SeverityLevel[SeverityLevel[\"Warning\"] = 2] = \"Warning\";\r\n    SeverityLevel[SeverityLevel[\"Error\"] = 3] = \"Error\";\r\n    SeverityLevel[SeverityLevel[\"Critical\"] = 4] = \"Critical\";\r\n})(SeverityLevel || (SeverityLevel = {}));\r\n//# sourceMappingURL=SeverityLevel.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { DataPoint as AIDataPoint } from '../../Interfaces/Contracts/Generated/DataPoint';\r\nimport { FieldType } from '../../Enums';\r\nvar DataPoint = /** @class */ (function (_super) {\r\n    tslib_1.__extends(DataPoint, _super);\r\n    function DataPoint() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * The data contract for serializing this object.\r\n         */\r\n        _this.aiDataContract = {\r\n            name: FieldType.Required,\r\n            kind: FieldType.Default,\r\n            value: FieldType.Required,\r\n            count: FieldType.Default,\r\n            min: FieldType.Default,\r\n            max: FieldType.Default,\r\n            stdDev: FieldType.Default\r\n        };\r\n        return _this;\r\n    }\r\n    return DataPoint;\r\n}(AIDataPoint));\r\nexport { DataPoint };\r\n//# sourceMappingURL=DataPoint.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { MetricData } from '../Interfaces/Contracts/Generated/MetricData';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { DataPoint } from './Common/DataPoint';\r\nimport { Util } from '../Util';\r\nvar Metric = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Metric, _super);\r\n    /**\r\n     * Constructs a new instance of the MetricTelemetry object\r\n     */\r\n    function Metric(logger, name, value, count, min, max, properties) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            metrics: FieldType.Required,\r\n            properties: FieldType.Default\r\n        };\r\n        var dataPoint = new DataPoint();\r\n        dataPoint.count = count > 0 ? count : undefined;\r\n        dataPoint.max = isNaN(max) || max === null ? undefined : max;\r\n        dataPoint.min = isNaN(min) || min === null ? undefined : min;\r\n        dataPoint.name = DataSanitizer.sanitizeString(logger, name) || Util.NotSpecified;\r\n        dataPoint.value = value;\r\n        _this.metrics = [dataPoint];\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        return _this;\r\n    }\r\n    Metric.envelopeType = \"Microsoft.ApplicationInsights.{0}.Metric\";\r\n    Metric.dataType = \"MetricData\";\r\n    return Metric;\r\n}(MetricData));\r\nexport { Metric };\r\n//# sourceMappingURL=Metric.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { EventData } from './EventData';\r\n/**\r\n * An instance of PageView represents a generic action on a page like a button click. It is also the base type for PageView.\r\n */\r\nvar PageViewData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PageViewData, _super);\r\n    function PageViewData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return PageViewData;\r\n}(EventData));\r\nexport { PageViewData };\r\n//# sourceMappingURL=PageViewData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { PageViewData } from '../Interfaces/Contracts/Generated/PageViewData';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { Util } from '../Util';\r\nvar PageView = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PageView, _super);\r\n    /**\r\n     * Constructs a new instance of the PageEventTelemetry object\r\n     */\r\n    function PageView(logger, name, url, durationMs, properties, measurements, id) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            name: FieldType.Default,\r\n            url: FieldType.Default,\r\n            duration: FieldType.Default,\r\n            properties: FieldType.Default,\r\n            measurements: FieldType.Default,\r\n            id: FieldType.Default\r\n        };\r\n        _this.id = DataSanitizer.sanitizeId(logger, id);\r\n        _this.url = DataSanitizer.sanitizeUrl(logger, url);\r\n        _this.name = DataSanitizer.sanitizeString(logger, name) || Util.NotSpecified;\r\n        if (!isNaN(durationMs)) {\r\n            _this.duration = Util.msToTimeSpan(durationMs);\r\n        }\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        _this.measurements = DataSanitizer.sanitizeMeasurements(logger, measurements);\r\n        return _this;\r\n    }\r\n    PageView.envelopeType = \"Microsoft.ApplicationInsights.{0}.Pageview\";\r\n    PageView.dataType = \"PageviewData\";\r\n    return PageView;\r\n}(PageViewData));\r\nexport { PageView };\r\n//# sourceMappingURL=PageView.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { Util } from '../Util';\r\nimport { AjaxHelper } from '../Util';\r\nimport { RemoteDependencyData as GeneratedRemoteDependencyData } from '../Interfaces/Contracts/Generated/RemoteDependencyData';\r\nvar RemoteDependencyData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RemoteDependencyData, _super);\r\n    /**\r\n     * Constructs a new instance of the RemoteDependencyData object\r\n     */\r\n    function RemoteDependencyData(logger, id, absoluteUrl, commandName, value, success, resultCode, method, requestAPI, properties, measurements) {\r\n        if (requestAPI === void 0) { requestAPI = \"Ajax\"; }\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            id: FieldType.Required,\r\n            ver: FieldType.Required,\r\n            name: FieldType.Default,\r\n            resultCode: FieldType.Default,\r\n            duration: FieldType.Default,\r\n            success: FieldType.Default,\r\n            data: FieldType.Default,\r\n            target: FieldType.Default,\r\n            type: FieldType.Default,\r\n            properties: FieldType.Default,\r\n            measurements: FieldType.Default,\r\n            kind: FieldType.Default,\r\n            value: FieldType.Default,\r\n            count: FieldType.Default,\r\n            min: FieldType.Default,\r\n            max: FieldType.Default,\r\n            stdDev: FieldType.Default,\r\n            dependencyKind: FieldType.Default,\r\n            dependencySource: FieldType.Default,\r\n            commandName: FieldType.Default,\r\n            dependencyTypeName: FieldType.Default,\r\n        };\r\n        _this.id = id;\r\n        _this.duration = Util.msToTimeSpan(value);\r\n        _this.success = success;\r\n        _this.resultCode = resultCode + \"\";\r\n        _this.type = DataSanitizer.sanitizeString(logger, requestAPI);\r\n        var dependencyFields = AjaxHelper.ParseDependencyPath(logger, absoluteUrl, method, commandName);\r\n        _this.data = DataSanitizer.sanitizeUrl(logger, commandName) || dependencyFields.data; // get a value from hosturl if commandName not available\r\n        _this.target = dependencyFields.target;\r\n        _this.name = dependencyFields.name;\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        _this.measurements = DataSanitizer.sanitizeMeasurements(logger, measurements);\r\n        return _this;\r\n    }\r\n    RemoteDependencyData.envelopeType = \"Microsoft.ApplicationInsights.{0}.RemoteDependency\";\r\n    RemoteDependencyData.dataType = \"RemoteDependencyData\";\r\n    return RemoteDependencyData;\r\n}(GeneratedRemoteDependencyData));\r\nexport { RemoteDependencyData };\r\n//# sourceMappingURL=RemoteDependencyData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { Domain } from './Domain';\r\n/**\r\n * An instance of Remote Dependency represents an interaction of the monitored component with a remote component/service like SQL or an HTTP endpoint.\r\n */\r\nvar RemoteDependencyData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RemoteDependencyData, _super);\r\n    function RemoteDependencyData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.success = true;\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return RemoteDependencyData;\r\n}(Domain));\r\nexport { RemoteDependencyData };\r\n//# sourceMappingURL=RemoteDependencyData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { MessageData } from '../Interfaces/Contracts/Generated/MessageData';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { Util } from '../Util';\r\nvar Trace = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Trace, _super);\r\n    /**\r\n     * Constructs a new instance of the TraceTelemetry object\r\n     */\r\n    function Trace(logger, message, severityLevel, properties) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            message: FieldType.Required,\r\n            severityLevel: FieldType.Default,\r\n            properties: FieldType.Default\r\n        };\r\n        message = message || Util.NotSpecified;\r\n        _this.message = DataSanitizer.sanitizeMessage(logger, message);\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        if (severityLevel) {\r\n            _this.severityLevel = severityLevel;\r\n        }\r\n        return _this;\r\n    }\r\n    Trace.envelopeType = \"Microsoft.ApplicationInsights.{0}.Message\";\r\n    Trace.dataType = \"MessageData\";\r\n    return Trace;\r\n}(MessageData));\r\nexport { Trace };\r\n//# sourceMappingURL=Trace.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { Domain } from './Domain';\r\n/**\r\n * Instances of Message represent printf-like trace statements that are text-searched. Log4Net, NLog and other text-based log file entries are translated into intances of this type. The message does not have measurements.\r\n */\r\nvar MessageData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(MessageData, _super);\r\n    function MessageData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.properties = {};\r\n        return _this;\r\n    }\r\n    return MessageData;\r\n}(Domain));\r\nexport { MessageData };\r\n//# sourceMappingURL=MessageData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { PageViewPerfData } from '../Interfaces/Contracts/Generated/PageViewPerfData';\r\nimport { FieldType } from '../Enums';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { Util } from '../Util';\r\nvar PageViewPerformance = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PageViewPerformance, _super);\r\n    /**\r\n     * Constructs a new instance of the PageEventTelemetry object\r\n     */\r\n    function PageViewPerformance(logger, name, url, unused, properties, measurements) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            name: FieldType.Default,\r\n            url: FieldType.Default,\r\n            duration: FieldType.Default,\r\n            perfTotal: FieldType.Default,\r\n            networkConnect: FieldType.Default,\r\n            sentRequest: FieldType.Default,\r\n            receivedResponse: FieldType.Default,\r\n            domProcessing: FieldType.Default,\r\n            properties: FieldType.Default,\r\n            measurements: FieldType.Default\r\n        };\r\n        _this.url = DataSanitizer.sanitizeUrl(logger, url);\r\n        _this.name = DataSanitizer.sanitizeString(logger, name) || Util.NotSpecified;\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        _this.measurements = DataSanitizer.sanitizeMeasurements(logger, measurements);\r\n        return _this;\r\n    }\r\n    PageViewPerformance.envelopeType = \"Microsoft.ApplicationInsights.{0}.PageviewPerformance\";\r\n    PageViewPerformance.dataType = \"PageviewPerformanceData\";\r\n    return PageViewPerformance;\r\n}(PageViewPerfData));\r\nexport { PageViewPerformance };\r\n//# sourceMappingURL=PageViewPerformance.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { PageViewData } from './PageViewData';\r\n/**\r\n * An instance of PageViewPerf represents: a page view with no performance data, a page view with performance data, or just the performance data of an earlier page request.\r\n */\r\nvar PageViewPerfData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PageViewPerfData, _super);\r\n    function PageViewPerfData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return PageViewPerfData;\r\n}(PageViewData));\r\nexport { PageViewPerfData };\r\n//# sourceMappingURL=PageViewPerfData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Data as AIData } from '../../Interfaces/Contracts/Generated/Data';\r\nimport { FieldType } from '../../Enums';\r\nvar Data = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Data, _super);\r\n    /**\r\n     * Constructs a new instance of telemetry data.\r\n     */\r\n    function Data(baseType, data) {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * The data contract for serializing this object.\r\n         */\r\n        _this.aiDataContract = {\r\n            baseType: FieldType.Required,\r\n            baseData: FieldType.Required\r\n        };\r\n        _this.baseType = baseType;\r\n        _this.baseData = data;\r\n        return _this;\r\n    }\r\n    return Data;\r\n}(AIData));\r\nexport { Data };\r\n//# sourceMappingURL=Data.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { CoreUtils } from '@microsoft/applicationinsights-core-js';\r\nvar ConfigurationManager = /** @class */ (function () {\r\n    function ConfigurationManager() {\r\n    }\r\n    ConfigurationManager.getConfig = function (config, field, identifier, defaultValue) {\r\n        if (defaultValue === void 0) { defaultValue = false; }\r\n        var configValue;\r\n        if (identifier && config.extensionConfig && config.extensionConfig[identifier] && !CoreUtils.isNullOrUndefined(config.extensionConfig[identifier][field])) {\r\n            configValue = config.extensionConfig[identifier][field];\r\n        }\r\n        else {\r\n            configValue = config[field];\r\n        }\r\n        return !CoreUtils.isNullOrUndefined(configValue) ? configValue : defaultValue;\r\n    };\r\n    return ConfigurationManager;\r\n}());\r\nexport { ConfigurationManager };\r\n//# sourceMappingURL=IConfig.js.map","import { ContextTagKeys } from \"./Contracts/Generated/ContextTagKeys\";\r\nvar Extensions = /** @class */ (function () {\r\n    function Extensions() {\r\n    }\r\n    Extensions.UserExt = \"user\";\r\n    Extensions.DeviceExt = \"device\";\r\n    Extensions.TraceExt = \"trace\";\r\n    Extensions.WebExt = \"web\";\r\n    Extensions.AppExt = \"app\";\r\n    Extensions.OSExt = \"os\";\r\n    Extensions.SessionExt = \"ses\";\r\n    Extensions.SDKExt = \"sdk\";\r\n    return Extensions;\r\n}());\r\nexport { Extensions };\r\nvar SDKExtensionKeys = /** @class */ (function () {\r\n    function SDKExtensionKeys() {\r\n    }\r\n    SDKExtensionKeys.libVer = 'libVer';\r\n    return SDKExtensionKeys;\r\n}());\r\nexport { SDKExtensionKeys };\r\nexport var CtxTagKeys = new ContextTagKeys();\r\n//# sourceMappingURL=PartAExtensions.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\nvar ContextTagKeys = /** @class */ (function () {\r\n    function ContextTagKeys() {\r\n        this.applicationVersion = \"ai.application.ver\";\r\n        this.applicationBuild = \"ai.application.build\";\r\n        this.applicationTypeId = \"ai.application.typeId\";\r\n        this.applicationId = \"ai.application.applicationId\";\r\n        this.applicationLayer = \"ai.application.layer\";\r\n        this.deviceId = \"ai.device.id\";\r\n        this.deviceIp = \"ai.device.ip\";\r\n        this.deviceLanguage = \"ai.device.language\";\r\n        this.deviceLocale = \"ai.device.locale\";\r\n        this.deviceModel = \"ai.device.model\";\r\n        this.deviceFriendlyName = \"ai.device.friendlyName\";\r\n        this.deviceNetwork = \"ai.device.network\";\r\n        this.deviceNetworkName = \"ai.device.networkName\";\r\n        this.deviceOEMName = \"ai.device.oemName\";\r\n        this.deviceOS = \"ai.device.os\";\r\n        this.deviceOSVersion = \"ai.device.osVersion\";\r\n        this.deviceRoleInstance = \"ai.device.roleInstance\";\r\n        this.deviceRoleName = \"ai.device.roleName\";\r\n        this.deviceScreenResolution = \"ai.device.screenResolution\";\r\n        this.deviceType = \"ai.device.type\";\r\n        this.deviceMachineName = \"ai.device.machineName\";\r\n        this.deviceVMName = \"ai.device.vmName\";\r\n        this.deviceBrowser = \"ai.device.browser\";\r\n        this.deviceBrowserVersion = \"ai.device.browserVersion\";\r\n        this.locationIp = \"ai.location.ip\";\r\n        this.locationCountry = \"ai.location.country\";\r\n        this.locationProvince = \"ai.location.province\";\r\n        this.locationCity = \"ai.location.city\";\r\n        this.operationId = \"ai.operation.id\";\r\n        this.operationName = \"ai.operation.name\";\r\n        this.operationParentId = \"ai.operation.parentId\";\r\n        this.operationRootId = \"ai.operation.rootId\";\r\n        this.operationSyntheticSource = \"ai.operation.syntheticSource\";\r\n        this.operationCorrelationVector = \"ai.operation.correlationVector\";\r\n        this.sessionId = \"ai.session.id\";\r\n        this.sessionIsFirst = \"ai.session.isFirst\";\r\n        this.sessionIsNew = \"ai.session.isNew\";\r\n        this.userAccountAcquisitionDate = \"ai.user.accountAcquisitionDate\";\r\n        this.userAccountId = \"ai.user.accountId\";\r\n        this.userAgent = \"ai.user.userAgent\";\r\n        this.userId = \"ai.user.id\";\r\n        this.userStoreRegion = \"ai.user.storeRegion\";\r\n        this.userAuthUserId = \"ai.user.authUserId\";\r\n        this.userAnonymousUserAcquisitionDate = \"ai.user.anonUserAcquisitionDate\";\r\n        this.userAuthenticatedUserAcquisitionDate = \"ai.user.authUserAcquisitionDate\";\r\n        this.cloudName = \"ai.cloud.name\";\r\n        this.cloudRole = \"ai.cloud.role\";\r\n        this.cloudRoleVer = \"ai.cloud.roleVer\";\r\n        this.cloudRoleInstance = \"ai.cloud.roleInstance\";\r\n        this.cloudEnvironment = \"ai.cloud.environment\";\r\n        this.cloudLocation = \"ai.cloud.location\";\r\n        this.cloudDeploymentUnit = \"ai.cloud.deploymentUnit\";\r\n        this.internalNodeName = \"ai.internal.nodeName\";\r\n        this.internalSdkVersion = \"ai.internal.sdkVersion\";\r\n        this.internalAgentVersion = \"ai.internal.agentVersion\";\r\n    }\r\n    return ContextTagKeys;\r\n}());\r\nexport { ContextTagKeys };\r\n//# sourceMappingURL=ContextTagKeys.js.map","import { Util } from '@microsoft/applicationinsights-common';\r\nimport { LoggingSeverity, _InternalMessageId } from '@microsoft/applicationinsights-core-js';\r\n/*\r\n * An array based send buffer.\r\n */\r\nvar ArraySendBuffer = /** @class */ (function () {\r\n    function ArraySendBuffer(config) {\r\n        this._config = config;\r\n        this._buffer = [];\r\n    }\r\n    ArraySendBuffer.prototype.enqueue = function (payload) {\r\n        this._buffer.push(payload);\r\n    };\r\n    ArraySendBuffer.prototype.count = function () {\r\n        return this._buffer.length;\r\n    };\r\n    ArraySendBuffer.prototype.clear = function () {\r\n        this._buffer.length = 0;\r\n    };\r\n    ArraySendBuffer.prototype.getItems = function () {\r\n        return this._buffer.slice(0);\r\n    };\r\n    ArraySendBuffer.prototype.batchPayloads = function (payload) {\r\n        if (payload && payload.length > 0) {\r\n            var batch = this._config.emitLineDelimitedJson() ?\r\n                payload.join(\"\\n\") :\r\n                \"[\" + payload.join(\",\") + \"]\";\r\n            return batch;\r\n        }\r\n        return null;\r\n    };\r\n    ArraySendBuffer.prototype.markAsSent = function (payload) {\r\n        this.clear();\r\n    };\r\n    ArraySendBuffer.prototype.clearSent = function (payload) {\r\n        // not supported\r\n    };\r\n    return ArraySendBuffer;\r\n}());\r\nexport { ArraySendBuffer };\r\n/*\r\n * Session storege buffer holds a copy of all unsent items in the browser session storage.\r\n */\r\nvar SessionStorageSendBuffer = /** @class */ (function () {\r\n    function SessionStorageSendBuffer(logger, config) {\r\n        this._bufferFullMessageSent = false;\r\n        this._logger = logger;\r\n        this._config = config;\r\n        var bufferItems = this.getBuffer(SessionStorageSendBuffer.BUFFER_KEY);\r\n        var notDeliveredItems = this.getBuffer(SessionStorageSendBuffer.SENT_BUFFER_KEY);\r\n        this._buffer = bufferItems.concat(notDeliveredItems);\r\n        // If the buffer has too many items, drop items from the end.\r\n        if (this._buffer.length > SessionStorageSendBuffer.MAX_BUFFER_SIZE) {\r\n            this._buffer.length = SessionStorageSendBuffer.MAX_BUFFER_SIZE;\r\n        }\r\n        // update DataLossAnalyzer with the number of recovered items\r\n        // Uncomment if you want to use DataLossanalyzer\r\n        // DataLossAnalyzer.itemsRestoredFromSessionBuffer = this._buffer.length;\r\n        this.setBuffer(SessionStorageSendBuffer.SENT_BUFFER_KEY, []);\r\n        this.setBuffer(SessionStorageSendBuffer.BUFFER_KEY, this._buffer);\r\n    }\r\n    SessionStorageSendBuffer.prototype.enqueue = function (payload) {\r\n        if (this._buffer.length >= SessionStorageSendBuffer.MAX_BUFFER_SIZE) {\r\n            // sent internal log only once per page view\r\n            if (!this._bufferFullMessageSent) {\r\n                this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.SessionStorageBufferFull, \"Maximum buffer size reached: \" + this._buffer.length, true);\r\n                this._bufferFullMessageSent = true;\r\n            }\r\n            return;\r\n        }\r\n        this._buffer.push(payload);\r\n        this.setBuffer(SessionStorageSendBuffer.BUFFER_KEY, this._buffer);\r\n    };\r\n    SessionStorageSendBuffer.prototype.count = function () {\r\n        return this._buffer.length;\r\n    };\r\n    SessionStorageSendBuffer.prototype.clear = function () {\r\n        this._buffer.length = 0;\r\n        this.setBuffer(SessionStorageSendBuffer.BUFFER_KEY, []);\r\n        this.setBuffer(SessionStorageSendBuffer.SENT_BUFFER_KEY, []);\r\n        this._bufferFullMessageSent = false;\r\n    };\r\n    SessionStorageSendBuffer.prototype.getItems = function () {\r\n        return this._buffer.slice(0);\r\n    };\r\n    SessionStorageSendBuffer.prototype.batchPayloads = function (payload) {\r\n        if (payload && payload.length > 0) {\r\n            var batch = this._config.emitLineDelimitedJson() ?\r\n                payload.join(\"\\n\") :\r\n                \"[\" + payload.join(\",\") + \"]\";\r\n            return batch;\r\n        }\r\n        return null;\r\n    };\r\n    SessionStorageSendBuffer.prototype.markAsSent = function (payload) {\r\n        this._buffer = this.removePayloadsFromBuffer(payload, this._buffer);\r\n        this.setBuffer(SessionStorageSendBuffer.BUFFER_KEY, this._buffer);\r\n        var sentElements = this.getBuffer(SessionStorageSendBuffer.SENT_BUFFER_KEY);\r\n        if (sentElements instanceof Array && payload instanceof Array) {\r\n            sentElements = sentElements.concat(payload);\r\n            if (sentElements.length > SessionStorageSendBuffer.MAX_BUFFER_SIZE) {\r\n                // We send telemetry normally. If the SENT_BUFFER is too big we don't add new elements\r\n                // until we receive a response from the backend and the buffer has free space again (see clearSent method)\r\n                this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.SessionStorageBufferFull, \"Sent buffer reached its maximum size: \" + sentElements.length, true);\r\n                sentElements.length = SessionStorageSendBuffer.MAX_BUFFER_SIZE;\r\n            }\r\n            this.setBuffer(SessionStorageSendBuffer.SENT_BUFFER_KEY, sentElements);\r\n        }\r\n    };\r\n    SessionStorageSendBuffer.prototype.clearSent = function (payload) {\r\n        var sentElements = this.getBuffer(SessionStorageSendBuffer.SENT_BUFFER_KEY);\r\n        sentElements = this.removePayloadsFromBuffer(payload, sentElements);\r\n        this.setBuffer(SessionStorageSendBuffer.SENT_BUFFER_KEY, sentElements);\r\n    };\r\n    SessionStorageSendBuffer.prototype.removePayloadsFromBuffer = function (payloads, buffer) {\r\n        var remaining = [];\r\n        for (var i in buffer) {\r\n            var contains = false;\r\n            for (var j in payloads) {\r\n                if (payloads[j] === buffer[i]) {\r\n                    contains = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (!contains) {\r\n                remaining.push(buffer[i]);\r\n            }\r\n        }\r\n        ;\r\n        return remaining;\r\n    };\r\n    SessionStorageSendBuffer.prototype.getBuffer = function (key) {\r\n        try {\r\n            var bufferJson = Util.getSessionStorage(this._logger, key);\r\n            if (bufferJson) {\r\n                var buffer = JSON.parse(bufferJson);\r\n                if (buffer) {\r\n                    return buffer;\r\n                }\r\n            }\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.FailedToRestoreStorageBuffer, \" storage key: \" + key + \", \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n        return [];\r\n    };\r\n    SessionStorageSendBuffer.prototype.setBuffer = function (key, buffer) {\r\n        try {\r\n            var bufferJson = JSON.stringify(buffer);\r\n            Util.setSessionStorage(this._logger, key, bufferJson);\r\n        }\r\n        catch (e) {\r\n            // if there was an error, clear the buffer\r\n            // telemetry is stored in the _buffer array so we won't loose any items\r\n            Util.setSessionStorage(this._logger, key, JSON.stringify([]));\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.FailedToSetStorageBuffer, \" storage key: \" + key + \", \" + Util.getExceptionName(e) + \". Buffer cleared\", { exception: Util.dump(e) });\r\n        }\r\n    };\r\n    SessionStorageSendBuffer.BUFFER_KEY = \"AI_buffer\";\r\n    SessionStorageSendBuffer.SENT_BUFFER_KEY = \"AI_sentBuffer\";\r\n    // Maximum number of payloads stored in the buffer. If the buffer is full, new elements will be dropped. \r\n    SessionStorageSendBuffer.MAX_BUFFER_SIZE = 2000;\r\n    return SessionStorageSendBuffer;\r\n}());\r\nexport { SessionStorageSendBuffer };\r\n//# sourceMappingURL=SendBuffer.js.map","import * as tslib_1 from \"tslib\";\r\nimport { Data, Envelope, RemoteDependencyData, Event, Exception, Metric, PageView, Trace, PageViewPerformance, CtxTagKeys, HttpMethod } from '@microsoft/applicationinsights-common';\r\nimport { CoreUtils, LoggingSeverity, _InternalMessageId } from '@microsoft/applicationinsights-core-js';\r\n// these two constants are used to filter out properties not needed when trying to extract custom properties and measurements from the incoming payload\r\nvar baseType = \"baseType\";\r\nvar baseData = \"baseData\";\r\nvar EnvelopeCreator = /** @class */ (function () {\r\n    function EnvelopeCreator() {\r\n    }\r\n    EnvelopeCreator.extractProperties = function (data) {\r\n        var customProperties = null;\r\n        for (var key in data) {\r\n            if (data.hasOwnProperty(key)) {\r\n                var value = data[key];\r\n                if (typeof value !== \"number\") {\r\n                    if (!customProperties) {\r\n                        customProperties = {};\r\n                    }\r\n                    customProperties[key] = value;\r\n                }\r\n            }\r\n        }\r\n        return customProperties;\r\n    };\r\n    EnvelopeCreator.extractPropsAndMeasurements = function (data, properties, measurements) {\r\n        if (!CoreUtils.isNullOrUndefined(data)) {\r\n            for (var key in data) {\r\n                if (data.hasOwnProperty(key)) {\r\n                    var value = data[key];\r\n                    if (typeof value === \"number\") {\r\n                        measurements[key] = value;\r\n                    }\r\n                    else if (typeof value === \"string\") {\r\n                        properties[key] = value;\r\n                    }\r\n                    else {\r\n                        properties[key] = JSON.stringify(value);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    // TODO: Do we want this to take logger as arg or use this._logger as nonstatic?\r\n    EnvelopeCreator.createEnvelope = function (logger, envelopeType, telemetryItem, data) {\r\n        var envelope = new Envelope(logger, data, envelopeType);\r\n        envelope.iKey = telemetryItem.iKey;\r\n        var iKeyNoDashes = telemetryItem.iKey.replace(/-/g, \"\");\r\n        envelope.name = envelope.name.replace(\"{0}\", iKeyNoDashes);\r\n        // extract all extensions from ctx\r\n        EnvelopeCreator.extractPartAExtensions(telemetryItem, envelope);\r\n        // loop through the envelope tags (extension of Part A) and pick out the ones that should go in outgoing envelope tags\r\n        if (!telemetryItem.tags) {\r\n            telemetryItem.tags = [];\r\n        }\r\n        return envelope;\r\n    };\r\n    /*\r\n     * Maps Part A data from CS 4.0\r\n     */\r\n    EnvelopeCreator.extractPartAExtensions = function (item, env) {\r\n        // todo: switch to keys from common in this method\r\n        if (!env.tags) {\r\n            env.tags = [];\r\n        }\r\n        if (!item.ext) {\r\n            item.ext = {};\r\n        }\r\n        if (!item.tags) {\r\n            item.tags = [];\r\n        }\r\n        if (item.ext.user) {\r\n            if (item.ext.user.authId) {\r\n                env.tags[CtxTagKeys.userAuthUserId] = item.ext.user.authId;\r\n            }\r\n            var userId = item.ext.user.id || item.ext.user.localId;\r\n            if (userId) {\r\n                env.tags[CtxTagKeys.userId] = userId;\r\n            }\r\n        }\r\n        if (item.ext.app) {\r\n            if (item.ext.app.sesId) {\r\n                env.tags[CtxTagKeys.sessionId] = item.ext.app.sesId;\r\n            }\r\n        }\r\n        if (item.ext.device) {\r\n            if (item.ext.device.id || item.ext.device.localId) {\r\n                env.tags[CtxTagKeys.deviceId] = item.ext.device.id || item.ext.device.localId;\r\n            }\r\n            if (item.ext.device.ip) {\r\n                env.tags[CtxTagKeys.deviceIp] = item.ext.device.ip;\r\n            }\r\n        }\r\n        if (item.ext.web) {\r\n            var web = item.ext.web;\r\n            if (web.browserLang) {\r\n                env.tags[CtxTagKeys.deviceLanguage] = web.browserLang;\r\n            }\r\n            if (web.browserVer) {\r\n                env.tags[CtxTagKeys.deviceBrowserVersion] = web.browserVer;\r\n            }\r\n            if (web.browser) {\r\n                env.tags[CtxTagKeys.deviceBrowser] = web.browser;\r\n            }\r\n            env.data = env.data || {};\r\n            env.data.baseData = env.data.baseData || {};\r\n            env.data.baseData.properties = env.data.baseData.properties || {};\r\n            if (web.domain) {\r\n                env.data.baseData.properties['domain'] = web.domain;\r\n            }\r\n            if (web.isManual) {\r\n                env.data.baseData.properties['isManual'] = web.isManual.toString();\r\n            }\r\n            if (web.screenRes) {\r\n                env.data.baseData.properties['screenRes'] = web.screenRes;\r\n            }\r\n            if (web.userConsent) {\r\n                env.data.baseData.properties['userConsent'] = web.userConsent.toString();\r\n            }\r\n        }\r\n        if (item.ext.device) {\r\n            if (item.ext.device.model) {\r\n                env.tags[CtxTagKeys.deviceModel] = item.ext.device.model;\r\n            }\r\n        }\r\n        if (item.ext.os && item.ext.os.name) {\r\n            env.tags[CtxTagKeys.deviceOS] = item.ext.os.name;\r\n        }\r\n        if (item.ext.device) {\r\n            if (item.ext.device.deviceType) {\r\n                env.tags[CtxTagKeys.deviceType] = item.ext.device.deviceType;\r\n            }\r\n        }\r\n        // No support for mapping Trace.traceState to 2.0 as it is currently empty\r\n        if (item.ext.trace) {\r\n            if (item.ext.trace.parentID) {\r\n                env.tags[CtxTagKeys.operationParentId] = item.ext.trace.parentID;\r\n            }\r\n            if (item.ext.trace.name) {\r\n                env.tags[CtxTagKeys.operationName] = item.ext.trace.name;\r\n            }\r\n            if (item.ext.trace.traceID) {\r\n                env.tags[CtxTagKeys.operationId] = item.ext.trace.traceID;\r\n            }\r\n        }\r\n        // Sample 4.0 schema\r\n        //  {\r\n        //     \"time\" : \"2018-09-05T22:51:22.4936Z\",\r\n        //     \"name\" : \"MetricWithNamespace\",\r\n        //     \"iKey\" : \"ABC-5a4cbd20-e601-4ef5-a3c6-5d6577e4398e\",\r\n        //     \"ext\": {  \"cloud\": {\r\n        //          \"role\": \"WATSON3\",\r\n        //          \"roleInstance\": \"CO4AEAP00000260\"\r\n        //      }, \r\n        //      \"device\": {}, \"correlation\": {} },\r\n        //      \"tags\": [\r\n        //        { \"amazon.region\" : \"east2\" },\r\n        //        { \"os.expid\" : \"wp:02df239\" }\r\n        //     ]\r\n        //   }\r\n        var tgs = {};\r\n        item.tags.forEach(function (tg) {\r\n            tgs = tslib_1.__assign({}, tgs, tg);\r\n        });\r\n        env.tags = tslib_1.__assign({}, env.tags, tgs);\r\n    };\r\n    return EnvelopeCreator;\r\n}());\r\nexport { EnvelopeCreator };\r\nvar DependencyEnvelopeCreator = /** @class */ (function (_super) {\r\n    tslib_1.__extends(DependencyEnvelopeCreator, _super);\r\n    function DependencyEnvelopeCreator() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    DependencyEnvelopeCreator.prototype.Create = function (logger, telemetryItem) {\r\n        this._logger = logger;\r\n        if (CoreUtils.isNullOrUndefined(telemetryItem.baseData)) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TelemetryEnvelopeInvalid, \"telemetryItem.baseData cannot be null.\");\r\n        }\r\n        var customMeasurements = telemetryItem.baseData.measurements || {};\r\n        var customProperties = telemetryItem.baseData.properties || {};\r\n        EnvelopeCreator.extractPropsAndMeasurements(telemetryItem.data, customProperties, customMeasurements);\r\n        var bd = telemetryItem.baseData;\r\n        if (CoreUtils.isNullOrUndefined(bd)) {\r\n            logger.warnToConsole(\"Invalid input for dependency data\");\r\n            return null;\r\n        }\r\n        var id = bd.id;\r\n        var absoluteUrl = bd.target;\r\n        var command = bd.name;\r\n        var duration = bd.duration;\r\n        var success = bd.success;\r\n        var resultCode = bd.responseCode;\r\n        var requestAPI = bd.type;\r\n        var method = bd.properties && bd.properties[HttpMethod] ? bd.properties[HttpMethod] : \"GET\";\r\n        var baseData = new RemoteDependencyData(logger, id, absoluteUrl, command, duration, success, resultCode, method, requestAPI, customProperties, customMeasurements);\r\n        var data = new Data(RemoteDependencyData.dataType, baseData);\r\n        return EnvelopeCreator.createEnvelope(logger, RemoteDependencyData.envelopeType, telemetryItem, data);\r\n    };\r\n    DependencyEnvelopeCreator.DependencyEnvelopeCreator = new DependencyEnvelopeCreator();\r\n    return DependencyEnvelopeCreator;\r\n}(EnvelopeCreator));\r\nexport { DependencyEnvelopeCreator };\r\nvar EventEnvelopeCreator = /** @class */ (function (_super) {\r\n    tslib_1.__extends(EventEnvelopeCreator, _super);\r\n    function EventEnvelopeCreator() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    EventEnvelopeCreator.prototype.Create = function (logger, telemetryItem) {\r\n        this._logger = logger;\r\n        if (CoreUtils.isNullOrUndefined(telemetryItem.baseData)) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TelemetryEnvelopeInvalid, \"telemetryItem.baseData cannot be null.\");\r\n        }\r\n        var customProperties = {};\r\n        var customMeasurements = {};\r\n        if (telemetryItem.baseType !== Event.dataType) {\r\n            customProperties['baseTypeSource'] = telemetryItem.baseType; // save the passed in base type as a property\r\n        }\r\n        if (telemetryItem.baseType === Event.dataType) {\r\n            customProperties = telemetryItem.baseData.properties || {};\r\n            customMeasurements = telemetryItem.baseData.measurements || {};\r\n        }\r\n        else {\r\n            if (telemetryItem.baseData) {\r\n                EnvelopeCreator.extractPropsAndMeasurements(telemetryItem.baseData, customProperties, customMeasurements);\r\n            }\r\n        }\r\n        // Exract root level properties from part C telemetryItem.data\r\n        EnvelopeCreator.extractPropsAndMeasurements(telemetryItem.data, customProperties, customMeasurements);\r\n        var eventName = telemetryItem.baseData.name;\r\n        var baseData = new Event(logger, eventName, customProperties, customMeasurements);\r\n        var data = new Data(Event.dataType, baseData);\r\n        return EnvelopeCreator.createEnvelope(logger, Event.envelopeType, telemetryItem, data);\r\n    };\r\n    EventEnvelopeCreator.EventEnvelopeCreator = new EventEnvelopeCreator();\r\n    return EventEnvelopeCreator;\r\n}(EnvelopeCreator));\r\nexport { EventEnvelopeCreator };\r\nvar ExceptionEnvelopeCreator = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ExceptionEnvelopeCreator, _super);\r\n    function ExceptionEnvelopeCreator() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ExceptionEnvelopeCreator.prototype.Create = function (logger, telemetryItem) {\r\n        this._logger = logger;\r\n        if (CoreUtils.isNullOrUndefined(telemetryItem.baseData)) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TelemetryEnvelopeInvalid, \"telemetryItem.baseData cannot be null.\");\r\n        }\r\n        var baseData = telemetryItem.baseData;\r\n        var data = new Data(Exception.dataType, baseData);\r\n        return EnvelopeCreator.createEnvelope(logger, Exception.envelopeType, telemetryItem, data);\r\n    };\r\n    ExceptionEnvelopeCreator.ExceptionEnvelopeCreator = new ExceptionEnvelopeCreator();\r\n    return ExceptionEnvelopeCreator;\r\n}(EnvelopeCreator));\r\nexport { ExceptionEnvelopeCreator };\r\nvar MetricEnvelopeCreator = /** @class */ (function (_super) {\r\n    tslib_1.__extends(MetricEnvelopeCreator, _super);\r\n    function MetricEnvelopeCreator() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    MetricEnvelopeCreator.prototype.Create = function (logger, telemetryItem) {\r\n        this._logger = logger;\r\n        if (CoreUtils.isNullOrUndefined(telemetryItem.baseData)) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TelemetryEnvelopeInvalid, \"telemetryItem.baseData cannot be null.\");\r\n        }\r\n        var props = telemetryItem.baseData.properties || {};\r\n        var customProperties = EnvelopeCreator.extractProperties(telemetryItem.data);\r\n        customProperties = tslib_1.__assign({}, props, customProperties);\r\n        var name = telemetryItem.baseData.name;\r\n        var average = telemetryItem.baseData.average;\r\n        var sampleCount = telemetryItem.baseData.sampleCount;\r\n        var min = telemetryItem.baseData.min;\r\n        var max = telemetryItem.baseData.max;\r\n        var baseData = new Metric(logger, name, average, sampleCount, min, max, customProperties);\r\n        var data = new Data(Metric.dataType, baseData);\r\n        return EnvelopeCreator.createEnvelope(logger, Metric.envelopeType, telemetryItem, data);\r\n    };\r\n    MetricEnvelopeCreator.MetricEnvelopeCreator = new MetricEnvelopeCreator();\r\n    return MetricEnvelopeCreator;\r\n}(EnvelopeCreator));\r\nexport { MetricEnvelopeCreator };\r\nvar PageViewEnvelopeCreator = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PageViewEnvelopeCreator, _super);\r\n    function PageViewEnvelopeCreator() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    PageViewEnvelopeCreator.prototype.Create = function (logger, telemetryItem) {\r\n        this._logger = logger;\r\n        if (CoreUtils.isNullOrUndefined(telemetryItem.baseData)) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TelemetryEnvelopeInvalid, \"telemetryItem.baseData cannot be null.\");\r\n        }\r\n        // Since duration is not part of the domain properties in Common Schema, extract it from part C\r\n        var duration = undefined;\r\n        if (!CoreUtils.isNullOrUndefined(telemetryItem.baseData) &&\r\n            !CoreUtils.isNullOrUndefined(telemetryItem.baseData.properties)) {\r\n            duration = telemetryItem.baseData.properties.duration;\r\n            delete telemetryItem.baseData.properties.duration;\r\n        }\r\n        var bd = telemetryItem.baseData;\r\n        var name = bd.name;\r\n        var url = bd.uri;\r\n        var id = bd.id;\r\n        var properties = bd.properties || {};\r\n        var measurements = bd.measurements || {};\r\n        // refUri is a field that Breeze still does not recognize as part of Part B. For now, put it in Part C until it supports it as a domain property\r\n        if (!CoreUtils.isNullOrUndefined(bd.refUri)) {\r\n            properties[\"refUri\"] = bd.refUri;\r\n        }\r\n        // pageType is a field that Breeze still does not recognize as part of Part B. For now, put it in Part C until it supports it as a domain property\r\n        if (!CoreUtils.isNullOrUndefined(bd.pageType)) {\r\n            properties[\"pageType\"] = bd.pageType;\r\n        }\r\n        // isLoggedIn is a field that Breeze still does not recognize as part of Part B. For now, put it in Part C until it supports it as a domain property\r\n        if (!CoreUtils.isNullOrUndefined(bd.isLoggedIn)) {\r\n            properties[\"isLoggedIn\"] = bd.isLoggedIn.toString();\r\n        }\r\n        // pageTags is a field that Breeze still does not recognize as part of Part B. For now, put it in Part C until it supports it as a domain property\r\n        if (!CoreUtils.isNullOrUndefined(bd.properties)) {\r\n            var pageTags = bd.properties;\r\n            for (var key in pageTags) {\r\n                if (pageTags.hasOwnProperty(key)) {\r\n                    properties[key] = pageTags[key];\r\n                }\r\n            }\r\n        }\r\n        var baseData = new PageView(logger, name, url, duration, properties, measurements, id);\r\n        var data = new Data(PageView.dataType, baseData);\r\n        return EnvelopeCreator.createEnvelope(logger, PageView.envelopeType, telemetryItem, data);\r\n    };\r\n    PageViewEnvelopeCreator.PageViewEnvelopeCreator = new PageViewEnvelopeCreator();\r\n    return PageViewEnvelopeCreator;\r\n}(EnvelopeCreator));\r\nexport { PageViewEnvelopeCreator };\r\nvar PageViewPerformanceEnvelopeCreator = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PageViewPerformanceEnvelopeCreator, _super);\r\n    function PageViewPerformanceEnvelopeCreator() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    PageViewPerformanceEnvelopeCreator.prototype.Create = function (logger, telemetryItem) {\r\n        this._logger = logger;\r\n        if (CoreUtils.isNullOrUndefined(telemetryItem.baseData)) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TelemetryEnvelopeInvalid, \"telemetryItem.baseData cannot be null.\");\r\n        }\r\n        var bd = telemetryItem.baseData;\r\n        var name = bd.name;\r\n        var url = bd.uri;\r\n        var properties = bd.properties;\r\n        var measurements = bd.measurements;\r\n        var baseData = new PageViewPerformance(logger, name, url, undefined, properties, measurements);\r\n        var data = new Data(PageViewPerformance.dataType, baseData);\r\n        return EnvelopeCreator.createEnvelope(logger, PageViewPerformance.envelopeType, telemetryItem, data);\r\n    };\r\n    PageViewPerformanceEnvelopeCreator.PageViewPerformanceEnvelopeCreator = new PageViewPerformanceEnvelopeCreator();\r\n    return PageViewPerformanceEnvelopeCreator;\r\n}(EnvelopeCreator));\r\nexport { PageViewPerformanceEnvelopeCreator };\r\nvar TraceEnvelopeCreator = /** @class */ (function (_super) {\r\n    tslib_1.__extends(TraceEnvelopeCreator, _super);\r\n    function TraceEnvelopeCreator() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    TraceEnvelopeCreator.prototype.Create = function (logger, telemetryItem) {\r\n        this._logger = logger;\r\n        if (CoreUtils.isNullOrUndefined(telemetryItem.baseData)) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TelemetryEnvelopeInvalid, \"telemetryItem.baseData cannot be null.\");\r\n        }\r\n        var message = telemetryItem.baseData.message;\r\n        var severityLevel = telemetryItem.baseData.severityLevel;\r\n        var customProperties = EnvelopeCreator.extractProperties(telemetryItem.data);\r\n        var props = tslib_1.__assign({}, customProperties, telemetryItem.baseData.properties);\r\n        var baseData = new Trace(logger, message, severityLevel, props);\r\n        var data = new Data(Trace.dataType, baseData);\r\n        return EnvelopeCreator.createEnvelope(logger, Trace.envelopeType, telemetryItem, data);\r\n    };\r\n    TraceEnvelopeCreator.TraceEnvelopeCreator = new TraceEnvelopeCreator();\r\n    return TraceEnvelopeCreator;\r\n}(EnvelopeCreator));\r\nexport { TraceEnvelopeCreator };\r\n//# sourceMappingURL=EnvelopeCreator.js.map","var EventValidator = /** @class */ (function () {\r\n    function EventValidator() {\r\n    }\r\n    EventValidator.prototype.Validate = function (item) {\r\n        /* TODO re-enable once design of iTelemetryItem is finalized. Task used to track this:\r\n        https://mseng.visualstudio.com/AppInsights/_workitems/edit/1310871\r\n\r\n        // verify system properties has a ver field\r\n        if (!item.sytemProperties || !item.sytemProperties[\"ver\"]) {\r\n            return false;\r\n        }\r\n        \r\n        if (!item.domainProperties || !item.domainProperties[\"name\"]) {\r\n            return false;\r\n        }\r\n        */\r\n        return true;\r\n    };\r\n    EventValidator.EventValidator = new EventValidator();\r\n    return EventValidator;\r\n}());\r\nexport { EventValidator };\r\n//# sourceMappingURL=EventValidator.js.map","var TraceValidator = /** @class */ (function () {\r\n    function TraceValidator() {\r\n    }\r\n    TraceValidator.prototype.Validate = function (item) {\r\n        /* TODO re-enable once design of iTelemetryItem is finalized. Task used to track this:\r\n         https://mseng.visualstudio.com/AppInsights/_workitems/edit/1310871\r\n\r\n        // verify system properties has a ver field\r\n        if (!item.sytemProperties ||\r\n            !item.sytemProperties[\"ver\"]) {\r\n            return false;\r\n        }\r\n        \r\n        if (!item.domainProperties ||\r\n            !item.domainProperties[\"message\"] ||\r\n            !item.domainProperties[\"severityLevel\"]) {\r\n            return false;\r\n        }\r\n        */\r\n        return true;\r\n    };\r\n    TraceValidator.TraceValidator = new TraceValidator();\r\n    return TraceValidator;\r\n}());\r\nexport { TraceValidator };\r\n//# sourceMappingURL=TraceValidator.js.map","var ExceptionValidator = /** @class */ (function () {\r\n    function ExceptionValidator() {\r\n    }\r\n    ExceptionValidator.prototype.Validate = function (item) {\r\n        /* TODO re-enable once design of iTelemetryItem is finalized. Task used to track this:\r\n         https://mseng.visualstudio.com/AppInsights/_workitems/edit/1310871\r\n\r\n        // verify system properties has a ver field\r\n        if (!item.sytemProperties ||\r\n            !item.sytemProperties[\"ver\"]) {\r\n            return false;\r\n        }\r\n\r\n        if (!item.domainProperties ||\r\n            !item.domainProperties[\"exceptions\"] ||\r\n            !ExceptionValidator._validateExceptions(item.domainProperties[\"exceptions\"])) {\r\n            return false;\r\n        }\r\n        */\r\n        return true;\r\n    };\r\n    // TODO implement validation of exceptions\r\n    ExceptionValidator._validateExceptions = function (exceptions) {\r\n        // typeName\r\n        // message\r\n        // parsedStack\r\n        // stack\r\n        // hasFullStack\r\n        return true;\r\n    };\r\n    ExceptionValidator.ExceptionValidator = new ExceptionValidator();\r\n    return ExceptionValidator;\r\n}());\r\nexport { ExceptionValidator };\r\n//# sourceMappingURL=ExceptionValidator.js.map","var MetricValidator = /** @class */ (function () {\r\n    function MetricValidator() {\r\n    }\r\n    MetricValidator.prototype.Validate = function (event) {\r\n        return true;\r\n    };\r\n    MetricValidator.MetricValidator = new MetricValidator();\r\n    return MetricValidator;\r\n}());\r\nexport { MetricValidator };\r\n//# sourceMappingURL=MetricValidator.js.map","var PageViewPerformanceValidator = /** @class */ (function () {\r\n    function PageViewPerformanceValidator() {\r\n    }\r\n    PageViewPerformanceValidator.prototype.Validate = function (item) {\r\n        /* TODO re-enable once design of iTelemetryItem is finalized. Task used to track this:\r\n         https://mseng.visualstudio.com/AppInsights/_workitems/edit/1310871\r\n        \r\n        // verify system properties has a ver field\r\n        if (!item.sytemProperties ||\r\n            !item.sytemProperties[\"ver\"]) {\r\n            return false;\r\n        }\r\n\r\n        if (!item.domainProperties ||\r\n            !item.domainProperties[\"domProcessing\"] ||\r\n            !item.domainProperties[\"duration\"] ||\r\n            !item.domainProperties[\"name\"] ||\r\n            !item.domainProperties[\"networkConnect\"] ||\r\n            !item.domainProperties[\"perfTotal\"] ||\r\n            !item.domainProperties[\"receivedResponse\"] ||\r\n            !item.domainProperties[\"sentRequest\"] ||\r\n            !item.domainProperties[\"url\"]) {\r\n            return false;\r\n        }\r\n        */\r\n        return true;\r\n    };\r\n    PageViewPerformanceValidator.PageViewPerformanceValidator = new PageViewPerformanceValidator();\r\n    return PageViewPerformanceValidator;\r\n}());\r\nexport { PageViewPerformanceValidator };\r\n//# sourceMappingURL=PageViewPerformanceValidator.js.map","var PageViewValidator = /** @class */ (function () {\r\n    function PageViewValidator() {\r\n    }\r\n    PageViewValidator.prototype.Validate = function (item) {\r\n        /* TODO re-enable once design of iTelemetryItem is finalized. Task used to track this:\r\n         https://mseng.visualstudio.com/AppInsights/_workitems/edit/1310871\r\n\r\n        // verify system properties has a ver field\r\n        if (!item.sytemProperties ||\r\n            !item.sytemProperties[\"ver\"]) {\r\n            return false;\r\n        }\r\n\r\n        if (!item.domainProperties ||\r\n            !item.domainProperties[\"id\"] ||\r\n            !item.domainProperties[\"name\"] ||\r\n            !item.domainProperties[\"duration\"] ||\r\n            !item.domainProperties[\"url\"]) {\r\n            return false;\r\n        }\r\n        */\r\n        return true;\r\n    };\r\n    PageViewValidator.PageViewValidator = new PageViewValidator();\r\n    return PageViewValidator;\r\n}());\r\nexport { PageViewValidator };\r\n//# sourceMappingURL=PageViewValidator.js.map","var RemoteDepdencyValidator = /** @class */ (function () {\r\n    function RemoteDepdencyValidator() {\r\n    }\r\n    RemoteDepdencyValidator.prototype.Validate = function (item) {\r\n        /* TODO re-enable once design of iTelemetryItem is finalized. Task used to track this:\r\n         https://mseng.visualstudio.com/AppInsights/_workitems/edit/1310871\r\n\r\n        // verify system properties has a ver field\r\n        if (!item.sytemProperties ||\r\n            !item.sytemProperties[\"ver\"]) {\r\n            return false;\r\n        }\r\n\r\n        if (!item.domainProperties ||\r\n            !item.domainProperties[\"id\"] ||\r\n            !item.domainProperties[\"name\"] ||\r\n            !item.domainProperties[\"resultCode\"] ||\r\n            !item.domainProperties[\"duration\"] ||\r\n            !item.domainProperties[\"success\"] ||\r\n            !item.domainProperties[\"data\"] ||\r\n            !item.domainProperties[\"target\"] ||\r\n            !item.domainProperties[\"type\"]) {\r\n            return false;\r\n        }\r\n        */\r\n        return true;\r\n    };\r\n    RemoteDepdencyValidator.RemoteDepdencyValidator = new RemoteDepdencyValidator();\r\n    return RemoteDepdencyValidator;\r\n}());\r\nexport { RemoteDepdencyValidator };\r\n//# sourceMappingURL=RemoteDepdencyValidator.js.map","import { Util, FieldType } from '@microsoft/applicationinsights-common';\r\nimport { LoggingSeverity, _InternalMessageId } from '@microsoft/applicationinsights-core-js';\r\nvar Serializer = /** @class */ (function () {\r\n    function Serializer(logger) {\r\n        this._logger = logger;\r\n    }\r\n    /**\r\n     * Serializes the current object to a JSON string.\r\n     */\r\n    Serializer.prototype.serialize = function (input) {\r\n        var output = this._serializeObject(input, \"root\");\r\n        return JSON.stringify(output);\r\n    };\r\n    Serializer.prototype._serializeObject = function (source, name) {\r\n        var circularReferenceCheck = \"__aiCircularRefCheck\";\r\n        var output = {};\r\n        if (!source) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.CannotSerializeObject, \"cannot serialize object because it is null or undefined\", { name: name }, true);\r\n            return output;\r\n        }\r\n        if (source[circularReferenceCheck]) {\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.CircularReferenceDetected, \"Circular reference detected while serializing object\", { name: name }, true);\r\n            return output;\r\n        }\r\n        if (!source.aiDataContract) {\r\n            // special case for measurements/properties/tags\r\n            if (name === \"measurements\") {\r\n                output = this._serializeStringMap(source, \"number\", name);\r\n            }\r\n            else if (name === \"properties\") {\r\n                output = this._serializeStringMap(source, \"string\", name);\r\n            }\r\n            else if (name === \"tags\") {\r\n                output = this._serializeStringMap(source, \"string\", name);\r\n            }\r\n            else if (Util.isArray(source)) {\r\n                output = this._serializeArray(source, name);\r\n            }\r\n            else {\r\n                this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.CannotSerializeObjectNonSerializable, \"Attempting to serialize an object which does not implement ISerializable\", { name: name }, true);\r\n                try {\r\n                    // verify that the object can be stringified\r\n                    JSON.stringify(source);\r\n                    output = source;\r\n                }\r\n                catch (e) {\r\n                    // if serialization fails return an empty string\r\n                    this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.CannotSerializeObject, (e && typeof e.toString === 'function') ? e.toString() : \"Error serializing object\", null, true);\r\n                }\r\n            }\r\n            return output;\r\n        }\r\n        source[circularReferenceCheck] = true;\r\n        for (var field in source.aiDataContract) {\r\n            var contract = source.aiDataContract[field];\r\n            var isRequired = (typeof contract === \"function\") ? (contract() & FieldType.Required) : (contract & FieldType.Required);\r\n            var isHidden = (typeof contract === \"function\") ? (contract() & FieldType.Hidden) : (contract & FieldType.Hidden);\r\n            var isArray = contract & FieldType.Array;\r\n            var isPresent = source[field] !== undefined;\r\n            var isObject = typeof source[field] === \"object\" && source[field] !== null;\r\n            if (isRequired && !isPresent && !isArray) {\r\n                this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.MissingRequiredFieldSpecification, \"Missing required field specification. The field is required but not present on source\", { field: field, name: name });\r\n                // If not in debug mode, continue and hope the error is permissible\r\n                continue;\r\n            }\r\n            if (isHidden) {\r\n                // Don't serialize hidden fields\r\n                continue;\r\n            }\r\n            var value;\r\n            if (isObject) {\r\n                if (isArray) {\r\n                    // special case; resurse on each object in the source array\r\n                    value = this._serializeArray(source[field], field);\r\n                }\r\n                else {\r\n                    // recurse on the source object in this field\r\n                    value = this._serializeObject(source[field], field);\r\n                }\r\n            }\r\n            else {\r\n                // assign the source field to the output even if undefined or required\r\n                value = source[field];\r\n            }\r\n            // only emit this field if the value is defined\r\n            if (value !== undefined) {\r\n                output[field] = value;\r\n            }\r\n        }\r\n        delete source[circularReferenceCheck];\r\n        return output;\r\n    };\r\n    Serializer.prototype._serializeArray = function (sources, name) {\r\n        var output = undefined;\r\n        if (!!sources) {\r\n            if (!Util.isArray(sources)) {\r\n                this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.ItemNotInArray, \"This field was specified as an array in the contract but the item is not an array.\\r\\n\", { name: name }, true);\r\n            }\r\n            else {\r\n                output = [];\r\n                for (var i = 0; i < sources.length; i++) {\r\n                    var source = sources[i];\r\n                    var item = this._serializeObject(source, name + \"[\" + i + \"]\");\r\n                    output.push(item);\r\n                }\r\n            }\r\n        }\r\n        return output;\r\n    };\r\n    Serializer.prototype._serializeStringMap = function (map, expectedType, name) {\r\n        var output = undefined;\r\n        if (map) {\r\n            output = {};\r\n            for (var field in map) {\r\n                var value = map[field];\r\n                if (expectedType === \"string\") {\r\n                    if (value === undefined) {\r\n                        output[field] = \"undefined\";\r\n                    }\r\n                    else if (value === null) {\r\n                        output[field] = \"null\";\r\n                    }\r\n                    else if (!value.toString) {\r\n                        output[field] = \"invalid field: toString() is not defined.\";\r\n                    }\r\n                    else {\r\n                        output[field] = value.toString();\r\n                    }\r\n                }\r\n                else if (expectedType === \"number\") {\r\n                    if (value === undefined) {\r\n                        output[field] = \"undefined\";\r\n                    }\r\n                    else if (value === null) {\r\n                        output[field] = \"null\";\r\n                    }\r\n                    else {\r\n                        var num = parseFloat(value);\r\n                        if (isNaN(num)) {\r\n                            output[field] = \"NaN\";\r\n                        }\r\n                        else {\r\n                            output[field] = num;\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    output[field] = \"invalid field: \" + name + \" is of unknown type.\";\r\n                    this._logger.throwInternal(LoggingSeverity.CRITICAL, output[field], null, true);\r\n                }\r\n            }\r\n        }\r\n        return output;\r\n    };\r\n    return Serializer;\r\n}());\r\nexport { Serializer };\r\n//# sourceMappingURL=Serializer.js.map","/**\r\n * @description Monitors browser for offline events\r\n * @export default - Offline: Static instance of OfflineListener\r\n * @class OfflineListener\r\n */\r\nvar OfflineListener = /** @class */ (function () {\r\n    function OfflineListener() {\r\n        this._onlineStatus = true;\r\n        try {\r\n            if (typeof window === 'undefined') {\r\n                this.isListening = false;\r\n            }\r\n            else if (window && window.addEventListener) {\r\n                window.addEventListener('online', this._setOnline.bind(this), false);\r\n                window.addEventListener('offline', this._setOffline.bind(this), false);\r\n                this.isListening = true;\r\n            }\r\n            else if (document && document.body) {\r\n                document.body.ononline = this._setOnline.bind(this);\r\n                document.body.onoffline = this._setOffline.bind(this);\r\n                this.isListening = true;\r\n            }\r\n            else if (document) {\r\n                document.ononline = this._setOnline.bind(this);\r\n                document.onoffline = this._setOffline.bind(this);\r\n                this.isListening = true;\r\n            }\r\n            else {\r\n                // Could not find a place to add event listener\r\n                this.isListening = false;\r\n            }\r\n        }\r\n        catch (e) {\r\n            //this makes react-native less angry\r\n            this.isListening = false;\r\n        }\r\n    }\r\n    OfflineListener.prototype._setOnline = function () {\r\n        this._onlineStatus = true;\r\n    };\r\n    OfflineListener.prototype._setOffline = function () {\r\n        this._onlineStatus = false;\r\n    };\r\n    OfflineListener.prototype.isOnline = function () {\r\n        if (this.isListening) {\r\n            return this._onlineStatus;\r\n        }\r\n        else if (navigator) {\r\n            return navigator.onLine;\r\n        }\r\n        else {\r\n            // Cannot determine online status - report as online\r\n            return true;\r\n        }\r\n    };\r\n    OfflineListener.prototype.isOffline = function () {\r\n        return !this.isOnline();\r\n    };\r\n    OfflineListener.Offline = new OfflineListener;\r\n    return OfflineListener;\r\n}());\r\nexport { OfflineListener };\r\nexport var Offline = OfflineListener.Offline;\r\n//# sourceMappingURL=Offline.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SessionStorageSendBuffer, ArraySendBuffer } from './SendBuffer';\r\nimport { DependencyEnvelopeCreator, EventEnvelopeCreator, ExceptionEnvelopeCreator, MetricEnvelopeCreator, PageViewEnvelopeCreator, PageViewPerformanceEnvelopeCreator, TraceEnvelopeCreator } from './EnvelopeCreator';\r\nimport { EventValidator } from './TelemetryValidation/EventValidator';\r\nimport { TraceValidator } from './TelemetryValidation/TraceValidator';\r\nimport { ExceptionValidator } from './TelemetryValidation/ExceptionValidator';\r\nimport { MetricValidator } from './TelemetryValidation/MetricValidator';\r\nimport { PageViewPerformanceValidator } from './TelemetryValidation/PageViewPerformanceValidator';\r\nimport { PageViewValidator } from './TelemetryValidation/PageViewValidator';\r\nimport { RemoteDepdencyValidator } from './TelemetryValidation/RemoteDepdencyValidator';\r\nimport { Serializer } from './Serializer'; // todo move to channel\r\nimport { DisabledPropertyName, RequestHeaders, Util, PageView, Event, Trace, Exception, Metric, PageViewPerformance, RemoteDependencyData, ConfigurationManager, ProcessLegacy } from '@microsoft/applicationinsights-common';\r\nimport { _InternalMessageId, LoggingSeverity, } from '@microsoft/applicationinsights-core-js';\r\nimport { CoreUtils } from '@microsoft/applicationinsights-core-js';\r\nimport { Offline } from './Offline';\r\nvar Sender = /** @class */ (function () {\r\n    function Sender() {\r\n        this.priority = 1001;\r\n        /**\r\n         * Whether XMLHttpRequest object is supported. Older version of IE (8,9) do not support it.\r\n         */\r\n        this._XMLHttpRequestSupported = false;\r\n        this.identifier = \"AppInsightsChannelPlugin\";\r\n    }\r\n    Sender.prototype.pause = function () {\r\n        throw new Error(\"Method not implemented.\");\r\n    };\r\n    Sender.prototype.resume = function () {\r\n        throw new Error(\"Method not implemented.\");\r\n    };\r\n    Sender.prototype.flush = function () {\r\n        try {\r\n            this.triggerSend();\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.FlushFailed, \"flush failed, telemetry will not be collected: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n    };\r\n    Sender.prototype.teardown = function () {\r\n        throw new Error(\"Method not implemented.\");\r\n    };\r\n    Sender.prototype.initialize = function (config, core, extensions) {\r\n        var _this = this;\r\n        this._logger = core.logger;\r\n        this._serializer = new Serializer(core.logger);\r\n        this._consecutiveErrors = 0;\r\n        this._retryAt = null;\r\n        this._lastSend = 0;\r\n        this._sender = null;\r\n        var defaultConfig = Sender._getDefaultAppInsightsChannelConfig();\r\n        this._config = Sender._getEmptyAppInsightsChannelConfig();\r\n        var _loop_1 = function (field) {\r\n            this_1._config[field] = function () { return ConfigurationManager.getConfig(config, field, _this.identifier, defaultConfig[field]()); };\r\n        };\r\n        var this_1 = this;\r\n        for (var field in defaultConfig) {\r\n            _loop_1(field);\r\n        }\r\n        this._buffer = (this._config.enableSessionStorageBuffer && Util.canUseSessionStorage())\r\n            ? new SessionStorageSendBuffer(this._logger, this._config) : new ArraySendBuffer(this._config);\r\n        if (!this._config.isBeaconApiDisabled() && Util.IsBeaconApiSupported()) {\r\n            this._sender = this._beaconSender;\r\n        }\r\n        else {\r\n            if (typeof XMLHttpRequest != \"undefined\") {\r\n                var testXhr = new XMLHttpRequest();\r\n                if (\"withCredentials\" in testXhr) {\r\n                    this._sender = this._xhrSender;\r\n                    this._XMLHttpRequestSupported = true;\r\n                }\r\n                else if (typeof XDomainRequest !== \"undefined\") {\r\n                    this._sender = this._xdrSender; //IE 8 and 9\r\n                }\r\n            }\r\n        }\r\n    };\r\n    Sender.prototype.processTelemetry = function (telemetryItem) {\r\n        var _this = this;\r\n        try {\r\n            // if master off switch is set, don't send any data\r\n            if (this._config.disableTelemetry()) {\r\n                // Do not send/save data\r\n                return;\r\n            }\r\n            // validate input\r\n            if (!telemetryItem) {\r\n                this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.CannotSendEmptyTelemetry, \"Cannot send empty telemetry\");\r\n                return;\r\n            }\r\n            // ensure a sender was constructed\r\n            if (!this._sender) {\r\n                this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.SenderNotInitialized, \"Sender was not initialized\");\r\n                return;\r\n            }\r\n            // first we need to validate that the envelope passed down is valid\r\n            var isValid = Sender._validate(telemetryItem);\r\n            if (!isValid) {\r\n                this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TelemetryEnvelopeInvalid, \"Invalid telemetry envelope\");\r\n                return;\r\n            }\r\n            // construct an envelope that Application Insights endpoint can understand\r\n            var aiEnvelope_1 = Sender.constructEnvelope(telemetryItem, this._config.instrumentationKey(), this._logger);\r\n            if (!aiEnvelope_1) {\r\n                this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.CreateEnvelopeError, \"Unable to create an AppInsights envelope\");\r\n                return;\r\n            }\r\n            var doNotSendItem_1 = false;\r\n            // this is for running in legacy mode, where customer may already have a custom initializer present\r\n            if (telemetryItem.tags && telemetryItem.tags[ProcessLegacy]) {\r\n                telemetryItem.tags[ProcessLegacy].forEach(function (callBack) {\r\n                    try {\r\n                        if (callBack && callBack(aiEnvelope_1) === false) {\r\n                            doNotSendItem_1 = true;\r\n                            _this._logger.warnToConsole(\"Telemetry processor check returns false\");\r\n                        }\r\n                    }\r\n                    catch (e) {\r\n                        // log error but dont stop executing rest of the telemetry initializers\r\n                        // doNotSendItem = true;\r\n                        _this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TelemetryInitializerFailed, \"One of telemetry initializers failed, telemetry item will not be sent: \" + Util.getExceptionName(e), { exception: Util.dump(e) }, true);\r\n                    }\r\n                });\r\n                delete telemetryItem.tags[ProcessLegacy];\r\n            }\r\n            if (doNotSendItem_1) {\r\n                return; // do not send, no need to execute next plugin\r\n            }\r\n            // check if the incoming payload is too large, truncate if necessary\r\n            var payload = this._serializer.serialize(aiEnvelope_1);\r\n            // flush if we would exceed the max-size limit by adding this item\r\n            var bufferPayload = this._buffer.getItems();\r\n            var batch = this._buffer.batchPayloads(bufferPayload);\r\n            if (batch && (batch.length + payload.length > this._config.maxBatchSizeInBytes())) {\r\n                this.triggerSend();\r\n            }\r\n            // enqueue the payload\r\n            this._buffer.enqueue(payload);\r\n            // ensure an invocation timeout is set\r\n            this._setupTimer();\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.FailedAddingTelemetryToBuffer, \"Failed adding telemetry to the sender's buffer, some telemetry will be lost: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n        // hand off the telemetry item to the next plugin\r\n        if (!CoreUtils.isNullOrUndefined(this._nextPlugin)) {\r\n            this._nextPlugin.processTelemetry(telemetryItem);\r\n        }\r\n    };\r\n    Sender.prototype.setNextPlugin = function (next) {\r\n        this._nextPlugin = next;\r\n    };\r\n    /**\r\n     * xhr state changes\r\n     */\r\n    Sender.prototype._xhrReadyStateChange = function (xhr, payload, countOfItemsInPayload) {\r\n        if (xhr.readyState === 4) {\r\n            var response = null;\r\n            if (!this._appId) {\r\n                response = this._parseResponse(xhr.responseText || xhr.response);\r\n                if (response && response.appId) {\r\n                    this._appId = response.appId;\r\n                }\r\n            }\r\n            if ((xhr.status < 200 || xhr.status >= 300) && xhr.status !== 0) {\r\n                if (!this._config.isRetryDisabled() && this._isRetriable(xhr.status)) {\r\n                    this._resendPayload(payload);\r\n                    this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.TransmissionFailed, \". \" +\r\n                        \"Response code \" + xhr.status + \". Will retry to send \" + payload.length + \" items.\");\r\n                }\r\n                else {\r\n                    this._onError(payload, this._formatErrorMessageXhr(xhr));\r\n                }\r\n            }\r\n            else if (Offline.isOffline()) {\r\n                // Note: Don't check for staus == 0, since adblock gives this code\r\n                if (!this._config.isRetryDisabled()) {\r\n                    var offlineBackOffMultiplier = 10; // arbritrary number\r\n                    this._resendPayload(payload, offlineBackOffMultiplier);\r\n                    this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.TransmissionFailed, \". Offline - Response Code: \" + xhr.status + \". Offline status: \" + Offline.isOffline() + \". Will retry to send \" + payload.length + \" items.\");\r\n                }\r\n            }\r\n            else {\r\n                if (xhr.status === 206) {\r\n                    if (!response) {\r\n                        response = this._parseResponse(xhr.responseText || xhr.response);\r\n                    }\r\n                    if (response && !this._config.isRetryDisabled()) {\r\n                        this._onPartialSuccess(payload, response);\r\n                    }\r\n                    else {\r\n                        this._onError(payload, this._formatErrorMessageXhr(xhr));\r\n                    }\r\n                }\r\n                else {\r\n                    this._consecutiveErrors = 0;\r\n                    this._onSuccess(payload, countOfItemsInPayload);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Immediately send buffered data\r\n     * @param async {boolean} - Indicates if the events should be sent asynchronously\r\n     */\r\n    Sender.prototype.triggerSend = function (async) {\r\n        if (async === void 0) { async = true; }\r\n        try {\r\n            // Send data only if disableTelemetry is false\r\n            if (!this._config.disableTelemetry()) {\r\n                if (this._buffer.count() > 0) {\r\n                    var payload = this._buffer.getItems();\r\n                    // invoke send\r\n                    this._sender(payload, async);\r\n                }\r\n                // update lastSend time to enable throttling\r\n                this._lastSend = +new Date;\r\n            }\r\n            else {\r\n                this._buffer.clear();\r\n            }\r\n            clearTimeout(this._timeoutHandle);\r\n            this._timeoutHandle = null;\r\n            this._retryAt = null;\r\n        }\r\n        catch (e) {\r\n            /* Ignore this error for IE under v10 */\r\n            if (!Util.getIEVersion() || Util.getIEVersion() > 9) {\r\n                this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TransmissionFailed, \"Telemetry transmission failed, some telemetry will be lost: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * error handler\r\n     */\r\n    Sender.prototype._onError = function (payload, message, event) {\r\n        this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.OnError, \"Failed to send telemetry.\", { message: message });\r\n        this._buffer.clearSent(payload);\r\n    };\r\n    /**\r\n     * partial success handler\r\n     */\r\n    Sender.prototype._onPartialSuccess = function (payload, results) {\r\n        var failed = [];\r\n        var retry = [];\r\n        // Iterate through the reversed array of errors so that splicing doesn't have invalid indexes after the first item.\r\n        var errors = results.errors.reverse();\r\n        for (var _i = 0, errors_1 = errors; _i < errors_1.length; _i++) {\r\n            var error = errors_1[_i];\r\n            var extracted = payload.splice(error.index, 1)[0];\r\n            if (this._isRetriable(error.statusCode)) {\r\n                retry.push(extracted);\r\n            }\r\n            else {\r\n                // All other errors, including: 402 (Monthly quota exceeded) and 439 (Too many requests and refresh cache).\r\n                failed.push(extracted);\r\n            }\r\n        }\r\n        if (payload.length > 0) {\r\n            this._onSuccess(payload, results.itemsAccepted);\r\n        }\r\n        if (failed.length > 0) {\r\n            this._onError(failed, this._formatErrorMessageXhr(null, ['partial success', results.itemsAccepted, 'of', results.itemsReceived].join(' ')));\r\n        }\r\n        if (retry.length > 0) {\r\n            this._resendPayload(retry);\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.TransmissionFailed, \"Partial success. \" +\r\n                \"Delivered: \" + payload.length + \", Failed: \" + failed.length +\r\n                \". Will retry to send \" + retry.length + \" our of \" + results.itemsReceived + \" items\");\r\n        }\r\n    };\r\n    /**\r\n     * success handler\r\n     */\r\n    Sender.prototype._onSuccess = function (payload, countOfItemsInPayload) {\r\n        this._buffer.clearSent(payload);\r\n    };\r\n    /**\r\n     * xdr state changes\r\n     */\r\n    Sender.prototype._xdrOnLoad = function (xdr, payload) {\r\n        if (xdr && (xdr.responseText + \"\" === \"200\" || xdr.responseText === \"\")) {\r\n            this._consecutiveErrors = 0;\r\n            this._onSuccess(payload, 0);\r\n        }\r\n        else {\r\n            var results = this._parseResponse(xdr.responseText);\r\n            if (results && results.itemsReceived && results.itemsReceived > results.itemsAccepted\r\n                && !this._config.isRetryDisabled()) {\r\n                this._onPartialSuccess(payload, results);\r\n            }\r\n            else {\r\n                this._onError(payload, this._formatErrorMessageXdr(xdr));\r\n            }\r\n        }\r\n    };\r\n    Sender.constructEnvelope = function (orig, iKey, logger) {\r\n        var envelope;\r\n        if (iKey !== orig.iKey && !CoreUtils.isNullOrUndefined(iKey)) {\r\n            envelope = tslib_1.__assign({}, orig, { iKey: iKey });\r\n        }\r\n        else {\r\n            envelope = orig;\r\n        }\r\n        switch (envelope.baseType) {\r\n            case Event.dataType:\r\n                return EventEnvelopeCreator.EventEnvelopeCreator.Create(logger, envelope);\r\n            case Trace.dataType:\r\n                return TraceEnvelopeCreator.TraceEnvelopeCreator.Create(logger, envelope);\r\n            case PageView.dataType:\r\n                return PageViewEnvelopeCreator.PageViewEnvelopeCreator.Create(logger, envelope);\r\n            case PageViewPerformance.dataType:\r\n                return PageViewPerformanceEnvelopeCreator.PageViewPerformanceEnvelopeCreator.Create(logger, envelope);\r\n            case Exception.dataType:\r\n                return ExceptionEnvelopeCreator.ExceptionEnvelopeCreator.Create(logger, envelope);\r\n            case Metric.dataType:\r\n                return MetricEnvelopeCreator.MetricEnvelopeCreator.Create(logger, envelope);\r\n            case RemoteDependencyData.dataType:\r\n                return DependencyEnvelopeCreator.DependencyEnvelopeCreator.Create(logger, envelope);\r\n            default:\r\n                return EventEnvelopeCreator.EventEnvelopeCreator.Create(logger, envelope);\r\n        }\r\n    };\r\n    Sender._getDefaultAppInsightsChannelConfig = function () {\r\n        var resultConfig = {};\r\n        // set default values\r\n        resultConfig.endpointUrl = function () { return \"https://dc.services.visualstudio.com/v2/track\"; };\r\n        resultConfig.emitLineDelimitedJson = function () { return false; };\r\n        resultConfig.maxBatchInterval = function () { return 15000; };\r\n        resultConfig.maxBatchSizeInBytes = function () { return 102400; }; // 100kb\r\n        resultConfig.disableTelemetry = function () { return false; };\r\n        resultConfig.enableSessionStorageBuffer = function () { return true; };\r\n        resultConfig.isRetryDisabled = function () { return false; };\r\n        resultConfig.isBeaconApiDisabled = function () { return true; };\r\n        resultConfig.instrumentationKey = function () { return undefined; }; // Channel doesn't need iKey, it should be set already\r\n        return resultConfig;\r\n    };\r\n    Sender._getEmptyAppInsightsChannelConfig = function () {\r\n        return {\r\n            endpointUrl: undefined,\r\n            emitLineDelimitedJson: undefined,\r\n            maxBatchInterval: undefined,\r\n            maxBatchSizeInBytes: undefined,\r\n            disableTelemetry: undefined,\r\n            enableSessionStorageBuffer: undefined,\r\n            isRetryDisabled: undefined,\r\n            isBeaconApiDisabled: undefined,\r\n            instrumentationKey: undefined\r\n        };\r\n    };\r\n    Sender._validate = function (envelope) {\r\n        // call the appropriate Validate depending on the baseType\r\n        switch (envelope.baseType) {\r\n            case Event.dataType:\r\n                return EventValidator.EventValidator.Validate(envelope);\r\n            case Trace.dataType:\r\n                return TraceValidator.TraceValidator.Validate(envelope);\r\n            case Exception.dataType:\r\n                return ExceptionValidator.ExceptionValidator.Validate(envelope);\r\n            case Metric.dataType:\r\n                return MetricValidator.MetricValidator.Validate(envelope);\r\n            case PageView.dataType:\r\n                return PageViewValidator.PageViewValidator.Validate(envelope);\r\n            case PageViewPerformance.dataType:\r\n                return PageViewPerformanceValidator.PageViewPerformanceValidator.Validate(envelope);\r\n            case RemoteDependencyData.dataType:\r\n                return RemoteDepdencyValidator.RemoteDepdencyValidator.Validate(envelope);\r\n            default:\r\n                return EventValidator.EventValidator.Validate(envelope);\r\n        }\r\n    };\r\n    /**\r\n     * Send Beacon API request\r\n     * @param payload {string} - The data payload to be sent.\r\n     * @param isAsync {boolean} - not used\r\n     * Note: Beacon API does not support custom headers and we are not able to get\r\n     * appId from the backend for the correct correlation.\r\n     */\r\n    Sender.prototype._beaconSender = function (payload, isAsync) {\r\n        var url = this._config.endpointUrl();\r\n        var batch = this._buffer.batchPayloads(payload);\r\n        // Chrome only allows CORS-safelisted values for the sendBeacon data argument\r\n        // see: https://bugs.chromium.org/p/chromium/issues/detail?id=720283\r\n        var plainTextBatch = new Blob([batch], { type: 'text/plain;charset=UTF-8' });\r\n        // The sendBeacon method returns true if the user agent is able to successfully queue the data for transfer. Otherwise it returns false.\r\n        var queued = navigator.sendBeacon(url, plainTextBatch);\r\n        if (queued) {\r\n            this._buffer.markAsSent(payload);\r\n        }\r\n        else {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TransmissionFailed, \". \" + \"Failed to send telemetry with Beacon API.\");\r\n        }\r\n    };\r\n    /**\r\n     * Send XMLHttpRequest\r\n     * @param payload {string} - The data payload to be sent.\r\n     * @param isAsync {boolean} - Indicates if the request should be sent asynchronously\r\n     */\r\n    Sender.prototype._xhrSender = function (payload, isAsync) {\r\n        var _this = this;\r\n        var xhr = new XMLHttpRequest();\r\n        xhr[DisabledPropertyName] = true;\r\n        xhr.open(\"POST\", this._config.endpointUrl(), isAsync);\r\n        xhr.setRequestHeader(\"Content-type\", \"application/json\");\r\n        // append Sdk-Context request header only in case of breeze endpoint\r\n        if (Util.isInternalApplicationInsightsEndpoint(this._config.endpointUrl())) {\r\n            xhr.setRequestHeader(RequestHeaders.sdkContextHeader, RequestHeaders.sdkContextHeaderAppIdRequest);\r\n        }\r\n        xhr.onreadystatechange = function () { return _this._xhrReadyStateChange(xhr, payload, payload.length); };\r\n        xhr.onerror = function (event) { return _this._onError(payload, _this._formatErrorMessageXhr(xhr), event); };\r\n        // compose an array of payloads\r\n        var batch = this._buffer.batchPayloads(payload);\r\n        xhr.send(batch);\r\n        this._buffer.markAsSent(payload);\r\n    };\r\n    /**\r\n     * Parses the response from the backend.\r\n     * @param response - XMLHttpRequest or XDomainRequest response\r\n     */\r\n    Sender.prototype._parseResponse = function (response) {\r\n        try {\r\n            if (response && response !== \"\") {\r\n                var result = JSON.parse(response);\r\n                if (result && result.itemsReceived && result.itemsReceived >= result.itemsAccepted &&\r\n                    result.itemsReceived - result.itemsAccepted == result.errors.length) {\r\n                    return result;\r\n                }\r\n            }\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.InvalidBackendResponse, \"Cannot parse the response. \" + Util.getExceptionName(e), {\r\n                response: response\r\n            });\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Resend payload. Adds payload back to the send buffer and setup a send timer (with exponential backoff).\r\n     * @param payload\r\n     */\r\n    Sender.prototype._resendPayload = function (payload, linearFactor) {\r\n        if (linearFactor === void 0) { linearFactor = 1; }\r\n        if (!payload || payload.length === 0) {\r\n            return;\r\n        }\r\n        this._buffer.clearSent(payload);\r\n        this._consecutiveErrors++;\r\n        for (var _i = 0, payload_1 = payload; _i < payload_1.length; _i++) {\r\n            var item = payload_1[_i];\r\n            this._buffer.enqueue(item);\r\n        }\r\n        // setup timer\r\n        this._setRetryTime(linearFactor);\r\n        this._setupTimer();\r\n    };\r\n    /** Calculates the time to wait before retrying in case of an error based on\r\n     * http://en.wikipedia.org/wiki/Exponential_backoff\r\n     */\r\n    Sender.prototype._setRetryTime = function (linearFactor) {\r\n        var SlotDelayInSeconds = 10;\r\n        var delayInSeconds;\r\n        if (this._consecutiveErrors <= 1) {\r\n            delayInSeconds = SlotDelayInSeconds;\r\n        }\r\n        else {\r\n            var backOffSlot = (Math.pow(2, this._consecutiveErrors) - 1) / 2;\r\n            // tslint:disable-next-line:insecure-random\r\n            var backOffDelay = Math.floor(Math.random() * backOffSlot * SlotDelayInSeconds) + 1;\r\n            backOffDelay = linearFactor * backOffDelay;\r\n            delayInSeconds = Math.max(Math.min(backOffDelay, 3600), SlotDelayInSeconds);\r\n        }\r\n        // TODO: Log the backoff time like the C# version does.\r\n        var retryAfterTimeSpan = Date.now() + (delayInSeconds * 1000);\r\n        // TODO: Log the retry at time like the C# version does.\r\n        this._retryAt = retryAfterTimeSpan;\r\n    };\r\n    /**\r\n     * Sets up the timer which triggers actually sending the data.\r\n     */\r\n    Sender.prototype._setupTimer = function () {\r\n        var _this = this;\r\n        if (!this._timeoutHandle) {\r\n            var retryInterval = this._retryAt ? Math.max(0, this._retryAt - Date.now()) : 0;\r\n            var timerValue = Math.max(this._config.maxBatchInterval(), retryInterval);\r\n            this._timeoutHandle = setTimeout(function () {\r\n                _this.triggerSend();\r\n            }, timerValue);\r\n        }\r\n    };\r\n    /**\r\n     * Checks if the SDK should resend the payload after receiving this status code from the backend.\r\n     * @param statusCode\r\n     */\r\n    Sender.prototype._isRetriable = function (statusCode) {\r\n        return statusCode == 408 // Timeout\r\n            || statusCode == 429 // Too many requests.\r\n            || statusCode == 500 // Internal server error.\r\n            || statusCode == 503; // Service unavailable.\r\n    };\r\n    Sender.prototype._formatErrorMessageXhr = function (xhr, message) {\r\n        if (xhr) {\r\n            return \"XMLHttpRequest,Status:\" + xhr.status + \",Response:\" + xhr.responseText || xhr.response || \"\";\r\n        }\r\n        return message;\r\n    };\r\n    /**\r\n     * Send XDomainRequest\r\n     * @param payload {string} - The data payload to be sent.\r\n     * @param isAsync {boolean} - Indicates if the request should be sent asynchronously\r\n     *\r\n     * Note: XDomainRequest does not support sync requests. This 'isAsync' parameter is added\r\n     * to maintain consistency with the xhrSender's contract\r\n     * Note: XDomainRequest does not support custom headers and we are not able to get\r\n     * appId from the backend for the correct correlation.\r\n     */\r\n    Sender.prototype._xdrSender = function (payload, isAsync) {\r\n        var _this = this;\r\n        var xdr = new XDomainRequest();\r\n        xdr.onload = function () { return _this._xdrOnLoad(xdr, payload); };\r\n        xdr.onerror = function (event) { return _this._onError(payload, _this._formatErrorMessageXdr(xdr), event); };\r\n        // XDomainRequest requires the same protocol as the hosting page.\r\n        // If the protocol doesn't match, we can't send the telemetry :(.\r\n        var hostingProtocol = window.location && window.location.protocol;\r\n        if (this._config.endpointUrl().lastIndexOf(hostingProtocol, 0) !== 0) {\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.TransmissionFailed, \". \" +\r\n                \"Cannot send XDomain request. The endpoint URL protocol doesn't match the hosting page protocol.\");\r\n            this._buffer.clear();\r\n            return;\r\n        }\r\n        var endpointUrl = this._config.endpointUrl().replace(/^(https?:)/, \"\");\r\n        xdr.open('POST', endpointUrl);\r\n        // compose an array of payloads\r\n        var batch = this._buffer.batchPayloads(payload);\r\n        xdr.send(batch);\r\n        this._buffer.markAsSent(payload);\r\n    };\r\n    Sender.prototype._formatErrorMessageXdr = function (xdr, message) {\r\n        if (xdr) {\r\n            return \"XDomainRequest,Response:\" + xdr.responseText || \"\";\r\n        }\r\n        return message;\r\n    };\r\n    return Sender;\r\n}());\r\nexport { Sender };\r\n//# sourceMappingURL=Sender.js.map"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","StorageType","FieldType","__assign","assign","t","s","i","n","arguments","length","call","apply","LoggingSeverity","CoreUtils","isNullOrUndefined","input","newGuid","replace","GuidRegex","c","r","Math","random","toString","DataPointType","_InternalMessageId","ChannelControllerPriority","ChannelController","identifier","priority","processTelemetry","item","channelQueue","forEach","queues","defineProperty","get","enumerable","configurable","initialize","config","core","extensions","_this","channels","invalidChannelIdentifier_1","undefined","queue","sort","a","queueItem","Error","ChannelValidationMessage","setNextPlugin","push","arr","plugin","RequestHeaders","requestContextHeader","requestContextTargetKey","requestContextAppIdFormat","requestIdHeader","sdkContextHeader","sdkContextHeaderAppIdRequest","requestContextHeaderLowerCase","DataSanitizer","sanitizeKeyAndAddUniqueness","logger","key","map","origLength","field","sanitizeKey","uniqueField","substring","MAX_NAME_LENGTH","padNumber","name","trim","throwInternal","WARNING","sanitizeString","value","maxLength","MAX_STRING_LENGTH","sanitizeUrl","url","sanitizeInput","MAX_URL_LENGTH","sanitizeMessage","message","MAX_MESSAGE_LENGTH","sanitizeException","exception","MAX_EXCEPTION_LENGTH","sanitizeProperties","properties","tempProps","prop","JSON","stringify","e","MAX_PROPERTY_LENGTH","sanitizeMeasurements","measurements","tempMeasurements","measure","sanitizeId","id","MAX_ID_LENGTH","_msgId","data","num","substr","str","Util","disableStorage","_canUseLocalStorage","_canUseSessionStorage","_getLocalStorageObject","canUseLocalStorage","_getVerifiedStorageObject","LocalStorage","storageType","fail","uid","storage","window","Date","localStorage","sessionStorage","setItem","getItem","removeItem","isInternalApplicationInsightsEndpoint","endpointUrl","_internalEndpoints","indexOf","toLowerCase","getStorage","getExceptionName","dump","setStorage","removeStorage","_getSessionStorageObject","canUseSessionStorage","SessionStorage","getSessionStorageKeys","keys","getSessionStorage","setSessionStorage","removeSessionStorage","disableCookies","_canUseCookies","canUseCookies","document","cookie","setCookie","domain","domainAttrib","secureAttrib","location","protocol","stringToBoolOrDefault","defaultValue","getCookie","cookieName","cookies","split","deleteCookie","newId","result","charAt","floor","isArray","obj","isError","isDate","toISOStringForIE8","date","toISOString","pad","String","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","toFixed","slice","getIEVersion","userAgentStr","myNav","navigator","userAgent","parseInt","msToTimeSpan","totalms","isNaN","ms","round","sec","min","hour","days","isCrossOriginError","lineNumber","columnNumber","error","object","objectTypeDump","propertyValueDump","stack","addEventHandler","eventName","callback","verbEventName","addEventListener","IsBeaconApiSupported","sendBeacon","NotSpecified","UrlHelper","parseUrl","htmlAnchorElement","createElement","href","getAbsoluteUrl","getPathName","pathname","getCompleteUrl","method","absoluteUrl","toUpperCase","AjaxHelper","ParseDependencyPath","commandName","target","parsedUrl","host","pathName","ProcessLegacy","DateTimeUtils","Now","getTime","performance","now","timing","navigationStart","GetDuration","start","end","HttpMethod","Data","_super","tslib_1.__extends","Envelope","time","aiDataContract","Required","iKey","sampleRate","Hidden","tags","ver","Domain","EventData","Event","Default","envelopeType","dataType","StackFrame","ExceptionDetails","hasFullStack","parsedStack","Exception","severityLevel","exceptions","_ExceptionDetails","CreateSimpleException","typeName","assembly","fileName","details","line","ExceptionData","outerId","parseStack","frames","level","totalSizeInBytes","frame","_StackFrame","regex","test","parsedFrame","sizeInBytes","left","right","size","acceptedLeft","acceptedRight","howMany","splice","matches","match","baseSize","MetricData","metrics","SeverityLevel","DataPoint","kind","count","max","stdDev","Measurement","Metric","dataPoint","PageViewData","PageView","durationMs","duration","RemoteDependencyData","success","resultCode","requestAPI","type","dependencyKind","dependencySource","dependencyTypeName","dependencyFields","Trace","MessageData","PageViewPerformance","unused","perfTotal","networkConnect","sentRequest","receivedResponse","domProcessing","PageViewPerfData","baseType","baseData","AIData","ConfigurationManager","getConfig","configValue","extensionConfig","CtxTagKeys","applicationVersion","applicationBuild","applicationTypeId","applicationId","applicationLayer","deviceId","deviceIp","deviceLanguage","deviceLocale","deviceModel","deviceFriendlyName","deviceNetwork","deviceNetworkName","deviceOEMName","deviceOS","deviceOSVersion","deviceRoleInstance","deviceRoleName","deviceScreenResolution","deviceType","deviceMachineName","deviceVMName","deviceBrowser","deviceBrowserVersion","locationIp","locationCountry","locationProvince","locationCity","operationId","operationName","operationParentId","operationRootId","operationSyntheticSource","operationCorrelationVector","sessionId","sessionIsFirst","sessionIsNew","userAccountAcquisitionDate","userAccountId","userId","userStoreRegion","userAuthUserId","userAnonymousUserAcquisitionDate","userAuthenticatedUserAcquisitionDate","cloudName","cloudRole","cloudRoleVer","cloudRoleInstance","cloudEnvironment","cloudLocation","cloudDeploymentUnit","internalNodeName","internalSdkVersion","internalAgentVersion","ArraySendBuffer","_config","_buffer","enqueue","payload","clear","getItems","batchPayloads","emitLineDelimitedJson","join","markAsSent","clearSent","SessionStorageSendBuffer","_bufferFullMessageSent","_logger","bufferItems","getBuffer","BUFFER_KEY","notDeliveredItems","SENT_BUFFER_KEY","concat","MAX_BUFFER_SIZE","setBuffer","removePayloadsFromBuffer","sentElements","CRITICAL","payloads","buffer","remaining","contains","j","bufferJson","parse","EnvelopeCreator","extractProperties","customProperties","extractPropsAndMeasurements","createEnvelope","telemetryItem","envelope","iKeyNoDashes","extractPartAExtensions","env","ext","user","authId","localId","app","sesId","device","ip","web","browserLang","browserVer","browser","isManual","screenRes","userConsent","model","os","trace","parentID","traceID","tgs","tg","tslib_1.__assign","DependencyEnvelopeCreator","Create","customMeasurements","bd","warnToConsole","command","responseCode","EventEnvelopeCreator","ExceptionEnvelopeCreator","MetricEnvelopeCreator","props","average","sampleCount","PageViewEnvelopeCreator","uri","refUri","pageType","isLoggedIn","pageTags","PageViewPerformanceEnvelopeCreator","TraceEnvelopeCreator","EventValidator","Validate","TraceValidator","ExceptionValidator","_validateExceptions","MetricValidator","event","PageViewPerformanceValidator","PageViewValidator","RemoteDepdencyValidator","Serializer","serialize","output","_serializeObject","source","circularReferenceCheck","_serializeStringMap","_serializeArray","contract","isRequired","isHidden","isPresent","isObject","sources","expectedType","parseFloat","Offline","OfflineListener","_onlineStatus","isListening","_setOnline","bind","_setOffline","body","ononline","onoffline","isOnline","onLine","isOffline","Sender","_XMLHttpRequestSupported","pause","resume","flush","triggerSend","teardown","_serializer","_consecutiveErrors","_retryAt","_lastSend","_sender","defaultConfig","_getDefaultAppInsightsChannelConfig","_getEmptyAppInsightsChannelConfig","_loop_1","this_1","enableSessionStorageBuffer","isBeaconApiDisabled","_beaconSender","XMLHttpRequest","_xhrSender","XDomainRequest","_xdrSender","disableTelemetry","_validate","aiEnvelope_1","constructEnvelope","instrumentationKey","doNotSendItem_1","callBack","bufferPayload","batch","maxBatchSizeInBytes","_setupTimer","_nextPlugin","next","_xhrReadyStateChange","xhr","countOfItemsInPayload","readyState","response","_appId","_parseResponse","responseText","appId","status","isRetryDisabled","_isRetriable","_resendPayload","_onError","_formatErrorMessageXhr","_onPartialSuccess","_onSuccess","async","clearTimeout","_timeoutHandle","results","failed","retry","_i","errors_1","errors","reverse","extracted","index","statusCode","itemsAccepted","itemsReceived","_xdrOnLoad","xdr","_formatErrorMessageXdr","orig","resultConfig","maxBatchInterval","isAsync","plainTextBatch","Blob","open","setRequestHeader","onreadystatechange","onerror","send","linearFactor","payload_1","_setRetryTime","delayInSeconds","backOffSlot","pow","backOffDelay","retryAfterTimeSpan","retryInterval","timerValue","setTimeout","onload","hostingProtocol","lastIndexOf"],"mappings":"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"}