{"version":3,"file":"applicationinsights-analytics-js.min.js","sources":["../../../shared/AppInsightsCommon/dist-esm/Enums.js","../../../shared/AppInsightsCore/dist-esm/JavaScriptSDK/CoreUtils.js","../../../shared/AppInsightsCore/dist-esm/JavaScriptSDK.Enums/LoggingEnums.js","../../../shared/AppInsightsCore/dist-esm/JavaScriptSDK/AppInsightsCore.js","../../../shared/AppInsightsCommon/dist-esm/Telemetry/Common/DataSanitizer.js","../../../shared/AppInsightsCommon/dist-esm/Util.js","../../../common/temp/node_modules/tslib/tslib.es6.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/Base.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/DataPointType.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/Data.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/Domain.js","../../../shared/AppInsightsCommon/dist-esm/Telemetry/Common/Envelope.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/Envelope.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/EventData.js","../../../shared/AppInsightsCommon/dist-esm/Telemetry/Event.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/StackFrame.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/ExceptionDetails.js","../../../shared/AppInsightsCommon/dist-esm/Telemetry/Exception.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/ExceptionData.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/MetricData.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/DataPoint.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/SeverityLevel.js","../../../shared/AppInsightsCommon/dist-esm/Telemetry/Common/DataPoint.js","../../../shared/AppInsightsCommon/dist-esm/Telemetry/Metric.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/PageViewData.js","../../../shared/AppInsightsCommon/dist-esm/Telemetry/PageView.js","../../../shared/AppInsightsCommon/dist-esm/Telemetry/RemoteDependencyData.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/RemoteDependencyData.js","../../../shared/AppInsightsCommon/dist-esm/Telemetry/Trace.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/MessageData.js","../../../shared/AppInsightsCommon/dist-esm/Telemetry/PageViewPerformance.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/PageViewPerfData.js","../../../shared/AppInsightsCommon/dist-esm/Telemetry/Common/Data.js","../../../shared/AppInsightsCommon/dist-esm/Interfaces/IConfig.js","../../../shared/AppInsightsCommon/dist-esm/TelemetryItemCreator.js","../dist-esm/JavaScriptSDK/Telemetry/PageViewManager.js","../dist-esm/JavaScriptSDK/Telemetry/PageViewPerformanceManager.js","../dist-esm/JavaScriptSDK/ApplicationInsights.js"],"sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n/**\r\n* Type of storage to differentiate between local storage and session storage\r\n*/\r\nexport var StorageType;\r\n(function (StorageType) {\r\n    StorageType[StorageType[\"LocalStorage\"] = 0] = \"LocalStorage\";\r\n    StorageType[StorageType[\"SessionStorage\"] = 1] = \"SessionStorage\";\r\n})(StorageType || (StorageType = {}));\r\n/**\r\n * Enum is used in aiDataContract to describe how fields are serialized.\r\n * For instance: (Fieldtype.Required | FieldType.Array) will mark the field as required and indicate it's an array\r\n */\r\nexport var FieldType;\r\n(function (FieldType) {\r\n    FieldType[FieldType[\"Default\"] = 0] = \"Default\";\r\n    FieldType[FieldType[\"Required\"] = 1] = \"Required\";\r\n    FieldType[FieldType[\"Array\"] = 2] = \"Array\";\r\n    FieldType[FieldType[\"Hidden\"] = 4] = \"Hidden\";\r\n})(FieldType || (FieldType = {}));\r\n;\r\n//# sourceMappingURL=Enums.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\"use strict\";\r\nvar CoreUtils = /** @class */ (function () {\r\n    function CoreUtils() {\r\n    }\r\n    CoreUtils.isNullOrUndefined = function (input) {\r\n        return input === null || input === undefined;\r\n    };\r\n    /**\r\n* Creates a new GUID.\r\n* @return {string} A GUID.\r\n*/\r\n    CoreUtils.newGuid = function () {\r\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(GuidRegex, function (c) {\r\n            // tslint:disable-next-line:insecure-random\r\n            var r = (Math.random() * 16 | 0), v = (c === 'x' ? r : r & 0x3 | 0x8);\r\n            return v.toString(16);\r\n        });\r\n    };\r\n    return CoreUtils;\r\n}());\r\nexport { CoreUtils };\r\nvar GuidRegex = /[xy]/g;\r\n//# sourceMappingURL=CoreUtils.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nexport var LoggingSeverity;\r\n(function (LoggingSeverity) {\r\n    /**\r\n     * Error will be sent as internal telemetry\r\n     */\r\n    LoggingSeverity[LoggingSeverity[\"CRITICAL\"] = 1] = \"CRITICAL\";\r\n    /**\r\n     * Error will NOT be sent as internal telemetry, and will only be shown in browser console\r\n     */\r\n    LoggingSeverity[LoggingSeverity[\"WARNING\"] = 2] = \"WARNING\";\r\n})(LoggingSeverity || (LoggingSeverity = {}));\r\n/**\r\n * Internal message ID. Please create a new one for every conceptually different message. Please keep alphabetically ordered\r\n */\r\nexport var _InternalMessageId = {\r\n    // Non user actionable\r\n    BrowserDoesNotSupportLocalStorage: 0,\r\n    BrowserCannotReadLocalStorage: 1,\r\n    BrowserCannotReadSessionStorage: 2,\r\n    BrowserCannotWriteLocalStorage: 3,\r\n    BrowserCannotWriteSessionStorage: 4,\r\n    BrowserFailedRemovalFromLocalStorage: 5,\r\n    BrowserFailedRemovalFromSessionStorage: 6,\r\n    CannotSendEmptyTelemetry: 7,\r\n    ClientPerformanceMathError: 8,\r\n    ErrorParsingAISessionCookie: 9,\r\n    ErrorPVCalc: 10,\r\n    ExceptionWhileLoggingError: 11,\r\n    FailedAddingTelemetryToBuffer: 12,\r\n    FailedMonitorAjaxAbort: 13,\r\n    FailedMonitorAjaxDur: 14,\r\n    FailedMonitorAjaxOpen: 15,\r\n    FailedMonitorAjaxRSC: 16,\r\n    FailedMonitorAjaxSend: 17,\r\n    FailedMonitorAjaxGetCorrelationHeader: 18,\r\n    FailedToAddHandlerForOnBeforeUnload: 19,\r\n    FailedToSendQueuedTelemetry: 20,\r\n    FailedToReportDataLoss: 21,\r\n    FlushFailed: 22,\r\n    MessageLimitPerPVExceeded: 23,\r\n    MissingRequiredFieldSpecification: 24,\r\n    NavigationTimingNotSupported: 25,\r\n    OnError: 26,\r\n    SessionRenewalDateIsZero: 27,\r\n    SenderNotInitialized: 28,\r\n    StartTrackEventFailed: 29,\r\n    StopTrackEventFailed: 30,\r\n    StartTrackFailed: 31,\r\n    StopTrackFailed: 32,\r\n    TelemetrySampledAndNotSent: 33,\r\n    TrackEventFailed: 34,\r\n    TrackExceptionFailed: 35,\r\n    TrackMetricFailed: 36,\r\n    TrackPVFailed: 37,\r\n    TrackPVFailedCalc: 38,\r\n    TrackTraceFailed: 39,\r\n    TransmissionFailed: 40,\r\n    FailedToSetStorageBuffer: 41,\r\n    FailedToRestoreStorageBuffer: 42,\r\n    InvalidBackendResponse: 43,\r\n    FailedToFixDepricatedValues: 44,\r\n    InvalidDurationValue: 45,\r\n    TelemetryEnvelopeInvalid: 46,\r\n    CreateEnvelopeError: 47,\r\n    // User actionable\r\n    CannotSerializeObject: 48,\r\n    CannotSerializeObjectNonSerializable: 49,\r\n    CircularReferenceDetected: 50,\r\n    ClearAuthContextFailed: 51,\r\n    ExceptionTruncated: 52,\r\n    IllegalCharsInName: 53,\r\n    ItemNotInArray: 54,\r\n    MaxAjaxPerPVExceeded: 55,\r\n    MessageTruncated: 56,\r\n    NameTooLong: 57,\r\n    SampleRateOutOfRange: 58,\r\n    SetAuthContextFailed: 59,\r\n    SetAuthContextFailedAccountName: 60,\r\n    StringValueTooLong: 61,\r\n    StartCalledMoreThanOnce: 62,\r\n    StopCalledWithoutStart: 63,\r\n    TelemetryInitializerFailed: 64,\r\n    TrackArgumentsNotSpecified: 65,\r\n    UrlTooLong: 66,\r\n    SessionStorageBufferFull: 67,\r\n    CannotAccessCookie: 68,\r\n    IdTooLong: 69,\r\n};\r\n//# sourceMappingURL=LoggingEnums.js.map","import { EventsDiscardedReason } from \"../JavaScriptSDK.Enums/EventsDiscardedReason\";\r\nimport { CoreUtils } from \"./CoreUtils\";\r\nimport { NotificationManager } from \"./NotificationManager\";\r\nimport { _InternalLogMessage, DiagnosticLogger } from \"./DiagnosticLogger\";\r\n\"use strict\";\r\nvar AppInsightsCore = /** @class */ (function () {\r\n    function AppInsightsCore() {\r\n        this._isInitialized = false;\r\n        this._extensions = new Array();\r\n        this._channelController = new ChannelController();\r\n    }\r\n    AppInsightsCore.prototype.initialize = function (config, extensions) {\r\n        var _this = this;\r\n        // Make sure core is only initialized once\r\n        if (this._isInitialized) {\r\n            throw Error(\"Core should not be initialized more than once\");\r\n        }\r\n        if (!config || CoreUtils.isNullOrUndefined(config.instrumentationKey)) {\r\n            throw Error(\"Please provide instrumentation key\");\r\n        }\r\n        this.config = config;\r\n        this._notificationManager = new NotificationManager();\r\n        this.config.extensions = CoreUtils.isNullOrUndefined(this.config.extensions) ? [] : this.config.extensions;\r\n        // add notification to the extensions in the config so other plugins can access it\r\n        this.config.extensionConfig = CoreUtils.isNullOrUndefined(this.config.extensionConfig) ? {} : this.config.extensionConfig;\r\n        this.config.extensionConfig.NotificationManager = this._notificationManager;\r\n        this.logger = new DiagnosticLogger(config);\r\n        // Initial validation\r\n        extensions.forEach(function (extension) {\r\n            if (CoreUtils.isNullOrUndefined(extension.initialize)) {\r\n                throw Error(validationError);\r\n            }\r\n        });\r\n        if (this.config.extensions.length > 0) {\r\n            var isValid_1 = true;\r\n            var containsChannels_1 = false;\r\n            this.config.extensions.forEach(function (item) {\r\n                if (CoreUtils.isNullOrUndefined(item)) {\r\n                    isValid_1 = false;\r\n                }\r\n                if (item.priority > ChannelControllerPriority) {\r\n                    containsChannels_1 = true;\r\n                }\r\n            });\r\n            if (!isValid_1) {\r\n                throw Error(validationError);\r\n            }\r\n            if (containsChannels_1) {\r\n                throw Error(validationErrorInExt);\r\n            }\r\n        }\r\n        // Initial validation complete\r\n        // Concat all available extensions before sorting by priority\r\n        (_a = this._extensions).push.apply(_a, [this._channelController].concat(extensions, this.config.extensions));\r\n        this._extensions = this._extensions.sort(function (a, b) {\r\n            var extA = a;\r\n            var extB = b;\r\n            var typeExtA = typeof extA.processTelemetry;\r\n            var typeExtB = typeof extB.processTelemetry;\r\n            if (typeExtA === 'function' && typeExtB === 'function') {\r\n                return extA.priority - extB.priority;\r\n            }\r\n            if (typeExtA === 'function' && typeExtB !== 'function') {\r\n                // keep non telemetryplugin specific extensions at start\r\n                return 1;\r\n            }\r\n            if (typeExtA !== 'function' && typeExtB === 'function') {\r\n                return -1;\r\n            }\r\n        });\r\n        // sort complete\r\n        // Check if any two extensions have the same priority, then warn to console\r\n        var priority = {};\r\n        this._extensions.forEach(function (ext) {\r\n            var t = ext;\r\n            if (t && t.priority) {\r\n                if (!CoreUtils.isNullOrUndefined(priority[t.priority])) {\r\n                    _this.logger.warnToConsole(\"Two extensions have same priority\" + priority[t.priority] + \", \" + t.identifier);\r\n                }\r\n                else {\r\n                    priority[t.priority] = t.identifier; // set a value\r\n                }\r\n            }\r\n        });\r\n        var c = -1;\r\n        // Set next plugin for all until channel controller\r\n        for (var idx = 0; idx < this._extensions.length - 1; idx++) {\r\n            var curr = (this._extensions[idx]);\r\n            if (curr && typeof curr.processTelemetry !== 'function') {\r\n                // these are initialized only, allowing an entry point for extensions to be initialized when SDK initializes\r\n                continue;\r\n            }\r\n            if (curr.priority === ChannelControllerPriority) {\r\n                c = idx + 1;\r\n                break; // channel controller will set remaining pipeline\r\n            }\r\n            this._extensions[idx].setNextPlugin(this._extensions[idx + 1]); // set next plugin\r\n        }\r\n        // initialize channel controller first, this will initialize all channel plugins\r\n        this._channelController.initialize(this.config, this, this._extensions);\r\n        // initialize remaining regular plugins\r\n        this._extensions.forEach(function (ext) {\r\n            var e = ext;\r\n            if (e && e.priority < ChannelControllerPriority) {\r\n                ext.initialize(_this.config, _this, _this._extensions); // initialize\r\n            }\r\n        });\r\n        // Remove sender channels from main list\r\n        if (c < this._extensions.length) {\r\n            this._extensions.splice(c);\r\n        }\r\n        if (this.getTransmissionControls().length === 0) {\r\n            throw new Error(\"No channels available\");\r\n        }\r\n        this._isInitialized = true;\r\n        var _a;\r\n    };\r\n    AppInsightsCore.prototype.getTransmissionControls = function () {\r\n        return this._channelController.ChannelControls;\r\n    };\r\n    AppInsightsCore.prototype.track = function (telemetryItem) {\r\n        if (telemetryItem === null) {\r\n            this._notifiyInvalidEvent(telemetryItem);\r\n            // throw error\r\n            throw Error(\"Invalid telemetry item\");\r\n        }\r\n        if (telemetryItem.baseData && !telemetryItem.baseType) {\r\n            this._notifiyInvalidEvent(telemetryItem);\r\n            throw Error(\"Provide data.baseType for data.baseData\");\r\n        }\r\n        if (!telemetryItem.baseType) {\r\n            // Hard coded from Common::Event.ts::Event.dataType\r\n            telemetryItem.baseType = \"EventData\";\r\n        }\r\n        if (!telemetryItem.iKey) {\r\n            // setup default iKey if not passed in\r\n            telemetryItem.iKey = this.config.instrumentationKey;\r\n        }\r\n        if (!telemetryItem.time) {\r\n            // add default timestamp if not passed in\r\n            telemetryItem.time = new Date().toISOString();\r\n        }\r\n        if (CoreUtils.isNullOrUndefined(telemetryItem.ver)) {\r\n            // CommonSchema 4.0\r\n            telemetryItem.ver = \"4.0\";\r\n        }\r\n        // do basic validation before sending it through the pipeline\r\n        this._validateTelmetryItem(telemetryItem);\r\n        this._updateSdkVersion(telemetryItem);\r\n        // invoke any common telemetry processors before sending through pipeline\r\n        var i = 0;\r\n        while (i < this._extensions.length) {\r\n            if (this._extensions[i].processTelemetry) {\r\n                this._extensions[i].processTelemetry(telemetryItem); // pass on to first extension that can support processing\r\n                break;\r\n            }\r\n            i++;\r\n        }\r\n    };\r\n    /**\r\n     * Adds a notification listener. The SDK calls methods on the listener when an appropriate notification is raised.\r\n     * The added plugins must raise notifications. If the plugins do not implement the notifications, then no methods will be\r\n     * called.\r\n     * @param {INotificationListener} listener - An INotificationListener object.\r\n     */\r\n    AppInsightsCore.prototype.addNotificationListener = function (listener) {\r\n        this._notificationManager.addNotificationListener(listener);\r\n    };\r\n    /**\r\n     * Removes all instances of the listener.\r\n     * @param {INotificationListener} listener - INotificationListener to remove.\r\n     */\r\n    AppInsightsCore.prototype.removeNotificationListener = function (listener) {\r\n        this._notificationManager.removeNotificationListener(listener);\r\n    };\r\n    /**\r\n     * Periodically check logger.queue for\r\n     */\r\n    AppInsightsCore.prototype.pollInternalLogs = function () {\r\n        var _this = this;\r\n        var interval = this.config.diagnosticLogInterval;\r\n        if (!(interval > 0)) {\r\n            interval = 10000;\r\n        }\r\n        return setInterval(function () {\r\n            var queue = _this.logger.queue;\r\n            queue.forEach(function (logMessage) {\r\n                var item = {\r\n                    name: \"InternalMessageId: \" + logMessage.messageId,\r\n                    iKey: _this.config.instrumentationKey,\r\n                    time: new Date().toISOString(),\r\n                    baseType: _InternalLogMessage.dataType,\r\n                    baseData: { message: logMessage.message }\r\n                };\r\n                _this.track(item);\r\n            });\r\n            queue.length = 0;\r\n        }, interval);\r\n    };\r\n    AppInsightsCore.prototype._validateTelmetryItem = function (telemetryItem) {\r\n        if (CoreUtils.isNullOrUndefined(telemetryItem.name)) {\r\n            this._notifiyInvalidEvent(telemetryItem);\r\n            throw Error(\"telemetry name required\");\r\n        }\r\n        if (CoreUtils.isNullOrUndefined(telemetryItem.time)) {\r\n            this._notifiyInvalidEvent(telemetryItem);\r\n            throw Error(\"telemetry timestamp required\");\r\n        }\r\n        if (CoreUtils.isNullOrUndefined(telemetryItem.iKey)) {\r\n            this._notifiyInvalidEvent(telemetryItem);\r\n            throw Error(\"telemetry instrumentationKey required\");\r\n        }\r\n    };\r\n    AppInsightsCore.prototype._updateSdkVersion = function (telemetryItem) {\r\n        if (!telemetryItem.ext) {\r\n            telemetryItem.ext = {};\r\n        }\r\n        if (!telemetryItem.ext.sdk) {\r\n            telemetryItem.ext.sdk = {};\r\n        }\r\n        var version = \"\";\r\n        for (var i = 0; i < this._extensions.length; i++) {\r\n            var ext = this._extensions[i];\r\n            if (ext.identifier && ext.version) {\r\n                var str = ext.identifier + \":\" + ext.version + \";\";\r\n                version = version.concat(str);\r\n            }\r\n        }\r\n        if (version != \"\") {\r\n            telemetryItem.ext.sdk['libVer'] = version;\r\n        }\r\n    };\r\n    AppInsightsCore.prototype._notifiyInvalidEvent = function (telemetryItem) {\r\n        this._notificationManager.eventsDiscarded([telemetryItem], EventsDiscardedReason.InvalidEvent);\r\n    };\r\n    return AppInsightsCore;\r\n}());\r\nexport { AppInsightsCore };\r\nvar ChannelController = /** @class */ (function () {\r\n    function ChannelController() {\r\n        this.identifier = \"ChannelControllerPlugin\";\r\n        this.priority = ChannelControllerPriority; // in reserved range 100 to 200\r\n    }\r\n    ChannelController.prototype.processTelemetry = function (item) {\r\n        this.channelQueue.forEach(function (queues) {\r\n            // pass on to first item in queue\r\n            if (queues.length > 0) {\r\n                queues[0].processTelemetry(item);\r\n            }\r\n        });\r\n    };\r\n    Object.defineProperty(ChannelController.prototype, \"ChannelControls\", {\r\n        get: function () {\r\n            return this.channelQueue;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ChannelController.prototype.initialize = function (config, core, extensions) {\r\n        var _this = this;\r\n        this.channelQueue = new Array();\r\n        if (config.channels) {\r\n            var invalidChannelIdentifier_1 = undefined;\r\n            config.channels.forEach(function (queue) {\r\n                if (queue && queue.length > 0) {\r\n                    queue = queue.sort(function (a, b) {\r\n                        return a.priority - b.priority;\r\n                    });\r\n                    // Initialize each plugin\r\n                    queue.forEach(function (queueItem) {\r\n                        if (queueItem.priority < ChannelControllerPriority) {\r\n                            invalidChannelIdentifier_1 = queueItem.identifier;\r\n                        }\r\n                        queueItem.initialize(config, core, extensions);\r\n                    });\r\n                    if (invalidChannelIdentifier_1) {\r\n                        throw Error(ChannelValidationMessage + invalidChannelIdentifier_1);\r\n                    }\r\n                    for (var i = 1; i < queue.length; i++) {\r\n                        queue[i - 1].setNextPlugin(queue[i]); // setup processing chain\r\n                    }\r\n                    _this.channelQueue.push(queue);\r\n                }\r\n            });\r\n        }\r\n        var arr = new Array();\r\n        for (var i = 0; i < extensions.length; i++) {\r\n            var plugin = extensions[i];\r\n            if (plugin.priority > ChannelControllerPriority) {\r\n                arr.push(plugin);\r\n            }\r\n        }\r\n        if (arr.length > 0) {\r\n            // sort if not sorted\r\n            arr = arr.sort(function (a, b) {\r\n                return a.priority - b.priority;\r\n            });\r\n            // Initialize each plugin\r\n            arr.forEach(function (queueItem) { return queueItem.initialize(config, core, extensions); });\r\n            // setup next plugin\r\n            for (var i = 1; i < arr.length; i++) {\r\n                arr[i - 1].setNextPlugin(arr[i]);\r\n            }\r\n            this.channelQueue.push(arr);\r\n        }\r\n    };\r\n    return ChannelController;\r\n}());\r\nvar validationError = \"Extensions must provide callback to initialize\";\r\nvar validationErrorInExt = \"Channels must be provided through config.channels only\";\r\nvar ChannelControllerPriority = 500;\r\nvar ChannelValidationMessage = \"Channel has invalid priority\";\r\n//# sourceMappingURL=AppInsightsCore.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { LoggingSeverity, _InternalMessageId } from '@microsoft/applicationinsights-core-js';\r\nvar DataSanitizer = /** @class */ (function () {\r\n    function DataSanitizer() {\r\n    }\r\n    DataSanitizer.sanitizeKeyAndAddUniqueness = function (logger, key, map) {\r\n        var origLength = key.length;\r\n        var field = DataSanitizer.sanitizeKey(logger, key);\r\n        // validation truncated the length.  We need to add uniqueness\r\n        if (field.length !== origLength) {\r\n            var i = 0;\r\n            var uniqueField = field;\r\n            while (map[uniqueField] !== undefined) {\r\n                i++;\r\n                uniqueField = field.substring(0, DataSanitizer.MAX_NAME_LENGTH - 3) + DataSanitizer.padNumber(i);\r\n            }\r\n            field = uniqueField;\r\n        }\r\n        return field;\r\n    };\r\n    DataSanitizer.sanitizeKey = function (logger, name) {\r\n        if (name) {\r\n            // Remove any leading or trailing whitepace\r\n            name = DataSanitizer.trim(name.toString());\r\n            // truncate the string to 150 chars\r\n            if (name.length > DataSanitizer.MAX_NAME_LENGTH) {\r\n                name = name.substring(0, DataSanitizer.MAX_NAME_LENGTH);\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.NameTooLong, \"name is too long.  It has been truncated to \" + DataSanitizer.MAX_NAME_LENGTH + \" characters.\", { name: name }, true);\r\n            }\r\n        }\r\n        return name;\r\n    };\r\n    DataSanitizer.sanitizeString = function (logger, value, maxLength) {\r\n        if (maxLength === void 0) { maxLength = DataSanitizer.MAX_STRING_LENGTH; }\r\n        if (value) {\r\n            maxLength = maxLength ? maxLength : DataSanitizer.MAX_STRING_LENGTH; // in case default parameters dont work\r\n            value = DataSanitizer.trim(value);\r\n            if (value.toString().length > maxLength) {\r\n                value = value.toString().substring(0, maxLength);\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.StringValueTooLong, \"string value is too long. It has been truncated to \" + maxLength + \" characters.\", { value: value }, true);\r\n            }\r\n        }\r\n        return value;\r\n    };\r\n    DataSanitizer.sanitizeUrl = function (logger, url) {\r\n        return DataSanitizer.sanitizeInput(logger, url, DataSanitizer.MAX_URL_LENGTH, _InternalMessageId.UrlTooLong);\r\n    };\r\n    DataSanitizer.sanitizeMessage = function (logger, message) {\r\n        if (message) {\r\n            if (message.length > DataSanitizer.MAX_MESSAGE_LENGTH) {\r\n                message = message.substring(0, DataSanitizer.MAX_MESSAGE_LENGTH);\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.MessageTruncated, \"message is too long, it has been truncated to \" + DataSanitizer.MAX_MESSAGE_LENGTH + \" characters.\", { message: message }, true);\r\n            }\r\n        }\r\n        return message;\r\n    };\r\n    DataSanitizer.sanitizeException = function (logger, exception) {\r\n        if (exception) {\r\n            if (exception.length > DataSanitizer.MAX_EXCEPTION_LENGTH) {\r\n                exception = exception.substring(0, DataSanitizer.MAX_EXCEPTION_LENGTH);\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.ExceptionTruncated, \"exception is too long, it has been truncated to \" + DataSanitizer.MAX_EXCEPTION_LENGTH + \" characters.\", { exception: exception }, true);\r\n            }\r\n        }\r\n        return exception;\r\n    };\r\n    DataSanitizer.sanitizeProperties = function (logger, properties) {\r\n        if (properties) {\r\n            var tempProps = {};\r\n            for (var prop in properties) {\r\n                var value = properties[prop];\r\n                if (typeof value === \"object\" && typeof JSON !== \"undefined\") {\r\n                    // Stringify any part C properties\r\n                    try {\r\n                        value = JSON.stringify(value);\r\n                    }\r\n                    catch (e) {\r\n                        logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.CannotSerializeObjectNonSerializable, \"custom property is not valid\", { exception: e }, true);\r\n                    }\r\n                }\r\n                value = DataSanitizer.sanitizeString(logger, value, DataSanitizer.MAX_PROPERTY_LENGTH);\r\n                prop = DataSanitizer.sanitizeKeyAndAddUniqueness(logger, prop, tempProps);\r\n                tempProps[prop] = value;\r\n            }\r\n            properties = tempProps;\r\n        }\r\n        return properties;\r\n    };\r\n    DataSanitizer.sanitizeMeasurements = function (logger, measurements) {\r\n        if (measurements) {\r\n            var tempMeasurements = {};\r\n            for (var measure in measurements) {\r\n                var value = measurements[measure];\r\n                measure = DataSanitizer.sanitizeKeyAndAddUniqueness(logger, measure, tempMeasurements);\r\n                tempMeasurements[measure] = value;\r\n            }\r\n            measurements = tempMeasurements;\r\n        }\r\n        return measurements;\r\n    };\r\n    DataSanitizer.sanitizeId = function (logger, id) {\r\n        return id ? DataSanitizer.sanitizeInput(logger, id, DataSanitizer.MAX_ID_LENGTH, _InternalMessageId.IdTooLong).toString() : id;\r\n    };\r\n    DataSanitizer.sanitizeInput = function (logger, input, maxLength, _msgId) {\r\n        if (input) {\r\n            input = DataSanitizer.trim(input);\r\n            if (input.length > maxLength) {\r\n                input = input.substring(0, maxLength);\r\n                logger.throwInternal(LoggingSeverity.WARNING, _msgId, \"input is too long, it has been truncated to \" + maxLength + \" characters.\", { data: input }, true);\r\n            }\r\n        }\r\n        return input;\r\n    };\r\n    DataSanitizer.padNumber = function (num) {\r\n        var s = \"00\" + num;\r\n        return s.substr(s.length - 3);\r\n    };\r\n    /**\r\n     * helper method to trim strings (IE8 does not implement String.prototype.trim)\r\n     */\r\n    DataSanitizer.trim = function (str) {\r\n        if (typeof str !== \"string\")\r\n            return str;\r\n        return str.replace(/^\\s+|\\s+$/g, \"\");\r\n    };\r\n    /**\r\n    * Max length allowed for custom names.\r\n    */\r\n    DataSanitizer.MAX_NAME_LENGTH = 150;\r\n    /**\r\n     * Max length allowed for Id field in page views.\r\n     */\r\n    DataSanitizer.MAX_ID_LENGTH = 128;\r\n    /**\r\n     * Max length allowed for custom values.\r\n     */\r\n    DataSanitizer.MAX_PROPERTY_LENGTH = 8192;\r\n    /**\r\n     * Max length allowed for names\r\n     */\r\n    DataSanitizer.MAX_STRING_LENGTH = 1024;\r\n    /**\r\n     * Max length allowed for url.\r\n     */\r\n    DataSanitizer.MAX_URL_LENGTH = 2048;\r\n    /**\r\n     * Max length allowed for messages.\r\n     */\r\n    DataSanitizer.MAX_MESSAGE_LENGTH = 32768;\r\n    /**\r\n     * Max length allowed for exceptions.\r\n     */\r\n    DataSanitizer.MAX_EXCEPTION_LENGTH = 32768;\r\n    return DataSanitizer;\r\n}());\r\nexport { DataSanitizer };\r\n//# sourceMappingURL=DataSanitizer.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { StorageType } from \"./Enums\";\r\nimport { CoreUtils, _InternalMessageId, LoggingSeverity } from \"@microsoft/applicationinsights-core-js\";\r\nimport { RequestHeaders } from \"./RequestResponseHeaders\";\r\nimport { DataSanitizer } from \"./Telemetry/Common/DataSanitizer\";\r\nvar Util = /** @class */ (function () {\r\n    function Util() {\r\n    }\r\n    /*\r\n     * Force the SDK not to use local and session storage\r\n    */\r\n    Util.disableStorage = function () {\r\n        Util._canUseLocalStorage = false;\r\n        Util._canUseSessionStorage = false;\r\n    };\r\n    /**\r\n     * Gets the localStorage object if available\r\n     * @return {Storage} - Returns the storage object if available else returns null\r\n     */\r\n    Util._getLocalStorageObject = function () {\r\n        if (Util.canUseLocalStorage()) {\r\n            return Util._getVerifiedStorageObject(StorageType.LocalStorage);\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Tests storage object (localStorage or sessionStorage) to verify that it is usable\r\n     * More details here: https://mathiasbynens.be/notes/localstorage-pattern\r\n     * @param storageType Type of storage\r\n     * @return {Storage} Returns storage object verified that it is usable\r\n     */\r\n    Util._getVerifiedStorageObject = function (storageType) {\r\n        var storage = null;\r\n        var fail;\r\n        var uid;\r\n        try {\r\n            if (typeof window === 'undefined') {\r\n                return null;\r\n            }\r\n            uid = new Date;\r\n            storage = storageType === StorageType.LocalStorage ? window.localStorage : window.sessionStorage;\r\n            storage.setItem(uid, uid);\r\n            fail = storage.getItem(uid) != uid;\r\n            storage.removeItem(uid);\r\n            if (fail) {\r\n                storage = null;\r\n            }\r\n        }\r\n        catch (exception) {\r\n            storage = null;\r\n        }\r\n        return storage;\r\n    };\r\n    /**\r\n     *  Checks if endpoint URL is application insights internal injestion service URL.\r\n     *\r\n     *  @param endpointUrl Endpoint URL to check.\r\n     *  @returns {boolean} True if if endpoint URL is application insights internal injestion service URL.\r\n     */\r\n    Util.isInternalApplicationInsightsEndpoint = function (endpointUrl) {\r\n        return Util._internalEndpoints.indexOf(endpointUrl.toLowerCase()) !== -1;\r\n    };\r\n    /**\r\n     *  Check if the browser supports local storage.\r\n     *\r\n     *  @returns {boolean} True if local storage is supported.\r\n     */\r\n    Util.canUseLocalStorage = function () {\r\n        if (Util._canUseLocalStorage === undefined) {\r\n            Util._canUseLocalStorage = !!Util._getVerifiedStorageObject(StorageType.LocalStorage);\r\n        }\r\n        return Util._canUseLocalStorage;\r\n    };\r\n    /**\r\n     *  Get an object from the browser's local storage\r\n     *\r\n     *  @param {string} name - the name of the object to get from storage\r\n     *  @returns {string} The contents of the storage object with the given name. Null if storage is not supported.\r\n     */\r\n    Util.getStorage = function (logger, name) {\r\n        var storage = Util._getLocalStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                return storage.getItem(name);\r\n            }\r\n            catch (e) {\r\n                Util._canUseLocalStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserCannotReadLocalStorage, \"Browser failed read of local storage. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     *  Set the contents of an object in the browser's local storage\r\n     *\r\n     *  @param {string} name - the name of the object to set in storage\r\n     *  @param {string} data - the contents of the object to set in storage\r\n     *  @returns {boolean} True if the storage object could be written.\r\n     */\r\n    Util.setStorage = function (logger, name, data) {\r\n        var storage = Util._getLocalStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                storage.setItem(name, data);\r\n                return true;\r\n            }\r\n            catch (e) {\r\n                Util._canUseLocalStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserCannotWriteLocalStorage, \"Browser failed write to local storage. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     *  Remove an object from the browser's local storage\r\n     *\r\n     *  @param {string} name - the name of the object to remove from storage\r\n     *  @returns {boolean} True if the storage object could be removed.\r\n     */\r\n    Util.removeStorage = function (logger, name) {\r\n        var storage = Util._getLocalStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                storage.removeItem(name);\r\n                return true;\r\n            }\r\n            catch (e) {\r\n                Util._canUseLocalStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserFailedRemovalFromLocalStorage, \"Browser failed removal of local storage item. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * Gets the sessionStorage object if available\r\n     * @return {Storage} - Returns the storage object if available else returns null\r\n     */\r\n    Util._getSessionStorageObject = function () {\r\n        if (Util.canUseSessionStorage()) {\r\n            return Util._getVerifiedStorageObject(StorageType.SessionStorage);\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     *  Check if the browser supports session storage.\r\n     *\r\n     *  @returns {boolean} True if session storage is supported.\r\n     */\r\n    Util.canUseSessionStorage = function () {\r\n        if (Util._canUseSessionStorage === undefined) {\r\n            Util._canUseSessionStorage = !!Util._getVerifiedStorageObject(StorageType.SessionStorage);\r\n        }\r\n        return Util._canUseSessionStorage;\r\n    };\r\n    /**\r\n     *  Gets the list of session storage keys\r\n     *\r\n     *  @returns {string[]} List of session storage keys\r\n     */\r\n    Util.getSessionStorageKeys = function () {\r\n        var keys = [];\r\n        if (Util.canUseSessionStorage()) {\r\n            for (var key in window.sessionStorage) {\r\n                keys.push(key);\r\n            }\r\n        }\r\n        return keys;\r\n    };\r\n    /**\r\n     *  Get an object from the browser's session storage\r\n     *\r\n     *  @param {string} name - the name of the object to get from storage\r\n     *  @returns {string} The contents of the storage object with the given name. Null if storage is not supported.\r\n     */\r\n    Util.getSessionStorage = function (logger, name) {\r\n        var storage = Util._getSessionStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                return storage.getItem(name);\r\n            }\r\n            catch (e) {\r\n                Util._canUseSessionStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserCannotReadSessionStorage, \"Browser failed read of session storage. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     *  Set the contents of an object in the browser's session storage\r\n     *\r\n     *  @param {string} name - the name of the object to set in storage\r\n     *  @param {string} data - the contents of the object to set in storage\r\n     *  @returns {boolean} True if the storage object could be written.\r\n     */\r\n    Util.setSessionStorage = function (logger, name, data) {\r\n        var storage = Util._getSessionStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                storage.setItem(name, data);\r\n                return true;\r\n            }\r\n            catch (e) {\r\n                Util._canUseSessionStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserCannotWriteSessionStorage, \"Browser failed write to session storage. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     *  Remove an object from the browser's session storage\r\n     *\r\n     *  @param {string} name - the name of the object to remove from storage\r\n     *  @returns {boolean} True if the storage object could be removed.\r\n     */\r\n    Util.removeSessionStorage = function (logger, name) {\r\n        var storage = Util._getSessionStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                storage.removeItem(name);\r\n                return true;\r\n            }\r\n            catch (e) {\r\n                Util._canUseSessionStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserFailedRemovalFromSessionStorage, \"Browser failed removal of session storage item. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /*\r\n     * Force the SDK not to store and read any data from cookies\r\n     */\r\n    Util.disableCookies = function () {\r\n        Util._canUseCookies = false;\r\n    };\r\n    /*\r\n     * helper method to tell if document.cookie object is available\r\n     */\r\n    Util.canUseCookies = function (logger) {\r\n        if (Util._canUseCookies === undefined) {\r\n            Util._canUseCookies = false;\r\n            try {\r\n                Util._canUseCookies = Util.document.cookie !== undefined;\r\n            }\r\n            catch (e) {\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.CannotAccessCookie, \"Cannot access document.cookie - \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n            ;\r\n        }\r\n        return Util._canUseCookies;\r\n    };\r\n    /**\r\n     * helper method to set userId and sessionId cookie\r\n     */\r\n    Util.setCookie = function (logger, name, value, domain) {\r\n        var domainAttrib = \"\";\r\n        var secureAttrib = \"\";\r\n        if (domain) {\r\n            domainAttrib = \";domain=\" + domain;\r\n        }\r\n        if (Util.document.location && Util.document.location.protocol === \"https:\") {\r\n            secureAttrib = \";secure\";\r\n        }\r\n        if (Util.canUseCookies(logger)) {\r\n            Util.document.cookie = name + \"=\" + value + domainAttrib + \";path=/\" + secureAttrib;\r\n        }\r\n    };\r\n    Util.stringToBoolOrDefault = function (str, defaultValue) {\r\n        if (defaultValue === void 0) { defaultValue = false; }\r\n        if (str === undefined || str === null) {\r\n            return defaultValue;\r\n        }\r\n        return str.toString().toLowerCase() === \"true\";\r\n    };\r\n    /**\r\n     * helper method to access userId and sessionId cookie\r\n     */\r\n    Util.getCookie = function (logger, name) {\r\n        if (!Util.canUseCookies(logger)) {\r\n            return;\r\n        }\r\n        var value = \"\";\r\n        if (name && name.length) {\r\n            var cookieName = name + \"=\";\r\n            var cookies = Util.document.cookie.split(\";\");\r\n            for (var i = 0; i < cookies.length; i++) {\r\n                var cookie = cookies[i];\r\n                cookie = Util.trim(cookie);\r\n                if (cookie && cookie.indexOf(cookieName) === 0) {\r\n                    value = cookie.substring(cookieName.length, cookies[i].length);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return value;\r\n    };\r\n    /**\r\n     * Deletes a cookie by setting it's expiration time in the past.\r\n     * @param name - The name of the cookie to delete.\r\n     */\r\n    Util.deleteCookie = function (logger, name) {\r\n        if (Util.canUseCookies(logger)) {\r\n            // Setting the expiration date in the past immediately removes the cookie\r\n            Util.document.cookie = name + \"=;path=/;expires=Thu, 01 Jan 1970 00:00:01 GMT;\";\r\n        }\r\n    };\r\n    /**\r\n     * helper method to trim strings (IE8 does not implement String.prototype.trim)\r\n     */\r\n    Util.trim = function (str) {\r\n        if (typeof str !== \"string\")\r\n            return str;\r\n        return str.replace(/^\\s+|\\s+$/g, \"\");\r\n    };\r\n    /**\r\n     * generate random id string\r\n     */\r\n    Util.newId = function () {\r\n        var base64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\r\n        var result = \"\";\r\n        // tslint:disable-next-line:insecure-random\r\n        var random = Math.random() * 1073741824; //5 symbols in base64, almost maxint\r\n        while (random > 0) {\r\n            var char = base64chars.charAt(random % 64);\r\n            result += char;\r\n            random = Math.floor(random / 64);\r\n        }\r\n        return result;\r\n    };\r\n    /**\r\n     * Check if an object is of type Array\r\n     */\r\n    Util.isArray = function (obj) {\r\n        return Object.prototype.toString.call(obj) === \"[object Array]\";\r\n    };\r\n    /**\r\n     * Check if an object is of type Error\r\n     */\r\n    Util.isError = function (obj) {\r\n        return Object.prototype.toString.call(obj) === \"[object Error]\";\r\n    };\r\n    /**\r\n     * Check if an object is of type Date\r\n     */\r\n    Util.isDate = function (obj) {\r\n        return Object.prototype.toString.call(obj) === \"[object Date]\";\r\n    };\r\n    /**\r\n     * Convert a date to I.S.O. format in IE8\r\n     */\r\n    Util.toISOStringForIE8 = function (date) {\r\n        if (Util.isDate(date)) {\r\n            if (Date.prototype.toISOString) {\r\n                return date.toISOString();\r\n            }\r\n            else {\r\n                var pad = function (num) {\r\n                    var r = String(num);\r\n                    if (r.length === 1) {\r\n                        r = \"0\" + r;\r\n                    }\r\n                    return r;\r\n                };\r\n                return date.getUTCFullYear()\r\n                    + \"-\" + pad(date.getUTCMonth() + 1)\r\n                    + \"-\" + pad(date.getUTCDate())\r\n                    + \"T\" + pad(date.getUTCHours())\r\n                    + \":\" + pad(date.getUTCMinutes())\r\n                    + \":\" + pad(date.getUTCSeconds())\r\n                    + \".\" + String((date.getUTCMilliseconds() / 1000).toFixed(3)).slice(2, 5)\r\n                    + \"Z\";\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Gets IE version if we are running on IE, or null otherwise\r\n     */\r\n    Util.getIEVersion = function (userAgentStr) {\r\n        if (userAgentStr === void 0) { userAgentStr = null; }\r\n        var myNav = userAgentStr ? userAgentStr.toLowerCase() : navigator.userAgent.toLowerCase();\r\n        return (myNav.indexOf('msie') != -1) ? parseInt(myNav.split('msie')[1]) : null;\r\n    };\r\n    /**\r\n     * Convert ms to c# time span format\r\n     */\r\n    Util.msToTimeSpan = function (totalms) {\r\n        if (isNaN(totalms) || totalms < 0) {\r\n            totalms = 0;\r\n        }\r\n        totalms = Math.round(totalms);\r\n        var ms = \"\" + totalms % 1000;\r\n        var sec = \"\" + Math.floor(totalms / 1000) % 60;\r\n        var min = \"\" + Math.floor(totalms / (1000 * 60)) % 60;\r\n        var hour = \"\" + Math.floor(totalms / (1000 * 60 * 60)) % 24;\r\n        var days = Math.floor(totalms / (1000 * 60 * 60 * 24));\r\n        ms = ms.length === 1 ? \"00\" + ms : ms.length === 2 ? \"0\" + ms : ms;\r\n        sec = sec.length < 2 ? \"0\" + sec : sec;\r\n        min = min.length < 2 ? \"0\" + min : min;\r\n        hour = hour.length < 2 ? \"0\" + hour : hour;\r\n        return (days > 0 ? days + \".\" : \"\") + hour + \":\" + min + \":\" + sec + \".\" + ms;\r\n    };\r\n    /**\r\n    * Checks if error has no meaningful data inside. Ususally such errors are received by window.onerror when error\r\n    * happens in a script from other domain (cross origin, CORS).\r\n    */\r\n    Util.isCrossOriginError = function (message, url, lineNumber, columnNumber, error) {\r\n        return (message === \"Script error.\" || message === \"Script error\") && !error;\r\n    };\r\n    /**\r\n    * Returns string representation of an object suitable for diagnostics logging.\r\n    */\r\n    Util.dump = function (object) {\r\n        var objectTypeDump = Object.prototype.toString.call(object);\r\n        var propertyValueDump = JSON.stringify(object);\r\n        if (objectTypeDump === \"[object Error]\") {\r\n            propertyValueDump = \"{ stack: '\" + object.stack + \"', message: '\" + object.message + \"', name: '\" + object.name + \"'\";\r\n        }\r\n        return objectTypeDump + propertyValueDump;\r\n    };\r\n    /**\r\n    * Returns the name of object if it's an Error. Otherwise, returns empty string.\r\n    */\r\n    Util.getExceptionName = function (object) {\r\n        var objectTypeDump = Object.prototype.toString.call(object);\r\n        if (objectTypeDump === \"[object Error]\") {\r\n            return object.name;\r\n        }\r\n        return \"\";\r\n    };\r\n    /**\r\n     * Adds an event handler for the specified event\r\n     * @param eventName {string} - The name of the event\r\n     * @param callback {any} - The callback function that needs to be executed for the given event\r\n     * @return {boolean} - true if the handler was successfully added\r\n     */\r\n    Util.addEventHandler = function (eventName, callback) {\r\n        if (typeof window === 'undefined' || !window || typeof eventName !== 'string' || typeof callback !== 'function') {\r\n            return false;\r\n        }\r\n        // Create verb for the event\r\n        var verbEventName = 'on' + eventName;\r\n        // check if addEventListener is available\r\n        if (window.addEventListener) {\r\n            window.addEventListener(eventName, callback, false);\r\n        }\r\n        else if (window[\"attachEvent\"]) {\r\n            window[\"attachEvent\"](verbEventName, callback);\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     * Tells if a browser supports a Beacon API\r\n     */\r\n    Util.IsBeaconApiSupported = function () {\r\n        return ('sendBeacon' in navigator && navigator.sendBeacon);\r\n    };\r\n    Util.document = typeof document !== \"undefined\" ? document : {};\r\n    Util._canUseCookies = undefined;\r\n    Util._canUseLocalStorage = undefined;\r\n    Util._canUseSessionStorage = undefined;\r\n    // listing only non-geo specific locations \r\n    Util._internalEndpoints = [\r\n        \"https://dc.services.visualstudio.com/v2/track\",\r\n        \"https://breeze.aimon.applicationinsights.io/v2/track\",\r\n        \"https://dc-int.services.visualstudio.com/v2/track\"\r\n    ];\r\n    Util.NotSpecified = \"not_specified\";\r\n    return Util;\r\n}());\r\nexport { Util };\r\nvar UrlHelper = /** @class */ (function () {\r\n    function UrlHelper() {\r\n    }\r\n    UrlHelper.parseUrl = function (url) {\r\n        if (!UrlHelper.htmlAnchorElement) {\r\n            UrlHelper.htmlAnchorElement = !!UrlHelper.document.createElement ? UrlHelper.document.createElement('a') : {};\r\n        }\r\n        UrlHelper.htmlAnchorElement.href = url;\r\n        return UrlHelper.htmlAnchorElement;\r\n    };\r\n    UrlHelper.getAbsoluteUrl = function (url) {\r\n        var result;\r\n        var a = UrlHelper.parseUrl(url);\r\n        if (a) {\r\n            result = a.href;\r\n        }\r\n        return result;\r\n    };\r\n    UrlHelper.getPathName = function (url) {\r\n        var result;\r\n        var a = UrlHelper.parseUrl(url);\r\n        if (a) {\r\n            result = a.pathname;\r\n        }\r\n        return result;\r\n    };\r\n    UrlHelper.getCompleteUrl = function (method, absoluteUrl) {\r\n        if (method) {\r\n            return method.toUpperCase() + \" \" + absoluteUrl;\r\n        }\r\n        else {\r\n            return absoluteUrl;\r\n        }\r\n    };\r\n    UrlHelper.document = typeof document !== \"undefined\" ? document : {};\r\n    return UrlHelper;\r\n}());\r\nexport { UrlHelper };\r\nvar CorrelationIdHelper = /** @class */ (function () {\r\n    function CorrelationIdHelper() {\r\n    }\r\n    /**\r\n    * Checks if a request url is not on a excluded domain list and if it is safe to add correlation headers\r\n    */\r\n    CorrelationIdHelper.canIncludeCorrelationHeader = function (config, requestUrl, currentHost) {\r\n        if (config && config.disableCorrelationHeaders) {\r\n            return false;\r\n        }\r\n        if (!requestUrl) {\r\n            return false;\r\n        }\r\n        var requestHost = UrlHelper.parseUrl(requestUrl).host.toLowerCase();\r\n        if ((!config || !config.enableCorsCorrelation) && requestHost !== currentHost) {\r\n            return false;\r\n        }\r\n        var excludedDomains = config && config.correlationHeaderExcludedDomains;\r\n        if (!excludedDomains || excludedDomains.length == 0) {\r\n            return true;\r\n        }\r\n        for (var i = 0; i < excludedDomains.length; i++) {\r\n            var regex = new RegExp(excludedDomains[i].toLowerCase().replace(/\\./g, \"\\.\").replace(/\\*/g, \".*\"));\r\n            if (regex.test(requestHost)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n    * Combines target appId and target role name from response header.\r\n    */\r\n    CorrelationIdHelper.getCorrelationContext = function (responseHeader) {\r\n        if (responseHeader) {\r\n            var correlationId = CorrelationIdHelper.getCorrelationContextValue(responseHeader, RequestHeaders.requestContextTargetKey);\r\n            if (correlationId && correlationId !== CorrelationIdHelper.correlationIdPrefix) {\r\n                return correlationId;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n    * Gets key from correlation response header\r\n    */\r\n    CorrelationIdHelper.getCorrelationContextValue = function (responseHeader, key) {\r\n        if (responseHeader) {\r\n            var keyValues = responseHeader.split(\",\");\r\n            for (var i = 0; i < keyValues.length; ++i) {\r\n                var keyValue = keyValues[i].split(\"=\");\r\n                if (keyValue.length == 2 && keyValue[0] == key) {\r\n                    return keyValue[1];\r\n                }\r\n            }\r\n        }\r\n    };\r\n    CorrelationIdHelper.correlationIdPrefix = \"cid-v1:\";\r\n    return CorrelationIdHelper;\r\n}());\r\nexport { CorrelationIdHelper };\r\nvar AjaxHelper = /** @class */ (function () {\r\n    function AjaxHelper() {\r\n    }\r\n    AjaxHelper.ParseDependencyPath = function (logger, absoluteUrl, method, commandName) {\r\n        var target, name = commandName, data = commandName;\r\n        if (absoluteUrl && absoluteUrl.length > 0) {\r\n            var parsedUrl = UrlHelper.parseUrl(absoluteUrl);\r\n            target = parsedUrl.host;\r\n            if (!name) {\r\n                if (parsedUrl.pathname != null) {\r\n                    var pathName = (parsedUrl.pathname.length === 0) ? \"/\" : parsedUrl.pathname;\r\n                    if (pathName.charAt(0) !== '/') {\r\n                        pathName = \"/\" + pathName;\r\n                    }\r\n                    data = parsedUrl.pathname;\r\n                    name = DataSanitizer.sanitizeString(logger, method ? method + \" \" + pathName : pathName);\r\n                }\r\n                else {\r\n                    name = DataSanitizer.sanitizeString(logger, absoluteUrl);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            target = commandName;\r\n            name = commandName;\r\n        }\r\n        return {\r\n            target: target,\r\n            name: name,\r\n            data: data\r\n        };\r\n    };\r\n    return AjaxHelper;\r\n}());\r\nexport { AjaxHelper };\r\n/**\r\n * A utility class that helps getting time related parameters\r\n */\r\nvar DateTimeUtils = /** @class */ (function () {\r\n    function DateTimeUtils() {\r\n    }\r\n    /**\r\n     * Get the number of milliseconds since 1970/01/01 in local timezone\r\n     */\r\n    DateTimeUtils.Now = (typeof window === 'undefined') ? function () { return new Date().getTime(); } :\r\n        (window.performance && window.performance.now && window.performance.timing) ?\r\n            function () {\r\n                return window.performance.now() + window.performance.timing.navigationStart;\r\n            }\r\n            :\r\n                function () {\r\n                    return new Date().getTime();\r\n                };\r\n    /**\r\n     * Gets duration between two timestamps\r\n     */\r\n    DateTimeUtils.GetDuration = function (start, end) {\r\n        var result = null;\r\n        if (start !== 0 && end !== 0 && !CoreUtils.isNullOrUndefined(start) && !CoreUtils.isNullOrUndefined(end)) {\r\n            result = end - start;\r\n        }\r\n        return result;\r\n    };\r\n    return DateTimeUtils;\r\n}());\r\nexport { DateTimeUtils };\r\n//# sourceMappingURL=Util.js.map","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\n/**\r\n     * Data struct to contain only C section with custom fields.\r\n     */\r\nvar Base = /** @class */ (function () {\r\n    function Base() {\r\n    }\r\n    return Base;\r\n}());\r\nexport { Base };\r\n//# sourceMappingURL=Base.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\n/**\r\n * Type of the metric data measurement.\r\n */\r\nexport var DataPointType;\r\n(function (DataPointType) {\r\n    DataPointType[DataPointType[\"Measurement\"] = 0] = \"Measurement\";\r\n    DataPointType[DataPointType[\"Aggregation\"] = 1] = \"Aggregation\";\r\n})(DataPointType || (DataPointType = {}));\r\n//# sourceMappingURL=DataPointType.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { Base } from './Base';\r\n/**\r\n * Data struct to contain both B and C sections.\r\n */\r\nvar Data = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Data, _super);\r\n    function Data() {\r\n        return _super.call(this) || this;\r\n    }\r\n    return Data;\r\n}(Base));\r\nexport { Data };\r\n//# sourceMappingURL=Data.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\n/**\r\n * The abstract common base of all domains.\r\n */\r\nvar Domain = /** @class */ (function () {\r\n    function Domain() {\r\n    }\r\n    return Domain;\r\n}());\r\nexport { Domain };\r\n//# sourceMappingURL=Domain.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Envelope as AIEnvelope } from '../../Interfaces/Contracts/Generated/Envelope';\r\nimport { DataSanitizer } from './DataSanitizer';\r\nimport { FieldType } from '../../Enums';\r\nimport { Util } from '../../Util';\r\nvar Envelope = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Envelope, _super);\r\n    /**\r\n     * Constructs a new instance of telemetry data.\r\n     */\r\n    function Envelope(logger, data, name) {\r\n        var _this = _super.call(this) || this;\r\n        _this.name = DataSanitizer.sanitizeString(logger, name) || Util.NotSpecified;\r\n        _this.data = data;\r\n        _this.time = Util.toISOStringForIE8(new Date());\r\n        _this.aiDataContract = {\r\n            time: FieldType.Required,\r\n            iKey: FieldType.Required,\r\n            name: FieldType.Required,\r\n            sampleRate: function () {\r\n                return (_this.sampleRate == 100) ? FieldType.Hidden : FieldType.Required;\r\n            },\r\n            tags: FieldType.Required,\r\n            data: FieldType.Required\r\n        };\r\n        return _this;\r\n    }\r\n    return Envelope;\r\n}(AIEnvelope));\r\nexport { Envelope };\r\n//# sourceMappingURL=Envelope.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n/**\r\n * System variables for a telemetry item.\r\n */\r\nvar Envelope = /** @class */ (function () {\r\n    function Envelope() {\r\n        this.ver = 1;\r\n        this.sampleRate = 100.0;\r\n        this.tags = {};\r\n    }\r\n    return Envelope;\r\n}());\r\nexport { Envelope };\r\n//# sourceMappingURL=Envelope.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { Domain } from './Domain';\r\n/**\r\n * Instances of Event represent structured event records that can be grouped and searched by their properties. Event data item also creates a metric of event count by name.\r\n */\r\nvar EventData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(EventData, _super);\r\n    function EventData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return EventData;\r\n}(Domain));\r\nexport { EventData };\r\n//# sourceMappingURL=EventData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { EventData } from '../Interfaces/Contracts/Generated/EventData';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { Util } from '../Util';\r\nvar Event = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Event, _super);\r\n    /**\r\n     * Constructs a new instance of the EventTelemetry object\r\n     */\r\n    function Event(logger, name, properties, measurements) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            name: FieldType.Required,\r\n            properties: FieldType.Default,\r\n            measurements: FieldType.Default\r\n        };\r\n        _this.name = DataSanitizer.sanitizeString(logger, name) || Util.NotSpecified;\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        _this.measurements = DataSanitizer.sanitizeMeasurements(logger, measurements);\r\n        return _this;\r\n    }\r\n    Event.envelopeType = \"Microsoft.ApplicationInsights.{0}.Event\";\r\n    Event.dataType = \"EventData\";\r\n    return Event;\r\n}(EventData));\r\nexport { Event };\r\n//# sourceMappingURL=Event.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\n/**\r\n * Stack frame information.\r\n */\r\nvar StackFrame = /** @class */ (function () {\r\n    function StackFrame() {\r\n    }\r\n    return StackFrame;\r\n}());\r\nexport { StackFrame };\r\n//# sourceMappingURL=StackFrame.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n/**\r\n * Exception details of the exception in a chain.\r\n */\r\nvar ExceptionDetails = /** @class */ (function () {\r\n    function ExceptionDetails() {\r\n        this.hasFullStack = true;\r\n        this.parsedStack = [];\r\n    }\r\n    return ExceptionDetails;\r\n}());\r\nexport { ExceptionDetails };\r\n//# sourceMappingURL=ExceptionDetails.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { StackFrame } from '../Interfaces/Contracts/Generated/StackFrame';\r\nimport { ExceptionData } from '../Interfaces/Contracts/Generated/ExceptionData';\r\nimport { ExceptionDetails } from '../Interfaces/Contracts/Generated/ExceptionDetails';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { Util } from '../Util';\r\nvar Exception = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Exception, _super);\r\n    /**\r\n    * Constructs a new isntance of the ExceptionTelemetry object\r\n    */\r\n    function Exception(logger, exception, properties, measurements, severityLevel) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            exceptions: FieldType.Required,\r\n            severityLevel: FieldType.Default,\r\n            properties: FieldType.Default,\r\n            measurements: FieldType.Default\r\n        };\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        _this.measurements = DataSanitizer.sanitizeMeasurements(logger, measurements);\r\n        _this.exceptions = [new _ExceptionDetails(logger, exception)];\r\n        if (severityLevel) {\r\n            _this.severityLevel = severityLevel;\r\n        }\r\n        return _this;\r\n    }\r\n    /**\r\n    * Creates a simple exception with 1 stack frame. Useful for manual constracting of exception.\r\n    */\r\n    Exception.CreateSimpleException = function (message, typeName, assembly, fileName, details, line) {\r\n        return {\r\n            exceptions: [\r\n                {\r\n                    hasFullStack: true,\r\n                    message: message,\r\n                    stack: details,\r\n                    typeName: typeName\r\n                }\r\n            ]\r\n        };\r\n    };\r\n    Exception.envelopeType = \"Microsoft.ApplicationInsights.{0}.Exception\";\r\n    Exception.dataType = \"ExceptionData\";\r\n    return Exception;\r\n}(ExceptionData));\r\nexport { Exception };\r\nvar _ExceptionDetails = /** @class */ (function (_super) {\r\n    tslib_1.__extends(_ExceptionDetails, _super);\r\n    function _ExceptionDetails(logger, exception) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            id: FieldType.Default,\r\n            outerId: FieldType.Default,\r\n            typeName: FieldType.Required,\r\n            message: FieldType.Required,\r\n            hasFullStack: FieldType.Default,\r\n            stack: FieldType.Default,\r\n            parsedStack: FieldType.Array\r\n        };\r\n        _this.typeName = DataSanitizer.sanitizeString(logger, exception.name) || Util.NotSpecified;\r\n        _this.message = DataSanitizer.sanitizeMessage(logger, exception.message) || Util.NotSpecified;\r\n        var stack = exception[\"stack\"];\r\n        _this.parsedStack = _this.parseStack(stack);\r\n        _this.stack = DataSanitizer.sanitizeException(logger, stack);\r\n        _this.hasFullStack = Util.isArray(_this.parsedStack) && _this.parsedStack.length > 0;\r\n        return _this;\r\n    }\r\n    _ExceptionDetails.prototype.parseStack = function (stack) {\r\n        var parsedStack = undefined;\r\n        if (typeof stack === \"string\") {\r\n            var frames = stack.split('\\n');\r\n            parsedStack = [];\r\n            var level = 0;\r\n            var totalSizeInBytes = 0;\r\n            for (var i = 0; i <= frames.length; i++) {\r\n                var frame = frames[i];\r\n                if (_StackFrame.regex.test(frame)) {\r\n                    var parsedFrame = new _StackFrame(frames[i], level++);\r\n                    totalSizeInBytes += parsedFrame.sizeInBytes;\r\n                    parsedStack.push(parsedFrame);\r\n                }\r\n            }\r\n            // DP Constraint - exception parsed stack must be < 32KB\r\n            // remove frames from the middle to meet the threshold\r\n            var exceptionParsedStackThreshold = 32 * 1024;\r\n            if (totalSizeInBytes > exceptionParsedStackThreshold) {\r\n                var left = 0;\r\n                var right = parsedStack.length - 1;\r\n                var size = 0;\r\n                var acceptedLeft = left;\r\n                var acceptedRight = right;\r\n                while (left < right) {\r\n                    // check size\r\n                    var lSize = parsedStack[left].sizeInBytes;\r\n                    var rSize = parsedStack[right].sizeInBytes;\r\n                    size += lSize + rSize;\r\n                    if (size > exceptionParsedStackThreshold) {\r\n                        // remove extra frames from the middle\r\n                        var howMany = acceptedRight - acceptedLeft + 1;\r\n                        parsedStack.splice(acceptedLeft, howMany);\r\n                        break;\r\n                    }\r\n                    // update pointers\r\n                    acceptedLeft = left;\r\n                    acceptedRight = right;\r\n                    left++;\r\n                    right--;\r\n                }\r\n            }\r\n        }\r\n        return parsedStack;\r\n    };\r\n    return _ExceptionDetails;\r\n}(ExceptionDetails));\r\nvar _StackFrame = /** @class */ (function (_super) {\r\n    tslib_1.__extends(_StackFrame, _super);\r\n    function _StackFrame(frame, level) {\r\n        var _this = _super.call(this) || this;\r\n        _this.sizeInBytes = 0;\r\n        _this.aiDataContract = {\r\n            level: FieldType.Required,\r\n            method: FieldType.Required,\r\n            assembly: FieldType.Default,\r\n            fileName: FieldType.Default,\r\n            line: FieldType.Default\r\n        };\r\n        _this.level = level;\r\n        _this.method = \"<no_method>\";\r\n        _this.assembly = Util.trim(frame);\r\n        var matches = frame.match(_StackFrame.regex);\r\n        if (matches && matches.length >= 5) {\r\n            _this.method = Util.trim(matches[2]) || _this.method;\r\n            _this.fileName = Util.trim(matches[4]);\r\n            _this.line = parseInt(matches[5]) || 0;\r\n        }\r\n        _this.sizeInBytes += _this.method.length;\r\n        _this.sizeInBytes += _this.fileName.length;\r\n        _this.sizeInBytes += _this.assembly.length;\r\n        // todo: these might need to be removed depending on how the back-end settles on their size calculation\r\n        _this.sizeInBytes += _StackFrame.baseSize;\r\n        _this.sizeInBytes += _this.level.toString().length;\r\n        _this.sizeInBytes += _this.line.toString().length;\r\n        return _this;\r\n    }\r\n    // regex to match stack frames from ie/chrome/ff\r\n    // methodName=$2, fileName=$4, lineNo=$5, column=$6\r\n    _StackFrame.regex = /^([\\s]+at)?(.*?)(\\@|\\s\\(|\\s)([^\\(\\@\\n]+):([0-9]+):([0-9]+)(\\)?)$/;\r\n    _StackFrame.baseSize = 58; //'{\"method\":\"\",\"level\":,\"assembly\":\"\",\"fileName\":\"\",\"line\":}'.length\r\n    return _StackFrame;\r\n}(StackFrame));\r\nexport { _StackFrame };\r\n//# sourceMappingURL=Exception.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Domain } from './Domain';\r\n/**\r\n * An instance of Exception represents a handled or unhandled exception that occurred during execution of the monitored application.\r\n */\r\nvar ExceptionData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ExceptionData, _super);\r\n    function ExceptionData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.exceptions = [];\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return ExceptionData;\r\n}(Domain));\r\nexport { ExceptionData };\r\n//# sourceMappingURL=ExceptionData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { Domain } from './Domain';\r\n/**\r\n * An instance of the Metric item is a list of measurements (single data points) and/or aggregations.\r\n */\r\nvar MetricData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(MetricData, _super);\r\n    function MetricData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.metrics = [];\r\n        _this.properties = {};\r\n        return _this;\r\n    }\r\n    return MetricData;\r\n}(Domain));\r\nexport { MetricData };\r\n//# sourceMappingURL=MetricData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { DataPointType } from './DataPointType';\r\n/**\r\n * Metric data single measurement.\r\n */\r\nvar DataPoint = /** @class */ (function () {\r\n    function DataPoint() {\r\n        this.kind = DataPointType.Measurement;\r\n    }\r\n    return DataPoint;\r\n}());\r\nexport { DataPoint };\r\n//# sourceMappingURL=DataPoint.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\n/**\r\n* Defines the level of severity for the event.\r\n*/\r\nexport var SeverityLevel;\r\n(function (SeverityLevel) {\r\n    SeverityLevel[SeverityLevel[\"Verbose\"] = 0] = \"Verbose\";\r\n    SeverityLevel[SeverityLevel[\"Information\"] = 1] = \"Information\";\r\n    SeverityLevel[SeverityLevel[\"Warning\"] = 2] = \"Warning\";\r\n    SeverityLevel[SeverityLevel[\"Error\"] = 3] = \"Error\";\r\n    SeverityLevel[SeverityLevel[\"Critical\"] = 4] = \"Critical\";\r\n})(SeverityLevel || (SeverityLevel = {}));\r\n//# sourceMappingURL=SeverityLevel.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { DataPoint as AIDataPoint } from '../../Interfaces/Contracts/Generated/DataPoint';\r\nimport { FieldType } from '../../Enums';\r\nvar DataPoint = /** @class */ (function (_super) {\r\n    tslib_1.__extends(DataPoint, _super);\r\n    function DataPoint() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * The data contract for serializing this object.\r\n         */\r\n        _this.aiDataContract = {\r\n            name: FieldType.Required,\r\n            kind: FieldType.Default,\r\n            value: FieldType.Required,\r\n            count: FieldType.Default,\r\n            min: FieldType.Default,\r\n            max: FieldType.Default,\r\n            stdDev: FieldType.Default\r\n        };\r\n        return _this;\r\n    }\r\n    return DataPoint;\r\n}(AIDataPoint));\r\nexport { DataPoint };\r\n//# sourceMappingURL=DataPoint.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { MetricData } from '../Interfaces/Contracts/Generated/MetricData';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { DataPoint } from './Common/DataPoint';\r\nimport { Util } from '../Util';\r\nvar Metric = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Metric, _super);\r\n    /**\r\n     * Constructs a new instance of the MetricTelemetry object\r\n     */\r\n    function Metric(logger, name, value, count, min, max, properties) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            metrics: FieldType.Required,\r\n            properties: FieldType.Default\r\n        };\r\n        var dataPoint = new DataPoint();\r\n        dataPoint.count = count > 0 ? count : undefined;\r\n        dataPoint.max = isNaN(max) || max === null ? undefined : max;\r\n        dataPoint.min = isNaN(min) || min === null ? undefined : min;\r\n        dataPoint.name = DataSanitizer.sanitizeString(logger, name) || Util.NotSpecified;\r\n        dataPoint.value = value;\r\n        _this.metrics = [dataPoint];\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        return _this;\r\n    }\r\n    Metric.envelopeType = \"Microsoft.ApplicationInsights.{0}.Metric\";\r\n    Metric.dataType = \"MetricData\";\r\n    return Metric;\r\n}(MetricData));\r\nexport { Metric };\r\n//# sourceMappingURL=Metric.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { EventData } from './EventData';\r\n/**\r\n * An instance of PageView represents a generic action on a page like a button click. It is also the base type for PageView.\r\n */\r\nvar PageViewData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PageViewData, _super);\r\n    function PageViewData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return PageViewData;\r\n}(EventData));\r\nexport { PageViewData };\r\n//# sourceMappingURL=PageViewData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { PageViewData } from '../Interfaces/Contracts/Generated/PageViewData';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { Util } from '../Util';\r\nvar PageView = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PageView, _super);\r\n    /**\r\n     * Constructs a new instance of the PageEventTelemetry object\r\n     */\r\n    function PageView(logger, name, url, durationMs, properties, measurements, id) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            name: FieldType.Default,\r\n            url: FieldType.Default,\r\n            duration: FieldType.Default,\r\n            properties: FieldType.Default,\r\n            measurements: FieldType.Default,\r\n            id: FieldType.Default\r\n        };\r\n        _this.id = DataSanitizer.sanitizeId(logger, id);\r\n        _this.url = DataSanitizer.sanitizeUrl(logger, url);\r\n        _this.name = DataSanitizer.sanitizeString(logger, name) || Util.NotSpecified;\r\n        if (!isNaN(durationMs)) {\r\n            _this.duration = Util.msToTimeSpan(durationMs);\r\n        }\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        _this.measurements = DataSanitizer.sanitizeMeasurements(logger, measurements);\r\n        return _this;\r\n    }\r\n    PageView.envelopeType = \"Microsoft.ApplicationInsights.{0}.Pageview\";\r\n    PageView.dataType = \"PageviewData\";\r\n    return PageView;\r\n}(PageViewData));\r\nexport { PageView };\r\n//# sourceMappingURL=PageView.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { Util } from '../Util';\r\nimport { AjaxHelper } from '../Util';\r\nimport { RemoteDependencyData as GeneratedRemoteDependencyData } from '../Interfaces/Contracts/Generated/RemoteDependencyData';\r\nvar RemoteDependencyData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RemoteDependencyData, _super);\r\n    /**\r\n     * Constructs a new instance of the RemoteDependencyData object\r\n     */\r\n    function RemoteDependencyData(logger, id, absoluteUrl, commandName, value, success, resultCode, method, requestAPI, properties, measurements) {\r\n        if (requestAPI === void 0) { requestAPI = \"Ajax\"; }\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            id: FieldType.Required,\r\n            ver: FieldType.Required,\r\n            name: FieldType.Default,\r\n            resultCode: FieldType.Default,\r\n            duration: FieldType.Default,\r\n            success: FieldType.Default,\r\n            data: FieldType.Default,\r\n            target: FieldType.Default,\r\n            type: FieldType.Default,\r\n            properties: FieldType.Default,\r\n            measurements: FieldType.Default,\r\n            kind: FieldType.Default,\r\n            value: FieldType.Default,\r\n            count: FieldType.Default,\r\n            min: FieldType.Default,\r\n            max: FieldType.Default,\r\n            stdDev: FieldType.Default,\r\n            dependencyKind: FieldType.Default,\r\n            dependencySource: FieldType.Default,\r\n            commandName: FieldType.Default,\r\n            dependencyTypeName: FieldType.Default,\r\n        };\r\n        _this.id = id;\r\n        _this.duration = Util.msToTimeSpan(value);\r\n        _this.success = success;\r\n        _this.resultCode = resultCode + \"\";\r\n        _this.type = DataSanitizer.sanitizeString(logger, requestAPI);\r\n        var dependencyFields = AjaxHelper.ParseDependencyPath(logger, absoluteUrl, method, commandName);\r\n        _this.data = DataSanitizer.sanitizeUrl(logger, commandName) || dependencyFields.data; // get a value from hosturl if commandName not available\r\n        _this.target = dependencyFields.target;\r\n        _this.name = dependencyFields.name;\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        _this.measurements = DataSanitizer.sanitizeMeasurements(logger, measurements);\r\n        return _this;\r\n    }\r\n    RemoteDependencyData.envelopeType = \"Microsoft.ApplicationInsights.{0}.RemoteDependency\";\r\n    RemoteDependencyData.dataType = \"RemoteDependencyData\";\r\n    return RemoteDependencyData;\r\n}(GeneratedRemoteDependencyData));\r\nexport { RemoteDependencyData };\r\n//# sourceMappingURL=RemoteDependencyData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { Domain } from './Domain';\r\n/**\r\n * An instance of Remote Dependency represents an interaction of the monitored component with a remote component/service like SQL or an HTTP endpoint.\r\n */\r\nvar RemoteDependencyData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RemoteDependencyData, _super);\r\n    function RemoteDependencyData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.success = true;\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return RemoteDependencyData;\r\n}(Domain));\r\nexport { RemoteDependencyData };\r\n//# sourceMappingURL=RemoteDependencyData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { MessageData } from '../Interfaces/Contracts/Generated/MessageData';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { Util } from '../Util';\r\nvar Trace = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Trace, _super);\r\n    /**\r\n     * Constructs a new instance of the TraceTelemetry object\r\n     */\r\n    function Trace(logger, message, severityLevel, properties) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            message: FieldType.Required,\r\n            severityLevel: FieldType.Default,\r\n            properties: FieldType.Default\r\n        };\r\n        message = message || Util.NotSpecified;\r\n        _this.message = DataSanitizer.sanitizeMessage(logger, message);\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        if (severityLevel) {\r\n            _this.severityLevel = severityLevel;\r\n        }\r\n        return _this;\r\n    }\r\n    Trace.envelopeType = \"Microsoft.ApplicationInsights.{0}.Message\";\r\n    Trace.dataType = \"MessageData\";\r\n    return Trace;\r\n}(MessageData));\r\nexport { Trace };\r\n//# sourceMappingURL=Trace.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { Domain } from './Domain';\r\n/**\r\n * Instances of Message represent printf-like trace statements that are text-searched. Log4Net, NLog and other text-based log file entries are translated into intances of this type. The message does not have measurements.\r\n */\r\nvar MessageData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(MessageData, _super);\r\n    function MessageData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.properties = {};\r\n        return _this;\r\n    }\r\n    return MessageData;\r\n}(Domain));\r\nexport { MessageData };\r\n//# sourceMappingURL=MessageData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { PageViewPerfData } from '../Interfaces/Contracts/Generated/PageViewPerfData';\r\nimport { FieldType } from '../Enums';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { Util } from '../Util';\r\nvar PageViewPerformance = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PageViewPerformance, _super);\r\n    /**\r\n     * Constructs a new instance of the PageEventTelemetry object\r\n     */\r\n    function PageViewPerformance(logger, name, url, unused, properties, measurements) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            name: FieldType.Default,\r\n            url: FieldType.Default,\r\n            duration: FieldType.Default,\r\n            perfTotal: FieldType.Default,\r\n            networkConnect: FieldType.Default,\r\n            sentRequest: FieldType.Default,\r\n            receivedResponse: FieldType.Default,\r\n            domProcessing: FieldType.Default,\r\n            properties: FieldType.Default,\r\n            measurements: FieldType.Default\r\n        };\r\n        _this.url = DataSanitizer.sanitizeUrl(logger, url);\r\n        _this.name = DataSanitizer.sanitizeString(logger, name) || Util.NotSpecified;\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        _this.measurements = DataSanitizer.sanitizeMeasurements(logger, measurements);\r\n        return _this;\r\n    }\r\n    PageViewPerformance.envelopeType = \"Microsoft.ApplicationInsights.{0}.PageviewPerformance\";\r\n    PageViewPerformance.dataType = \"PageviewPerformanceData\";\r\n    return PageViewPerformance;\r\n}(PageViewPerfData));\r\nexport { PageViewPerformance };\r\n//# sourceMappingURL=PageViewPerformance.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { PageViewData } from './PageViewData';\r\n/**\r\n * An instance of PageViewPerf represents: a page view with no performance data, a page view with performance data, or just the performance data of an earlier page request.\r\n */\r\nvar PageViewPerfData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PageViewPerfData, _super);\r\n    function PageViewPerfData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return PageViewPerfData;\r\n}(PageViewData));\r\nexport { PageViewPerfData };\r\n//# sourceMappingURL=PageViewPerfData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Data as AIData } from '../../Interfaces/Contracts/Generated/Data';\r\nimport { FieldType } from '../../Enums';\r\nvar Data = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Data, _super);\r\n    /**\r\n     * Constructs a new instance of telemetry data.\r\n     */\r\n    function Data(baseType, data) {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * The data contract for serializing this object.\r\n         */\r\n        _this.aiDataContract = {\r\n            baseType: FieldType.Required,\r\n            baseData: FieldType.Required\r\n        };\r\n        _this.baseType = baseType;\r\n        _this.baseData = data;\r\n        return _this;\r\n    }\r\n    return Data;\r\n}(AIData));\r\nexport { Data };\r\n//# sourceMappingURL=Data.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { CoreUtils } from '@microsoft/applicationinsights-core-js';\r\nvar ConfigurationManager = /** @class */ (function () {\r\n    function ConfigurationManager() {\r\n    }\r\n    ConfigurationManager.getConfig = function (config, field, identifier, defaultValue) {\r\n        if (defaultValue === void 0) { defaultValue = false; }\r\n        var configValue;\r\n        if (identifier && config.extensionConfig && config.extensionConfig[identifier] && !CoreUtils.isNullOrUndefined(config.extensionConfig[identifier][field])) {\r\n            configValue = config.extensionConfig[identifier][field];\r\n        }\r\n        else {\r\n            configValue = config[field];\r\n        }\r\n        return !CoreUtils.isNullOrUndefined(configValue) ? configValue : defaultValue;\r\n    };\r\n    return ConfigurationManager;\r\n}());\r\nexport { ConfigurationManager };\r\n//# sourceMappingURL=IConfig.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { Util } from \"./Util\";\r\nimport { DataSanitizer } from \"./Telemetry/Common/DataSanitizer\";\r\nimport { CoreUtils } from \"@microsoft/applicationinsights-core-js\";\r\nvar TelemetryItemCreator = /** @class */ (function () {\r\n    function TelemetryItemCreator() {\r\n    }\r\n    /**\r\n     * Create a telemetry item that the 1DS channel understands\r\n     * @param item domain specific properties; part B\r\n     * @param baseType telemetry item type. ie PageViewData\r\n     * @param envelopeName name of the envelope. ie Microsoft.ApplicationInsights.<instrumentation key>.PageView\r\n     * @param customProperties user defined custom properties; part C\r\n     * @param systemProperties system properties that are added to the context; part A\r\n     * @returns ITelemetryItem that is sent to channel\r\n     */\r\n    TelemetryItemCreator.create = function (item, baseType, envelopeName, logger, customProperties, systemProperties) {\r\n        envelopeName = DataSanitizer.sanitizeString(logger, envelopeName) || Util.NotSpecified;\r\n        if (CoreUtils.isNullOrUndefined(item) ||\r\n            CoreUtils.isNullOrUndefined(baseType) ||\r\n            CoreUtils.isNullOrUndefined(envelopeName)) {\r\n            throw Error(\"Input doesn't contain all required fields\");\r\n        }\r\n        var telemetryItem = {\r\n            name: envelopeName,\r\n            time: new Date().toISOString(),\r\n            iKey: \"\",\r\n            ext: systemProperties ? systemProperties : {},\r\n            tags: [],\r\n            data: {},\r\n            baseType: baseType,\r\n            baseData: item // Part B\r\n        };\r\n        // Part C\r\n        if (!CoreUtils.isNullOrUndefined(customProperties)) {\r\n            for (var prop in customProperties) {\r\n                if (customProperties.hasOwnProperty(prop)) {\r\n                    telemetryItem.data[prop] = customProperties[prop];\r\n                }\r\n            }\r\n        }\r\n        return telemetryItem;\r\n    };\r\n    return TelemetryItemCreator;\r\n}());\r\nexport { TelemetryItemCreator };\r\n//# sourceMappingURL=TelemetryItemCreator.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { DateTimeUtils, Util } from '@microsoft/applicationinsights-common';\r\nimport { CoreUtils, LoggingSeverity, _InternalMessageId } from '@microsoft/applicationinsights-core-js';\r\n/**\r\n* Class encapsulates sending page views and page view performance telemetry.\r\n*/\r\nvar PageViewManager = /** @class */ (function () {\r\n    function PageViewManager(appInsights, overridePageViewDuration, core, pageViewPerformanceManager) {\r\n        this.pageViewPerformanceSent = false;\r\n        this.overridePageViewDuration = false;\r\n        this.overridePageViewDuration = overridePageViewDuration;\r\n        this.appInsights = appInsights;\r\n        this._pageViewPerformanceManager = pageViewPerformanceManager;\r\n        if (core) {\r\n            this._channel = function () { return (core.getTransmissionControls()); };\r\n            this._logger = core.logger;\r\n        }\r\n    }\r\n    /**\r\n    * Currently supported cases:\r\n    * 1) (default case) track page view called with default parameters, overridePageViewDuration = false. Page view is sent with page view performance when navigation timing data is available.\r\n    *    a. If navigation timing is not supported then page view is sent right away with undefined duration. Page view performance is not sent.\r\n    * 2) overridePageViewDuration = true, custom duration provided. Custom duration is used, page view sends right away.\r\n    * 3) overridePageViewDuration = true, custom duration NOT provided. Page view is sent right away, duration is time spent from page load till now (or undefined if navigation timing is not supported).\r\n    * 4) overridePageViewDuration = false, custom duration is provided. Page view is sent right away with custom duration.\r\n    *\r\n    * In all cases page view performance is sent once (only for the 1st call of trackPageView), or not sent if navigation timing is not supported.\r\n    */\r\n    PageViewManager.prototype.trackPageView = function (pageView, customProperties) {\r\n        var _this = this;\r\n        var name = pageView.name;\r\n        if (CoreUtils.isNullOrUndefined(name) || typeof name !== \"string\") {\r\n            pageView.name = window.document && window.document.title || \"\";\r\n        }\r\n        var uri = pageView.uri;\r\n        if (CoreUtils.isNullOrUndefined(uri) || typeof uri !== \"string\") {\r\n            pageView.uri = window.location && window.location.href || \"\";\r\n        }\r\n        // case 1a. if performance timing is not supported by the browser, send the page view telemetry with the duration provided by the user. If the user\r\n        // do not provide the duration, set duration to undefined\r\n        // Also this is case 4\r\n        if (!this._pageViewPerformanceManager.isPerformanceTimingSupported()) {\r\n            this.appInsights.sendPageViewInternal(pageView, customProperties);\r\n            this._channel().forEach(function (queues) { queues.forEach(function (q) { return q.flush(true); }); });\r\n            // no navigation timing (IE 8, iOS Safari 8.4, Opera Mini 8 - see http://caniuse.com/#feat=nav-timing)\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.NavigationTimingNotSupported, \"trackPageView: navigation timing API used for calculation of page duration is not supported in this browser. This page view will be collected without duration and timing info.\");\r\n            return;\r\n        }\r\n        var pageViewSent = false;\r\n        var customDuration = undefined;\r\n        // if the performance timing is supported by the browser, calculate the custom duration\r\n        var start = this._pageViewPerformanceManager.getPerformanceTiming().navigationStart;\r\n        customDuration = DateTimeUtils.GetDuration(start, +new Date);\r\n        if (!this._pageViewPerformanceManager.shouldCollectDuration(customDuration)) {\r\n            customDuration = undefined;\r\n        }\r\n        // if the user has provided duration, send a page view telemetry with the provided duration. Otherwise, if\r\n        // overridePageViewDuration is set to true, send a page view telemetry with the custom duration calculated earlier\r\n        var duration = undefined;\r\n        if (!CoreUtils.isNullOrUndefined(customProperties) &&\r\n            !CoreUtils.isNullOrUndefined(customProperties.duration)) {\r\n            duration = customProperties.duration;\r\n        }\r\n        if (this.overridePageViewDuration || !isNaN(duration)) {\r\n            if (isNaN(duration)) {\r\n                // case 3\r\n                if (!customProperties) {\r\n                    customProperties = {};\r\n                }\r\n                customProperties[\"duration\"] = customDuration;\r\n            }\r\n            // case 2\r\n            this.appInsights.sendPageViewInternal(pageView, customProperties);\r\n            this._channel().forEach(function (queues) { queues.forEach(function (q) { return q.flush(true); }); });\r\n            pageViewSent = true;\r\n        }\r\n        // now try to send the page view performance telemetry\r\n        var maxDurationLimit = 60000;\r\n        if (!customProperties) {\r\n            customProperties = {};\r\n        }\r\n        var handle = setInterval((function () {\r\n            try {\r\n                if (_this._pageViewPerformanceManager.isPerformanceTimingDataReady()) {\r\n                    clearInterval(handle);\r\n                    var pageViewPerformance = {\r\n                        name: name,\r\n                        uri: uri\r\n                    };\r\n                    _this._pageViewPerformanceManager.populatePageViewPerformanceEvent(pageViewPerformance);\r\n                    if (!pageViewPerformance.isValid && !pageViewSent) {\r\n                        // If navigation timing gives invalid numbers, then go back to \"override page view duration\" mode.\r\n                        // That's the best value we can get that makes sense.\r\n                        customProperties[\"duration\"] = customDuration;\r\n                        _this.appInsights.sendPageViewInternal(pageView, customProperties);\r\n                        _this._channel().forEach(function (queues) { queues.forEach(function (q) { return q.flush(true); }); });\r\n                    }\r\n                    else {\r\n                        if (!pageViewSent) {\r\n                            customProperties[\"duration\"] = pageViewPerformance.durationMs;\r\n                            _this.appInsights.sendPageViewInternal(pageView, customProperties);\r\n                        }\r\n                        if (!_this.pageViewPerformanceSent) {\r\n                            _this.appInsights.sendPageViewPerformanceInternal(pageViewPerformance, customProperties);\r\n                            _this.pageViewPerformanceSent = true;\r\n                        }\r\n                        _this._channel().forEach(function (queues) { queues.forEach(function (q) { return q.flush(true); }); });\r\n                    }\r\n                }\r\n                else if (DateTimeUtils.GetDuration(start, +new Date) > maxDurationLimit) {\r\n                    // if performance timings are not ready but we exceeded the maximum duration limit, just log a page view telemetry\r\n                    // with the maximum duration limit. Otherwise, keep waiting until performance timings are ready\r\n                    clearInterval(handle);\r\n                    if (!pageViewSent) {\r\n                        customProperties[\"duration\"] = maxDurationLimit;\r\n                        _this.appInsights.sendPageViewInternal(pageView, customProperties);\r\n                        _this._channel().forEach(function (queues) { queues.forEach(function (q) { return q.flush(true); }); });\r\n                    }\r\n                }\r\n            }\r\n            catch (e) {\r\n                _this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TrackPVFailedCalc, \"trackPageView failed on page load calculation: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }), 100);\r\n    };\r\n    return PageViewManager;\r\n}());\r\nexport { PageViewManager };\r\n//# sourceMappingURL=PageViewManager.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { Util, DateTimeUtils } from '@microsoft/applicationinsights-common';\r\nimport { LoggingSeverity, _InternalMessageId } from '@microsoft/applicationinsights-core-js';\r\n/**\r\n* Class encapsulates sending page view performance telemetry.\r\n*/\r\nvar PageViewPerformanceManager = /** @class */ (function () {\r\n    function PageViewPerformanceManager(core) {\r\n        this.MAX_DURATION_ALLOWED = 3600000; // 1h\r\n        if (core) {\r\n            this._logger = core.logger;\r\n        }\r\n    }\r\n    PageViewPerformanceManager.prototype.populatePageViewPerformanceEvent = function (pageViewPerformance) {\r\n        pageViewPerformance.isValid = false;\r\n        /*\r\n         * http://www.w3.org/TR/navigation-timing/#processing-model\r\n         *  |-navigationStart\r\n         *  |             |-connectEnd\r\n         *  |             ||-requestStart\r\n         *  |             ||             |-responseStart\r\n         *  |             ||             |              |-responseEnd\r\n         *  |             ||             |              |\r\n         *  |             ||             |              |         |-loadEventEnd\r\n         *  |---network---||---request---|---response---|---dom---|\r\n         *  |--------------------------total----------------------|\r\n         */\r\n        var timing = this.getPerformanceTiming();\r\n        if (timing) {\r\n            var total = DateTimeUtils.GetDuration(timing.navigationStart, timing.loadEventEnd);\r\n            var network = DateTimeUtils.GetDuration(timing.navigationStart, timing.connectEnd);\r\n            var request = DateTimeUtils.GetDuration(timing.requestStart, timing.responseStart);\r\n            var response = DateTimeUtils.GetDuration(timing.responseStart, timing.responseEnd);\r\n            var dom = DateTimeUtils.GetDuration(timing.responseEnd, timing.loadEventEnd);\r\n            if (total == 0) {\r\n                this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.ErrorPVCalc, \"error calculating page view performance.\", { total: total, network: network, request: request, response: response, dom: dom });\r\n            }\r\n            else if (!this.shouldCollectDuration(total, network, request, response, dom)) {\r\n                this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.InvalidDurationValue, \"Invalid page load duration value. Browser perf data won't be sent.\", { total: total, network: network, request: request, response: response, dom: dom });\r\n            }\r\n            else if (total < Math.floor(network) + Math.floor(request) + Math.floor(response) + Math.floor(dom)) {\r\n                // some browsers may report individual components incorrectly so that the sum of the parts will be bigger than total PLT\r\n                // in this case, don't report client performance from this page\r\n                this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.ClientPerformanceMathError, \"client performance math error.\", { total: total, network: network, request: request, response: response, dom: dom });\r\n            }\r\n            else {\r\n                pageViewPerformance.durationMs = total;\r\n                // // convert to timespans\r\n                pageViewPerformance.perfTotal = pageViewPerformance.duration = Util.msToTimeSpan(total);\r\n                pageViewPerformance.networkConnect = Util.msToTimeSpan(network);\r\n                pageViewPerformance.sentRequest = Util.msToTimeSpan(request);\r\n                pageViewPerformance.receivedResponse = Util.msToTimeSpan(response);\r\n                pageViewPerformance.domProcessing = Util.msToTimeSpan(dom);\r\n                pageViewPerformance.isValid = true;\r\n            }\r\n        }\r\n    };\r\n    PageViewPerformanceManager.prototype.getPerformanceTiming = function () {\r\n        if (this.isPerformanceTimingSupported()) {\r\n            return window.performance.timing;\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n    * Returns true is window performance timing API is supported, false otherwise.\r\n    */\r\n    PageViewPerformanceManager.prototype.isPerformanceTimingSupported = function () {\r\n        return typeof window != \"undefined\" && window.performance && window.performance.timing;\r\n    };\r\n    /**\r\n    * As page loads different parts of performance timing numbers get set. When all of them are set we can report it.\r\n    * Returns true if ready, false otherwise.\r\n    */\r\n    PageViewPerformanceManager.prototype.isPerformanceTimingDataReady = function () {\r\n        var timing = window.performance.timing;\r\n        return timing.domainLookupStart > 0\r\n            && timing.navigationStart > 0\r\n            && timing.responseStart > 0\r\n            && timing.requestStart > 0\r\n            && timing.loadEventEnd > 0\r\n            && timing.responseEnd > 0\r\n            && timing.connectEnd > 0\r\n            && timing.domLoading > 0;\r\n    };\r\n    /**\r\n    * This method tells if given durations should be excluded from collection.\r\n    */\r\n    PageViewPerformanceManager.prototype.shouldCollectDuration = function () {\r\n        var durations = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            durations[_i] = arguments[_i];\r\n        }\r\n        // a full list of Google crawlers user agent strings - https://support.google.com/webmasters/answer/1061943?hl=en\r\n        var botAgentNames = ['googlebot', 'adsbot-google', 'apis-google', 'mediapartners-google'];\r\n        var userAgent = navigator.userAgent;\r\n        var isGoogleBot = false;\r\n        if (userAgent) {\r\n            for (var i_1 = 0; i_1 < botAgentNames.length; i_1++) {\r\n                isGoogleBot = isGoogleBot || userAgent.toLowerCase().indexOf(botAgentNames[i_1]) !== -1;\r\n            }\r\n        }\r\n        if (isGoogleBot) {\r\n            // Don't report durations for GoogleBot, it is returning invalid values in performance.timing API.\r\n            return false;\r\n        }\r\n        else {\r\n            // for other page views, don't report if it's outside of a reasonable range\r\n            for (var i = 0; i < durations.length; i++) {\r\n                if (durations[i] >= this.MAX_DURATION_ALLOWED) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    return PageViewPerformanceManager;\r\n}());\r\nexport { PageViewPerformanceManager };\r\n//# sourceMappingURL=PageViewPerformanceManager.js.map","/**\r\n * ApplicationInsights.ts\r\n * @copyright Microsoft 2018\r\n */\r\nimport { Util, PageViewPerformance, PageView, RemoteDependencyData, Event, TelemetryItemCreator, Metric, Exception, SeverityLevel, Trace, ConfigurationManager, DateTimeUtils } from \"@microsoft/applicationinsights-common\";\r\nimport { CoreUtils, LoggingSeverity, _InternalMessageId, } from \"@microsoft/applicationinsights-core-js\";\r\nimport { PageViewManager } from \"./Telemetry/PageViewManager\";\r\nimport { PageViewPerformanceManager } from './Telemetry/PageViewPerformanceManager';\r\n\"use strict\";\r\nvar durationProperty = \"duration\";\r\nvar ApplicationInsights = /** @class */ (function () {\r\n    function ApplicationInsights() {\r\n        this.identifier = \"ApplicationInsightsAnalytics\"; // do not change name or priority\r\n        this.priority = 160; // take from reserved priority range 100- 200\r\n        this._isInitialized = false;\r\n        // Counts number of trackAjax invokations.\r\n        // By default we only monitor X ajax call per view to avoid too much load.\r\n        // Default value is set in config.\r\n        // This counter keeps increasing even after the limit is reached.\r\n        this._trackAjaxAttempts = 0;\r\n        this.initialize = this._initialize.bind(this);\r\n    }\r\n    ApplicationInsights.getDefaultConfig = function (config) {\r\n        if (!config) {\r\n            config = {};\r\n        }\r\n        // set default values\r\n        config.sessionRenewalMs = 30 * 60 * 1000;\r\n        config.sessionExpirationMs = 24 * 60 * 60 * 1000;\r\n        config.disableExceptionTracking = Util.stringToBoolOrDefault(config.disableExceptionTracking);\r\n        config.autoTrackPageVisitTime = Util.stringToBoolOrDefault(config.autoTrackPageVisitTime);\r\n        if (isNaN(config.samplingPercentage) || config.samplingPercentage <= 0 || config.samplingPercentage >= 100) {\r\n            config.samplingPercentage = 100;\r\n        }\r\n        config.isCookieUseDisabled = Util.stringToBoolOrDefault(config.isCookieUseDisabled);\r\n        config.isStorageUseDisabled = Util.stringToBoolOrDefault(config.isStorageUseDisabled);\r\n        config.isBrowserLinkTrackingEnabled = Util.stringToBoolOrDefault(config.isBrowserLinkTrackingEnabled);\r\n        return config;\r\n    };\r\n    ApplicationInsights.prototype.processTelemetry = function (env) {\r\n        var doNotSendItem = false;\r\n        var telemetryInitializersCount = this._telemetryInitializers.length;\r\n        for (var i = 0; i < telemetryInitializersCount; ++i) {\r\n            var telemetryInitializer = this._telemetryInitializers[i];\r\n            if (telemetryInitializer) {\r\n                try {\r\n                    if (telemetryInitializer.apply(null, [env]) === false) {\r\n                        doNotSendItem = true;\r\n                        break;\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // log error but dont stop executing rest of the telemetry initializers\r\n                    // doNotSendItem = true;\r\n                    this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TelemetryInitializerFailed, \"One of telemetry initializers failed, telemetry item will not be sent: \" + Util.getExceptionName(e), { exception: Util.dump(e) }, true);\r\n                }\r\n            }\r\n        }\r\n        if (!doNotSendItem && !CoreUtils.isNullOrUndefined(this._nextPlugin)) {\r\n            this._nextPlugin.processTelemetry(env);\r\n        }\r\n    };\r\n    ApplicationInsights.prototype.setNextPlugin = function (next) {\r\n        this._nextPlugin = next;\r\n    };\r\n    ApplicationInsights.prototype.trackEvent = function (event, customProperties) {\r\n        try {\r\n            var telemetryItem = TelemetryItemCreator.create(event, Event.dataType, Event.envelopeType, this._logger, customProperties);\r\n            this._setTelemetryNameAndIKey(telemetryItem);\r\n            this.core.track(telemetryItem);\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.TrackTraceFailed, \"trackTrace failed, trace will not be collected: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n    };\r\n    /**\r\n      * Start timing an extended event. Call `stopTrackEvent` to log the event when it ends.\r\n      * @param   name    A string that identifies this event uniquely within the document.\r\n    */\r\n    ApplicationInsights.prototype.startTrackEvent = function (name) {\r\n        try {\r\n            this._eventTracking.start(name);\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.StartTrackEventFailed, \"startTrackEvent failed, event will not be collected: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n    };\r\n    /**\r\n     * Log an extended event that you started timing with `startTrackEvent`.\r\n     * @param   name    The string you used to identify this event in `startTrackEvent`.\r\n     * @param   properties  map[string, string] - additional data used to filter events and metrics in the portal. Defaults to empty.\r\n     * @param   measurements    map[string, number] - metrics associated with this event, displayed in Metrics Explorer on the portal. Defaults to empty.\r\n     */\r\n    ApplicationInsights.prototype.stopTrackEvent = function (name, properties, measurements) {\r\n        try {\r\n            this._eventTracking.stop(name, undefined, properties); // Todo: Fix to pass measurements once type is updated\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.StopTrackEventFailed, \"stopTrackEvent failed, event will not be collected: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n    };\r\n    /**\r\n     * @description Log a diagnostic message\r\n     * @param {ITraceTelemetry} trace\r\n     * @param ICustomProperties.\r\n     * @memberof ApplicationInsights\r\n     */\r\n    ApplicationInsights.prototype.trackTrace = function (trace, customProperties) {\r\n        try {\r\n            var telemetryItem = TelemetryItemCreator.create(trace, Trace.dataType, Trace.envelopeType, this._logger, customProperties);\r\n            this._setTelemetryNameAndIKey(telemetryItem);\r\n            this.core.track(telemetryItem);\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.TrackTraceFailed, \"trackTrace failed, trace will not be collected: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n    };\r\n    /**\r\n     * @description Log a numeric value that is not associated with a specific event. Typically\r\n     * used to send regular reports of performance indicators. To send single measurement, just\r\n     * use the name and average fields of {@link IMetricTelemetry}. If you take measurements\r\n     * frequently, you can reduce the telemetry bandwidth by aggregating multiple measurements\r\n     * and sending the resulting average at intervals\r\n     * @param {IMetricTelemetry} metric input object argument. Only name and average are mandatory.\r\n     * @param {{[key: string]: any}} customProperties additional data used to filter metrics in the\r\n     * portal. Defaults to empty.\r\n     * @memberof ApplicationInsights\r\n     */\r\n    ApplicationInsights.prototype.trackMetric = function (metric, customProperties) {\r\n        try {\r\n            var telemetryItem = TelemetryItemCreator.create(metric, Metric.dataType, Metric.envelopeType, this._logger, customProperties);\r\n            this._setTelemetryNameAndIKey(telemetryItem);\r\n            this.core.track(telemetryItem);\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TrackMetricFailed, \"trackMetric failed, metric will not be collected: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n    };\r\n    /**\r\n     * Logs that a page or other item was viewed.\r\n     * @param IPageViewTelemetry The string you used as the name in startTrackPage. Defaults to the document title.\r\n     * @param customProperties Additional data used to filter events and metrics. Defaults to empty.\r\n     * If a user wants to provide duration for pageLoad, it'll have to be in pageView.properties.duration\r\n     */\r\n    ApplicationInsights.prototype.trackPageView = function (pageView, customProperties) {\r\n        try {\r\n            this._pageViewManager.trackPageView(pageView, customProperties);\r\n            if (this.config.autoTrackPageVisitTime) {\r\n                this._pageVisitTimeManager.trackPreviousPageVisit(pageView.name, pageView.uri);\r\n            }\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TrackPVFailed, \"trackPageView failed, page view will not be collected: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n    };\r\n    /**\r\n     * Create a page view telemetry item and send it to the SDK pipeline through the core.track API\r\n     * @param pageView Page view item to be sent\r\n     * @param properties Custom properties (Part C) that a user can add to the telemetry item\r\n     * @param systemProperties System level properties (Part A) that a user can add to the telemetry item\r\n     */\r\n    ApplicationInsights.prototype.sendPageViewInternal = function (pageView, properties, systemProperties) {\r\n        if (typeof document !== \"undefined\") {\r\n            pageView.refUri = pageView.refUri || document.referrer;\r\n        }\r\n        var telemetryItem = TelemetryItemCreator.create(pageView, PageView.dataType, PageView.envelopeType, this._logger, properties, systemProperties);\r\n        // set instrumentation key\r\n        this._setTelemetryNameAndIKey(telemetryItem);\r\n        this.core.track(telemetryItem);\r\n        // reset ajaxes counter\r\n        this._trackAjaxAttempts = 0;\r\n    };\r\n    /**\r\n     * @ignore INTERNAL ONLY\r\n     * @param pageViewPerformance\r\n     * @param properties\r\n     */\r\n    ApplicationInsights.prototype.sendPageViewPerformanceInternal = function (pageViewPerformance, properties, systemProperties) {\r\n        var telemetryItem = TelemetryItemCreator.create(pageViewPerformance, PageViewPerformance.dataType, PageViewPerformance.envelopeType, this._logger, properties, systemProperties);\r\n        // set instrumentation key\r\n        this._setTelemetryNameAndIKey(telemetryItem);\r\n        this.core.track(telemetryItem);\r\n    };\r\n    /**\r\n     * Send browser performance metrics.\r\n     * @param pageViewPerformance\r\n     * @param customProperties\r\n     */\r\n    ApplicationInsights.prototype.trackPageViewPerformance = function (pageViewPerformance, customProperties) {\r\n        try {\r\n            this._pageViewPerformanceManager.populatePageViewPerformanceEvent(pageViewPerformance);\r\n            this.sendPageViewPerformanceInternal(pageViewPerformance, customProperties);\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TrackPVFailed, \"trackPageViewPerformance failed, page view will not be collected: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n    };\r\n    /**\r\n     * Starts the timer for tracking a page load time. Use this instead of `trackPageView` if you want to control when the page view timer starts and stops,\r\n     * but don't want to calculate the duration yourself. This method doesn't send any telemetry. Call `stopTrackPage` to log the end of the page view\r\n     * and send the event.\r\n     * @param name A string that idenfities this item, unique within this HTML document. Defaults to the document title.\r\n     */\r\n    ApplicationInsights.prototype.startTrackPage = function (name) {\r\n        try {\r\n            if (typeof name !== \"string\") {\r\n                name = window.document && window.document.title || \"\";\r\n            }\r\n            this._pageTracking.start(name);\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.StartTrackFailed, \"startTrackPage failed, page view may not be collected: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n    };\r\n    /**\r\n     * Stops the timer that was started by calling `startTrackPage` and sends the pageview load time telemetry with the specified properties and measurements.\r\n     * The duration of the page view will be the time between calling `startTrackPage` and `stopTrackPage`.\r\n     * @param   name  The string you used as the name in startTrackPage. Defaults to the document title.\r\n     * @param   url   String - a relative or absolute URL that identifies the page or other item. Defaults to the window location.\r\n     * @param   properties  map[string, string] - additional data used to filter pages and metrics in the portal. Defaults to empty.\r\n     * @param   measurements    map[string, number] - metrics associated with this page, displayed in Metrics Explorer on the portal. Defaults to empty.\r\n     */\r\n    ApplicationInsights.prototype.stopTrackPage = function (name, url, properties, measurement) {\r\n        try {\r\n            if (typeof name !== \"string\") {\r\n                name = window.document && window.document.title || \"\";\r\n            }\r\n            if (typeof url !== \"string\") {\r\n                url = window.location && window.location.href || \"\";\r\n            }\r\n            this._pageTracking.stop(name, url, properties, measurement);\r\n            if (this.config.autoTrackPageVisitTime) {\r\n                this._pageVisitTimeManager.trackPreviousPageVisit(name, url);\r\n            }\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.StopTrackFailed, \"stopTrackPage failed, page view will not be collected: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n    };\r\n    /**\r\n    * @ignore INTERNAL ONLY\r\n    * @param exception\r\n    * @param properties\r\n    * @param systemProperties\r\n    */\r\n    ApplicationInsights.prototype.sendExceptionInternal = function (exception, customProperties, systemProperties) {\r\n        var baseData = new Exception(this._logger, exception.error, exception.properties, exception.measurements, exception.severityLevel);\r\n        var telemetryItem = TelemetryItemCreator.create(baseData, Exception.dataType, Exception.envelopeType, this._logger, customProperties, systemProperties);\r\n        this._setTelemetryNameAndIKey(telemetryItem);\r\n        this.core.track(telemetryItem);\r\n    };\r\n    /**\r\n     * Log an exception you have caught.\r\n     *\r\n     * @param {IExceptionTelemetry} exception   Object which contains exception to be sent\r\n     * @param {{[key: string]: any}} customProperties   Additional data used to filter pages and metrics in the portal. Defaults to empty.\r\n     *\r\n     * Any property of type double will be considered a measurement, and will be treated by Application Insights as a metric.\r\n     * @memberof ApplicationInsights\r\n     */\r\n    ApplicationInsights.prototype.trackException = function (exception, customProperties) {\r\n        try {\r\n            this.sendExceptionInternal(exception, customProperties);\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TrackExceptionFailed, \"trackException failed, exception will not be collected: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n    };\r\n    /**\r\n     * @description Custom error handler for Application Insights Analytics\r\n     * @param {IAutoExceptionTelemetry} exception\r\n     * @memberof ApplicationInsights\r\n     */\r\n    ApplicationInsights.prototype._onerror = function (exception) {\r\n        try {\r\n            var properties = {\r\n                url: (exception && exception.url) || document.URL,\r\n                lineNumber: exception.lineNumber,\r\n                columnNumber: exception.columnNumber,\r\n                message: exception.message\r\n            };\r\n            if (Util.isCrossOriginError(exception.message, exception.url, exception.lineNumber, exception.columnNumber, exception.error)) {\r\n                this._sendCORSException(properties.url);\r\n            }\r\n            else {\r\n                if (!Util.isError(exception.error)) {\r\n                    var stack = \"window.onerror@\" + properties.url + \":\" + exception.lineNumber + \":\" + (exception.columnNumber || 0);\r\n                    exception.error = new Error(exception.message);\r\n                    exception.error.stack = stack;\r\n                }\r\n                this.trackException({ error: exception.error, severityLevel: SeverityLevel.Error }, properties);\r\n            }\r\n        }\r\n        catch (e) {\r\n            var errorString = exception.error ?\r\n                (exception.error.name + \", \" + exception.error.message)\r\n                : \"null\";\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.ExceptionWhileLoggingError, \"_onError threw exception while logging error, error will not be collected: \"\r\n                + Util.getExceptionName(e), { exception: Util.dump(e), errorString: errorString });\r\n        }\r\n    };\r\n    ApplicationInsights.prototype.addTelemetryInitializer = function (telemetryInitializer) {\r\n        this._telemetryInitializers.push(telemetryInitializer);\r\n    };\r\n    ApplicationInsights.prototype._initialize = function (config, core, extensions) {\r\n        var _this = this;\r\n        if (this._isInitialized) {\r\n            return;\r\n        }\r\n        if (CoreUtils.isNullOrUndefined(core)) {\r\n            throw Error(\"Error initializing\");\r\n        }\r\n        this.core = core;\r\n        this._logger = core.logger;\r\n        this._globalconfig = {\r\n            instrumentationKey: config.instrumentationKey,\r\n            endpointUrl: config.endpointUrl || \"https://dc.services.visualstudio.com/v2/track\"\r\n        };\r\n        this.config = config.extensionConfig && config.extensionConfig[this.identifier] ? config.extensionConfig[this.identifier] : {};\r\n        // load default values if specified\r\n        var defaults = ApplicationInsights.getDefaultConfig();\r\n        if (defaults !== undefined) {\r\n            for (var field in defaults) {\r\n                // for each unspecified field, set the default value\r\n                this.config[field] = ConfigurationManager.getConfig(config, field, this.identifier, defaults[field]);\r\n            }\r\n            if (this._globalconfig) {\r\n                for (var field in defaults) {\r\n                    if (this._globalconfig[field] === undefined) {\r\n                        this._globalconfig[field] = defaults[field];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // Todo: move this out of static state\r\n        if (this.config.isCookieUseDisabled) {\r\n            Util.disableCookies();\r\n        }\r\n        // Todo: move this out of static state\r\n        if (this.config.isStorageUseDisabled) {\r\n            Util.disableStorage();\r\n        }\r\n        var configGetters = {\r\n            instrumentationKey: function () { return config.instrumentationKey; },\r\n            accountId: function () { return _this.config.accountId || config.accountId; },\r\n            sessionRenewalMs: function () { return _this.config.sessionRenewalMs || config.sessionRenewalMs; },\r\n            sessionExpirationMs: function () { return _this.config.sessionExpirationMs || config.sessionExpirationMs; },\r\n            sampleRate: function () { return _this.config.samplingPercentage || config.samplingPercentage; },\r\n            cookieDomain: function () { return _this.config.cookieDomain || config.cookieDomain; },\r\n            sdkExtension: function () { return _this.config.sdkExtension || config.sdkExtension; },\r\n            isBrowserLinkTrackingEnabled: function () { return _this.config.isBrowserLinkTrackingEnabled || config.isBrowserLinkTrackingEnabled; },\r\n            appId: function () { return _this.config.appId || config.appId; }\r\n        };\r\n        this._pageViewPerformanceManager = new PageViewPerformanceManager(this.core);\r\n        this._pageViewManager = new PageViewManager(this, this.config.overridePageViewDuration, this.core, this._pageViewPerformanceManager);\r\n        this._telemetryInitializers = [];\r\n        this._addDefaultTelemetryInitializers(configGetters);\r\n        this._eventTracking = new Timing(this._logger, \"trackEvent\");\r\n        this._eventTracking.action =\r\n            function (name, url, duration, properties) {\r\n                if (!properties) {\r\n                    properties = {};\r\n                }\r\n                properties[durationProperty] = duration.toString();\r\n                _this.trackEvent({ name: name, properties: properties });\r\n            };\r\n        // initialize page view timing\r\n        this._pageTracking = new Timing(this._logger, \"trackPageView\");\r\n        this._pageTracking.action = function (name, url, duration, properties, measurements) {\r\n            // duration must be a custom property in order for the collector to extract it\r\n            if (CoreUtils.isNullOrUndefined(properties)) {\r\n                properties = {};\r\n            }\r\n            properties[durationProperty] = duration.toString();\r\n            var pageViewItem = {\r\n                name: name,\r\n                uri: url,\r\n                properties: properties,\r\n                measurements: measurements\r\n            };\r\n            _this.sendPageViewInternal(pageViewItem);\r\n        };\r\n        if (this.config.disableExceptionTracking === false &&\r\n            !this.config.autoExceptionInstrumented) {\r\n            // We want to enable exception auto collection and it has not been done so yet\r\n            var onerror_1 = \"onerror\";\r\n            var originalOnError_1 = window[onerror_1];\r\n            var instance_1 = this;\r\n            window.onerror = function (message, url, lineNumber, columnNumber, error) {\r\n                var handled = originalOnError_1 && originalOnError_1(message, url, lineNumber, columnNumber, error);\r\n                if (handled !== true) {\r\n                    instance_1._onerror({\r\n                        message: message,\r\n                        url: url,\r\n                        lineNumber: lineNumber,\r\n                        columnNumber: columnNumber,\r\n                        error: error\r\n                    });\r\n                }\r\n                return handled;\r\n            };\r\n            this.config.autoExceptionInstrumented = true;\r\n        }\r\n        this._isInitialized = true;\r\n    };\r\n    ApplicationInsights.prototype._addDefaultTelemetryInitializers = function (configGetters) {\r\n        if (!configGetters.isBrowserLinkTrackingEnabled()) {\r\n            var browserLinkPaths_1 = ['/browserLinkSignalR/', '/__browserLink/'];\r\n            var dropBrowserLinkRequests = function (envelope) {\r\n                if (envelope.baseType === RemoteDependencyData.dataType) {\r\n                    var remoteData = envelope.baseData;\r\n                    if (remoteData) {\r\n                        for (var i = 0; i < browserLinkPaths_1.length; i++) {\r\n                            if (remoteData.target && remoteData.target.indexOf(browserLinkPaths_1[i]) >= 0) {\r\n                                return false;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                return true;\r\n            };\r\n            this._addTelemetryInitializer(dropBrowserLinkRequests);\r\n        }\r\n    };\r\n    ApplicationInsights.prototype._addTelemetryInitializer = function (telemetryInitializer) {\r\n        this._telemetryInitializers.push(telemetryInitializer);\r\n    };\r\n    ApplicationInsights.prototype._sendCORSException = function (url) {\r\n        var exception = {\r\n            message: \"Script error: The browser's same-origin policy prevents us from getting the details of this exception. Consider using the 'crossorigin' attribute.\",\r\n            url: url,\r\n            lineNumber: 0,\r\n            columnNumber: 0,\r\n            error: undefined\r\n        };\r\n        var telemetryItem = TelemetryItemCreator.create(exception, Exception.dataType, Exception.envelopeType, this._logger, { url: url });\r\n        this.core.track(telemetryItem);\r\n    };\r\n    // Mutate telemetryItem inplace to add boilerplate iKey & name info\r\n    ApplicationInsights.prototype._setTelemetryNameAndIKey = function (telemetryItem) {\r\n        telemetryItem.iKey = this._globalconfig.instrumentationKey;\r\n        var iKeyNoDashes = this._globalconfig.instrumentationKey.replace(/-/g, \"\");\r\n        telemetryItem.name = telemetryItem.name.replace(\"{0}\", iKeyNoDashes);\r\n    };\r\n    ApplicationInsights.Version = \"2.0.0-beta.3\";\r\n    return ApplicationInsights;\r\n}());\r\nexport { ApplicationInsights };\r\n/**\r\n * Used to record timed events and page views.\r\n */\r\nvar Timing = /** @class */ (function () {\r\n    function Timing(logger, name) {\r\n        this._name = name;\r\n        this._events = {};\r\n        this._logger = logger;\r\n    }\r\n    Timing.prototype.start = function (name) {\r\n        if (typeof this._events[name] !== \"undefined\") {\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.StartCalledMoreThanOnce, \"start was called more than once for this event without calling stop.\", { name: this._name, key: name }, true);\r\n        }\r\n        this._events[name] = +new Date;\r\n    };\r\n    Timing.prototype.stop = function (name, url, properties, measurements) {\r\n        var start = this._events[name];\r\n        if (isNaN(start)) {\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.StopCalledWithoutStart, \"stop was called without a corresponding start.\", { name: this._name, key: name }, true);\r\n        }\r\n        else {\r\n            var end = +new Date;\r\n            var duration = DateTimeUtils.GetDuration(start, end);\r\n            this.action(name, url, duration, properties, measurements);\r\n        }\r\n        delete this._events[name];\r\n        this._events[name] = undefined;\r\n    };\r\n    return Timing;\r\n}());\r\n//# sourceMappingURL=ApplicationInsights.js.map"],"names":["StorageType","FieldType","LoggingSeverity","CoreUtils","isNullOrUndefined","input","newGuid","replace","GuidRegex","c","r","Math","random","toString","_InternalMessageId","ChannelControllerPriority","ChannelController","this","identifier","priority","prototype","processTelemetry","item","channelQueue","forEach","queues","length","Object","defineProperty","get","enumerable","configurable","initialize","config","core","extensions","_this","Array","channels","invalidChannelIdentifier_1","undefined","queue","sort","a","b","queueItem","Error","ChannelValidationMessage","i","setNextPlugin","push","arr","plugin","DataSanitizer","sanitizeKeyAndAddUniqueness","logger","key","map","origLength","field","sanitizeKey","uniqueField","substring","MAX_NAME_LENGTH","padNumber","name","trim","throwInternal","WARNING","sanitizeString","value","maxLength","MAX_STRING_LENGTH","sanitizeUrl","url","sanitizeInput","MAX_URL_LENGTH","sanitizeMessage","message","MAX_MESSAGE_LENGTH","sanitizeException","exception","MAX_EXCEPTION_LENGTH","sanitizeProperties","properties","tempProps","prop","JSON","stringify","e","MAX_PROPERTY_LENGTH","sanitizeMeasurements","measurements","tempMeasurements","measure","sanitizeId","id","MAX_ID_LENGTH","_msgId","data","num","s","substr","str","Util","disableStorage","_canUseLocalStorage","_canUseSessionStorage","_getLocalStorageObject","canUseLocalStorage","_getVerifiedStorageObject","LocalStorage","storageType","fail","uid","storage","window","Date","localStorage","sessionStorage","setItem","getItem","removeItem","isInternalApplicationInsightsEndpoint","endpointUrl","_internalEndpoints","indexOf","toLowerCase","getStorage","getExceptionName","dump","setStorage","removeStorage","_getSessionStorageObject","canUseSessionStorage","SessionStorage","getSessionStorageKeys","keys","getSessionStorage","setSessionStorage","removeSessionStorage","disableCookies","_canUseCookies","canUseCookies","document","cookie","setCookie","domain","domainAttrib","secureAttrib","location","protocol","stringToBoolOrDefault","defaultValue","getCookie","cookieName","cookies","split","deleteCookie","newId","result","charAt","floor","isArray","obj","call","isError","isDate","toISOStringForIE8","date","toISOString","pad","String","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","toFixed","slice","getIEVersion","userAgentStr","myNav","navigator","userAgent","parseInt","msToTimeSpan","totalms","isNaN","ms","round","sec","min","hour","days","isCrossOriginError","lineNumber","columnNumber","error","object","objectTypeDump","propertyValueDump","stack","addEventHandler","eventName","callback","verbEventName","addEventListener","IsBeaconApiSupported","sendBeacon","NotSpecified","UrlHelper","parseUrl","htmlAnchorElement","createElement","href","getAbsoluteUrl","getPathName","pathname","getCompleteUrl","method","absoluteUrl","toUpperCase","AjaxHelper","ParseDependencyPath","commandName","target","parsedUrl","host","pathName","DateTimeUtils","Now","getTime","performance","now","timing","navigationStart","GetDuration","start","end","extendStatics","d","setPrototypeOf","__proto__","p","hasOwnProperty","__extends","__","constructor","create","DataPointType","Data","_super","tslib_1.__extends","Domain","Envelope","time","aiDataContract","Required","iKey","sampleRate","Hidden","tags","ver","EventData","Event","Default","envelopeType","dataType","StackFrame","ExceptionDetails","hasFullStack","parsedStack","Exception","severityLevel","exceptions","_ExceptionDetails","CreateSimpleException","typeName","assembly","fileName","details","line","ExceptionData","outerId","parseStack","frames","level","totalSizeInBytes","frame","_StackFrame","regex","test","parsedFrame","sizeInBytes","left","right","size","acceptedLeft","acceptedRight","howMany","splice","matches","match","baseSize","MetricData","metrics","SeverityLevel","DataPoint","apply","arguments","kind","count","max","stdDev","Measurement","Metric","dataPoint","PageViewData","PageView","durationMs","duration","RemoteDependencyData","success","resultCode","requestAPI","type","dependencyKind","dependencySource","dependencyTypeName","dependencyFields","Trace","MessageData","PageViewPerformance","unused","perfTotal","networkConnect","sentRequest","receivedResponse","domProcessing","PageViewPerfData","baseType","baseData","AIData","ConfigurationManager","getConfig","configValue","extensionConfig","TelemetryItemCreator","envelopeName","customProperties","systemProperties","telemetryItem","ext","PageViewManager","appInsights","overridePageViewDuration","pageViewPerformanceManager","pageViewPerformanceSent","_pageViewPerformanceManager","_channel","getTransmissionControls","_logger","trackPageView","pageView","title","uri","isPerformanceTimingSupported","sendPageViewInternal","q","flush","pageViewSent","customDuration","getPerformanceTiming","shouldCollectDuration","handle","setInterval","isPerformanceTimingDataReady","clearInterval","pageViewPerformance","populatePageViewPerformanceEvent","isValid","sendPageViewPerformanceInternal","CRITICAL","PageViewPerformanceManager","MAX_DURATION_ALLOWED","total","loadEventEnd","network","connectEnd","request","requestStart","responseStart","response","responseEnd","dom","domainLookupStart","domLoading","durations","_i","botAgentNames","isGoogleBot","i_1","durationProperty","ApplicationInsights","_isInitialized","_trackAjaxAttempts","_initialize","bind","getDefaultConfig","sessionRenewalMs","sessionExpirationMs","disableExceptionTracking","autoTrackPageVisitTime","samplingPercentage","isCookieUseDisabled","isStorageUseDisabled","isBrowserLinkTrackingEnabled","env","doNotSendItem","telemetryInitializersCount","_telemetryInitializers","telemetryInitializer","_nextPlugin","next","trackEvent","event","_setTelemetryNameAndIKey","track","startTrackEvent","_eventTracking","stopTrackEvent","stop","trackTrace","trace","trackMetric","metric","_pageViewManager","_pageVisitTimeManager","trackPreviousPageVisit","refUri","referrer","trackPageViewPerformance","startTrackPage","_pageTracking","stopTrackPage","measurement","sendExceptionInternal","trackException","_onerror","URL","_sendCORSException","errorString","addTelemetryInitializer","_globalconfig","instrumentationKey","defaults","configGetters","accountId","cookieDomain","sdkExtension","appId","_addDefaultTelemetryInitializers","Timing","action","pageViewItem","autoExceptionInstrumented","originalOnError_1","instance_1","onerror","handled","browserLinkPaths_1","_addTelemetryInitializer","envelope","remoteData","iKeyNoDashes","Version","_name","_events"],"mappings":"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"}