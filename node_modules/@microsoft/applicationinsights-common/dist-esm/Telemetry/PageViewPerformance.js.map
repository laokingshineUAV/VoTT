{"version":3,"file":"PageViewPerformance.js","sourceRoot":"","sources":["../../src/Telemetry/PageViewPerformance.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,kCAAkC;;AAElC,OAAO,EAAE,gBAAgB,EAAE,MAAM,oDAAoD,CAAC;AACtF,OAAO,EAAE,SAAS,EAAE,MAAM,UAAU,CAAC;AAErC,OAAO,EAAE,aAAa,EAAE,MAAM,wBAAwB,CAAC;AACvD,OAAO,EAAE,IAAI,EAAE,MAAM,SAAS,CAAC;AAI/B;IAAyC,+CAAgB;IAmBrD;;OAEG;IACH,6BAAY,MAAyB,EAAE,IAAY,EAAE,GAAW,EAAE,MAAc,EAAE,UAAsC,EAAE,YAAwC;QAAlK,YACI,iBAAO,SAMV;QAxBM,oBAAc,GAAG;YACpB,GAAG,EAAE,SAAS,CAAC,QAAQ;YACvB,IAAI,EAAE,SAAS,CAAC,OAAO;YACvB,GAAG,EAAE,SAAS,CAAC,OAAO;YACtB,QAAQ,EAAE,SAAS,CAAC,OAAO;YAC3B,SAAS,EAAE,SAAS,CAAC,OAAO;YAC5B,cAAc,EAAE,SAAS,CAAC,OAAO;YACjC,WAAW,EAAE,SAAS,CAAC,OAAO;YAC9B,gBAAgB,EAAE,SAAS,CAAC,OAAO;YACnC,aAAa,EAAE,SAAS,CAAC,OAAO;YAChC,UAAU,EAAE,SAAS,CAAC,OAAO;YAC7B,YAAY,EAAE,SAAS,CAAC,OAAO;SAClC,CAAC;QAOE,KAAI,CAAC,GAAG,GAAG,aAAa,CAAC,WAAW,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;QAClD,KAAI,CAAC,IAAI,GAAG,aAAa,CAAC,cAAc,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,IAAI,CAAC,YAAY,CAAC;QAE5E,KAAI,CAAC,UAAU,GAAG,aAAa,CAAC,kBAAkB,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;QACvE,KAAI,CAAC,YAAY,GAAG,aAAa,CAAC,oBAAoB,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;;IACjF,CAAC;IA3Ba,gCAAY,GAAG,uDAAuD,CAAC;IACvE,4BAAQ,GAAG,yBAAyB,CAAC;IA2BvD,0BAAC;CAAA,AA9BD,CAAyC,gBAAgB,GA8BxD;SA9BY,mBAAmB","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport { PageViewPerfData } from '../Interfaces/Contracts/Generated/PageViewPerfData';\r\nimport { FieldType } from '../Enums';\r\nimport { ISerializable } from '../Interfaces/Telemetry/ISerializable';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { Util } from '../Util';\r\nimport { IDiagnosticLogger, _InternalMessageId, LoggingSeverity } from '@microsoft/applicationinsights-core-js';\r\n\r\n\r\nexport class PageViewPerformance extends PageViewPerfData implements ISerializable {\r\n\r\n    public static envelopeType = \"Microsoft.ApplicationInsights.{0}.PageviewPerformance\";\r\n    public static dataType = \"PageviewPerformanceData\";\r\n\r\n    public aiDataContract = {\r\n        ver: FieldType.Required,\r\n        name: FieldType.Default,\r\n        url: FieldType.Default,\r\n        duration: FieldType.Default,\r\n        perfTotal: FieldType.Default,\r\n        networkConnect: FieldType.Default,\r\n        sentRequest: FieldType.Default,\r\n        receivedResponse: FieldType.Default,\r\n        domProcessing: FieldType.Default,\r\n        properties: FieldType.Default,\r\n        measurements: FieldType.Default\r\n    };\r\n\r\n    /**\r\n     * Constructs a new instance of the PageEventTelemetry object\r\n     */\r\n    constructor(logger: IDiagnosticLogger, name: string, url: string, unused: number, properties?: { [key: string]: string }, measurements?: { [key: string]: number }) {\r\n        super();\r\n        this.url = DataSanitizer.sanitizeUrl(logger, url);\r\n        this.name = DataSanitizer.sanitizeString(logger, name) || Util.NotSpecified;\r\n\r\n        this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        this.measurements = DataSanitizer.sanitizeMeasurements(logger, measurements);\r\n    }\r\n}\r\n"]}