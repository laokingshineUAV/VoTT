{"version":3,"file":"applicationinsights-common.min.js","sources":["../dist-esm/Enums.js","../../AppInsightsCore/dist-esm/JavaScriptSDK/CoreUtils.js","../../AppInsightsCore/dist-esm/JavaScriptSDK.Enums/LoggingEnums.js","../../AppInsightsCore/dist-esm/JavaScriptSDK/AppInsightsCore.js","../dist-esm/RequestResponseHeaders.js","../dist-esm/Telemetry/Common/DataSanitizer.js","../dist-esm/Util.js","../../../common/temp/node_modules/tslib/tslib.es6.js","../dist-esm/Interfaces/Contracts/Generated/DataPointType.js","../dist-esm/Interfaces/Contracts/Generated/Base.js","../dist-esm/Interfaces/Contracts/Generated/Data.js","../dist-esm/Telemetry/Common/Envelope.js","../dist-esm/Interfaces/Contracts/Generated/Envelope.js","../dist-esm/Interfaces/Contracts/Generated/Domain.js","../dist-esm/Interfaces/Contracts/Generated/EventData.js","../dist-esm/Telemetry/Event.js","../dist-esm/Interfaces/Contracts/Generated/StackFrame.js","../dist-esm/Interfaces/Contracts/Generated/ExceptionDetails.js","../dist-esm/Telemetry/Exception.js","../dist-esm/Interfaces/Contracts/Generated/ExceptionData.js","../dist-esm/Interfaces/Contracts/Generated/MetricData.js","../dist-esm/Interfaces/Contracts/Generated/DataPoint.js","../dist-esm/Interfaces/Contracts/Generated/SeverityLevel.js","../dist-esm/Telemetry/Common/DataPoint.js","../dist-esm/Telemetry/Metric.js","../dist-esm/Interfaces/Contracts/Generated/PageViewData.js","../dist-esm/Telemetry/PageView.js","../dist-esm/Telemetry/RemoteDependencyData.js","../dist-esm/Interfaces/Contracts/Generated/RemoteDependencyData.js","../dist-esm/Telemetry/Trace.js","../dist-esm/Interfaces/Contracts/Generated/MessageData.js","../dist-esm/Telemetry/PageViewPerformance.js","../dist-esm/Interfaces/Contracts/Generated/PageViewPerfData.js","../dist-esm/Telemetry/Common/Data.js","../dist-esm/Interfaces/IConfig.js","../dist-esm/Interfaces/Contracts/Generated/ContextTagKeys.js","../dist-esm/TelemetryItemCreator.js","../dist-esm/Interfaces/PartAExtensions.js","../dist-esm/applicationinsights-common.js","../dist-esm/Constants.js"],"sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n/**\r\n* Type of storage to differentiate between local storage and session storage\r\n*/\r\nexport var StorageType;\r\n(function (StorageType) {\r\n    StorageType[StorageType[\"LocalStorage\"] = 0] = \"LocalStorage\";\r\n    StorageType[StorageType[\"SessionStorage\"] = 1] = \"SessionStorage\";\r\n})(StorageType || (StorageType = {}));\r\n/**\r\n * Enum is used in aiDataContract to describe how fields are serialized.\r\n * For instance: (Fieldtype.Required | FieldType.Array) will mark the field as required and indicate it's an array\r\n */\r\nexport var FieldType;\r\n(function (FieldType) {\r\n    FieldType[FieldType[\"Default\"] = 0] = \"Default\";\r\n    FieldType[FieldType[\"Required\"] = 1] = \"Required\";\r\n    FieldType[FieldType[\"Array\"] = 2] = \"Array\";\r\n    FieldType[FieldType[\"Hidden\"] = 4] = \"Hidden\";\r\n})(FieldType || (FieldType = {}));\r\n;\r\n//# sourceMappingURL=Enums.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\"use strict\";\r\nvar CoreUtils = /** @class */ (function () {\r\n    function CoreUtils() {\r\n    }\r\n    CoreUtils.isNullOrUndefined = function (input) {\r\n        return input === null || input === undefined;\r\n    };\r\n    /**\r\n* Creates a new GUID.\r\n* @return {string} A GUID.\r\n*/\r\n    CoreUtils.newGuid = function () {\r\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(GuidRegex, function (c) {\r\n            // tslint:disable-next-line:insecure-random\r\n            var r = (Math.random() * 16 | 0), v = (c === 'x' ? r : r & 0x3 | 0x8);\r\n            return v.toString(16);\r\n        });\r\n    };\r\n    return CoreUtils;\r\n}());\r\nexport { CoreUtils };\r\nvar GuidRegex = /[xy]/g;\r\n//# sourceMappingURL=CoreUtils.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nexport var LoggingSeverity;\r\n(function (LoggingSeverity) {\r\n    /**\r\n     * Error will be sent as internal telemetry\r\n     */\r\n    LoggingSeverity[LoggingSeverity[\"CRITICAL\"] = 1] = \"CRITICAL\";\r\n    /**\r\n     * Error will NOT be sent as internal telemetry, and will only be shown in browser console\r\n     */\r\n    LoggingSeverity[LoggingSeverity[\"WARNING\"] = 2] = \"WARNING\";\r\n})(LoggingSeverity || (LoggingSeverity = {}));\r\n/**\r\n * Internal message ID. Please create a new one for every conceptually different message. Please keep alphabetically ordered\r\n */\r\nexport var _InternalMessageId = {\r\n    // Non user actionable\r\n    BrowserDoesNotSupportLocalStorage: 0,\r\n    BrowserCannotReadLocalStorage: 1,\r\n    BrowserCannotReadSessionStorage: 2,\r\n    BrowserCannotWriteLocalStorage: 3,\r\n    BrowserCannotWriteSessionStorage: 4,\r\n    BrowserFailedRemovalFromLocalStorage: 5,\r\n    BrowserFailedRemovalFromSessionStorage: 6,\r\n    CannotSendEmptyTelemetry: 7,\r\n    ClientPerformanceMathError: 8,\r\n    ErrorParsingAISessionCookie: 9,\r\n    ErrorPVCalc: 10,\r\n    ExceptionWhileLoggingError: 11,\r\n    FailedAddingTelemetryToBuffer: 12,\r\n    FailedMonitorAjaxAbort: 13,\r\n    FailedMonitorAjaxDur: 14,\r\n    FailedMonitorAjaxOpen: 15,\r\n    FailedMonitorAjaxRSC: 16,\r\n    FailedMonitorAjaxSend: 17,\r\n    FailedMonitorAjaxGetCorrelationHeader: 18,\r\n    FailedToAddHandlerForOnBeforeUnload: 19,\r\n    FailedToSendQueuedTelemetry: 20,\r\n    FailedToReportDataLoss: 21,\r\n    FlushFailed: 22,\r\n    MessageLimitPerPVExceeded: 23,\r\n    MissingRequiredFieldSpecification: 24,\r\n    NavigationTimingNotSupported: 25,\r\n    OnError: 26,\r\n    SessionRenewalDateIsZero: 27,\r\n    SenderNotInitialized: 28,\r\n    StartTrackEventFailed: 29,\r\n    StopTrackEventFailed: 30,\r\n    StartTrackFailed: 31,\r\n    StopTrackFailed: 32,\r\n    TelemetrySampledAndNotSent: 33,\r\n    TrackEventFailed: 34,\r\n    TrackExceptionFailed: 35,\r\n    TrackMetricFailed: 36,\r\n    TrackPVFailed: 37,\r\n    TrackPVFailedCalc: 38,\r\n    TrackTraceFailed: 39,\r\n    TransmissionFailed: 40,\r\n    FailedToSetStorageBuffer: 41,\r\n    FailedToRestoreStorageBuffer: 42,\r\n    InvalidBackendResponse: 43,\r\n    FailedToFixDepricatedValues: 44,\r\n    InvalidDurationValue: 45,\r\n    TelemetryEnvelopeInvalid: 46,\r\n    CreateEnvelopeError: 47,\r\n    // User actionable\r\n    CannotSerializeObject: 48,\r\n    CannotSerializeObjectNonSerializable: 49,\r\n    CircularReferenceDetected: 50,\r\n    ClearAuthContextFailed: 51,\r\n    ExceptionTruncated: 52,\r\n    IllegalCharsInName: 53,\r\n    ItemNotInArray: 54,\r\n    MaxAjaxPerPVExceeded: 55,\r\n    MessageTruncated: 56,\r\n    NameTooLong: 57,\r\n    SampleRateOutOfRange: 58,\r\n    SetAuthContextFailed: 59,\r\n    SetAuthContextFailedAccountName: 60,\r\n    StringValueTooLong: 61,\r\n    StartCalledMoreThanOnce: 62,\r\n    StopCalledWithoutStart: 63,\r\n    TelemetryInitializerFailed: 64,\r\n    TrackArgumentsNotSpecified: 65,\r\n    UrlTooLong: 66,\r\n    SessionStorageBufferFull: 67,\r\n    CannotAccessCookie: 68,\r\n    IdTooLong: 69,\r\n};\r\n//# sourceMappingURL=LoggingEnums.js.map","import { EventsDiscardedReason } from \"../JavaScriptSDK.Enums/EventsDiscardedReason\";\r\nimport { CoreUtils } from \"./CoreUtils\";\r\nimport { NotificationManager } from \"./NotificationManager\";\r\nimport { _InternalLogMessage, DiagnosticLogger } from \"./DiagnosticLogger\";\r\n\"use strict\";\r\nvar AppInsightsCore = /** @class */ (function () {\r\n    function AppInsightsCore() {\r\n        this._isInitialized = false;\r\n        this._extensions = new Array();\r\n        this._channelController = new ChannelController();\r\n    }\r\n    AppInsightsCore.prototype.initialize = function (config, extensions) {\r\n        var _this = this;\r\n        // Make sure core is only initialized once\r\n        if (this._isInitialized) {\r\n            throw Error(\"Core should not be initialized more than once\");\r\n        }\r\n        if (!config || CoreUtils.isNullOrUndefined(config.instrumentationKey)) {\r\n            throw Error(\"Please provide instrumentation key\");\r\n        }\r\n        this.config = config;\r\n        this._notificationManager = new NotificationManager();\r\n        this.config.extensions = CoreUtils.isNullOrUndefined(this.config.extensions) ? [] : this.config.extensions;\r\n        // add notification to the extensions in the config so other plugins can access it\r\n        this.config.extensionConfig = CoreUtils.isNullOrUndefined(this.config.extensionConfig) ? {} : this.config.extensionConfig;\r\n        this.config.extensionConfig.NotificationManager = this._notificationManager;\r\n        this.logger = new DiagnosticLogger(config);\r\n        // Initial validation\r\n        extensions.forEach(function (extension) {\r\n            if (CoreUtils.isNullOrUndefined(extension.initialize)) {\r\n                throw Error(validationError);\r\n            }\r\n        });\r\n        if (this.config.extensions.length > 0) {\r\n            var isValid_1 = true;\r\n            var containsChannels_1 = false;\r\n            this.config.extensions.forEach(function (item) {\r\n                if (CoreUtils.isNullOrUndefined(item)) {\r\n                    isValid_1 = false;\r\n                }\r\n                if (item.priority > ChannelControllerPriority) {\r\n                    containsChannels_1 = true;\r\n                }\r\n            });\r\n            if (!isValid_1) {\r\n                throw Error(validationError);\r\n            }\r\n            if (containsChannels_1) {\r\n                throw Error(validationErrorInExt);\r\n            }\r\n        }\r\n        // Initial validation complete\r\n        // Concat all available extensions before sorting by priority\r\n        (_a = this._extensions).push.apply(_a, [this._channelController].concat(extensions, this.config.extensions));\r\n        this._extensions = this._extensions.sort(function (a, b) {\r\n            var extA = a;\r\n            var extB = b;\r\n            var typeExtA = typeof extA.processTelemetry;\r\n            var typeExtB = typeof extB.processTelemetry;\r\n            if (typeExtA === 'function' && typeExtB === 'function') {\r\n                return extA.priority - extB.priority;\r\n            }\r\n            if (typeExtA === 'function' && typeExtB !== 'function') {\r\n                // keep non telemetryplugin specific extensions at start\r\n                return 1;\r\n            }\r\n            if (typeExtA !== 'function' && typeExtB === 'function') {\r\n                return -1;\r\n            }\r\n        });\r\n        // sort complete\r\n        // Check if any two extensions have the same priority, then warn to console\r\n        var priority = {};\r\n        this._extensions.forEach(function (ext) {\r\n            var t = ext;\r\n            if (t && t.priority) {\r\n                if (!CoreUtils.isNullOrUndefined(priority[t.priority])) {\r\n                    _this.logger.warnToConsole(\"Two extensions have same priority\" + priority[t.priority] + \", \" + t.identifier);\r\n                }\r\n                else {\r\n                    priority[t.priority] = t.identifier; // set a value\r\n                }\r\n            }\r\n        });\r\n        var c = -1;\r\n        // Set next plugin for all until channel controller\r\n        for (var idx = 0; idx < this._extensions.length - 1; idx++) {\r\n            var curr = (this._extensions[idx]);\r\n            if (curr && typeof curr.processTelemetry !== 'function') {\r\n                // these are initialized only, allowing an entry point for extensions to be initialized when SDK initializes\r\n                continue;\r\n            }\r\n            if (curr.priority === ChannelControllerPriority) {\r\n                c = idx + 1;\r\n                break; // channel controller will set remaining pipeline\r\n            }\r\n            this._extensions[idx].setNextPlugin(this._extensions[idx + 1]); // set next plugin\r\n        }\r\n        // initialize channel controller first, this will initialize all channel plugins\r\n        this._channelController.initialize(this.config, this, this._extensions);\r\n        // initialize remaining regular plugins\r\n        this._extensions.forEach(function (ext) {\r\n            var e = ext;\r\n            if (e && e.priority < ChannelControllerPriority) {\r\n                ext.initialize(_this.config, _this, _this._extensions); // initialize\r\n            }\r\n        });\r\n        // Remove sender channels from main list\r\n        if (c < this._extensions.length) {\r\n            this._extensions.splice(c);\r\n        }\r\n        if (this.getTransmissionControls().length === 0) {\r\n            throw new Error(\"No channels available\");\r\n        }\r\n        this._isInitialized = true;\r\n        var _a;\r\n    };\r\n    AppInsightsCore.prototype.getTransmissionControls = function () {\r\n        return this._channelController.ChannelControls;\r\n    };\r\n    AppInsightsCore.prototype.track = function (telemetryItem) {\r\n        if (telemetryItem === null) {\r\n            this._notifiyInvalidEvent(telemetryItem);\r\n            // throw error\r\n            throw Error(\"Invalid telemetry item\");\r\n        }\r\n        if (telemetryItem.baseData && !telemetryItem.baseType) {\r\n            this._notifiyInvalidEvent(telemetryItem);\r\n            throw Error(\"Provide data.baseType for data.baseData\");\r\n        }\r\n        if (!telemetryItem.baseType) {\r\n            // Hard coded from Common::Event.ts::Event.dataType\r\n            telemetryItem.baseType = \"EventData\";\r\n        }\r\n        if (!telemetryItem.iKey) {\r\n            // setup default iKey if not passed in\r\n            telemetryItem.iKey = this.config.instrumentationKey;\r\n        }\r\n        if (!telemetryItem.time) {\r\n            // add default timestamp if not passed in\r\n            telemetryItem.time = new Date().toISOString();\r\n        }\r\n        if (CoreUtils.isNullOrUndefined(telemetryItem.ver)) {\r\n            // CommonSchema 4.0\r\n            telemetryItem.ver = \"4.0\";\r\n        }\r\n        // do basic validation before sending it through the pipeline\r\n        this._validateTelmetryItem(telemetryItem);\r\n        this._updateSdkVersion(telemetryItem);\r\n        // invoke any common telemetry processors before sending through pipeline\r\n        var i = 0;\r\n        while (i < this._extensions.length) {\r\n            if (this._extensions[i].processTelemetry) {\r\n                this._extensions[i].processTelemetry(telemetryItem); // pass on to first extension that can support processing\r\n                break;\r\n            }\r\n            i++;\r\n        }\r\n    };\r\n    /**\r\n     * Adds a notification listener. The SDK calls methods on the listener when an appropriate notification is raised.\r\n     * The added plugins must raise notifications. If the plugins do not implement the notifications, then no methods will be\r\n     * called.\r\n     * @param {INotificationListener} listener - An INotificationListener object.\r\n     */\r\n    AppInsightsCore.prototype.addNotificationListener = function (listener) {\r\n        this._notificationManager.addNotificationListener(listener);\r\n    };\r\n    /**\r\n     * Removes all instances of the listener.\r\n     * @param {INotificationListener} listener - INotificationListener to remove.\r\n     */\r\n    AppInsightsCore.prototype.removeNotificationListener = function (listener) {\r\n        this._notificationManager.removeNotificationListener(listener);\r\n    };\r\n    /**\r\n     * Periodically check logger.queue for\r\n     */\r\n    AppInsightsCore.prototype.pollInternalLogs = function () {\r\n        var _this = this;\r\n        var interval = this.config.diagnosticLogInterval;\r\n        if (!(interval > 0)) {\r\n            interval = 10000;\r\n        }\r\n        return setInterval(function () {\r\n            var queue = _this.logger.queue;\r\n            queue.forEach(function (logMessage) {\r\n                var item = {\r\n                    name: \"InternalMessageId: \" + logMessage.messageId,\r\n                    iKey: _this.config.instrumentationKey,\r\n                    time: new Date().toISOString(),\r\n                    baseType: _InternalLogMessage.dataType,\r\n                    baseData: { message: logMessage.message }\r\n                };\r\n                _this.track(item);\r\n            });\r\n            queue.length = 0;\r\n        }, interval);\r\n    };\r\n    AppInsightsCore.prototype._validateTelmetryItem = function (telemetryItem) {\r\n        if (CoreUtils.isNullOrUndefined(telemetryItem.name)) {\r\n            this._notifiyInvalidEvent(telemetryItem);\r\n            throw Error(\"telemetry name required\");\r\n        }\r\n        if (CoreUtils.isNullOrUndefined(telemetryItem.time)) {\r\n            this._notifiyInvalidEvent(telemetryItem);\r\n            throw Error(\"telemetry timestamp required\");\r\n        }\r\n        if (CoreUtils.isNullOrUndefined(telemetryItem.iKey)) {\r\n            this._notifiyInvalidEvent(telemetryItem);\r\n            throw Error(\"telemetry instrumentationKey required\");\r\n        }\r\n    };\r\n    AppInsightsCore.prototype._updateSdkVersion = function (telemetryItem) {\r\n        if (!telemetryItem.ext) {\r\n            telemetryItem.ext = {};\r\n        }\r\n        if (!telemetryItem.ext.sdk) {\r\n            telemetryItem.ext.sdk = {};\r\n        }\r\n        var version = \"\";\r\n        for (var i = 0; i < this._extensions.length; i++) {\r\n            var ext = this._extensions[i];\r\n            if (ext.identifier && ext.version) {\r\n                var str = ext.identifier + \":\" + ext.version + \";\";\r\n                version = version.concat(str);\r\n            }\r\n        }\r\n        if (version != \"\") {\r\n            telemetryItem.ext.sdk['libVer'] = version;\r\n        }\r\n    };\r\n    AppInsightsCore.prototype._notifiyInvalidEvent = function (telemetryItem) {\r\n        this._notificationManager.eventsDiscarded([telemetryItem], EventsDiscardedReason.InvalidEvent);\r\n    };\r\n    return AppInsightsCore;\r\n}());\r\nexport { AppInsightsCore };\r\nvar ChannelController = /** @class */ (function () {\r\n    function ChannelController() {\r\n        this.identifier = \"ChannelControllerPlugin\";\r\n        this.priority = ChannelControllerPriority; // in reserved range 100 to 200\r\n    }\r\n    ChannelController.prototype.processTelemetry = function (item) {\r\n        this.channelQueue.forEach(function (queues) {\r\n            // pass on to first item in queue\r\n            if (queues.length > 0) {\r\n                queues[0].processTelemetry(item);\r\n            }\r\n        });\r\n    };\r\n    Object.defineProperty(ChannelController.prototype, \"ChannelControls\", {\r\n        get: function () {\r\n            return this.channelQueue;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ChannelController.prototype.initialize = function (config, core, extensions) {\r\n        var _this = this;\r\n        this.channelQueue = new Array();\r\n        if (config.channels) {\r\n            var invalidChannelIdentifier_1 = undefined;\r\n            config.channels.forEach(function (queue) {\r\n                if (queue && queue.length > 0) {\r\n                    queue = queue.sort(function (a, b) {\r\n                        return a.priority - b.priority;\r\n                    });\r\n                    // Initialize each plugin\r\n                    queue.forEach(function (queueItem) {\r\n                        if (queueItem.priority < ChannelControllerPriority) {\r\n                            invalidChannelIdentifier_1 = queueItem.identifier;\r\n                        }\r\n                        queueItem.initialize(config, core, extensions);\r\n                    });\r\n                    if (invalidChannelIdentifier_1) {\r\n                        throw Error(ChannelValidationMessage + invalidChannelIdentifier_1);\r\n                    }\r\n                    for (var i = 1; i < queue.length; i++) {\r\n                        queue[i - 1].setNextPlugin(queue[i]); // setup processing chain\r\n                    }\r\n                    _this.channelQueue.push(queue);\r\n                }\r\n            });\r\n        }\r\n        var arr = new Array();\r\n        for (var i = 0; i < extensions.length; i++) {\r\n            var plugin = extensions[i];\r\n            if (plugin.priority > ChannelControllerPriority) {\r\n                arr.push(plugin);\r\n            }\r\n        }\r\n        if (arr.length > 0) {\r\n            // sort if not sorted\r\n            arr = arr.sort(function (a, b) {\r\n                return a.priority - b.priority;\r\n            });\r\n            // Initialize each plugin\r\n            arr.forEach(function (queueItem) { return queueItem.initialize(config, core, extensions); });\r\n            // setup next plugin\r\n            for (var i = 1; i < arr.length; i++) {\r\n                arr[i - 1].setNextPlugin(arr[i]);\r\n            }\r\n            this.channelQueue.push(arr);\r\n        }\r\n    };\r\n    return ChannelController;\r\n}());\r\nvar validationError = \"Extensions must provide callback to initialize\";\r\nvar validationErrorInExt = \"Channels must be provided through config.channels only\";\r\nvar ChannelControllerPriority = 500;\r\nvar ChannelValidationMessage = \"Channel has invalid priority\";\r\n//# sourceMappingURL=AppInsightsCore.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nvar RequestHeaders = /** @class */ (function () {\r\n    function RequestHeaders() {\r\n    }\r\n    /**\r\n     * Request-Context header\r\n     */\r\n    RequestHeaders.requestContextHeader = \"Request-Context\";\r\n    /**\r\n     * Target instrumentation header that is added to the response and retrieved by the\r\n     * calling application when processing incoming responses.\r\n     */\r\n    RequestHeaders.requestContextTargetKey = \"appId\";\r\n    /**\r\n     * Request-Context appId format\r\n     */\r\n    RequestHeaders.requestContextAppIdFormat = \"appId=cid-v1:\";\r\n    /**\r\n     * Request-Id header\r\n     */\r\n    RequestHeaders.requestIdHeader = \"Request-Id\";\r\n    /**\r\n     * Sdk-Context header\r\n     * If this header passed with appId in content then appId will be returned back by the backend.\r\n     */\r\n    RequestHeaders.sdkContextHeader = \"Sdk-Context\";\r\n    /**\r\n     * String to pass in header for requesting appId back from the backend.\r\n     */\r\n    RequestHeaders.sdkContextHeaderAppIdRequest = \"appId\";\r\n    RequestHeaders.requestContextHeaderLowerCase = \"request-context\";\r\n    return RequestHeaders;\r\n}());\r\nexport { RequestHeaders };\r\n//# sourceMappingURL=RequestResponseHeaders.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { LoggingSeverity, _InternalMessageId } from '@microsoft/applicationinsights-core-js';\r\nvar DataSanitizer = /** @class */ (function () {\r\n    function DataSanitizer() {\r\n    }\r\n    DataSanitizer.sanitizeKeyAndAddUniqueness = function (logger, key, map) {\r\n        var origLength = key.length;\r\n        var field = DataSanitizer.sanitizeKey(logger, key);\r\n        // validation truncated the length.  We need to add uniqueness\r\n        if (field.length !== origLength) {\r\n            var i = 0;\r\n            var uniqueField = field;\r\n            while (map[uniqueField] !== undefined) {\r\n                i++;\r\n                uniqueField = field.substring(0, DataSanitizer.MAX_NAME_LENGTH - 3) + DataSanitizer.padNumber(i);\r\n            }\r\n            field = uniqueField;\r\n        }\r\n        return field;\r\n    };\r\n    DataSanitizer.sanitizeKey = function (logger, name) {\r\n        if (name) {\r\n            // Remove any leading or trailing whitepace\r\n            name = DataSanitizer.trim(name.toString());\r\n            // truncate the string to 150 chars\r\n            if (name.length > DataSanitizer.MAX_NAME_LENGTH) {\r\n                name = name.substring(0, DataSanitizer.MAX_NAME_LENGTH);\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.NameTooLong, \"name is too long.  It has been truncated to \" + DataSanitizer.MAX_NAME_LENGTH + \" characters.\", { name: name }, true);\r\n            }\r\n        }\r\n        return name;\r\n    };\r\n    DataSanitizer.sanitizeString = function (logger, value, maxLength) {\r\n        if (maxLength === void 0) { maxLength = DataSanitizer.MAX_STRING_LENGTH; }\r\n        if (value) {\r\n            maxLength = maxLength ? maxLength : DataSanitizer.MAX_STRING_LENGTH; // in case default parameters dont work\r\n            value = DataSanitizer.trim(value);\r\n            if (value.toString().length > maxLength) {\r\n                value = value.toString().substring(0, maxLength);\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.StringValueTooLong, \"string value is too long. It has been truncated to \" + maxLength + \" characters.\", { value: value }, true);\r\n            }\r\n        }\r\n        return value;\r\n    };\r\n    DataSanitizer.sanitizeUrl = function (logger, url) {\r\n        return DataSanitizer.sanitizeInput(logger, url, DataSanitizer.MAX_URL_LENGTH, _InternalMessageId.UrlTooLong);\r\n    };\r\n    DataSanitizer.sanitizeMessage = function (logger, message) {\r\n        if (message) {\r\n            if (message.length > DataSanitizer.MAX_MESSAGE_LENGTH) {\r\n                message = message.substring(0, DataSanitizer.MAX_MESSAGE_LENGTH);\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.MessageTruncated, \"message is too long, it has been truncated to \" + DataSanitizer.MAX_MESSAGE_LENGTH + \" characters.\", { message: message }, true);\r\n            }\r\n        }\r\n        return message;\r\n    };\r\n    DataSanitizer.sanitizeException = function (logger, exception) {\r\n        if (exception) {\r\n            if (exception.length > DataSanitizer.MAX_EXCEPTION_LENGTH) {\r\n                exception = exception.substring(0, DataSanitizer.MAX_EXCEPTION_LENGTH);\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.ExceptionTruncated, \"exception is too long, it has been truncated to \" + DataSanitizer.MAX_EXCEPTION_LENGTH + \" characters.\", { exception: exception }, true);\r\n            }\r\n        }\r\n        return exception;\r\n    };\r\n    DataSanitizer.sanitizeProperties = function (logger, properties) {\r\n        if (properties) {\r\n            var tempProps = {};\r\n            for (var prop in properties) {\r\n                var value = properties[prop];\r\n                if (typeof value === \"object\" && typeof JSON !== \"undefined\") {\r\n                    // Stringify any part C properties\r\n                    try {\r\n                        value = JSON.stringify(value);\r\n                    }\r\n                    catch (e) {\r\n                        logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.CannotSerializeObjectNonSerializable, \"custom property is not valid\", { exception: e }, true);\r\n                    }\r\n                }\r\n                value = DataSanitizer.sanitizeString(logger, value, DataSanitizer.MAX_PROPERTY_LENGTH);\r\n                prop = DataSanitizer.sanitizeKeyAndAddUniqueness(logger, prop, tempProps);\r\n                tempProps[prop] = value;\r\n            }\r\n            properties = tempProps;\r\n        }\r\n        return properties;\r\n    };\r\n    DataSanitizer.sanitizeMeasurements = function (logger, measurements) {\r\n        if (measurements) {\r\n            var tempMeasurements = {};\r\n            for (var measure in measurements) {\r\n                var value = measurements[measure];\r\n                measure = DataSanitizer.sanitizeKeyAndAddUniqueness(logger, measure, tempMeasurements);\r\n                tempMeasurements[measure] = value;\r\n            }\r\n            measurements = tempMeasurements;\r\n        }\r\n        return measurements;\r\n    };\r\n    DataSanitizer.sanitizeId = function (logger, id) {\r\n        return id ? DataSanitizer.sanitizeInput(logger, id, DataSanitizer.MAX_ID_LENGTH, _InternalMessageId.IdTooLong).toString() : id;\r\n    };\r\n    DataSanitizer.sanitizeInput = function (logger, input, maxLength, _msgId) {\r\n        if (input) {\r\n            input = DataSanitizer.trim(input);\r\n            if (input.length > maxLength) {\r\n                input = input.substring(0, maxLength);\r\n                logger.throwInternal(LoggingSeverity.WARNING, _msgId, \"input is too long, it has been truncated to \" + maxLength + \" characters.\", { data: input }, true);\r\n            }\r\n        }\r\n        return input;\r\n    };\r\n    DataSanitizer.padNumber = function (num) {\r\n        var s = \"00\" + num;\r\n        return s.substr(s.length - 3);\r\n    };\r\n    /**\r\n     * helper method to trim strings (IE8 does not implement String.prototype.trim)\r\n     */\r\n    DataSanitizer.trim = function (str) {\r\n        if (typeof str !== \"string\")\r\n            return str;\r\n        return str.replace(/^\\s+|\\s+$/g, \"\");\r\n    };\r\n    /**\r\n    * Max length allowed for custom names.\r\n    */\r\n    DataSanitizer.MAX_NAME_LENGTH = 150;\r\n    /**\r\n     * Max length allowed for Id field in page views.\r\n     */\r\n    DataSanitizer.MAX_ID_LENGTH = 128;\r\n    /**\r\n     * Max length allowed for custom values.\r\n     */\r\n    DataSanitizer.MAX_PROPERTY_LENGTH = 8192;\r\n    /**\r\n     * Max length allowed for names\r\n     */\r\n    DataSanitizer.MAX_STRING_LENGTH = 1024;\r\n    /**\r\n     * Max length allowed for url.\r\n     */\r\n    DataSanitizer.MAX_URL_LENGTH = 2048;\r\n    /**\r\n     * Max length allowed for messages.\r\n     */\r\n    DataSanitizer.MAX_MESSAGE_LENGTH = 32768;\r\n    /**\r\n     * Max length allowed for exceptions.\r\n     */\r\n    DataSanitizer.MAX_EXCEPTION_LENGTH = 32768;\r\n    return DataSanitizer;\r\n}());\r\nexport { DataSanitizer };\r\n//# sourceMappingURL=DataSanitizer.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { StorageType } from \"./Enums\";\r\nimport { CoreUtils, _InternalMessageId, LoggingSeverity } from \"@microsoft/applicationinsights-core-js\";\r\nimport { RequestHeaders } from \"./RequestResponseHeaders\";\r\nimport { DataSanitizer } from \"./Telemetry/Common/DataSanitizer\";\r\nvar Util = /** @class */ (function () {\r\n    function Util() {\r\n    }\r\n    /*\r\n     * Force the SDK not to use local and session storage\r\n    */\r\n    Util.disableStorage = function () {\r\n        Util._canUseLocalStorage = false;\r\n        Util._canUseSessionStorage = false;\r\n    };\r\n    /**\r\n     * Gets the localStorage object if available\r\n     * @return {Storage} - Returns the storage object if available else returns null\r\n     */\r\n    Util._getLocalStorageObject = function () {\r\n        if (Util.canUseLocalStorage()) {\r\n            return Util._getVerifiedStorageObject(StorageType.LocalStorage);\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Tests storage object (localStorage or sessionStorage) to verify that it is usable\r\n     * More details here: https://mathiasbynens.be/notes/localstorage-pattern\r\n     * @param storageType Type of storage\r\n     * @return {Storage} Returns storage object verified that it is usable\r\n     */\r\n    Util._getVerifiedStorageObject = function (storageType) {\r\n        var storage = null;\r\n        var fail;\r\n        var uid;\r\n        try {\r\n            if (typeof window === 'undefined') {\r\n                return null;\r\n            }\r\n            uid = new Date;\r\n            storage = storageType === StorageType.LocalStorage ? window.localStorage : window.sessionStorage;\r\n            storage.setItem(uid, uid);\r\n            fail = storage.getItem(uid) != uid;\r\n            storage.removeItem(uid);\r\n            if (fail) {\r\n                storage = null;\r\n            }\r\n        }\r\n        catch (exception) {\r\n            storage = null;\r\n        }\r\n        return storage;\r\n    };\r\n    /**\r\n     *  Checks if endpoint URL is application insights internal injestion service URL.\r\n     *\r\n     *  @param endpointUrl Endpoint URL to check.\r\n     *  @returns {boolean} True if if endpoint URL is application insights internal injestion service URL.\r\n     */\r\n    Util.isInternalApplicationInsightsEndpoint = function (endpointUrl) {\r\n        return Util._internalEndpoints.indexOf(endpointUrl.toLowerCase()) !== -1;\r\n    };\r\n    /**\r\n     *  Check if the browser supports local storage.\r\n     *\r\n     *  @returns {boolean} True if local storage is supported.\r\n     */\r\n    Util.canUseLocalStorage = function () {\r\n        if (Util._canUseLocalStorage === undefined) {\r\n            Util._canUseLocalStorage = !!Util._getVerifiedStorageObject(StorageType.LocalStorage);\r\n        }\r\n        return Util._canUseLocalStorage;\r\n    };\r\n    /**\r\n     *  Get an object from the browser's local storage\r\n     *\r\n     *  @param {string} name - the name of the object to get from storage\r\n     *  @returns {string} The contents of the storage object with the given name. Null if storage is not supported.\r\n     */\r\n    Util.getStorage = function (logger, name) {\r\n        var storage = Util._getLocalStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                return storage.getItem(name);\r\n            }\r\n            catch (e) {\r\n                Util._canUseLocalStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserCannotReadLocalStorage, \"Browser failed read of local storage. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     *  Set the contents of an object in the browser's local storage\r\n     *\r\n     *  @param {string} name - the name of the object to set in storage\r\n     *  @param {string} data - the contents of the object to set in storage\r\n     *  @returns {boolean} True if the storage object could be written.\r\n     */\r\n    Util.setStorage = function (logger, name, data) {\r\n        var storage = Util._getLocalStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                storage.setItem(name, data);\r\n                return true;\r\n            }\r\n            catch (e) {\r\n                Util._canUseLocalStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserCannotWriteLocalStorage, \"Browser failed write to local storage. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     *  Remove an object from the browser's local storage\r\n     *\r\n     *  @param {string} name - the name of the object to remove from storage\r\n     *  @returns {boolean} True if the storage object could be removed.\r\n     */\r\n    Util.removeStorage = function (logger, name) {\r\n        var storage = Util._getLocalStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                storage.removeItem(name);\r\n                return true;\r\n            }\r\n            catch (e) {\r\n                Util._canUseLocalStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserFailedRemovalFromLocalStorage, \"Browser failed removal of local storage item. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * Gets the sessionStorage object if available\r\n     * @return {Storage} - Returns the storage object if available else returns null\r\n     */\r\n    Util._getSessionStorageObject = function () {\r\n        if (Util.canUseSessionStorage()) {\r\n            return Util._getVerifiedStorageObject(StorageType.SessionStorage);\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     *  Check if the browser supports session storage.\r\n     *\r\n     *  @returns {boolean} True if session storage is supported.\r\n     */\r\n    Util.canUseSessionStorage = function () {\r\n        if (Util._canUseSessionStorage === undefined) {\r\n            Util._canUseSessionStorage = !!Util._getVerifiedStorageObject(StorageType.SessionStorage);\r\n        }\r\n        return Util._canUseSessionStorage;\r\n    };\r\n    /**\r\n     *  Gets the list of session storage keys\r\n     *\r\n     *  @returns {string[]} List of session storage keys\r\n     */\r\n    Util.getSessionStorageKeys = function () {\r\n        var keys = [];\r\n        if (Util.canUseSessionStorage()) {\r\n            for (var key in window.sessionStorage) {\r\n                keys.push(key);\r\n            }\r\n        }\r\n        return keys;\r\n    };\r\n    /**\r\n     *  Get an object from the browser's session storage\r\n     *\r\n     *  @param {string} name - the name of the object to get from storage\r\n     *  @returns {string} The contents of the storage object with the given name. Null if storage is not supported.\r\n     */\r\n    Util.getSessionStorage = function (logger, name) {\r\n        var storage = Util._getSessionStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                return storage.getItem(name);\r\n            }\r\n            catch (e) {\r\n                Util._canUseSessionStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserCannotReadSessionStorage, \"Browser failed read of session storage. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     *  Set the contents of an object in the browser's session storage\r\n     *\r\n     *  @param {string} name - the name of the object to set in storage\r\n     *  @param {string} data - the contents of the object to set in storage\r\n     *  @returns {boolean} True if the storage object could be written.\r\n     */\r\n    Util.setSessionStorage = function (logger, name, data) {\r\n        var storage = Util._getSessionStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                storage.setItem(name, data);\r\n                return true;\r\n            }\r\n            catch (e) {\r\n                Util._canUseSessionStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserCannotWriteSessionStorage, \"Browser failed write to session storage. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     *  Remove an object from the browser's session storage\r\n     *\r\n     *  @param {string} name - the name of the object to remove from storage\r\n     *  @returns {boolean} True if the storage object could be removed.\r\n     */\r\n    Util.removeSessionStorage = function (logger, name) {\r\n        var storage = Util._getSessionStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                storage.removeItem(name);\r\n                return true;\r\n            }\r\n            catch (e) {\r\n                Util._canUseSessionStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserFailedRemovalFromSessionStorage, \"Browser failed removal of session storage item. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /*\r\n     * Force the SDK not to store and read any data from cookies\r\n     */\r\n    Util.disableCookies = function () {\r\n        Util._canUseCookies = false;\r\n    };\r\n    /*\r\n     * helper method to tell if document.cookie object is available\r\n     */\r\n    Util.canUseCookies = function (logger) {\r\n        if (Util._canUseCookies === undefined) {\r\n            Util._canUseCookies = false;\r\n            try {\r\n                Util._canUseCookies = Util.document.cookie !== undefined;\r\n            }\r\n            catch (e) {\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.CannotAccessCookie, \"Cannot access document.cookie - \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n            ;\r\n        }\r\n        return Util._canUseCookies;\r\n    };\r\n    /**\r\n     * helper method to set userId and sessionId cookie\r\n     */\r\n    Util.setCookie = function (logger, name, value, domain) {\r\n        var domainAttrib = \"\";\r\n        var secureAttrib = \"\";\r\n        if (domain) {\r\n            domainAttrib = \";domain=\" + domain;\r\n        }\r\n        if (Util.document.location && Util.document.location.protocol === \"https:\") {\r\n            secureAttrib = \";secure\";\r\n        }\r\n        if (Util.canUseCookies(logger)) {\r\n            Util.document.cookie = name + \"=\" + value + domainAttrib + \";path=/\" + secureAttrib;\r\n        }\r\n    };\r\n    Util.stringToBoolOrDefault = function (str, defaultValue) {\r\n        if (defaultValue === void 0) { defaultValue = false; }\r\n        if (str === undefined || str === null) {\r\n            return defaultValue;\r\n        }\r\n        return str.toString().toLowerCase() === \"true\";\r\n    };\r\n    /**\r\n     * helper method to access userId and sessionId cookie\r\n     */\r\n    Util.getCookie = function (logger, name) {\r\n        if (!Util.canUseCookies(logger)) {\r\n            return;\r\n        }\r\n        var value = \"\";\r\n        if (name && name.length) {\r\n            var cookieName = name + \"=\";\r\n            var cookies = Util.document.cookie.split(\";\");\r\n            for (var i = 0; i < cookies.length; i++) {\r\n                var cookie = cookies[i];\r\n                cookie = Util.trim(cookie);\r\n                if (cookie && cookie.indexOf(cookieName) === 0) {\r\n                    value = cookie.substring(cookieName.length, cookies[i].length);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return value;\r\n    };\r\n    /**\r\n     * Deletes a cookie by setting it's expiration time in the past.\r\n     * @param name - The name of the cookie to delete.\r\n     */\r\n    Util.deleteCookie = function (logger, name) {\r\n        if (Util.canUseCookies(logger)) {\r\n            // Setting the expiration date in the past immediately removes the cookie\r\n            Util.document.cookie = name + \"=;path=/;expires=Thu, 01 Jan 1970 00:00:01 GMT;\";\r\n        }\r\n    };\r\n    /**\r\n     * helper method to trim strings (IE8 does not implement String.prototype.trim)\r\n     */\r\n    Util.trim = function (str) {\r\n        if (typeof str !== \"string\")\r\n            return str;\r\n        return str.replace(/^\\s+|\\s+$/g, \"\");\r\n    };\r\n    /**\r\n     * generate random id string\r\n     */\r\n    Util.newId = function () {\r\n        var base64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\r\n        var result = \"\";\r\n        // tslint:disable-next-line:insecure-random\r\n        var random = Math.random() * 1073741824; //5 symbols in base64, almost maxint\r\n        while (random > 0) {\r\n            var char = base64chars.charAt(random % 64);\r\n            result += char;\r\n            random = Math.floor(random / 64);\r\n        }\r\n        return result;\r\n    };\r\n    /**\r\n     * Check if an object is of type Array\r\n     */\r\n    Util.isArray = function (obj) {\r\n        return Object.prototype.toString.call(obj) === \"[object Array]\";\r\n    };\r\n    /**\r\n     * Check if an object is of type Error\r\n     */\r\n    Util.isError = function (obj) {\r\n        return Object.prototype.toString.call(obj) === \"[object Error]\";\r\n    };\r\n    /**\r\n     * Check if an object is of type Date\r\n     */\r\n    Util.isDate = function (obj) {\r\n        return Object.prototype.toString.call(obj) === \"[object Date]\";\r\n    };\r\n    /**\r\n     * Convert a date to I.S.O. format in IE8\r\n     */\r\n    Util.toISOStringForIE8 = function (date) {\r\n        if (Util.isDate(date)) {\r\n            if (Date.prototype.toISOString) {\r\n                return date.toISOString();\r\n            }\r\n            else {\r\n                var pad = function (num) {\r\n                    var r = String(num);\r\n                    if (r.length === 1) {\r\n                        r = \"0\" + r;\r\n                    }\r\n                    return r;\r\n                };\r\n                return date.getUTCFullYear()\r\n                    + \"-\" + pad(date.getUTCMonth() + 1)\r\n                    + \"-\" + pad(date.getUTCDate())\r\n                    + \"T\" + pad(date.getUTCHours())\r\n                    + \":\" + pad(date.getUTCMinutes())\r\n                    + \":\" + pad(date.getUTCSeconds())\r\n                    + \".\" + String((date.getUTCMilliseconds() / 1000).toFixed(3)).slice(2, 5)\r\n                    + \"Z\";\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Gets IE version if we are running on IE, or null otherwise\r\n     */\r\n    Util.getIEVersion = function (userAgentStr) {\r\n        if (userAgentStr === void 0) { userAgentStr = null; }\r\n        var myNav = userAgentStr ? userAgentStr.toLowerCase() : navigator.userAgent.toLowerCase();\r\n        return (myNav.indexOf('msie') != -1) ? parseInt(myNav.split('msie')[1]) : null;\r\n    };\r\n    /**\r\n     * Convert ms to c# time span format\r\n     */\r\n    Util.msToTimeSpan = function (totalms) {\r\n        if (isNaN(totalms) || totalms < 0) {\r\n            totalms = 0;\r\n        }\r\n        totalms = Math.round(totalms);\r\n        var ms = \"\" + totalms % 1000;\r\n        var sec = \"\" + Math.floor(totalms / 1000) % 60;\r\n        var min = \"\" + Math.floor(totalms / (1000 * 60)) % 60;\r\n        var hour = \"\" + Math.floor(totalms / (1000 * 60 * 60)) % 24;\r\n        var days = Math.floor(totalms / (1000 * 60 * 60 * 24));\r\n        ms = ms.length === 1 ? \"00\" + ms : ms.length === 2 ? \"0\" + ms : ms;\r\n        sec = sec.length < 2 ? \"0\" + sec : sec;\r\n        min = min.length < 2 ? \"0\" + min : min;\r\n        hour = hour.length < 2 ? \"0\" + hour : hour;\r\n        return (days > 0 ? days + \".\" : \"\") + hour + \":\" + min + \":\" + sec + \".\" + ms;\r\n    };\r\n    /**\r\n    * Checks if error has no meaningful data inside. Ususally such errors are received by window.onerror when error\r\n    * happens in a script from other domain (cross origin, CORS).\r\n    */\r\n    Util.isCrossOriginError = function (message, url, lineNumber, columnNumber, error) {\r\n        return (message === \"Script error.\" || message === \"Script error\") && !error;\r\n    };\r\n    /**\r\n    * Returns string representation of an object suitable for diagnostics logging.\r\n    */\r\n    Util.dump = function (object) {\r\n        var objectTypeDump = Object.prototype.toString.call(object);\r\n        var propertyValueDump = JSON.stringify(object);\r\n        if (objectTypeDump === \"[object Error]\") {\r\n            propertyValueDump = \"{ stack: '\" + object.stack + \"', message: '\" + object.message + \"', name: '\" + object.name + \"'\";\r\n        }\r\n        return objectTypeDump + propertyValueDump;\r\n    };\r\n    /**\r\n    * Returns the name of object if it's an Error. Otherwise, returns empty string.\r\n    */\r\n    Util.getExceptionName = function (object) {\r\n        var objectTypeDump = Object.prototype.toString.call(object);\r\n        if (objectTypeDump === \"[object Error]\") {\r\n            return object.name;\r\n        }\r\n        return \"\";\r\n    };\r\n    /**\r\n     * Adds an event handler for the specified event\r\n     * @param eventName {string} - The name of the event\r\n     * @param callback {any} - The callback function that needs to be executed for the given event\r\n     * @return {boolean} - true if the handler was successfully added\r\n     */\r\n    Util.addEventHandler = function (eventName, callback) {\r\n        if (typeof window === 'undefined' || !window || typeof eventName !== 'string' || typeof callback !== 'function') {\r\n            return false;\r\n        }\r\n        // Create verb for the event\r\n        var verbEventName = 'on' + eventName;\r\n        // check if addEventListener is available\r\n        if (window.addEventListener) {\r\n            window.addEventListener(eventName, callback, false);\r\n        }\r\n        else if (window[\"attachEvent\"]) {\r\n            window[\"attachEvent\"](verbEventName, callback);\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     * Tells if a browser supports a Beacon API\r\n     */\r\n    Util.IsBeaconApiSupported = function () {\r\n        return ('sendBeacon' in navigator && navigator.sendBeacon);\r\n    };\r\n    Util.document = typeof document !== \"undefined\" ? document : {};\r\n    Util._canUseCookies = undefined;\r\n    Util._canUseLocalStorage = undefined;\r\n    Util._canUseSessionStorage = undefined;\r\n    // listing only non-geo specific locations \r\n    Util._internalEndpoints = [\r\n        \"https://dc.services.visualstudio.com/v2/track\",\r\n        \"https://breeze.aimon.applicationinsights.io/v2/track\",\r\n        \"https://dc-int.services.visualstudio.com/v2/track\"\r\n    ];\r\n    Util.NotSpecified = \"not_specified\";\r\n    return Util;\r\n}());\r\nexport { Util };\r\nvar UrlHelper = /** @class */ (function () {\r\n    function UrlHelper() {\r\n    }\r\n    UrlHelper.parseUrl = function (url) {\r\n        if (!UrlHelper.htmlAnchorElement) {\r\n            UrlHelper.htmlAnchorElement = !!UrlHelper.document.createElement ? UrlHelper.document.createElement('a') : {};\r\n        }\r\n        UrlHelper.htmlAnchorElement.href = url;\r\n        return UrlHelper.htmlAnchorElement;\r\n    };\r\n    UrlHelper.getAbsoluteUrl = function (url) {\r\n        var result;\r\n        var a = UrlHelper.parseUrl(url);\r\n        if (a) {\r\n            result = a.href;\r\n        }\r\n        return result;\r\n    };\r\n    UrlHelper.getPathName = function (url) {\r\n        var result;\r\n        var a = UrlHelper.parseUrl(url);\r\n        if (a) {\r\n            result = a.pathname;\r\n        }\r\n        return result;\r\n    };\r\n    UrlHelper.getCompleteUrl = function (method, absoluteUrl) {\r\n        if (method) {\r\n            return method.toUpperCase() + \" \" + absoluteUrl;\r\n        }\r\n        else {\r\n            return absoluteUrl;\r\n        }\r\n    };\r\n    UrlHelper.document = typeof document !== \"undefined\" ? document : {};\r\n    return UrlHelper;\r\n}());\r\nexport { UrlHelper };\r\nvar CorrelationIdHelper = /** @class */ (function () {\r\n    function CorrelationIdHelper() {\r\n    }\r\n    /**\r\n    * Checks if a request url is not on a excluded domain list and if it is safe to add correlation headers\r\n    */\r\n    CorrelationIdHelper.canIncludeCorrelationHeader = function (config, requestUrl, currentHost) {\r\n        if (config && config.disableCorrelationHeaders) {\r\n            return false;\r\n        }\r\n        if (!requestUrl) {\r\n            return false;\r\n        }\r\n        var requestHost = UrlHelper.parseUrl(requestUrl).host.toLowerCase();\r\n        if ((!config || !config.enableCorsCorrelation) && requestHost !== currentHost) {\r\n            return false;\r\n        }\r\n        var excludedDomains = config && config.correlationHeaderExcludedDomains;\r\n        if (!excludedDomains || excludedDomains.length == 0) {\r\n            return true;\r\n        }\r\n        for (var i = 0; i < excludedDomains.length; i++) {\r\n            var regex = new RegExp(excludedDomains[i].toLowerCase().replace(/\\./g, \"\\.\").replace(/\\*/g, \".*\"));\r\n            if (regex.test(requestHost)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n    * Combines target appId and target role name from response header.\r\n    */\r\n    CorrelationIdHelper.getCorrelationContext = function (responseHeader) {\r\n        if (responseHeader) {\r\n            var correlationId = CorrelationIdHelper.getCorrelationContextValue(responseHeader, RequestHeaders.requestContextTargetKey);\r\n            if (correlationId && correlationId !== CorrelationIdHelper.correlationIdPrefix) {\r\n                return correlationId;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n    * Gets key from correlation response header\r\n    */\r\n    CorrelationIdHelper.getCorrelationContextValue = function (responseHeader, key) {\r\n        if (responseHeader) {\r\n            var keyValues = responseHeader.split(\",\");\r\n            for (var i = 0; i < keyValues.length; ++i) {\r\n                var keyValue = keyValues[i].split(\"=\");\r\n                if (keyValue.length == 2 && keyValue[0] == key) {\r\n                    return keyValue[1];\r\n                }\r\n            }\r\n        }\r\n    };\r\n    CorrelationIdHelper.correlationIdPrefix = \"cid-v1:\";\r\n    return CorrelationIdHelper;\r\n}());\r\nexport { CorrelationIdHelper };\r\nvar AjaxHelper = /** @class */ (function () {\r\n    function AjaxHelper() {\r\n    }\r\n    AjaxHelper.ParseDependencyPath = function (logger, absoluteUrl, method, commandName) {\r\n        var target, name = commandName, data = commandName;\r\n        if (absoluteUrl && absoluteUrl.length > 0) {\r\n            var parsedUrl = UrlHelper.parseUrl(absoluteUrl);\r\n            target = parsedUrl.host;\r\n            if (!name) {\r\n                if (parsedUrl.pathname != null) {\r\n                    var pathName = (parsedUrl.pathname.length === 0) ? \"/\" : parsedUrl.pathname;\r\n                    if (pathName.charAt(0) !== '/') {\r\n                        pathName = \"/\" + pathName;\r\n                    }\r\n                    data = parsedUrl.pathname;\r\n                    name = DataSanitizer.sanitizeString(logger, method ? method + \" \" + pathName : pathName);\r\n                }\r\n                else {\r\n                    name = DataSanitizer.sanitizeString(logger, absoluteUrl);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            target = commandName;\r\n            name = commandName;\r\n        }\r\n        return {\r\n            target: target,\r\n            name: name,\r\n            data: data\r\n        };\r\n    };\r\n    return AjaxHelper;\r\n}());\r\nexport { AjaxHelper };\r\n/**\r\n * A utility class that helps getting time related parameters\r\n */\r\nvar DateTimeUtils = /** @class */ (function () {\r\n    function DateTimeUtils() {\r\n    }\r\n    /**\r\n     * Get the number of milliseconds since 1970/01/01 in local timezone\r\n     */\r\n    DateTimeUtils.Now = (typeof window === 'undefined') ? function () { return new Date().getTime(); } :\r\n        (window.performance && window.performance.now && window.performance.timing) ?\r\n            function () {\r\n                return window.performance.now() + window.performance.timing.navigationStart;\r\n            }\r\n            :\r\n                function () {\r\n                    return new Date().getTime();\r\n                };\r\n    /**\r\n     * Gets duration between two timestamps\r\n     */\r\n    DateTimeUtils.GetDuration = function (start, end) {\r\n        var result = null;\r\n        if (start !== 0 && end !== 0 && !CoreUtils.isNullOrUndefined(start) && !CoreUtils.isNullOrUndefined(end)) {\r\n            result = end - start;\r\n        }\r\n        return result;\r\n    };\r\n    return DateTimeUtils;\r\n}());\r\nexport { DateTimeUtils };\r\n//# sourceMappingURL=Util.js.map","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\n/**\r\n * Type of the metric data measurement.\r\n */\r\nexport var DataPointType;\r\n(function (DataPointType) {\r\n    DataPointType[DataPointType[\"Measurement\"] = 0] = \"Measurement\";\r\n    DataPointType[DataPointType[\"Aggregation\"] = 1] = \"Aggregation\";\r\n})(DataPointType || (DataPointType = {}));\r\n//# sourceMappingURL=DataPointType.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\n/**\r\n     * Data struct to contain only C section with custom fields.\r\n     */\r\nvar Base = /** @class */ (function () {\r\n    function Base() {\r\n    }\r\n    return Base;\r\n}());\r\nexport { Base };\r\n//# sourceMappingURL=Base.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { Base } from './Base';\r\n/**\r\n * Data struct to contain both B and C sections.\r\n */\r\nvar Data = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Data, _super);\r\n    function Data() {\r\n        return _super.call(this) || this;\r\n    }\r\n    return Data;\r\n}(Base));\r\nexport { Data };\r\n//# sourceMappingURL=Data.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Envelope as AIEnvelope } from '../../Interfaces/Contracts/Generated/Envelope';\r\nimport { DataSanitizer } from './DataSanitizer';\r\nimport { FieldType } from '../../Enums';\r\nimport { Util } from '../../Util';\r\nvar Envelope = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Envelope, _super);\r\n    /**\r\n     * Constructs a new instance of telemetry data.\r\n     */\r\n    function Envelope(logger, data, name) {\r\n        var _this = _super.call(this) || this;\r\n        _this.name = DataSanitizer.sanitizeString(logger, name) || Util.NotSpecified;\r\n        _this.data = data;\r\n        _this.time = Util.toISOStringForIE8(new Date());\r\n        _this.aiDataContract = {\r\n            time: FieldType.Required,\r\n            iKey: FieldType.Required,\r\n            name: FieldType.Required,\r\n            sampleRate: function () {\r\n                return (_this.sampleRate == 100) ? FieldType.Hidden : FieldType.Required;\r\n            },\r\n            tags: FieldType.Required,\r\n            data: FieldType.Required\r\n        };\r\n        return _this;\r\n    }\r\n    return Envelope;\r\n}(AIEnvelope));\r\nexport { Envelope };\r\n//# sourceMappingURL=Envelope.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n/**\r\n * System variables for a telemetry item.\r\n */\r\nvar Envelope = /** @class */ (function () {\r\n    function Envelope() {\r\n        this.ver = 1;\r\n        this.sampleRate = 100.0;\r\n        this.tags = {};\r\n    }\r\n    return Envelope;\r\n}());\r\nexport { Envelope };\r\n//# sourceMappingURL=Envelope.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\n/**\r\n * The abstract common base of all domains.\r\n */\r\nvar Domain = /** @class */ (function () {\r\n    function Domain() {\r\n    }\r\n    return Domain;\r\n}());\r\nexport { Domain };\r\n//# sourceMappingURL=Domain.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { Domain } from './Domain';\r\n/**\r\n * Instances of Event represent structured event records that can be grouped and searched by their properties. Event data item also creates a metric of event count by name.\r\n */\r\nvar EventData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(EventData, _super);\r\n    function EventData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return EventData;\r\n}(Domain));\r\nexport { EventData };\r\n//# sourceMappingURL=EventData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { EventData } from '../Interfaces/Contracts/Generated/EventData';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { Util } from '../Util';\r\nvar Event = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Event, _super);\r\n    /**\r\n     * Constructs a new instance of the EventTelemetry object\r\n     */\r\n    function Event(logger, name, properties, measurements) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            name: FieldType.Required,\r\n            properties: FieldType.Default,\r\n            measurements: FieldType.Default\r\n        };\r\n        _this.name = DataSanitizer.sanitizeString(logger, name) || Util.NotSpecified;\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        _this.measurements = DataSanitizer.sanitizeMeasurements(logger, measurements);\r\n        return _this;\r\n    }\r\n    Event.envelopeType = \"Microsoft.ApplicationInsights.{0}.Event\";\r\n    Event.dataType = \"EventData\";\r\n    return Event;\r\n}(EventData));\r\nexport { Event };\r\n//# sourceMappingURL=Event.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\n/**\r\n * Stack frame information.\r\n */\r\nvar StackFrame = /** @class */ (function () {\r\n    function StackFrame() {\r\n    }\r\n    return StackFrame;\r\n}());\r\nexport { StackFrame };\r\n//# sourceMappingURL=StackFrame.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n/**\r\n * Exception details of the exception in a chain.\r\n */\r\nvar ExceptionDetails = /** @class */ (function () {\r\n    function ExceptionDetails() {\r\n        this.hasFullStack = true;\r\n        this.parsedStack = [];\r\n    }\r\n    return ExceptionDetails;\r\n}());\r\nexport { ExceptionDetails };\r\n//# sourceMappingURL=ExceptionDetails.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { StackFrame } from '../Interfaces/Contracts/Generated/StackFrame';\r\nimport { ExceptionData } from '../Interfaces/Contracts/Generated/ExceptionData';\r\nimport { ExceptionDetails } from '../Interfaces/Contracts/Generated/ExceptionDetails';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { Util } from '../Util';\r\nvar Exception = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Exception, _super);\r\n    /**\r\n    * Constructs a new isntance of the ExceptionTelemetry object\r\n    */\r\n    function Exception(logger, exception, properties, measurements, severityLevel) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            exceptions: FieldType.Required,\r\n            severityLevel: FieldType.Default,\r\n            properties: FieldType.Default,\r\n            measurements: FieldType.Default\r\n        };\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        _this.measurements = DataSanitizer.sanitizeMeasurements(logger, measurements);\r\n        _this.exceptions = [new _ExceptionDetails(logger, exception)];\r\n        if (severityLevel) {\r\n            _this.severityLevel = severityLevel;\r\n        }\r\n        return _this;\r\n    }\r\n    /**\r\n    * Creates a simple exception with 1 stack frame. Useful for manual constracting of exception.\r\n    */\r\n    Exception.CreateSimpleException = function (message, typeName, assembly, fileName, details, line) {\r\n        return {\r\n            exceptions: [\r\n                {\r\n                    hasFullStack: true,\r\n                    message: message,\r\n                    stack: details,\r\n                    typeName: typeName\r\n                }\r\n            ]\r\n        };\r\n    };\r\n    Exception.envelopeType = \"Microsoft.ApplicationInsights.{0}.Exception\";\r\n    Exception.dataType = \"ExceptionData\";\r\n    return Exception;\r\n}(ExceptionData));\r\nexport { Exception };\r\nvar _ExceptionDetails = /** @class */ (function (_super) {\r\n    tslib_1.__extends(_ExceptionDetails, _super);\r\n    function _ExceptionDetails(logger, exception) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            id: FieldType.Default,\r\n            outerId: FieldType.Default,\r\n            typeName: FieldType.Required,\r\n            message: FieldType.Required,\r\n            hasFullStack: FieldType.Default,\r\n            stack: FieldType.Default,\r\n            parsedStack: FieldType.Array\r\n        };\r\n        _this.typeName = DataSanitizer.sanitizeString(logger, exception.name) || Util.NotSpecified;\r\n        _this.message = DataSanitizer.sanitizeMessage(logger, exception.message) || Util.NotSpecified;\r\n        var stack = exception[\"stack\"];\r\n        _this.parsedStack = _this.parseStack(stack);\r\n        _this.stack = DataSanitizer.sanitizeException(logger, stack);\r\n        _this.hasFullStack = Util.isArray(_this.parsedStack) && _this.parsedStack.length > 0;\r\n        return _this;\r\n    }\r\n    _ExceptionDetails.prototype.parseStack = function (stack) {\r\n        var parsedStack = undefined;\r\n        if (typeof stack === \"string\") {\r\n            var frames = stack.split('\\n');\r\n            parsedStack = [];\r\n            var level = 0;\r\n            var totalSizeInBytes = 0;\r\n            for (var i = 0; i <= frames.length; i++) {\r\n                var frame = frames[i];\r\n                if (_StackFrame.regex.test(frame)) {\r\n                    var parsedFrame = new _StackFrame(frames[i], level++);\r\n                    totalSizeInBytes += parsedFrame.sizeInBytes;\r\n                    parsedStack.push(parsedFrame);\r\n                }\r\n            }\r\n            // DP Constraint - exception parsed stack must be < 32KB\r\n            // remove frames from the middle to meet the threshold\r\n            var exceptionParsedStackThreshold = 32 * 1024;\r\n            if (totalSizeInBytes > exceptionParsedStackThreshold) {\r\n                var left = 0;\r\n                var right = parsedStack.length - 1;\r\n                var size = 0;\r\n                var acceptedLeft = left;\r\n                var acceptedRight = right;\r\n                while (left < right) {\r\n                    // check size\r\n                    var lSize = parsedStack[left].sizeInBytes;\r\n                    var rSize = parsedStack[right].sizeInBytes;\r\n                    size += lSize + rSize;\r\n                    if (size > exceptionParsedStackThreshold) {\r\n                        // remove extra frames from the middle\r\n                        var howMany = acceptedRight - acceptedLeft + 1;\r\n                        parsedStack.splice(acceptedLeft, howMany);\r\n                        break;\r\n                    }\r\n                    // update pointers\r\n                    acceptedLeft = left;\r\n                    acceptedRight = right;\r\n                    left++;\r\n                    right--;\r\n                }\r\n            }\r\n        }\r\n        return parsedStack;\r\n    };\r\n    return _ExceptionDetails;\r\n}(ExceptionDetails));\r\nvar _StackFrame = /** @class */ (function (_super) {\r\n    tslib_1.__extends(_StackFrame, _super);\r\n    function _StackFrame(frame, level) {\r\n        var _this = _super.call(this) || this;\r\n        _this.sizeInBytes = 0;\r\n        _this.aiDataContract = {\r\n            level: FieldType.Required,\r\n            method: FieldType.Required,\r\n            assembly: FieldType.Default,\r\n            fileName: FieldType.Default,\r\n            line: FieldType.Default\r\n        };\r\n        _this.level = level;\r\n        _this.method = \"<no_method>\";\r\n        _this.assembly = Util.trim(frame);\r\n        var matches = frame.match(_StackFrame.regex);\r\n        if (matches && matches.length >= 5) {\r\n            _this.method = Util.trim(matches[2]) || _this.method;\r\n            _this.fileName = Util.trim(matches[4]);\r\n            _this.line = parseInt(matches[5]) || 0;\r\n        }\r\n        _this.sizeInBytes += _this.method.length;\r\n        _this.sizeInBytes += _this.fileName.length;\r\n        _this.sizeInBytes += _this.assembly.length;\r\n        // todo: these might need to be removed depending on how the back-end settles on their size calculation\r\n        _this.sizeInBytes += _StackFrame.baseSize;\r\n        _this.sizeInBytes += _this.level.toString().length;\r\n        _this.sizeInBytes += _this.line.toString().length;\r\n        return _this;\r\n    }\r\n    // regex to match stack frames from ie/chrome/ff\r\n    // methodName=$2, fileName=$4, lineNo=$5, column=$6\r\n    _StackFrame.regex = /^([\\s]+at)?(.*?)(\\@|\\s\\(|\\s)([^\\(\\@\\n]+):([0-9]+):([0-9]+)(\\)?)$/;\r\n    _StackFrame.baseSize = 58; //'{\"method\":\"\",\"level\":,\"assembly\":\"\",\"fileName\":\"\",\"line\":}'.length\r\n    return _StackFrame;\r\n}(StackFrame));\r\nexport { _StackFrame };\r\n//# sourceMappingURL=Exception.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Domain } from './Domain';\r\n/**\r\n * An instance of Exception represents a handled or unhandled exception that occurred during execution of the monitored application.\r\n */\r\nvar ExceptionData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ExceptionData, _super);\r\n    function ExceptionData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.exceptions = [];\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return ExceptionData;\r\n}(Domain));\r\nexport { ExceptionData };\r\n//# sourceMappingURL=ExceptionData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { Domain } from './Domain';\r\n/**\r\n * An instance of the Metric item is a list of measurements (single data points) and/or aggregations.\r\n */\r\nvar MetricData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(MetricData, _super);\r\n    function MetricData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.metrics = [];\r\n        _this.properties = {};\r\n        return _this;\r\n    }\r\n    return MetricData;\r\n}(Domain));\r\nexport { MetricData };\r\n//# sourceMappingURL=MetricData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { DataPointType } from './DataPointType';\r\n/**\r\n * Metric data single measurement.\r\n */\r\nvar DataPoint = /** @class */ (function () {\r\n    function DataPoint() {\r\n        this.kind = DataPointType.Measurement;\r\n    }\r\n    return DataPoint;\r\n}());\r\nexport { DataPoint };\r\n//# sourceMappingURL=DataPoint.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\n/**\r\n* Defines the level of severity for the event.\r\n*/\r\nexport var SeverityLevel;\r\n(function (SeverityLevel) {\r\n    SeverityLevel[SeverityLevel[\"Verbose\"] = 0] = \"Verbose\";\r\n    SeverityLevel[SeverityLevel[\"Information\"] = 1] = \"Information\";\r\n    SeverityLevel[SeverityLevel[\"Warning\"] = 2] = \"Warning\";\r\n    SeverityLevel[SeverityLevel[\"Error\"] = 3] = \"Error\";\r\n    SeverityLevel[SeverityLevel[\"Critical\"] = 4] = \"Critical\";\r\n})(SeverityLevel || (SeverityLevel = {}));\r\n//# sourceMappingURL=SeverityLevel.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { DataPoint as AIDataPoint } from '../../Interfaces/Contracts/Generated/DataPoint';\r\nimport { FieldType } from '../../Enums';\r\nvar DataPoint = /** @class */ (function (_super) {\r\n    tslib_1.__extends(DataPoint, _super);\r\n    function DataPoint() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * The data contract for serializing this object.\r\n         */\r\n        _this.aiDataContract = {\r\n            name: FieldType.Required,\r\n            kind: FieldType.Default,\r\n            value: FieldType.Required,\r\n            count: FieldType.Default,\r\n            min: FieldType.Default,\r\n            max: FieldType.Default,\r\n            stdDev: FieldType.Default\r\n        };\r\n        return _this;\r\n    }\r\n    return DataPoint;\r\n}(AIDataPoint));\r\nexport { DataPoint };\r\n//# sourceMappingURL=DataPoint.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { MetricData } from '../Interfaces/Contracts/Generated/MetricData';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { DataPoint } from './Common/DataPoint';\r\nimport { Util } from '../Util';\r\nvar Metric = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Metric, _super);\r\n    /**\r\n     * Constructs a new instance of the MetricTelemetry object\r\n     */\r\n    function Metric(logger, name, value, count, min, max, properties) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            metrics: FieldType.Required,\r\n            properties: FieldType.Default\r\n        };\r\n        var dataPoint = new DataPoint();\r\n        dataPoint.count = count > 0 ? count : undefined;\r\n        dataPoint.max = isNaN(max) || max === null ? undefined : max;\r\n        dataPoint.min = isNaN(min) || min === null ? undefined : min;\r\n        dataPoint.name = DataSanitizer.sanitizeString(logger, name) || Util.NotSpecified;\r\n        dataPoint.value = value;\r\n        _this.metrics = [dataPoint];\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        return _this;\r\n    }\r\n    Metric.envelopeType = \"Microsoft.ApplicationInsights.{0}.Metric\";\r\n    Metric.dataType = \"MetricData\";\r\n    return Metric;\r\n}(MetricData));\r\nexport { Metric };\r\n//# sourceMappingURL=Metric.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { EventData } from './EventData';\r\n/**\r\n * An instance of PageView represents a generic action on a page like a button click. It is also the base type for PageView.\r\n */\r\nvar PageViewData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PageViewData, _super);\r\n    function PageViewData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return PageViewData;\r\n}(EventData));\r\nexport { PageViewData };\r\n//# sourceMappingURL=PageViewData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { PageViewData } from '../Interfaces/Contracts/Generated/PageViewData';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { Util } from '../Util';\r\nvar PageView = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PageView, _super);\r\n    /**\r\n     * Constructs a new instance of the PageEventTelemetry object\r\n     */\r\n    function PageView(logger, name, url, durationMs, properties, measurements, id) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            name: FieldType.Default,\r\n            url: FieldType.Default,\r\n            duration: FieldType.Default,\r\n            properties: FieldType.Default,\r\n            measurements: FieldType.Default,\r\n            id: FieldType.Default\r\n        };\r\n        _this.id = DataSanitizer.sanitizeId(logger, id);\r\n        _this.url = DataSanitizer.sanitizeUrl(logger, url);\r\n        _this.name = DataSanitizer.sanitizeString(logger, name) || Util.NotSpecified;\r\n        if (!isNaN(durationMs)) {\r\n            _this.duration = Util.msToTimeSpan(durationMs);\r\n        }\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        _this.measurements = DataSanitizer.sanitizeMeasurements(logger, measurements);\r\n        return _this;\r\n    }\r\n    PageView.envelopeType = \"Microsoft.ApplicationInsights.{0}.Pageview\";\r\n    PageView.dataType = \"PageviewData\";\r\n    return PageView;\r\n}(PageViewData));\r\nexport { PageView };\r\n//# sourceMappingURL=PageView.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { Util } from '../Util';\r\nimport { AjaxHelper } from '../Util';\r\nimport { RemoteDependencyData as GeneratedRemoteDependencyData } from '../Interfaces/Contracts/Generated/RemoteDependencyData';\r\nvar RemoteDependencyData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RemoteDependencyData, _super);\r\n    /**\r\n     * Constructs a new instance of the RemoteDependencyData object\r\n     */\r\n    function RemoteDependencyData(logger, id, absoluteUrl, commandName, value, success, resultCode, method, requestAPI, properties, measurements) {\r\n        if (requestAPI === void 0) { requestAPI = \"Ajax\"; }\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            id: FieldType.Required,\r\n            ver: FieldType.Required,\r\n            name: FieldType.Default,\r\n            resultCode: FieldType.Default,\r\n            duration: FieldType.Default,\r\n            success: FieldType.Default,\r\n            data: FieldType.Default,\r\n            target: FieldType.Default,\r\n            type: FieldType.Default,\r\n            properties: FieldType.Default,\r\n            measurements: FieldType.Default,\r\n            kind: FieldType.Default,\r\n            value: FieldType.Default,\r\n            count: FieldType.Default,\r\n            min: FieldType.Default,\r\n            max: FieldType.Default,\r\n            stdDev: FieldType.Default,\r\n            dependencyKind: FieldType.Default,\r\n            dependencySource: FieldType.Default,\r\n            commandName: FieldType.Default,\r\n            dependencyTypeName: FieldType.Default,\r\n        };\r\n        _this.id = id;\r\n        _this.duration = Util.msToTimeSpan(value);\r\n        _this.success = success;\r\n        _this.resultCode = resultCode + \"\";\r\n        _this.type = DataSanitizer.sanitizeString(logger, requestAPI);\r\n        var dependencyFields = AjaxHelper.ParseDependencyPath(logger, absoluteUrl, method, commandName);\r\n        _this.data = DataSanitizer.sanitizeUrl(logger, commandName) || dependencyFields.data; // get a value from hosturl if commandName not available\r\n        _this.target = dependencyFields.target;\r\n        _this.name = dependencyFields.name;\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        _this.measurements = DataSanitizer.sanitizeMeasurements(logger, measurements);\r\n        return _this;\r\n    }\r\n    RemoteDependencyData.envelopeType = \"Microsoft.ApplicationInsights.{0}.RemoteDependency\";\r\n    RemoteDependencyData.dataType = \"RemoteDependencyData\";\r\n    return RemoteDependencyData;\r\n}(GeneratedRemoteDependencyData));\r\nexport { RemoteDependencyData };\r\n//# sourceMappingURL=RemoteDependencyData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { Domain } from './Domain';\r\n/**\r\n * An instance of Remote Dependency represents an interaction of the monitored component with a remote component/service like SQL or an HTTP endpoint.\r\n */\r\nvar RemoteDependencyData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RemoteDependencyData, _super);\r\n    function RemoteDependencyData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.success = true;\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return RemoteDependencyData;\r\n}(Domain));\r\nexport { RemoteDependencyData };\r\n//# sourceMappingURL=RemoteDependencyData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { MessageData } from '../Interfaces/Contracts/Generated/MessageData';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { Util } from '../Util';\r\nvar Trace = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Trace, _super);\r\n    /**\r\n     * Constructs a new instance of the TraceTelemetry object\r\n     */\r\n    function Trace(logger, message, severityLevel, properties) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            message: FieldType.Required,\r\n            severityLevel: FieldType.Default,\r\n            properties: FieldType.Default\r\n        };\r\n        message = message || Util.NotSpecified;\r\n        _this.message = DataSanitizer.sanitizeMessage(logger, message);\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        if (severityLevel) {\r\n            _this.severityLevel = severityLevel;\r\n        }\r\n        return _this;\r\n    }\r\n    Trace.envelopeType = \"Microsoft.ApplicationInsights.{0}.Message\";\r\n    Trace.dataType = \"MessageData\";\r\n    return Trace;\r\n}(MessageData));\r\nexport { Trace };\r\n//# sourceMappingURL=Trace.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { Domain } from './Domain';\r\n/**\r\n * Instances of Message represent printf-like trace statements that are text-searched. Log4Net, NLog and other text-based log file entries are translated into intances of this type. The message does not have measurements.\r\n */\r\nvar MessageData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(MessageData, _super);\r\n    function MessageData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.properties = {};\r\n        return _this;\r\n    }\r\n    return MessageData;\r\n}(Domain));\r\nexport { MessageData };\r\n//# sourceMappingURL=MessageData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { PageViewPerfData } from '../Interfaces/Contracts/Generated/PageViewPerfData';\r\nimport { FieldType } from '../Enums';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { Util } from '../Util';\r\nvar PageViewPerformance = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PageViewPerformance, _super);\r\n    /**\r\n     * Constructs a new instance of the PageEventTelemetry object\r\n     */\r\n    function PageViewPerformance(logger, name, url, unused, properties, measurements) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            name: FieldType.Default,\r\n            url: FieldType.Default,\r\n            duration: FieldType.Default,\r\n            perfTotal: FieldType.Default,\r\n            networkConnect: FieldType.Default,\r\n            sentRequest: FieldType.Default,\r\n            receivedResponse: FieldType.Default,\r\n            domProcessing: FieldType.Default,\r\n            properties: FieldType.Default,\r\n            measurements: FieldType.Default\r\n        };\r\n        _this.url = DataSanitizer.sanitizeUrl(logger, url);\r\n        _this.name = DataSanitizer.sanitizeString(logger, name) || Util.NotSpecified;\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        _this.measurements = DataSanitizer.sanitizeMeasurements(logger, measurements);\r\n        return _this;\r\n    }\r\n    PageViewPerformance.envelopeType = \"Microsoft.ApplicationInsights.{0}.PageviewPerformance\";\r\n    PageViewPerformance.dataType = \"PageviewPerformanceData\";\r\n    return PageViewPerformance;\r\n}(PageViewPerfData));\r\nexport { PageViewPerformance };\r\n//# sourceMappingURL=PageViewPerformance.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { PageViewData } from './PageViewData';\r\n/**\r\n * An instance of PageViewPerf represents: a page view with no performance data, a page view with performance data, or just the performance data of an earlier page request.\r\n */\r\nvar PageViewPerfData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PageViewPerfData, _super);\r\n    function PageViewPerfData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return PageViewPerfData;\r\n}(PageViewData));\r\nexport { PageViewPerfData };\r\n//# sourceMappingURL=PageViewPerfData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Data as AIData } from '../../Interfaces/Contracts/Generated/Data';\r\nimport { FieldType } from '../../Enums';\r\nvar Data = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Data, _super);\r\n    /**\r\n     * Constructs a new instance of telemetry data.\r\n     */\r\n    function Data(baseType, data) {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * The data contract for serializing this object.\r\n         */\r\n        _this.aiDataContract = {\r\n            baseType: FieldType.Required,\r\n            baseData: FieldType.Required\r\n        };\r\n        _this.baseType = baseType;\r\n        _this.baseData = data;\r\n        return _this;\r\n    }\r\n    return Data;\r\n}(AIData));\r\nexport { Data };\r\n//# sourceMappingURL=Data.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { CoreUtils } from '@microsoft/applicationinsights-core-js';\r\nvar ConfigurationManager = /** @class */ (function () {\r\n    function ConfigurationManager() {\r\n    }\r\n    ConfigurationManager.getConfig = function (config, field, identifier, defaultValue) {\r\n        if (defaultValue === void 0) { defaultValue = false; }\r\n        var configValue;\r\n        if (identifier && config.extensionConfig && config.extensionConfig[identifier] && !CoreUtils.isNullOrUndefined(config.extensionConfig[identifier][field])) {\r\n            configValue = config.extensionConfig[identifier][field];\r\n        }\r\n        else {\r\n            configValue = config[field];\r\n        }\r\n        return !CoreUtils.isNullOrUndefined(configValue) ? configValue : defaultValue;\r\n    };\r\n    return ConfigurationManager;\r\n}());\r\nexport { ConfigurationManager };\r\n//# sourceMappingURL=IConfig.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\nvar ContextTagKeys = /** @class */ (function () {\r\n    function ContextTagKeys() {\r\n        this.applicationVersion = \"ai.application.ver\";\r\n        this.applicationBuild = \"ai.application.build\";\r\n        this.applicationTypeId = \"ai.application.typeId\";\r\n        this.applicationId = \"ai.application.applicationId\";\r\n        this.applicationLayer = \"ai.application.layer\";\r\n        this.deviceId = \"ai.device.id\";\r\n        this.deviceIp = \"ai.device.ip\";\r\n        this.deviceLanguage = \"ai.device.language\";\r\n        this.deviceLocale = \"ai.device.locale\";\r\n        this.deviceModel = \"ai.device.model\";\r\n        this.deviceFriendlyName = \"ai.device.friendlyName\";\r\n        this.deviceNetwork = \"ai.device.network\";\r\n        this.deviceNetworkName = \"ai.device.networkName\";\r\n        this.deviceOEMName = \"ai.device.oemName\";\r\n        this.deviceOS = \"ai.device.os\";\r\n        this.deviceOSVersion = \"ai.device.osVersion\";\r\n        this.deviceRoleInstance = \"ai.device.roleInstance\";\r\n        this.deviceRoleName = \"ai.device.roleName\";\r\n        this.deviceScreenResolution = \"ai.device.screenResolution\";\r\n        this.deviceType = \"ai.device.type\";\r\n        this.deviceMachineName = \"ai.device.machineName\";\r\n        this.deviceVMName = \"ai.device.vmName\";\r\n        this.deviceBrowser = \"ai.device.browser\";\r\n        this.deviceBrowserVersion = \"ai.device.browserVersion\";\r\n        this.locationIp = \"ai.location.ip\";\r\n        this.locationCountry = \"ai.location.country\";\r\n        this.locationProvince = \"ai.location.province\";\r\n        this.locationCity = \"ai.location.city\";\r\n        this.operationId = \"ai.operation.id\";\r\n        this.operationName = \"ai.operation.name\";\r\n        this.operationParentId = \"ai.operation.parentId\";\r\n        this.operationRootId = \"ai.operation.rootId\";\r\n        this.operationSyntheticSource = \"ai.operation.syntheticSource\";\r\n        this.operationCorrelationVector = \"ai.operation.correlationVector\";\r\n        this.sessionId = \"ai.session.id\";\r\n        this.sessionIsFirst = \"ai.session.isFirst\";\r\n        this.sessionIsNew = \"ai.session.isNew\";\r\n        this.userAccountAcquisitionDate = \"ai.user.accountAcquisitionDate\";\r\n        this.userAccountId = \"ai.user.accountId\";\r\n        this.userAgent = \"ai.user.userAgent\";\r\n        this.userId = \"ai.user.id\";\r\n        this.userStoreRegion = \"ai.user.storeRegion\";\r\n        this.userAuthUserId = \"ai.user.authUserId\";\r\n        this.userAnonymousUserAcquisitionDate = \"ai.user.anonUserAcquisitionDate\";\r\n        this.userAuthenticatedUserAcquisitionDate = \"ai.user.authUserAcquisitionDate\";\r\n        this.cloudName = \"ai.cloud.name\";\r\n        this.cloudRole = \"ai.cloud.role\";\r\n        this.cloudRoleVer = \"ai.cloud.roleVer\";\r\n        this.cloudRoleInstance = \"ai.cloud.roleInstance\";\r\n        this.cloudEnvironment = \"ai.cloud.environment\";\r\n        this.cloudLocation = \"ai.cloud.location\";\r\n        this.cloudDeploymentUnit = \"ai.cloud.deploymentUnit\";\r\n        this.internalNodeName = \"ai.internal.nodeName\";\r\n        this.internalSdkVersion = \"ai.internal.sdkVersion\";\r\n        this.internalAgentVersion = \"ai.internal.agentVersion\";\r\n    }\r\n    return ContextTagKeys;\r\n}());\r\nexport { ContextTagKeys };\r\n//# sourceMappingURL=ContextTagKeys.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { Util } from \"./Util\";\r\nimport { DataSanitizer } from \"./Telemetry/Common/DataSanitizer\";\r\nimport { CoreUtils } from \"@microsoft/applicationinsights-core-js\";\r\nvar TelemetryItemCreator = /** @class */ (function () {\r\n    function TelemetryItemCreator() {\r\n    }\r\n    /**\r\n     * Create a telemetry item that the 1DS channel understands\r\n     * @param item domain specific properties; part B\r\n     * @param baseType telemetry item type. ie PageViewData\r\n     * @param envelopeName name of the envelope. ie Microsoft.ApplicationInsights.<instrumentation key>.PageView\r\n     * @param customProperties user defined custom properties; part C\r\n     * @param systemProperties system properties that are added to the context; part A\r\n     * @returns ITelemetryItem that is sent to channel\r\n     */\r\n    TelemetryItemCreator.create = function (item, baseType, envelopeName, logger, customProperties, systemProperties) {\r\n        envelopeName = DataSanitizer.sanitizeString(logger, envelopeName) || Util.NotSpecified;\r\n        if (CoreUtils.isNullOrUndefined(item) ||\r\n            CoreUtils.isNullOrUndefined(baseType) ||\r\n            CoreUtils.isNullOrUndefined(envelopeName)) {\r\n            throw Error(\"Input doesn't contain all required fields\");\r\n        }\r\n        var telemetryItem = {\r\n            name: envelopeName,\r\n            time: new Date().toISOString(),\r\n            iKey: \"\",\r\n            ext: systemProperties ? systemProperties : {},\r\n            tags: [],\r\n            data: {},\r\n            baseType: baseType,\r\n            baseData: item // Part B\r\n        };\r\n        // Part C\r\n        if (!CoreUtils.isNullOrUndefined(customProperties)) {\r\n            for (var prop in customProperties) {\r\n                if (customProperties.hasOwnProperty(prop)) {\r\n                    telemetryItem.data[prop] = customProperties[prop];\r\n                }\r\n            }\r\n        }\r\n        return telemetryItem;\r\n    };\r\n    return TelemetryItemCreator;\r\n}());\r\nexport { TelemetryItemCreator };\r\n//# sourceMappingURL=TelemetryItemCreator.js.map","import { ContextTagKeys } from \"./Contracts/Generated/ContextTagKeys\";\r\nvar Extensions = /** @class */ (function () {\r\n    function Extensions() {\r\n    }\r\n    Extensions.UserExt = \"user\";\r\n    Extensions.DeviceExt = \"device\";\r\n    Extensions.TraceExt = \"trace\";\r\n    Extensions.WebExt = \"web\";\r\n    Extensions.AppExt = \"app\";\r\n    Extensions.OSExt = \"os\";\r\n    Extensions.SessionExt = \"ses\";\r\n    Extensions.SDKExt = \"sdk\";\r\n    return Extensions;\r\n}());\r\nexport { Extensions };\r\nvar SDKExtensionKeys = /** @class */ (function () {\r\n    function SDKExtensionKeys() {\r\n    }\r\n    SDKExtensionKeys.libVer = 'libVer';\r\n    return SDKExtensionKeys;\r\n}());\r\nexport { SDKExtensionKeys };\r\nexport var CtxTagKeys = new ContextTagKeys();\r\n//# sourceMappingURL=PartAExtensions.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nexport { Util, CorrelationIdHelper, UrlHelper, DateTimeUtils } from './Util';\r\nexport { FieldType } from './Enums';\r\nexport { RequestHeaders } from './RequestResponseHeaders';\r\nexport { DisabledPropertyName, ProcessLegacy, SampleRate, HttpMethod } from './Constants';\r\nexport { Data as AIData } from './Interfaces/Contracts/Generated/Data';\r\nexport { Base as AIBase } from './Interfaces/Contracts/Generated/Base';\r\nexport { Envelope } from './Telemetry/Common/Envelope';\r\nexport { Event } from './Telemetry/Event';\r\nexport { Exception } from './Telemetry/Exception';\r\nexport { Metric } from './Telemetry/Metric';\r\nexport { PageView } from './Telemetry/PageView';\r\nexport { PageViewData } from './Interfaces/Contracts/Generated/PageViewData';\r\nexport { RemoteDependencyData } from './Telemetry/RemoteDependencyData';\r\nexport { Trace } from './Telemetry/Trace';\r\nexport { PageViewPerformance } from './Telemetry/PageViewPerformance';\r\nexport { Data } from './Telemetry/Common/Data';\r\nexport { SeverityLevel } from './Interfaces/Contracts/Generated/SeverityLevel';\r\nexport { ConfigurationManager } from './Interfaces/IConfig';\r\nexport { ContextTagKeys } from './Interfaces/Contracts/Generated/ContextTagKeys';\r\nexport { DataSanitizer } from './Telemetry/Common/DataSanitizer';\r\nexport { TelemetryItemCreator } from './TelemetryItemCreator';\r\nexport { CtxTagKeys, Extensions, SDKExtensionKeys } from './Interfaces/PartAExtensions';\r\nexport var PropertiesPluginIdentifier = \"AppInsightsPropertiesPlugin\";\r\n//# sourceMappingURL=applicationinsights-common.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nexport var DisabledPropertyName = \"Microsoft_ApplicationInsights_BypassAjaxInstrumentation\";\r\nexport var SampleRate = \"sampleRate\";\r\nexport var ProcessLegacy = \"ProcessLegacy\";\r\nexport var HttpMethod = \"http.method\";\r\n//# sourceMappingURL=Constants.js.map"],"names":["StorageType","FieldType","LoggingSeverity","CoreUtils","isNullOrUndefined","input","newGuid","replace","GuidRegex","c","r","Math","random","toString","_InternalMessageId","ChannelControllerPriority","ChannelController","this","identifier","priority","prototype","processTelemetry","item","channelQueue","forEach","queues","length","Object","defineProperty","get","enumerable","configurable","initialize","config","core","extensions","_this","Array","channels","invalidChannelIdentifier_1","undefined","queue","sort","a","b","queueItem","Error","ChannelValidationMessage","i","setNextPlugin","push","arr","plugin","RequestHeaders","requestContextHeader","requestContextTargetKey","requestContextAppIdFormat","requestIdHeader","sdkContextHeader","sdkContextHeaderAppIdRequest","requestContextHeaderLowerCase","DataSanitizer","sanitizeKeyAndAddUniqueness","logger","key","map","origLength","field","sanitizeKey","uniqueField","substring","MAX_NAME_LENGTH","padNumber","name","trim","throwInternal","WARNING","sanitizeString","value","maxLength","MAX_STRING_LENGTH","sanitizeUrl","url","sanitizeInput","MAX_URL_LENGTH","sanitizeMessage","message","MAX_MESSAGE_LENGTH","sanitizeException","exception","MAX_EXCEPTION_LENGTH","sanitizeProperties","properties","tempProps","prop","JSON","stringify","e","MAX_PROPERTY_LENGTH","sanitizeMeasurements","measurements","tempMeasurements","measure","sanitizeId","id","MAX_ID_LENGTH","_msgId","data","num","s","substr","str","Util","disableStorage","_canUseLocalStorage","_canUseSessionStorage","_getLocalStorageObject","canUseLocalStorage","_getVerifiedStorageObject","LocalStorage","storageType","fail","uid","storage","window","Date","localStorage","sessionStorage","setItem","getItem","removeItem","isInternalApplicationInsightsEndpoint","endpointUrl","_internalEndpoints","indexOf","toLowerCase","getStorage","getExceptionName","dump","setStorage","removeStorage","_getSessionStorageObject","canUseSessionStorage","SessionStorage","getSessionStorageKeys","keys","getSessionStorage","setSessionStorage","removeSessionStorage","disableCookies","_canUseCookies","canUseCookies","document","cookie","setCookie","domain","domainAttrib","secureAttrib","location","protocol","stringToBoolOrDefault","defaultValue","getCookie","cookieName","cookies","split","deleteCookie","newId","result","charAt","floor","isArray","obj","call","isError","isDate","toISOStringForIE8","date","toISOString","pad","String","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","toFixed","slice","getIEVersion","userAgentStr","myNav","navigator","userAgent","parseInt","msToTimeSpan","totalms","isNaN","ms","round","sec","min","hour","days","isCrossOriginError","lineNumber","columnNumber","error","object","objectTypeDump","propertyValueDump","stack","addEventHandler","eventName","callback","verbEventName","addEventListener","IsBeaconApiSupported","sendBeacon","NotSpecified","UrlHelper","parseUrl","htmlAnchorElement","createElement","href","getAbsoluteUrl","getPathName","pathname","getCompleteUrl","method","absoluteUrl","toUpperCase","CorrelationIdHelper","canIncludeCorrelationHeader","requestUrl","currentHost","disableCorrelationHeaders","requestHost","host","enableCorsCorrelation","excludedDomains","correlationHeaderExcludedDomains","RegExp","test","getCorrelationContext","responseHeader","correlationId","getCorrelationContextValue","correlationIdPrefix","keyValues","keyValue","AjaxHelper","ParseDependencyPath","commandName","target","parsedUrl","pathName","DateTimeUtils","Now","getTime","performance","now","timing","navigationStart","GetDuration","start","end","extendStatics","d","setPrototypeOf","__proto__","p","hasOwnProperty","__extends","__","constructor","create","DataPointType","Base","Data","_super","tslib_1.__extends","Envelope","time","aiDataContract","Required","iKey","sampleRate","Hidden","tags","ver","Domain","EventData","Event","Default","envelopeType","dataType","StackFrame","ExceptionDetails","hasFullStack","parsedStack","Exception","severityLevel","exceptions","_ExceptionDetails","CreateSimpleException","typeName","assembly","fileName","details","line","ExceptionData","outerId","parseStack","frames","level","totalSizeInBytes","frame","_StackFrame","regex","parsedFrame","sizeInBytes","left","right","size","acceptedLeft","acceptedRight","howMany","splice","matches","match","baseSize","MetricData","metrics","SeverityLevel","DataPoint","apply","arguments","kind","count","max","stdDev","Measurement","Metric","dataPoint","PageViewData","PageView","durationMs","duration","RemoteDependencyData","success","resultCode","requestAPI","type","dependencyKind","dependencySource","dependencyTypeName","dependencyFields","Trace","MessageData","PageViewPerformance","unused","perfTotal","networkConnect","sentRequest","receivedResponse","domProcessing","PageViewPerfData","baseType","baseData","AIData","ConfigurationManager","getConfig","configValue","extensionConfig","ContextTagKeys","applicationVersion","applicationBuild","applicationTypeId","applicationId","applicationLayer","deviceId","deviceIp","deviceLanguage","deviceLocale","deviceModel","deviceFriendlyName","deviceNetwork","deviceNetworkName","deviceOEMName","deviceOS","deviceOSVersion","deviceRoleInstance","deviceRoleName","deviceScreenResolution","deviceType","deviceMachineName","deviceVMName","deviceBrowser","deviceBrowserVersion","locationIp","locationCountry","locationProvince","locationCity","operationId","operationName","operationParentId","operationRootId","operationSyntheticSource","operationCorrelationVector","sessionId","sessionIsFirst","sessionIsNew","userAccountAcquisitionDate","userAccountId","userId","userStoreRegion","userAuthUserId","userAnonymousUserAcquisitionDate","userAuthenticatedUserAcquisitionDate","cloudName","cloudRole","cloudRoleVer","cloudRoleInstance","cloudEnvironment","cloudLocation","cloudDeploymentUnit","internalNodeName","internalSdkVersion","internalAgentVersion","TelemetryItemCreator","envelopeName","customProperties","systemProperties","telemetryItem","ext","Extensions","UserExt","DeviceExt","TraceExt","WebExt","AppExt","OSExt","SessionExt","SDKExt","SDKExtensionKeys","libVer","CtxTagKeys"],"mappings":"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"}