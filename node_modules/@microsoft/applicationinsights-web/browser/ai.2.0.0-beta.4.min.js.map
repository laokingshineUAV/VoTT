{"version":3,"file":"ai.2.0.0-beta.4.min.js","sources":["../../shared/AppInsightsCommon/dist-esm/Enums.js","../../shared/AppInsightsCore/dist-esm/JavaScriptSDK.Enums/EventsDiscardedReason.js","../../shared/AppInsightsCore/dist-esm/JavaScriptSDK.Enums/LoggingEnums.js","../../shared/AppInsightsCore/dist-esm/JavaScriptSDK/CoreUtils.js","../../shared/AppInsightsCore/dist-esm/JavaScriptSDK/NotificationManager.js","../../shared/AppInsightsCore/dist-esm/JavaScriptSDK/DiagnosticLogger.js","../../shared/AppInsightsCore/dist-esm/JavaScriptSDK/AppInsightsCore.js","../../shared/AppInsightsCommon/dist-esm/RequestResponseHeaders.js","../../shared/AppInsightsCommon/dist-esm/Telemetry/Common/DataSanitizer.js","../../shared/AppInsightsCommon/dist-esm/Util.js","../../shared/AppInsightsCommon/dist-esm/Constants.js","../../common/temp/node_modules/tslib/tslib.es6.js","../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/DataPointType.js","../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/Data.js","../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/Base.js","../../shared/AppInsightsCommon/dist-esm/Telemetry/Common/Envelope.js","../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/Envelope.js","../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/Domain.js","../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/EventData.js","../../shared/AppInsightsCommon/dist-esm/Telemetry/Event.js","../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/StackFrame.js","../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/ExceptionDetails.js","../../shared/AppInsightsCommon/dist-esm/Telemetry/Exception.js","../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/ExceptionData.js","../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/MetricData.js","../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/DataPoint.js","../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/SeverityLevel.js","../../shared/AppInsightsCommon/dist-esm/Telemetry/Common/DataPoint.js","../../shared/AppInsightsCommon/dist-esm/Telemetry/Metric.js","../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/PageViewData.js","../../shared/AppInsightsCommon/dist-esm/Telemetry/PageView.js","../../shared/AppInsightsCommon/dist-esm/Telemetry/RemoteDependencyData.js","../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/RemoteDependencyData.js","../../shared/AppInsightsCommon/dist-esm/Telemetry/Trace.js","../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/MessageData.js","../../shared/AppInsightsCommon/dist-esm/Telemetry/PageViewPerformance.js","../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/PageViewPerfData.js","../../shared/AppInsightsCommon/dist-esm/Telemetry/Common/Data.js","../../shared/AppInsightsCommon/dist-esm/Interfaces/IConfig.js","../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/ContextTagKeys.js","../../shared/AppInsightsCommon/dist-esm/TelemetryItemCreator.js","../../shared/AppInsightsCommon/dist-esm/Interfaces/PartAExtensions.js","../../shared/AppInsightsCommon/dist-esm/applicationinsights-common.js","../dist-esm/ApplicationInsightsDeprecated.js","../../extensions/applicationinsights-analytics-js/dist-esm/JavaScriptSDK/Telemetry/PageViewManager.js","../../extensions/applicationinsights-analytics-js/dist-esm/JavaScriptSDK/Telemetry/PageViewPerformanceManager.js","../../extensions/applicationinsights-analytics-js/dist-esm/JavaScriptSDK/ApplicationInsights.js","../../channels/applicationinsights-channel-js/dist-esm/SendBuffer.js","../../channels/applicationinsights-channel-js/dist-esm/EnvelopeCreator.js","../../channels/applicationinsights-channel-js/dist-esm/TelemetryValidation/EventValidator.js","../../channels/applicationinsights-channel-js/dist-esm/TelemetryValidation/TraceValidator.js","../../channels/applicationinsights-channel-js/dist-esm/TelemetryValidation/ExceptionValidator.js","../../channels/applicationinsights-channel-js/dist-esm/TelemetryValidation/MetricValidator.js","../../channels/applicationinsights-channel-js/dist-esm/TelemetryValidation/PageViewPerformanceValidator.js","../../channels/applicationinsights-channel-js/dist-esm/TelemetryValidation/PageViewValidator.js","../../channels/applicationinsights-channel-js/dist-esm/TelemetryValidation/RemoteDepdencyValidator.js","../../channels/applicationinsights-channel-js/dist-esm/Serializer.js","../../channels/applicationinsights-channel-js/dist-esm/Offline.js","../../channels/applicationinsights-channel-js/dist-esm/Sender.js","../../extensions/applicationinsights-properties-js/dist-esm/Context/Session.js","../../extensions/applicationinsights-properties-js/dist-esm/Context/Application.js","../../extensions/applicationinsights-properties-js/dist-esm/Context/Device.js","../../extensions/applicationinsights-properties-js/dist-esm/Context/Internal.js","../../extensions/applicationinsights-properties-js/dist-esm/HashCodeScoreGenerator.js","../../extensions/applicationinsights-properties-js/dist-esm/SamplingScoreGenerator.js","../../extensions/applicationinsights-properties-js/dist-esm/Context/Sample.js","../../extensions/applicationinsights-properties-js/dist-esm/Context/User.js","../../extensions/applicationinsights-properties-js/dist-esm/Context/Location.js","../../extensions/applicationinsights-properties-js/dist-esm/Context/TelemetryTrace.js","../../extensions/applicationinsights-properties-js/dist-esm/TelemetryContext.js","../../extensions/applicationinsights-properties-js/dist-esm/PropertiesPlugin.js","../../extensions/applicationinsights-dependencies-js/dist-esm/ajaxRecord.js","../../extensions/applicationinsights-dependencies-js/dist-esm/ajaxUtils.js","../../extensions/applicationinsights-dependencies-js/dist-esm/ajax.js","../dist-esm/Initialization.js","../dist-esm/ApplicationInsightsContainer.js","../dist-esm/Init.js"],"sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n/**\r\n* Type of storage to differentiate between local storage and session storage\r\n*/\r\nexport var StorageType;\r\n(function (StorageType) {\r\n    StorageType[StorageType[\"LocalStorage\"] = 0] = \"LocalStorage\";\r\n    StorageType[StorageType[\"SessionStorage\"] = 1] = \"SessionStorage\";\r\n})(StorageType || (StorageType = {}));\r\n/**\r\n * Enum is used in aiDataContract to describe how fields are serialized.\r\n * For instance: (Fieldtype.Required | FieldType.Array) will mark the field as required and indicate it's an array\r\n */\r\nexport var FieldType;\r\n(function (FieldType) {\r\n    FieldType[FieldType[\"Default\"] = 0] = \"Default\";\r\n    FieldType[FieldType[\"Required\"] = 1] = \"Required\";\r\n    FieldType[FieldType[\"Array\"] = 2] = \"Array\";\r\n    FieldType[FieldType[\"Hidden\"] = 4] = \"Hidden\";\r\n})(FieldType || (FieldType = {}));\r\n;\r\n//# sourceMappingURL=Enums.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n/**\r\n * The EventsDiscardedReason enumeration contains a set of values that specify the reason for discarding an event.\r\n */\r\nexport var EventsDiscardedReason = {\r\n    /**\r\n     * Unknown.\r\n     */\r\n    Unknown: 0,\r\n    /**\r\n     * Status set to non-retryable.\r\n     */\r\n    NonRetryableStatus: 1,\r\n    /**\r\n     * The event is invalid.\r\n     */\r\n    InvalidEvent: 2,\r\n    /**\r\n     * The size of the event is too large.\r\n     */\r\n    SizeLimitExceeded: 3,\r\n    /**\r\n     * The server is not accepting events from this instrumentation key.\r\n     */\r\n    KillSwitch: 4,\r\n    /**\r\n     * The event queue is full.\r\n     */\r\n    QueueFull: 5,\r\n};\r\n//# sourceMappingURL=EventsDiscardedReason.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nexport var LoggingSeverity;\r\n(function (LoggingSeverity) {\r\n    /**\r\n     * Error will be sent as internal telemetry\r\n     */\r\n    LoggingSeverity[LoggingSeverity[\"CRITICAL\"] = 1] = \"CRITICAL\";\r\n    /**\r\n     * Error will NOT be sent as internal telemetry, and will only be shown in browser console\r\n     */\r\n    LoggingSeverity[LoggingSeverity[\"WARNING\"] = 2] = \"WARNING\";\r\n})(LoggingSeverity || (LoggingSeverity = {}));\r\n/**\r\n * Internal message ID. Please create a new one for every conceptually different message. Please keep alphabetically ordered\r\n */\r\nexport var _InternalMessageId = {\r\n    // Non user actionable\r\n    BrowserDoesNotSupportLocalStorage: 0,\r\n    BrowserCannotReadLocalStorage: 1,\r\n    BrowserCannotReadSessionStorage: 2,\r\n    BrowserCannotWriteLocalStorage: 3,\r\n    BrowserCannotWriteSessionStorage: 4,\r\n    BrowserFailedRemovalFromLocalStorage: 5,\r\n    BrowserFailedRemovalFromSessionStorage: 6,\r\n    CannotSendEmptyTelemetry: 7,\r\n    ClientPerformanceMathError: 8,\r\n    ErrorParsingAISessionCookie: 9,\r\n    ErrorPVCalc: 10,\r\n    ExceptionWhileLoggingError: 11,\r\n    FailedAddingTelemetryToBuffer: 12,\r\n    FailedMonitorAjaxAbort: 13,\r\n    FailedMonitorAjaxDur: 14,\r\n    FailedMonitorAjaxOpen: 15,\r\n    FailedMonitorAjaxRSC: 16,\r\n    FailedMonitorAjaxSend: 17,\r\n    FailedMonitorAjaxGetCorrelationHeader: 18,\r\n    FailedToAddHandlerForOnBeforeUnload: 19,\r\n    FailedToSendQueuedTelemetry: 20,\r\n    FailedToReportDataLoss: 21,\r\n    FlushFailed: 22,\r\n    MessageLimitPerPVExceeded: 23,\r\n    MissingRequiredFieldSpecification: 24,\r\n    NavigationTimingNotSupported: 25,\r\n    OnError: 26,\r\n    SessionRenewalDateIsZero: 27,\r\n    SenderNotInitialized: 28,\r\n    StartTrackEventFailed: 29,\r\n    StopTrackEventFailed: 30,\r\n    StartTrackFailed: 31,\r\n    StopTrackFailed: 32,\r\n    TelemetrySampledAndNotSent: 33,\r\n    TrackEventFailed: 34,\r\n    TrackExceptionFailed: 35,\r\n    TrackMetricFailed: 36,\r\n    TrackPVFailed: 37,\r\n    TrackPVFailedCalc: 38,\r\n    TrackTraceFailed: 39,\r\n    TransmissionFailed: 40,\r\n    FailedToSetStorageBuffer: 41,\r\n    FailedToRestoreStorageBuffer: 42,\r\n    InvalidBackendResponse: 43,\r\n    FailedToFixDepricatedValues: 44,\r\n    InvalidDurationValue: 45,\r\n    TelemetryEnvelopeInvalid: 46,\r\n    CreateEnvelopeError: 47,\r\n    // User actionable\r\n    CannotSerializeObject: 48,\r\n    CannotSerializeObjectNonSerializable: 49,\r\n    CircularReferenceDetected: 50,\r\n    ClearAuthContextFailed: 51,\r\n    ExceptionTruncated: 52,\r\n    IllegalCharsInName: 53,\r\n    ItemNotInArray: 54,\r\n    MaxAjaxPerPVExceeded: 55,\r\n    MessageTruncated: 56,\r\n    NameTooLong: 57,\r\n    SampleRateOutOfRange: 58,\r\n    SetAuthContextFailed: 59,\r\n    SetAuthContextFailedAccountName: 60,\r\n    StringValueTooLong: 61,\r\n    StartCalledMoreThanOnce: 62,\r\n    StopCalledWithoutStart: 63,\r\n    TelemetryInitializerFailed: 64,\r\n    TrackArgumentsNotSpecified: 65,\r\n    UrlTooLong: 66,\r\n    SessionStorageBufferFull: 67,\r\n    CannotAccessCookie: 68,\r\n    IdTooLong: 69,\r\n};\r\n//# sourceMappingURL=LoggingEnums.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\"use strict\";\r\nvar CoreUtils = /** @class */ (function () {\r\n    function CoreUtils() {\r\n    }\r\n    CoreUtils.isNullOrUndefined = function (input) {\r\n        return input === null || input === undefined;\r\n    };\r\n    /**\r\n* Creates a new GUID.\r\n* @return {string} A GUID.\r\n*/\r\n    CoreUtils.newGuid = function () {\r\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(GuidRegex, function (c) {\r\n            // tslint:disable-next-line:insecure-random\r\n            var r = (Math.random() * 16 | 0), v = (c === 'x' ? r : r & 0x3 | 0x8);\r\n            return v.toString(16);\r\n        });\r\n    };\r\n    return CoreUtils;\r\n}());\r\nexport { CoreUtils };\r\nvar GuidRegex = /[xy]/g;\r\n//# sourceMappingURL=CoreUtils.js.map","/**\r\n * Class to manage sending notifications to all the listeners.\r\n */\r\nvar NotificationManager = /** @class */ (function () {\r\n    function NotificationManager() {\r\n        this.listeners = [];\r\n    }\r\n    /**\r\n     * Adds a notification listener.\r\n     * @param {INotificationListener} listener - The notification listener to be added.\r\n     */\r\n    NotificationManager.prototype.addNotificationListener = function (listener) {\r\n        this.listeners.push(listener);\r\n    };\r\n    /**\r\n     * Removes all instances of the listener.\r\n     * @param {INotificationListener} listener - AWTNotificationListener to remove.\r\n     */\r\n    NotificationManager.prototype.removeNotificationListener = function (listener) {\r\n        var index = this.listeners.indexOf(listener);\r\n        while (index > -1) {\r\n            this.listeners.splice(index, 1);\r\n            index = this.listeners.indexOf(listener);\r\n        }\r\n    };\r\n    /**\r\n     * Notification for events sent.\r\n     * @param {ITelemetryItem[]} events - The array of events that have been sent.\r\n     */\r\n    NotificationManager.prototype.eventsSent = function (events) {\r\n        var _this = this;\r\n        var _loop_1 = function (i) {\r\n            if (this_1.listeners[i].eventsSent) {\r\n                setTimeout(function () { return _this.listeners[i].eventsSent(events); }, 0);\r\n            }\r\n        };\r\n        var this_1 = this;\r\n        for (var i = 0; i < this.listeners.length; ++i) {\r\n            _loop_1(i);\r\n        }\r\n    };\r\n    /**\r\n     * Notification for events being discarded.\r\n     * @param {ITelemetryItem[]} events - The array of events that have been discarded by the SDK.\r\n     * @param {number} reason           - The reason for which the SDK discarded the events. The EventsDiscardedReason\r\n     * constant should be used to check the different values.\r\n     */\r\n    NotificationManager.prototype.eventsDiscarded = function (events, reason) {\r\n        var _this = this;\r\n        var _loop_2 = function (i) {\r\n            if (this_2.listeners[i].eventsDiscarded) {\r\n                setTimeout(function () { return _this.listeners[i].eventsDiscarded(events, reason); }, 0);\r\n            }\r\n        };\r\n        var this_2 = this;\r\n        for (var i = 0; i < this.listeners.length; ++i) {\r\n            _loop_2(i);\r\n        }\r\n    };\r\n    return NotificationManager;\r\n}());\r\nexport { NotificationManager };\r\n//# sourceMappingURL=NotificationManager.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\"use strict\";\r\nimport { _InternalMessageId, LoggingSeverity } from \"../JavaScriptSDK.Enums/LoggingEnums\";\r\nimport { CoreUtils } from \"./CoreUtils\";\r\nvar _InternalLogMessage = /** @class */ (function () {\r\n    function _InternalLogMessage(msgId, msg, isUserAct, properties) {\r\n        if (isUserAct === void 0) { isUserAct = false; }\r\n        this.messageId = msgId;\r\n        this.message =\r\n            (isUserAct ? _InternalLogMessage.AiUserActionablePrefix : _InternalLogMessage.AiNonUserActionablePrefix) +\r\n                msgId;\r\n        var diagnosticText = (msg ? \" message:\" + _InternalLogMessage.sanitizeDiagnosticText(msg) : \"\") +\r\n            (properties ? \" props:\" + _InternalLogMessage.sanitizeDiagnosticText(JSON.stringify(properties)) : \"\");\r\n        this.message += diagnosticText;\r\n    }\r\n    _InternalLogMessage.sanitizeDiagnosticText = function (text) {\r\n        return \"\\\"\" + text.replace(/\\\"/g, \"\") + \"\\\"\";\r\n    };\r\n    _InternalLogMessage.dataType = \"MessageData\";\r\n    /**\r\n     * For user non actionable traces use AI Internal prefix.\r\n     */\r\n    _InternalLogMessage.AiNonUserActionablePrefix = \"AI (Internal): \";\r\n    /**\r\n     * Prefix of the traces in portal.\r\n     */\r\n    _InternalLogMessage.AiUserActionablePrefix = \"AI: \";\r\n    return _InternalLogMessage;\r\n}());\r\nexport { _InternalLogMessage };\r\nvar DiagnosticLogger = /** @class */ (function () {\r\n    function DiagnosticLogger(config) {\r\n        /**\r\n        *  Session storage key for the prefix for the key indicating message type already logged\r\n        */\r\n        this.AIInternalMessagePrefix = \"AITR_\";\r\n        /**\r\n         * When this is true the SDK will throw exceptions to aid in debugging.\r\n         */\r\n        this.enableDebugExceptions = function () { return false; };\r\n        /**\r\n         * 0: OFF\r\n         * 1: CRITICAL (default)\r\n         * 2: >= WARNING\r\n         */\r\n        this.consoleLoggingLevel = function () { return 1; };\r\n        /**\r\n         * 0: OFF (default)\r\n         * 1: CRITICAL\r\n         * 2: >= WARNING\r\n         */\r\n        this.telemetryLoggingLevel = function () { return 0; };\r\n        /**\r\n         * The maximum number of internal messages allowed to be sent per page view\r\n         */\r\n        this.maxInternalMessageLimit = function () { return 25; };\r\n        /**\r\n         * The internal logging queue\r\n         */\r\n        this.queue = [];\r\n        /**\r\n         * Count of internal messages sent\r\n         */\r\n        this._messageCount = 0;\r\n        /**\r\n         * Holds information about what message types were already logged to console or sent to server.\r\n         */\r\n        this._messageLogged = {};\r\n        if (CoreUtils.isNullOrUndefined(config)) {\r\n            // TODO: Use default config\r\n            // config = AppInsightsCore.defaultConfig;\r\n            // For now, use defaults specified in DiagnosticLogger members;\r\n            return;\r\n        }\r\n        if (!CoreUtils.isNullOrUndefined(config.loggingLevelConsole)) {\r\n            this.consoleLoggingLevel = function () { return config.loggingLevelConsole; };\r\n        }\r\n        if (!CoreUtils.isNullOrUndefined(config.loggingLevelTelemetry)) {\r\n            this.telemetryLoggingLevel = function () { return config.loggingLevelTelemetry; };\r\n        }\r\n        if (!CoreUtils.isNullOrUndefined(config.maxMessageLimit)) {\r\n            this.maxInternalMessageLimit = function () { return config.maxMessageLimit; };\r\n        }\r\n        if (!CoreUtils.isNullOrUndefined(config.enableDebugExceptions)) {\r\n            this.enableDebugExceptions = function () { return config.enableDebugExceptions; };\r\n        }\r\n    }\r\n    /**\r\n     * This method will throw exceptions in debug mode or attempt to log the error as a console warning.\r\n     * @param severity {LoggingSeverity} - The severity of the log message\r\n     * @param message {_InternalLogMessage} - The log message.\r\n     */\r\n    DiagnosticLogger.prototype.throwInternal = function (severity, msgId, msg, properties, isUserAct) {\r\n        if (isUserAct === void 0) { isUserAct = false; }\r\n        var message = new _InternalLogMessage(msgId, msg, isUserAct, properties);\r\n        if (this.enableDebugExceptions()) {\r\n            throw message;\r\n        }\r\n        else {\r\n            if (typeof (message) !== \"undefined\" && !!message) {\r\n                if (typeof (message.message) !== \"undefined\") {\r\n                    if (isUserAct) {\r\n                        // check if this message type was already logged to console for this page view and if so, don't log it again\r\n                        var messageKey = +message.messageId;\r\n                        if (!this._messageLogged[messageKey] || this.consoleLoggingLevel() >= LoggingSeverity.WARNING) {\r\n                            this.warnToConsole(message.message);\r\n                            this._messageLogged[messageKey] = true;\r\n                        }\r\n                    }\r\n                    else {\r\n                        // don't log internal AI traces in the console, unless the verbose logging is enabled\r\n                        if (this.consoleLoggingLevel() >= LoggingSeverity.WARNING) {\r\n                            this.warnToConsole(message.message);\r\n                        }\r\n                    }\r\n                    this.logInternalMessage(severity, message);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * This will write a warning to the console if possible\r\n     * @param message {string} - The warning message\r\n     */\r\n    DiagnosticLogger.prototype.warnToConsole = function (message) {\r\n        if (typeof console !== \"undefined\" && !!console) {\r\n            if (typeof console.warn === \"function\") {\r\n                console.warn(message);\r\n            }\r\n            else if (typeof console.log === \"function\") {\r\n                console.log(message);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Resets the internal message count\r\n     */\r\n    DiagnosticLogger.prototype.resetInternalMessageCount = function () {\r\n        this._messageCount = 0;\r\n        this._messageLogged = {};\r\n    };\r\n    /**\r\n     * Logs a message to the internal queue.\r\n     * @param severity {LoggingSeverity} - The severity of the log message\r\n     * @param message {_InternalLogMessage} - The message to log.\r\n     */\r\n    DiagnosticLogger.prototype.logInternalMessage = function (severity, message) {\r\n        if (this._areInternalMessagesThrottled()) {\r\n            return;\r\n        }\r\n        // check if this message type was already logged for this session and if so, don't log it again\r\n        var logMessage = true;\r\n        var messageKey = this.AIInternalMessagePrefix + message.messageId;\r\n        // if the session storage is not available, limit to only one message type per page view\r\n        if (this._messageLogged[messageKey]) {\r\n            logMessage = false;\r\n        }\r\n        else {\r\n            this._messageLogged[messageKey] = true;\r\n        }\r\n        if (logMessage) {\r\n            // Push the event in the internal queue\r\n            if (severity <= this.telemetryLoggingLevel()) {\r\n                this.queue.push(message);\r\n                this._messageCount++;\r\n            }\r\n            // When throttle limit reached, send a special event\r\n            if (this._messageCount == this.maxInternalMessageLimit()) {\r\n                var throttleLimitMessage = \"Internal events throttle limit per PageView reached for this app.\";\r\n                var throttleMessage = new _InternalLogMessage(_InternalMessageId.MessageLimitPerPVExceeded, throttleLimitMessage, false);\r\n                this.queue.push(throttleMessage);\r\n                this.warnToConsole(throttleLimitMessage);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Indicates whether the internal events are throttled\r\n     */\r\n    DiagnosticLogger.prototype._areInternalMessagesThrottled = function () {\r\n        return this._messageCount >= this.maxInternalMessageLimit();\r\n    };\r\n    return DiagnosticLogger;\r\n}());\r\nexport { DiagnosticLogger };\r\n//# sourceMappingURL=DiagnosticLogger.js.map","import { EventsDiscardedReason } from \"../JavaScriptSDK.Enums/EventsDiscardedReason\";\r\nimport { CoreUtils } from \"./CoreUtils\";\r\nimport { NotificationManager } from \"./NotificationManager\";\r\nimport { _InternalLogMessage, DiagnosticLogger } from \"./DiagnosticLogger\";\r\n\"use strict\";\r\nvar AppInsightsCore = /** @class */ (function () {\r\n    function AppInsightsCore() {\r\n        this._isInitialized = false;\r\n        this._extensions = new Array();\r\n        this._channelController = new ChannelController();\r\n    }\r\n    AppInsightsCore.prototype.initialize = function (config, extensions) {\r\n        var _this = this;\r\n        // Make sure core is only initialized once\r\n        if (this._isInitialized) {\r\n            throw Error(\"Core should not be initialized more than once\");\r\n        }\r\n        if (!config || CoreUtils.isNullOrUndefined(config.instrumentationKey)) {\r\n            throw Error(\"Please provide instrumentation key\");\r\n        }\r\n        this.config = config;\r\n        this._notificationManager = new NotificationManager();\r\n        this.config.extensions = CoreUtils.isNullOrUndefined(this.config.extensions) ? [] : this.config.extensions;\r\n        // add notification to the extensions in the config so other plugins can access it\r\n        this.config.extensionConfig = CoreUtils.isNullOrUndefined(this.config.extensionConfig) ? {} : this.config.extensionConfig;\r\n        this.config.extensionConfig.NotificationManager = this._notificationManager;\r\n        this.logger = new DiagnosticLogger(config);\r\n        // Initial validation\r\n        extensions.forEach(function (extension) {\r\n            if (CoreUtils.isNullOrUndefined(extension.initialize)) {\r\n                throw Error(validationError);\r\n            }\r\n        });\r\n        if (this.config.extensions.length > 0) {\r\n            var isValid_1 = true;\r\n            var containsChannels_1 = false;\r\n            this.config.extensions.forEach(function (item) {\r\n                if (CoreUtils.isNullOrUndefined(item)) {\r\n                    isValid_1 = false;\r\n                }\r\n                if (item.priority > ChannelControllerPriority) {\r\n                    containsChannels_1 = true;\r\n                }\r\n            });\r\n            if (!isValid_1) {\r\n                throw Error(validationError);\r\n            }\r\n            if (containsChannels_1) {\r\n                throw Error(validationErrorInExt);\r\n            }\r\n        }\r\n        // Initial validation complete\r\n        // Concat all available extensions before sorting by priority\r\n        (_a = this._extensions).push.apply(_a, [this._channelController].concat(extensions, this.config.extensions));\r\n        this._extensions = this._extensions.sort(function (a, b) {\r\n            var extA = a;\r\n            var extB = b;\r\n            var typeExtA = typeof extA.processTelemetry;\r\n            var typeExtB = typeof extB.processTelemetry;\r\n            if (typeExtA === 'function' && typeExtB === 'function') {\r\n                return extA.priority - extB.priority;\r\n            }\r\n            if (typeExtA === 'function' && typeExtB !== 'function') {\r\n                // keep non telemetryplugin specific extensions at start\r\n                return 1;\r\n            }\r\n            if (typeExtA !== 'function' && typeExtB === 'function') {\r\n                return -1;\r\n            }\r\n        });\r\n        // sort complete\r\n        // Check if any two extensions have the same priority, then warn to console\r\n        var priority = {};\r\n        this._extensions.forEach(function (ext) {\r\n            var t = ext;\r\n            if (t && t.priority) {\r\n                if (!CoreUtils.isNullOrUndefined(priority[t.priority])) {\r\n                    _this.logger.warnToConsole(\"Two extensions have same priority\" + priority[t.priority] + \", \" + t.identifier);\r\n                }\r\n                else {\r\n                    priority[t.priority] = t.identifier; // set a value\r\n                }\r\n            }\r\n        });\r\n        var c = -1;\r\n        // Set next plugin for all until channel controller\r\n        for (var idx = 0; idx < this._extensions.length - 1; idx++) {\r\n            var curr = (this._extensions[idx]);\r\n            if (curr && typeof curr.processTelemetry !== 'function') {\r\n                // these are initialized only, allowing an entry point for extensions to be initialized when SDK initializes\r\n                continue;\r\n            }\r\n            if (curr.priority === ChannelControllerPriority) {\r\n                c = idx + 1;\r\n                break; // channel controller will set remaining pipeline\r\n            }\r\n            this._extensions[idx].setNextPlugin(this._extensions[idx + 1]); // set next plugin\r\n        }\r\n        // initialize channel controller first, this will initialize all channel plugins\r\n        this._channelController.initialize(this.config, this, this._extensions);\r\n        // initialize remaining regular plugins\r\n        this._extensions.forEach(function (ext) {\r\n            var e = ext;\r\n            if (e && e.priority < ChannelControllerPriority) {\r\n                ext.initialize(_this.config, _this, _this._extensions); // initialize\r\n            }\r\n        });\r\n        // Remove sender channels from main list\r\n        if (c < this._extensions.length) {\r\n            this._extensions.splice(c);\r\n        }\r\n        if (this.getTransmissionControls().length === 0) {\r\n            throw new Error(\"No channels available\");\r\n        }\r\n        this._isInitialized = true;\r\n        var _a;\r\n    };\r\n    AppInsightsCore.prototype.getTransmissionControls = function () {\r\n        return this._channelController.ChannelControls;\r\n    };\r\n    AppInsightsCore.prototype.track = function (telemetryItem) {\r\n        if (telemetryItem === null) {\r\n            this._notifiyInvalidEvent(telemetryItem);\r\n            // throw error\r\n            throw Error(\"Invalid telemetry item\");\r\n        }\r\n        if (telemetryItem.baseData && !telemetryItem.baseType) {\r\n            this._notifiyInvalidEvent(telemetryItem);\r\n            throw Error(\"Provide data.baseType for data.baseData\");\r\n        }\r\n        if (!telemetryItem.baseType) {\r\n            // Hard coded from Common::Event.ts::Event.dataType\r\n            telemetryItem.baseType = \"EventData\";\r\n        }\r\n        if (!telemetryItem.iKey) {\r\n            // setup default iKey if not passed in\r\n            telemetryItem.iKey = this.config.instrumentationKey;\r\n        }\r\n        if (!telemetryItem.time) {\r\n            // add default timestamp if not passed in\r\n            telemetryItem.time = new Date().toISOString();\r\n        }\r\n        if (CoreUtils.isNullOrUndefined(telemetryItem.ver)) {\r\n            // CommonSchema 4.0\r\n            telemetryItem.ver = \"4.0\";\r\n        }\r\n        // do basic validation before sending it through the pipeline\r\n        this._validateTelmetryItem(telemetryItem);\r\n        this._updateSdkVersion(telemetryItem);\r\n        // invoke any common telemetry processors before sending through pipeline\r\n        var i = 0;\r\n        while (i < this._extensions.length) {\r\n            if (this._extensions[i].processTelemetry) {\r\n                this._extensions[i].processTelemetry(telemetryItem); // pass on to first extension that can support processing\r\n                break;\r\n            }\r\n            i++;\r\n        }\r\n    };\r\n    /**\r\n     * Adds a notification listener. The SDK calls methods on the listener when an appropriate notification is raised.\r\n     * The added plugins must raise notifications. If the plugins do not implement the notifications, then no methods will be\r\n     * called.\r\n     * @param {INotificationListener} listener - An INotificationListener object.\r\n     */\r\n    AppInsightsCore.prototype.addNotificationListener = function (listener) {\r\n        this._notificationManager.addNotificationListener(listener);\r\n    };\r\n    /**\r\n     * Removes all instances of the listener.\r\n     * @param {INotificationListener} listener - INotificationListener to remove.\r\n     */\r\n    AppInsightsCore.prototype.removeNotificationListener = function (listener) {\r\n        this._notificationManager.removeNotificationListener(listener);\r\n    };\r\n    /**\r\n     * Periodically check logger.queue for\r\n     */\r\n    AppInsightsCore.prototype.pollInternalLogs = function () {\r\n        var _this = this;\r\n        var interval = this.config.diagnosticLogInterval;\r\n        if (!(interval > 0)) {\r\n            interval = 10000;\r\n        }\r\n        return setInterval(function () {\r\n            var queue = _this.logger.queue;\r\n            queue.forEach(function (logMessage) {\r\n                var item = {\r\n                    name: \"InternalMessageId: \" + logMessage.messageId,\r\n                    iKey: _this.config.instrumentationKey,\r\n                    time: new Date().toISOString(),\r\n                    baseType: _InternalLogMessage.dataType,\r\n                    baseData: { message: logMessage.message }\r\n                };\r\n                _this.track(item);\r\n            });\r\n            queue.length = 0;\r\n        }, interval);\r\n    };\r\n    AppInsightsCore.prototype._validateTelmetryItem = function (telemetryItem) {\r\n        if (CoreUtils.isNullOrUndefined(telemetryItem.name)) {\r\n            this._notifiyInvalidEvent(telemetryItem);\r\n            throw Error(\"telemetry name required\");\r\n        }\r\n        if (CoreUtils.isNullOrUndefined(telemetryItem.time)) {\r\n            this._notifiyInvalidEvent(telemetryItem);\r\n            throw Error(\"telemetry timestamp required\");\r\n        }\r\n        if (CoreUtils.isNullOrUndefined(telemetryItem.iKey)) {\r\n            this._notifiyInvalidEvent(telemetryItem);\r\n            throw Error(\"telemetry instrumentationKey required\");\r\n        }\r\n    };\r\n    AppInsightsCore.prototype._updateSdkVersion = function (telemetryItem) {\r\n        if (!telemetryItem.ext) {\r\n            telemetryItem.ext = {};\r\n        }\r\n        if (!telemetryItem.ext.sdk) {\r\n            telemetryItem.ext.sdk = {};\r\n        }\r\n        var version = \"\";\r\n        for (var i = 0; i < this._extensions.length; i++) {\r\n            var ext = this._extensions[i];\r\n            if (ext.identifier && ext.version) {\r\n                var str = ext.identifier + \":\" + ext.version + \";\";\r\n                version = version.concat(str);\r\n            }\r\n        }\r\n        if (version != \"\") {\r\n            telemetryItem.ext.sdk['libVer'] = version;\r\n        }\r\n    };\r\n    AppInsightsCore.prototype._notifiyInvalidEvent = function (telemetryItem) {\r\n        this._notificationManager.eventsDiscarded([telemetryItem], EventsDiscardedReason.InvalidEvent);\r\n    };\r\n    return AppInsightsCore;\r\n}());\r\nexport { AppInsightsCore };\r\nvar ChannelController = /** @class */ (function () {\r\n    function ChannelController() {\r\n        this.identifier = \"ChannelControllerPlugin\";\r\n        this.priority = ChannelControllerPriority; // in reserved range 100 to 200\r\n    }\r\n    ChannelController.prototype.processTelemetry = function (item) {\r\n        this.channelQueue.forEach(function (queues) {\r\n            // pass on to first item in queue\r\n            if (queues.length > 0) {\r\n                queues[0].processTelemetry(item);\r\n            }\r\n        });\r\n    };\r\n    Object.defineProperty(ChannelController.prototype, \"ChannelControls\", {\r\n        get: function () {\r\n            return this.channelQueue;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ChannelController.prototype.initialize = function (config, core, extensions) {\r\n        var _this = this;\r\n        this.channelQueue = new Array();\r\n        if (config.channels) {\r\n            var invalidChannelIdentifier_1 = undefined;\r\n            config.channels.forEach(function (queue) {\r\n                if (queue && queue.length > 0) {\r\n                    queue = queue.sort(function (a, b) {\r\n                        return a.priority - b.priority;\r\n                    });\r\n                    // Initialize each plugin\r\n                    queue.forEach(function (queueItem) {\r\n                        if (queueItem.priority < ChannelControllerPriority) {\r\n                            invalidChannelIdentifier_1 = queueItem.identifier;\r\n                        }\r\n                        queueItem.initialize(config, core, extensions);\r\n                    });\r\n                    if (invalidChannelIdentifier_1) {\r\n                        throw Error(ChannelValidationMessage + invalidChannelIdentifier_1);\r\n                    }\r\n                    for (var i = 1; i < queue.length; i++) {\r\n                        queue[i - 1].setNextPlugin(queue[i]); // setup processing chain\r\n                    }\r\n                    _this.channelQueue.push(queue);\r\n                }\r\n            });\r\n        }\r\n        var arr = new Array();\r\n        for (var i = 0; i < extensions.length; i++) {\r\n            var plugin = extensions[i];\r\n            if (plugin.priority > ChannelControllerPriority) {\r\n                arr.push(plugin);\r\n            }\r\n        }\r\n        if (arr.length > 0) {\r\n            // sort if not sorted\r\n            arr = arr.sort(function (a, b) {\r\n                return a.priority - b.priority;\r\n            });\r\n            // Initialize each plugin\r\n            arr.forEach(function (queueItem) { return queueItem.initialize(config, core, extensions); });\r\n            // setup next plugin\r\n            for (var i = 1; i < arr.length; i++) {\r\n                arr[i - 1].setNextPlugin(arr[i]);\r\n            }\r\n            this.channelQueue.push(arr);\r\n        }\r\n    };\r\n    return ChannelController;\r\n}());\r\nvar validationError = \"Extensions must provide callback to initialize\";\r\nvar validationErrorInExt = \"Channels must be provided through config.channels only\";\r\nvar ChannelControllerPriority = 500;\r\nvar ChannelValidationMessage = \"Channel has invalid priority\";\r\n//# sourceMappingURL=AppInsightsCore.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nvar RequestHeaders = /** @class */ (function () {\r\n    function RequestHeaders() {\r\n    }\r\n    /**\r\n     * Request-Context header\r\n     */\r\n    RequestHeaders.requestContextHeader = \"Request-Context\";\r\n    /**\r\n     * Target instrumentation header that is added to the response and retrieved by the\r\n     * calling application when processing incoming responses.\r\n     */\r\n    RequestHeaders.requestContextTargetKey = \"appId\";\r\n    /**\r\n     * Request-Context appId format\r\n     */\r\n    RequestHeaders.requestContextAppIdFormat = \"appId=cid-v1:\";\r\n    /**\r\n     * Request-Id header\r\n     */\r\n    RequestHeaders.requestIdHeader = \"Request-Id\";\r\n    /**\r\n     * Sdk-Context header\r\n     * If this header passed with appId in content then appId will be returned back by the backend.\r\n     */\r\n    RequestHeaders.sdkContextHeader = \"Sdk-Context\";\r\n    /**\r\n     * String to pass in header for requesting appId back from the backend.\r\n     */\r\n    RequestHeaders.sdkContextHeaderAppIdRequest = \"appId\";\r\n    RequestHeaders.requestContextHeaderLowerCase = \"request-context\";\r\n    return RequestHeaders;\r\n}());\r\nexport { RequestHeaders };\r\n//# sourceMappingURL=RequestResponseHeaders.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { LoggingSeverity, _InternalMessageId } from '@microsoft/applicationinsights-core-js';\r\nvar DataSanitizer = /** @class */ (function () {\r\n    function DataSanitizer() {\r\n    }\r\n    DataSanitizer.sanitizeKeyAndAddUniqueness = function (logger, key, map) {\r\n        var origLength = key.length;\r\n        var field = DataSanitizer.sanitizeKey(logger, key);\r\n        // validation truncated the length.  We need to add uniqueness\r\n        if (field.length !== origLength) {\r\n            var i = 0;\r\n            var uniqueField = field;\r\n            while (map[uniqueField] !== undefined) {\r\n                i++;\r\n                uniqueField = field.substring(0, DataSanitizer.MAX_NAME_LENGTH - 3) + DataSanitizer.padNumber(i);\r\n            }\r\n            field = uniqueField;\r\n        }\r\n        return field;\r\n    };\r\n    DataSanitizer.sanitizeKey = function (logger, name) {\r\n        if (name) {\r\n            // Remove any leading or trailing whitepace\r\n            name = DataSanitizer.trim(name.toString());\r\n            // truncate the string to 150 chars\r\n            if (name.length > DataSanitizer.MAX_NAME_LENGTH) {\r\n                name = name.substring(0, DataSanitizer.MAX_NAME_LENGTH);\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.NameTooLong, \"name is too long.  It has been truncated to \" + DataSanitizer.MAX_NAME_LENGTH + \" characters.\", { name: name }, true);\r\n            }\r\n        }\r\n        return name;\r\n    };\r\n    DataSanitizer.sanitizeString = function (logger, value, maxLength) {\r\n        if (maxLength === void 0) { maxLength = DataSanitizer.MAX_STRING_LENGTH; }\r\n        if (value) {\r\n            maxLength = maxLength ? maxLength : DataSanitizer.MAX_STRING_LENGTH; // in case default parameters dont work\r\n            value = DataSanitizer.trim(value);\r\n            if (value.toString().length > maxLength) {\r\n                value = value.toString().substring(0, maxLength);\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.StringValueTooLong, \"string value is too long. It has been truncated to \" + maxLength + \" characters.\", { value: value }, true);\r\n            }\r\n        }\r\n        return value;\r\n    };\r\n    DataSanitizer.sanitizeUrl = function (logger, url) {\r\n        return DataSanitizer.sanitizeInput(logger, url, DataSanitizer.MAX_URL_LENGTH, _InternalMessageId.UrlTooLong);\r\n    };\r\n    DataSanitizer.sanitizeMessage = function (logger, message) {\r\n        if (message) {\r\n            if (message.length > DataSanitizer.MAX_MESSAGE_LENGTH) {\r\n                message = message.substring(0, DataSanitizer.MAX_MESSAGE_LENGTH);\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.MessageTruncated, \"message is too long, it has been truncated to \" + DataSanitizer.MAX_MESSAGE_LENGTH + \" characters.\", { message: message }, true);\r\n            }\r\n        }\r\n        return message;\r\n    };\r\n    DataSanitizer.sanitizeException = function (logger, exception) {\r\n        if (exception) {\r\n            if (exception.length > DataSanitizer.MAX_EXCEPTION_LENGTH) {\r\n                exception = exception.substring(0, DataSanitizer.MAX_EXCEPTION_LENGTH);\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.ExceptionTruncated, \"exception is too long, it has been truncated to \" + DataSanitizer.MAX_EXCEPTION_LENGTH + \" characters.\", { exception: exception }, true);\r\n            }\r\n        }\r\n        return exception;\r\n    };\r\n    DataSanitizer.sanitizeProperties = function (logger, properties) {\r\n        if (properties) {\r\n            var tempProps = {};\r\n            for (var prop in properties) {\r\n                var value = properties[prop];\r\n                if (typeof value === \"object\" && typeof JSON !== \"undefined\") {\r\n                    // Stringify any part C properties\r\n                    try {\r\n                        value = JSON.stringify(value);\r\n                    }\r\n                    catch (e) {\r\n                        logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.CannotSerializeObjectNonSerializable, \"custom property is not valid\", { exception: e }, true);\r\n                    }\r\n                }\r\n                value = DataSanitizer.sanitizeString(logger, value, DataSanitizer.MAX_PROPERTY_LENGTH);\r\n                prop = DataSanitizer.sanitizeKeyAndAddUniqueness(logger, prop, tempProps);\r\n                tempProps[prop] = value;\r\n            }\r\n            properties = tempProps;\r\n        }\r\n        return properties;\r\n    };\r\n    DataSanitizer.sanitizeMeasurements = function (logger, measurements) {\r\n        if (measurements) {\r\n            var tempMeasurements = {};\r\n            for (var measure in measurements) {\r\n                var value = measurements[measure];\r\n                measure = DataSanitizer.sanitizeKeyAndAddUniqueness(logger, measure, tempMeasurements);\r\n                tempMeasurements[measure] = value;\r\n            }\r\n            measurements = tempMeasurements;\r\n        }\r\n        return measurements;\r\n    };\r\n    DataSanitizer.sanitizeId = function (logger, id) {\r\n        return id ? DataSanitizer.sanitizeInput(logger, id, DataSanitizer.MAX_ID_LENGTH, _InternalMessageId.IdTooLong).toString() : id;\r\n    };\r\n    DataSanitizer.sanitizeInput = function (logger, input, maxLength, _msgId) {\r\n        if (input) {\r\n            input = DataSanitizer.trim(input);\r\n            if (input.length > maxLength) {\r\n                input = input.substring(0, maxLength);\r\n                logger.throwInternal(LoggingSeverity.WARNING, _msgId, \"input is too long, it has been truncated to \" + maxLength + \" characters.\", { data: input }, true);\r\n            }\r\n        }\r\n        return input;\r\n    };\r\n    DataSanitizer.padNumber = function (num) {\r\n        var s = \"00\" + num;\r\n        return s.substr(s.length - 3);\r\n    };\r\n    /**\r\n     * helper method to trim strings (IE8 does not implement String.prototype.trim)\r\n     */\r\n    DataSanitizer.trim = function (str) {\r\n        if (typeof str !== \"string\")\r\n            return str;\r\n        return str.replace(/^\\s+|\\s+$/g, \"\");\r\n    };\r\n    /**\r\n    * Max length allowed for custom names.\r\n    */\r\n    DataSanitizer.MAX_NAME_LENGTH = 150;\r\n    /**\r\n     * Max length allowed for Id field in page views.\r\n     */\r\n    DataSanitizer.MAX_ID_LENGTH = 128;\r\n    /**\r\n     * Max length allowed for custom values.\r\n     */\r\n    DataSanitizer.MAX_PROPERTY_LENGTH = 8192;\r\n    /**\r\n     * Max length allowed for names\r\n     */\r\n    DataSanitizer.MAX_STRING_LENGTH = 1024;\r\n    /**\r\n     * Max length allowed for url.\r\n     */\r\n    DataSanitizer.MAX_URL_LENGTH = 2048;\r\n    /**\r\n     * Max length allowed for messages.\r\n     */\r\n    DataSanitizer.MAX_MESSAGE_LENGTH = 32768;\r\n    /**\r\n     * Max length allowed for exceptions.\r\n     */\r\n    DataSanitizer.MAX_EXCEPTION_LENGTH = 32768;\r\n    return DataSanitizer;\r\n}());\r\nexport { DataSanitizer };\r\n//# sourceMappingURL=DataSanitizer.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { StorageType } from \"./Enums\";\r\nimport { CoreUtils, _InternalMessageId, LoggingSeverity } from \"@microsoft/applicationinsights-core-js\";\r\nimport { RequestHeaders } from \"./RequestResponseHeaders\";\r\nimport { DataSanitizer } from \"./Telemetry/Common/DataSanitizer\";\r\nvar Util = /** @class */ (function () {\r\n    function Util() {\r\n    }\r\n    /*\r\n     * Force the SDK not to use local and session storage\r\n    */\r\n    Util.disableStorage = function () {\r\n        Util._canUseLocalStorage = false;\r\n        Util._canUseSessionStorage = false;\r\n    };\r\n    /**\r\n     * Gets the localStorage object if available\r\n     * @return {Storage} - Returns the storage object if available else returns null\r\n     */\r\n    Util._getLocalStorageObject = function () {\r\n        if (Util.canUseLocalStorage()) {\r\n            return Util._getVerifiedStorageObject(StorageType.LocalStorage);\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Tests storage object (localStorage or sessionStorage) to verify that it is usable\r\n     * More details here: https://mathiasbynens.be/notes/localstorage-pattern\r\n     * @param storageType Type of storage\r\n     * @return {Storage} Returns storage object verified that it is usable\r\n     */\r\n    Util._getVerifiedStorageObject = function (storageType) {\r\n        var storage = null;\r\n        var fail;\r\n        var uid;\r\n        try {\r\n            if (typeof window === 'undefined') {\r\n                return null;\r\n            }\r\n            uid = new Date;\r\n            storage = storageType === StorageType.LocalStorage ? window.localStorage : window.sessionStorage;\r\n            storage.setItem(uid, uid);\r\n            fail = storage.getItem(uid) != uid;\r\n            storage.removeItem(uid);\r\n            if (fail) {\r\n                storage = null;\r\n            }\r\n        }\r\n        catch (exception) {\r\n            storage = null;\r\n        }\r\n        return storage;\r\n    };\r\n    /**\r\n     *  Checks if endpoint URL is application insights internal injestion service URL.\r\n     *\r\n     *  @param endpointUrl Endpoint URL to check.\r\n     *  @returns {boolean} True if if endpoint URL is application insights internal injestion service URL.\r\n     */\r\n    Util.isInternalApplicationInsightsEndpoint = function (endpointUrl) {\r\n        return Util._internalEndpoints.indexOf(endpointUrl.toLowerCase()) !== -1;\r\n    };\r\n    /**\r\n     *  Check if the browser supports local storage.\r\n     *\r\n     *  @returns {boolean} True if local storage is supported.\r\n     */\r\n    Util.canUseLocalStorage = function () {\r\n        if (Util._canUseLocalStorage === undefined) {\r\n            Util._canUseLocalStorage = !!Util._getVerifiedStorageObject(StorageType.LocalStorage);\r\n        }\r\n        return Util._canUseLocalStorage;\r\n    };\r\n    /**\r\n     *  Get an object from the browser's local storage\r\n     *\r\n     *  @param {string} name - the name of the object to get from storage\r\n     *  @returns {string} The contents of the storage object with the given name. Null if storage is not supported.\r\n     */\r\n    Util.getStorage = function (logger, name) {\r\n        var storage = Util._getLocalStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                return storage.getItem(name);\r\n            }\r\n            catch (e) {\r\n                Util._canUseLocalStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserCannotReadLocalStorage, \"Browser failed read of local storage. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     *  Set the contents of an object in the browser's local storage\r\n     *\r\n     *  @param {string} name - the name of the object to set in storage\r\n     *  @param {string} data - the contents of the object to set in storage\r\n     *  @returns {boolean} True if the storage object could be written.\r\n     */\r\n    Util.setStorage = function (logger, name, data) {\r\n        var storage = Util._getLocalStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                storage.setItem(name, data);\r\n                return true;\r\n            }\r\n            catch (e) {\r\n                Util._canUseLocalStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserCannotWriteLocalStorage, \"Browser failed write to local storage. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     *  Remove an object from the browser's local storage\r\n     *\r\n     *  @param {string} name - the name of the object to remove from storage\r\n     *  @returns {boolean} True if the storage object could be removed.\r\n     */\r\n    Util.removeStorage = function (logger, name) {\r\n        var storage = Util._getLocalStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                storage.removeItem(name);\r\n                return true;\r\n            }\r\n            catch (e) {\r\n                Util._canUseLocalStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserFailedRemovalFromLocalStorage, \"Browser failed removal of local storage item. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * Gets the sessionStorage object if available\r\n     * @return {Storage} - Returns the storage object if available else returns null\r\n     */\r\n    Util._getSessionStorageObject = function () {\r\n        if (Util.canUseSessionStorage()) {\r\n            return Util._getVerifiedStorageObject(StorageType.SessionStorage);\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     *  Check if the browser supports session storage.\r\n     *\r\n     *  @returns {boolean} True if session storage is supported.\r\n     */\r\n    Util.canUseSessionStorage = function () {\r\n        if (Util._canUseSessionStorage === undefined) {\r\n            Util._canUseSessionStorage = !!Util._getVerifiedStorageObject(StorageType.SessionStorage);\r\n        }\r\n        return Util._canUseSessionStorage;\r\n    };\r\n    /**\r\n     *  Gets the list of session storage keys\r\n     *\r\n     *  @returns {string[]} List of session storage keys\r\n     */\r\n    Util.getSessionStorageKeys = function () {\r\n        var keys = [];\r\n        if (Util.canUseSessionStorage()) {\r\n            for (var key in window.sessionStorage) {\r\n                keys.push(key);\r\n            }\r\n        }\r\n        return keys;\r\n    };\r\n    /**\r\n     *  Get an object from the browser's session storage\r\n     *\r\n     *  @param {string} name - the name of the object to get from storage\r\n     *  @returns {string} The contents of the storage object with the given name. Null if storage is not supported.\r\n     */\r\n    Util.getSessionStorage = function (logger, name) {\r\n        var storage = Util._getSessionStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                return storage.getItem(name);\r\n            }\r\n            catch (e) {\r\n                Util._canUseSessionStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserCannotReadSessionStorage, \"Browser failed read of session storage. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     *  Set the contents of an object in the browser's session storage\r\n     *\r\n     *  @param {string} name - the name of the object to set in storage\r\n     *  @param {string} data - the contents of the object to set in storage\r\n     *  @returns {boolean} True if the storage object could be written.\r\n     */\r\n    Util.setSessionStorage = function (logger, name, data) {\r\n        var storage = Util._getSessionStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                storage.setItem(name, data);\r\n                return true;\r\n            }\r\n            catch (e) {\r\n                Util._canUseSessionStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserCannotWriteSessionStorage, \"Browser failed write to session storage. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     *  Remove an object from the browser's session storage\r\n     *\r\n     *  @param {string} name - the name of the object to remove from storage\r\n     *  @returns {boolean} True if the storage object could be removed.\r\n     */\r\n    Util.removeSessionStorage = function (logger, name) {\r\n        var storage = Util._getSessionStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                storage.removeItem(name);\r\n                return true;\r\n            }\r\n            catch (e) {\r\n                Util._canUseSessionStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserFailedRemovalFromSessionStorage, \"Browser failed removal of session storage item. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /*\r\n     * Force the SDK not to store and read any data from cookies\r\n     */\r\n    Util.disableCookies = function () {\r\n        Util._canUseCookies = false;\r\n    };\r\n    /*\r\n     * helper method to tell if document.cookie object is available\r\n     */\r\n    Util.canUseCookies = function (logger) {\r\n        if (Util._canUseCookies === undefined) {\r\n            Util._canUseCookies = false;\r\n            try {\r\n                Util._canUseCookies = Util.document.cookie !== undefined;\r\n            }\r\n            catch (e) {\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.CannotAccessCookie, \"Cannot access document.cookie - \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n            ;\r\n        }\r\n        return Util._canUseCookies;\r\n    };\r\n    /**\r\n     * helper method to set userId and sessionId cookie\r\n     */\r\n    Util.setCookie = function (logger, name, value, domain) {\r\n        var domainAttrib = \"\";\r\n        var secureAttrib = \"\";\r\n        if (domain) {\r\n            domainAttrib = \";domain=\" + domain;\r\n        }\r\n        if (Util.document.location && Util.document.location.protocol === \"https:\") {\r\n            secureAttrib = \";secure\";\r\n        }\r\n        if (Util.canUseCookies(logger)) {\r\n            Util.document.cookie = name + \"=\" + value + domainAttrib + \";path=/\" + secureAttrib;\r\n        }\r\n    };\r\n    Util.stringToBoolOrDefault = function (str, defaultValue) {\r\n        if (defaultValue === void 0) { defaultValue = false; }\r\n        if (str === undefined || str === null) {\r\n            return defaultValue;\r\n        }\r\n        return str.toString().toLowerCase() === \"true\";\r\n    };\r\n    /**\r\n     * helper method to access userId and sessionId cookie\r\n     */\r\n    Util.getCookie = function (logger, name) {\r\n        if (!Util.canUseCookies(logger)) {\r\n            return;\r\n        }\r\n        var value = \"\";\r\n        if (name && name.length) {\r\n            var cookieName = name + \"=\";\r\n            var cookies = Util.document.cookie.split(\";\");\r\n            for (var i = 0; i < cookies.length; i++) {\r\n                var cookie = cookies[i];\r\n                cookie = Util.trim(cookie);\r\n                if (cookie && cookie.indexOf(cookieName) === 0) {\r\n                    value = cookie.substring(cookieName.length, cookies[i].length);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return value;\r\n    };\r\n    /**\r\n     * Deletes a cookie by setting it's expiration time in the past.\r\n     * @param name - The name of the cookie to delete.\r\n     */\r\n    Util.deleteCookie = function (logger, name) {\r\n        if (Util.canUseCookies(logger)) {\r\n            // Setting the expiration date in the past immediately removes the cookie\r\n            Util.document.cookie = name + \"=;path=/;expires=Thu, 01 Jan 1970 00:00:01 GMT;\";\r\n        }\r\n    };\r\n    /**\r\n     * helper method to trim strings (IE8 does not implement String.prototype.trim)\r\n     */\r\n    Util.trim = function (str) {\r\n        if (typeof str !== \"string\")\r\n            return str;\r\n        return str.replace(/^\\s+|\\s+$/g, \"\");\r\n    };\r\n    /**\r\n     * generate random id string\r\n     */\r\n    Util.newId = function () {\r\n        var base64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\r\n        var result = \"\";\r\n        // tslint:disable-next-line:insecure-random\r\n        var random = Math.random() * 1073741824; //5 symbols in base64, almost maxint\r\n        while (random > 0) {\r\n            var char = base64chars.charAt(random % 64);\r\n            result += char;\r\n            random = Math.floor(random / 64);\r\n        }\r\n        return result;\r\n    };\r\n    /**\r\n     * Check if an object is of type Array\r\n     */\r\n    Util.isArray = function (obj) {\r\n        return Object.prototype.toString.call(obj) === \"[object Array]\";\r\n    };\r\n    /**\r\n     * Check if an object is of type Error\r\n     */\r\n    Util.isError = function (obj) {\r\n        return Object.prototype.toString.call(obj) === \"[object Error]\";\r\n    };\r\n    /**\r\n     * Check if an object is of type Date\r\n     */\r\n    Util.isDate = function (obj) {\r\n        return Object.prototype.toString.call(obj) === \"[object Date]\";\r\n    };\r\n    /**\r\n     * Convert a date to I.S.O. format in IE8\r\n     */\r\n    Util.toISOStringForIE8 = function (date) {\r\n        if (Util.isDate(date)) {\r\n            if (Date.prototype.toISOString) {\r\n                return date.toISOString();\r\n            }\r\n            else {\r\n                var pad = function (num) {\r\n                    var r = String(num);\r\n                    if (r.length === 1) {\r\n                        r = \"0\" + r;\r\n                    }\r\n                    return r;\r\n                };\r\n                return date.getUTCFullYear()\r\n                    + \"-\" + pad(date.getUTCMonth() + 1)\r\n                    + \"-\" + pad(date.getUTCDate())\r\n                    + \"T\" + pad(date.getUTCHours())\r\n                    + \":\" + pad(date.getUTCMinutes())\r\n                    + \":\" + pad(date.getUTCSeconds())\r\n                    + \".\" + String((date.getUTCMilliseconds() / 1000).toFixed(3)).slice(2, 5)\r\n                    + \"Z\";\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Gets IE version if we are running on IE, or null otherwise\r\n     */\r\n    Util.getIEVersion = function (userAgentStr) {\r\n        if (userAgentStr === void 0) { userAgentStr = null; }\r\n        var myNav = userAgentStr ? userAgentStr.toLowerCase() : navigator.userAgent.toLowerCase();\r\n        return (myNav.indexOf('msie') != -1) ? parseInt(myNav.split('msie')[1]) : null;\r\n    };\r\n    /**\r\n     * Convert ms to c# time span format\r\n     */\r\n    Util.msToTimeSpan = function (totalms) {\r\n        if (isNaN(totalms) || totalms < 0) {\r\n            totalms = 0;\r\n        }\r\n        totalms = Math.round(totalms);\r\n        var ms = \"\" + totalms % 1000;\r\n        var sec = \"\" + Math.floor(totalms / 1000) % 60;\r\n        var min = \"\" + Math.floor(totalms / (1000 * 60)) % 60;\r\n        var hour = \"\" + Math.floor(totalms / (1000 * 60 * 60)) % 24;\r\n        var days = Math.floor(totalms / (1000 * 60 * 60 * 24));\r\n        ms = ms.length === 1 ? \"00\" + ms : ms.length === 2 ? \"0\" + ms : ms;\r\n        sec = sec.length < 2 ? \"0\" + sec : sec;\r\n        min = min.length < 2 ? \"0\" + min : min;\r\n        hour = hour.length < 2 ? \"0\" + hour : hour;\r\n        return (days > 0 ? days + \".\" : \"\") + hour + \":\" + min + \":\" + sec + \".\" + ms;\r\n    };\r\n    /**\r\n    * Checks if error has no meaningful data inside. Ususally such errors are received by window.onerror when error\r\n    * happens in a script from other domain (cross origin, CORS).\r\n    */\r\n    Util.isCrossOriginError = function (message, url, lineNumber, columnNumber, error) {\r\n        return (message === \"Script error.\" || message === \"Script error\") && !error;\r\n    };\r\n    /**\r\n    * Returns string representation of an object suitable for diagnostics logging.\r\n    */\r\n    Util.dump = function (object) {\r\n        var objectTypeDump = Object.prototype.toString.call(object);\r\n        var propertyValueDump = JSON.stringify(object);\r\n        if (objectTypeDump === \"[object Error]\") {\r\n            propertyValueDump = \"{ stack: '\" + object.stack + \"', message: '\" + object.message + \"', name: '\" + object.name + \"'\";\r\n        }\r\n        return objectTypeDump + propertyValueDump;\r\n    };\r\n    /**\r\n    * Returns the name of object if it's an Error. Otherwise, returns empty string.\r\n    */\r\n    Util.getExceptionName = function (object) {\r\n        var objectTypeDump = Object.prototype.toString.call(object);\r\n        if (objectTypeDump === \"[object Error]\") {\r\n            return object.name;\r\n        }\r\n        return \"\";\r\n    };\r\n    /**\r\n     * Adds an event handler for the specified event\r\n     * @param eventName {string} - The name of the event\r\n     * @param callback {any} - The callback function that needs to be executed for the given event\r\n     * @return {boolean} - true if the handler was successfully added\r\n     */\r\n    Util.addEventHandler = function (eventName, callback) {\r\n        if (typeof window === 'undefined' || !window || typeof eventName !== 'string' || typeof callback !== 'function') {\r\n            return false;\r\n        }\r\n        // Create verb for the event\r\n        var verbEventName = 'on' + eventName;\r\n        // check if addEventListener is available\r\n        if (window.addEventListener) {\r\n            window.addEventListener(eventName, callback, false);\r\n        }\r\n        else if (window[\"attachEvent\"]) {\r\n            window[\"attachEvent\"](verbEventName, callback);\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     * Tells if a browser supports a Beacon API\r\n     */\r\n    Util.IsBeaconApiSupported = function () {\r\n        return ('sendBeacon' in navigator && navigator.sendBeacon);\r\n    };\r\n    Util.document = typeof document !== \"undefined\" ? document : {};\r\n    Util._canUseCookies = undefined;\r\n    Util._canUseLocalStorage = undefined;\r\n    Util._canUseSessionStorage = undefined;\r\n    // listing only non-geo specific locations \r\n    Util._internalEndpoints = [\r\n        \"https://dc.services.visualstudio.com/v2/track\",\r\n        \"https://breeze.aimon.applicationinsights.io/v2/track\",\r\n        \"https://dc-int.services.visualstudio.com/v2/track\"\r\n    ];\r\n    Util.NotSpecified = \"not_specified\";\r\n    return Util;\r\n}());\r\nexport { Util };\r\nvar UrlHelper = /** @class */ (function () {\r\n    function UrlHelper() {\r\n    }\r\n    UrlHelper.parseUrl = function (url) {\r\n        if (!UrlHelper.htmlAnchorElement) {\r\n            UrlHelper.htmlAnchorElement = !!UrlHelper.document.createElement ? UrlHelper.document.createElement('a') : {};\r\n        }\r\n        UrlHelper.htmlAnchorElement.href = url;\r\n        return UrlHelper.htmlAnchorElement;\r\n    };\r\n    UrlHelper.getAbsoluteUrl = function (url) {\r\n        var result;\r\n        var a = UrlHelper.parseUrl(url);\r\n        if (a) {\r\n            result = a.href;\r\n        }\r\n        return result;\r\n    };\r\n    UrlHelper.getPathName = function (url) {\r\n        var result;\r\n        var a = UrlHelper.parseUrl(url);\r\n        if (a) {\r\n            result = a.pathname;\r\n        }\r\n        return result;\r\n    };\r\n    UrlHelper.getCompleteUrl = function (method, absoluteUrl) {\r\n        if (method) {\r\n            return method.toUpperCase() + \" \" + absoluteUrl;\r\n        }\r\n        else {\r\n            return absoluteUrl;\r\n        }\r\n    };\r\n    UrlHelper.document = typeof document !== \"undefined\" ? document : {};\r\n    return UrlHelper;\r\n}());\r\nexport { UrlHelper };\r\nvar CorrelationIdHelper = /** @class */ (function () {\r\n    function CorrelationIdHelper() {\r\n    }\r\n    /**\r\n    * Checks if a request url is not on a excluded domain list and if it is safe to add correlation headers\r\n    */\r\n    CorrelationIdHelper.canIncludeCorrelationHeader = function (config, requestUrl, currentHost) {\r\n        if (config && config.disableCorrelationHeaders) {\r\n            return false;\r\n        }\r\n        if (!requestUrl) {\r\n            return false;\r\n        }\r\n        var requestHost = UrlHelper.parseUrl(requestUrl).host.toLowerCase();\r\n        if ((!config || !config.enableCorsCorrelation) && requestHost !== currentHost) {\r\n            return false;\r\n        }\r\n        var excludedDomains = config && config.correlationHeaderExcludedDomains;\r\n        if (!excludedDomains || excludedDomains.length == 0) {\r\n            return true;\r\n        }\r\n        for (var i = 0; i < excludedDomains.length; i++) {\r\n            var regex = new RegExp(excludedDomains[i].toLowerCase().replace(/\\./g, \"\\.\").replace(/\\*/g, \".*\"));\r\n            if (regex.test(requestHost)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n    * Combines target appId and target role name from response header.\r\n    */\r\n    CorrelationIdHelper.getCorrelationContext = function (responseHeader) {\r\n        if (responseHeader) {\r\n            var correlationId = CorrelationIdHelper.getCorrelationContextValue(responseHeader, RequestHeaders.requestContextTargetKey);\r\n            if (correlationId && correlationId !== CorrelationIdHelper.correlationIdPrefix) {\r\n                return correlationId;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n    * Gets key from correlation response header\r\n    */\r\n    CorrelationIdHelper.getCorrelationContextValue = function (responseHeader, key) {\r\n        if (responseHeader) {\r\n            var keyValues = responseHeader.split(\",\");\r\n            for (var i = 0; i < keyValues.length; ++i) {\r\n                var keyValue = keyValues[i].split(\"=\");\r\n                if (keyValue.length == 2 && keyValue[0] == key) {\r\n                    return keyValue[1];\r\n                }\r\n            }\r\n        }\r\n    };\r\n    CorrelationIdHelper.correlationIdPrefix = \"cid-v1:\";\r\n    return CorrelationIdHelper;\r\n}());\r\nexport { CorrelationIdHelper };\r\nvar AjaxHelper = /** @class */ (function () {\r\n    function AjaxHelper() {\r\n    }\r\n    AjaxHelper.ParseDependencyPath = function (logger, absoluteUrl, method, commandName) {\r\n        var target, name = commandName, data = commandName;\r\n        if (absoluteUrl && absoluteUrl.length > 0) {\r\n            var parsedUrl = UrlHelper.parseUrl(absoluteUrl);\r\n            target = parsedUrl.host;\r\n            if (!name) {\r\n                if (parsedUrl.pathname != null) {\r\n                    var pathName = (parsedUrl.pathname.length === 0) ? \"/\" : parsedUrl.pathname;\r\n                    if (pathName.charAt(0) !== '/') {\r\n                        pathName = \"/\" + pathName;\r\n                    }\r\n                    data = parsedUrl.pathname;\r\n                    name = DataSanitizer.sanitizeString(logger, method ? method + \" \" + pathName : pathName);\r\n                }\r\n                else {\r\n                    name = DataSanitizer.sanitizeString(logger, absoluteUrl);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            target = commandName;\r\n            name = commandName;\r\n        }\r\n        return {\r\n            target: target,\r\n            name: name,\r\n            data: data\r\n        };\r\n    };\r\n    return AjaxHelper;\r\n}());\r\nexport { AjaxHelper };\r\n/**\r\n * A utility class that helps getting time related parameters\r\n */\r\nvar DateTimeUtils = /** @class */ (function () {\r\n    function DateTimeUtils() {\r\n    }\r\n    /**\r\n     * Get the number of milliseconds since 1970/01/01 in local timezone\r\n     */\r\n    DateTimeUtils.Now = (typeof window === 'undefined') ? function () { return new Date().getTime(); } :\r\n        (window.performance && window.performance.now && window.performance.timing) ?\r\n            function () {\r\n                return window.performance.now() + window.performance.timing.navigationStart;\r\n            }\r\n            :\r\n                function () {\r\n                    return new Date().getTime();\r\n                };\r\n    /**\r\n     * Gets duration between two timestamps\r\n     */\r\n    DateTimeUtils.GetDuration = function (start, end) {\r\n        var result = null;\r\n        if (start !== 0 && end !== 0 && !CoreUtils.isNullOrUndefined(start) && !CoreUtils.isNullOrUndefined(end)) {\r\n            result = end - start;\r\n        }\r\n        return result;\r\n    };\r\n    return DateTimeUtils;\r\n}());\r\nexport { DateTimeUtils };\r\n//# sourceMappingURL=Util.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nexport var DisabledPropertyName = \"Microsoft_ApplicationInsights_BypassAjaxInstrumentation\";\r\nexport var SampleRate = \"sampleRate\";\r\nexport var ProcessLegacy = \"ProcessLegacy\";\r\nexport var HttpMethod = \"http.method\";\r\n//# sourceMappingURL=Constants.js.map","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\n/**\r\n * Type of the metric data measurement.\r\n */\r\nexport var DataPointType;\r\n(function (DataPointType) {\r\n    DataPointType[DataPointType[\"Measurement\"] = 0] = \"Measurement\";\r\n    DataPointType[DataPointType[\"Aggregation\"] = 1] = \"Aggregation\";\r\n})(DataPointType || (DataPointType = {}));\r\n//# sourceMappingURL=DataPointType.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { Base } from './Base';\r\n/**\r\n * Data struct to contain both B and C sections.\r\n */\r\nvar Data = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Data, _super);\r\n    function Data() {\r\n        return _super.call(this) || this;\r\n    }\r\n    return Data;\r\n}(Base));\r\nexport { Data };\r\n//# sourceMappingURL=Data.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\n/**\r\n     * Data struct to contain only C section with custom fields.\r\n     */\r\nvar Base = /** @class */ (function () {\r\n    function Base() {\r\n    }\r\n    return Base;\r\n}());\r\nexport { Base };\r\n//# sourceMappingURL=Base.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Envelope as AIEnvelope } from '../../Interfaces/Contracts/Generated/Envelope';\r\nimport { DataSanitizer } from './DataSanitizer';\r\nimport { FieldType } from '../../Enums';\r\nimport { Util } from '../../Util';\r\nvar Envelope = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Envelope, _super);\r\n    /**\r\n     * Constructs a new instance of telemetry data.\r\n     */\r\n    function Envelope(logger, data, name) {\r\n        var _this = _super.call(this) || this;\r\n        _this.name = DataSanitizer.sanitizeString(logger, name) || Util.NotSpecified;\r\n        _this.data = data;\r\n        _this.time = Util.toISOStringForIE8(new Date());\r\n        _this.aiDataContract = {\r\n            time: FieldType.Required,\r\n            iKey: FieldType.Required,\r\n            name: FieldType.Required,\r\n            sampleRate: function () {\r\n                return (_this.sampleRate == 100) ? FieldType.Hidden : FieldType.Required;\r\n            },\r\n            tags: FieldType.Required,\r\n            data: FieldType.Required\r\n        };\r\n        return _this;\r\n    }\r\n    return Envelope;\r\n}(AIEnvelope));\r\nexport { Envelope };\r\n//# sourceMappingURL=Envelope.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n/**\r\n * System variables for a telemetry item.\r\n */\r\nvar Envelope = /** @class */ (function () {\r\n    function Envelope() {\r\n        this.ver = 1;\r\n        this.sampleRate = 100.0;\r\n        this.tags = {};\r\n    }\r\n    return Envelope;\r\n}());\r\nexport { Envelope };\r\n//# sourceMappingURL=Envelope.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\n/**\r\n * The abstract common base of all domains.\r\n */\r\nvar Domain = /** @class */ (function () {\r\n    function Domain() {\r\n    }\r\n    return Domain;\r\n}());\r\nexport { Domain };\r\n//# sourceMappingURL=Domain.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { Domain } from './Domain';\r\n/**\r\n * Instances of Event represent structured event records that can be grouped and searched by their properties. Event data item also creates a metric of event count by name.\r\n */\r\nvar EventData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(EventData, _super);\r\n    function EventData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return EventData;\r\n}(Domain));\r\nexport { EventData };\r\n//# sourceMappingURL=EventData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { EventData } from '../Interfaces/Contracts/Generated/EventData';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { Util } from '../Util';\r\nvar Event = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Event, _super);\r\n    /**\r\n     * Constructs a new instance of the EventTelemetry object\r\n     */\r\n    function Event(logger, name, properties, measurements) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            name: FieldType.Required,\r\n            properties: FieldType.Default,\r\n            measurements: FieldType.Default\r\n        };\r\n        _this.name = DataSanitizer.sanitizeString(logger, name) || Util.NotSpecified;\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        _this.measurements = DataSanitizer.sanitizeMeasurements(logger, measurements);\r\n        return _this;\r\n    }\r\n    Event.envelopeType = \"Microsoft.ApplicationInsights.{0}.Event\";\r\n    Event.dataType = \"EventData\";\r\n    return Event;\r\n}(EventData));\r\nexport { Event };\r\n//# sourceMappingURL=Event.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\n/**\r\n * Stack frame information.\r\n */\r\nvar StackFrame = /** @class */ (function () {\r\n    function StackFrame() {\r\n    }\r\n    return StackFrame;\r\n}());\r\nexport { StackFrame };\r\n//# sourceMappingURL=StackFrame.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n/**\r\n * Exception details of the exception in a chain.\r\n */\r\nvar ExceptionDetails = /** @class */ (function () {\r\n    function ExceptionDetails() {\r\n        this.hasFullStack = true;\r\n        this.parsedStack = [];\r\n    }\r\n    return ExceptionDetails;\r\n}());\r\nexport { ExceptionDetails };\r\n//# sourceMappingURL=ExceptionDetails.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { StackFrame } from '../Interfaces/Contracts/Generated/StackFrame';\r\nimport { ExceptionData } from '../Interfaces/Contracts/Generated/ExceptionData';\r\nimport { ExceptionDetails } from '../Interfaces/Contracts/Generated/ExceptionDetails';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { Util } from '../Util';\r\nvar Exception = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Exception, _super);\r\n    /**\r\n    * Constructs a new isntance of the ExceptionTelemetry object\r\n    */\r\n    function Exception(logger, exception, properties, measurements, severityLevel) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            exceptions: FieldType.Required,\r\n            severityLevel: FieldType.Default,\r\n            properties: FieldType.Default,\r\n            measurements: FieldType.Default\r\n        };\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        _this.measurements = DataSanitizer.sanitizeMeasurements(logger, measurements);\r\n        _this.exceptions = [new _ExceptionDetails(logger, exception)];\r\n        if (severityLevel) {\r\n            _this.severityLevel = severityLevel;\r\n        }\r\n        return _this;\r\n    }\r\n    /**\r\n    * Creates a simple exception with 1 stack frame. Useful for manual constracting of exception.\r\n    */\r\n    Exception.CreateSimpleException = function (message, typeName, assembly, fileName, details, line) {\r\n        return {\r\n            exceptions: [\r\n                {\r\n                    hasFullStack: true,\r\n                    message: message,\r\n                    stack: details,\r\n                    typeName: typeName\r\n                }\r\n            ]\r\n        };\r\n    };\r\n    Exception.envelopeType = \"Microsoft.ApplicationInsights.{0}.Exception\";\r\n    Exception.dataType = \"ExceptionData\";\r\n    return Exception;\r\n}(ExceptionData));\r\nexport { Exception };\r\nvar _ExceptionDetails = /** @class */ (function (_super) {\r\n    tslib_1.__extends(_ExceptionDetails, _super);\r\n    function _ExceptionDetails(logger, exception) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            id: FieldType.Default,\r\n            outerId: FieldType.Default,\r\n            typeName: FieldType.Required,\r\n            message: FieldType.Required,\r\n            hasFullStack: FieldType.Default,\r\n            stack: FieldType.Default,\r\n            parsedStack: FieldType.Array\r\n        };\r\n        _this.typeName = DataSanitizer.sanitizeString(logger, exception.name) || Util.NotSpecified;\r\n        _this.message = DataSanitizer.sanitizeMessage(logger, exception.message) || Util.NotSpecified;\r\n        var stack = exception[\"stack\"];\r\n        _this.parsedStack = _this.parseStack(stack);\r\n        _this.stack = DataSanitizer.sanitizeException(logger, stack);\r\n        _this.hasFullStack = Util.isArray(_this.parsedStack) && _this.parsedStack.length > 0;\r\n        return _this;\r\n    }\r\n    _ExceptionDetails.prototype.parseStack = function (stack) {\r\n        var parsedStack = undefined;\r\n        if (typeof stack === \"string\") {\r\n            var frames = stack.split('\\n');\r\n            parsedStack = [];\r\n            var level = 0;\r\n            var totalSizeInBytes = 0;\r\n            for (var i = 0; i <= frames.length; i++) {\r\n                var frame = frames[i];\r\n                if (_StackFrame.regex.test(frame)) {\r\n                    var parsedFrame = new _StackFrame(frames[i], level++);\r\n                    totalSizeInBytes += parsedFrame.sizeInBytes;\r\n                    parsedStack.push(parsedFrame);\r\n                }\r\n            }\r\n            // DP Constraint - exception parsed stack must be < 32KB\r\n            // remove frames from the middle to meet the threshold\r\n            var exceptionParsedStackThreshold = 32 * 1024;\r\n            if (totalSizeInBytes > exceptionParsedStackThreshold) {\r\n                var left = 0;\r\n                var right = parsedStack.length - 1;\r\n                var size = 0;\r\n                var acceptedLeft = left;\r\n                var acceptedRight = right;\r\n                while (left < right) {\r\n                    // check size\r\n                    var lSize = parsedStack[left].sizeInBytes;\r\n                    var rSize = parsedStack[right].sizeInBytes;\r\n                    size += lSize + rSize;\r\n                    if (size > exceptionParsedStackThreshold) {\r\n                        // remove extra frames from the middle\r\n                        var howMany = acceptedRight - acceptedLeft + 1;\r\n                        parsedStack.splice(acceptedLeft, howMany);\r\n                        break;\r\n                    }\r\n                    // update pointers\r\n                    acceptedLeft = left;\r\n                    acceptedRight = right;\r\n                    left++;\r\n                    right--;\r\n                }\r\n            }\r\n        }\r\n        return parsedStack;\r\n    };\r\n    return _ExceptionDetails;\r\n}(ExceptionDetails));\r\nvar _StackFrame = /** @class */ (function (_super) {\r\n    tslib_1.__extends(_StackFrame, _super);\r\n    function _StackFrame(frame, level) {\r\n        var _this = _super.call(this) || this;\r\n        _this.sizeInBytes = 0;\r\n        _this.aiDataContract = {\r\n            level: FieldType.Required,\r\n            method: FieldType.Required,\r\n            assembly: FieldType.Default,\r\n            fileName: FieldType.Default,\r\n            line: FieldType.Default\r\n        };\r\n        _this.level = level;\r\n        _this.method = \"<no_method>\";\r\n        _this.assembly = Util.trim(frame);\r\n        var matches = frame.match(_StackFrame.regex);\r\n        if (matches && matches.length >= 5) {\r\n            _this.method = Util.trim(matches[2]) || _this.method;\r\n            _this.fileName = Util.trim(matches[4]);\r\n            _this.line = parseInt(matches[5]) || 0;\r\n        }\r\n        _this.sizeInBytes += _this.method.length;\r\n        _this.sizeInBytes += _this.fileName.length;\r\n        _this.sizeInBytes += _this.assembly.length;\r\n        // todo: these might need to be removed depending on how the back-end settles on their size calculation\r\n        _this.sizeInBytes += _StackFrame.baseSize;\r\n        _this.sizeInBytes += _this.level.toString().length;\r\n        _this.sizeInBytes += _this.line.toString().length;\r\n        return _this;\r\n    }\r\n    // regex to match stack frames from ie/chrome/ff\r\n    // methodName=$2, fileName=$4, lineNo=$5, column=$6\r\n    _StackFrame.regex = /^([\\s]+at)?(.*?)(\\@|\\s\\(|\\s)([^\\(\\@\\n]+):([0-9]+):([0-9]+)(\\)?)$/;\r\n    _StackFrame.baseSize = 58; //'{\"method\":\"\",\"level\":,\"assembly\":\"\",\"fileName\":\"\",\"line\":}'.length\r\n    return _StackFrame;\r\n}(StackFrame));\r\nexport { _StackFrame };\r\n//# sourceMappingURL=Exception.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Domain } from './Domain';\r\n/**\r\n * An instance of Exception represents a handled or unhandled exception that occurred during execution of the monitored application.\r\n */\r\nvar ExceptionData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ExceptionData, _super);\r\n    function ExceptionData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.exceptions = [];\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return ExceptionData;\r\n}(Domain));\r\nexport { ExceptionData };\r\n//# sourceMappingURL=ExceptionData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { Domain } from './Domain';\r\n/**\r\n * An instance of the Metric item is a list of measurements (single data points) and/or aggregations.\r\n */\r\nvar MetricData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(MetricData, _super);\r\n    function MetricData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.metrics = [];\r\n        _this.properties = {};\r\n        return _this;\r\n    }\r\n    return MetricData;\r\n}(Domain));\r\nexport { MetricData };\r\n//# sourceMappingURL=MetricData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { DataPointType } from './DataPointType';\r\n/**\r\n * Metric data single measurement.\r\n */\r\nvar DataPoint = /** @class */ (function () {\r\n    function DataPoint() {\r\n        this.kind = DataPointType.Measurement;\r\n    }\r\n    return DataPoint;\r\n}());\r\nexport { DataPoint };\r\n//# sourceMappingURL=DataPoint.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\n/**\r\n* Defines the level of severity for the event.\r\n*/\r\nexport var SeverityLevel;\r\n(function (SeverityLevel) {\r\n    SeverityLevel[SeverityLevel[\"Verbose\"] = 0] = \"Verbose\";\r\n    SeverityLevel[SeverityLevel[\"Information\"] = 1] = \"Information\";\r\n    SeverityLevel[SeverityLevel[\"Warning\"] = 2] = \"Warning\";\r\n    SeverityLevel[SeverityLevel[\"Error\"] = 3] = \"Error\";\r\n    SeverityLevel[SeverityLevel[\"Critical\"] = 4] = \"Critical\";\r\n})(SeverityLevel || (SeverityLevel = {}));\r\n//# sourceMappingURL=SeverityLevel.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { DataPoint as AIDataPoint } from '../../Interfaces/Contracts/Generated/DataPoint';\r\nimport { FieldType } from '../../Enums';\r\nvar DataPoint = /** @class */ (function (_super) {\r\n    tslib_1.__extends(DataPoint, _super);\r\n    function DataPoint() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * The data contract for serializing this object.\r\n         */\r\n        _this.aiDataContract = {\r\n            name: FieldType.Required,\r\n            kind: FieldType.Default,\r\n            value: FieldType.Required,\r\n            count: FieldType.Default,\r\n            min: FieldType.Default,\r\n            max: FieldType.Default,\r\n            stdDev: FieldType.Default\r\n        };\r\n        return _this;\r\n    }\r\n    return DataPoint;\r\n}(AIDataPoint));\r\nexport { DataPoint };\r\n//# sourceMappingURL=DataPoint.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { MetricData } from '../Interfaces/Contracts/Generated/MetricData';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { DataPoint } from './Common/DataPoint';\r\nimport { Util } from '../Util';\r\nvar Metric = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Metric, _super);\r\n    /**\r\n     * Constructs a new instance of the MetricTelemetry object\r\n     */\r\n    function Metric(logger, name, value, count, min, max, properties) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            metrics: FieldType.Required,\r\n            properties: FieldType.Default\r\n        };\r\n        var dataPoint = new DataPoint();\r\n        dataPoint.count = count > 0 ? count : undefined;\r\n        dataPoint.max = isNaN(max) || max === null ? undefined : max;\r\n        dataPoint.min = isNaN(min) || min === null ? undefined : min;\r\n        dataPoint.name = DataSanitizer.sanitizeString(logger, name) || Util.NotSpecified;\r\n        dataPoint.value = value;\r\n        _this.metrics = [dataPoint];\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        return _this;\r\n    }\r\n    Metric.envelopeType = \"Microsoft.ApplicationInsights.{0}.Metric\";\r\n    Metric.dataType = \"MetricData\";\r\n    return Metric;\r\n}(MetricData));\r\nexport { Metric };\r\n//# sourceMappingURL=Metric.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { EventData } from './EventData';\r\n/**\r\n * An instance of PageView represents a generic action on a page like a button click. It is also the base type for PageView.\r\n */\r\nvar PageViewData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PageViewData, _super);\r\n    function PageViewData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return PageViewData;\r\n}(EventData));\r\nexport { PageViewData };\r\n//# sourceMappingURL=PageViewData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { PageViewData } from '../Interfaces/Contracts/Generated/PageViewData';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { Util } from '../Util';\r\nvar PageView = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PageView, _super);\r\n    /**\r\n     * Constructs a new instance of the PageEventTelemetry object\r\n     */\r\n    function PageView(logger, name, url, durationMs, properties, measurements, id) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            name: FieldType.Default,\r\n            url: FieldType.Default,\r\n            duration: FieldType.Default,\r\n            properties: FieldType.Default,\r\n            measurements: FieldType.Default,\r\n            id: FieldType.Default\r\n        };\r\n        _this.id = DataSanitizer.sanitizeId(logger, id);\r\n        _this.url = DataSanitizer.sanitizeUrl(logger, url);\r\n        _this.name = DataSanitizer.sanitizeString(logger, name) || Util.NotSpecified;\r\n        if (!isNaN(durationMs)) {\r\n            _this.duration = Util.msToTimeSpan(durationMs);\r\n        }\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        _this.measurements = DataSanitizer.sanitizeMeasurements(logger, measurements);\r\n        return _this;\r\n    }\r\n    PageView.envelopeType = \"Microsoft.ApplicationInsights.{0}.Pageview\";\r\n    PageView.dataType = \"PageviewData\";\r\n    return PageView;\r\n}(PageViewData));\r\nexport { PageView };\r\n//# sourceMappingURL=PageView.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { Util } from '../Util';\r\nimport { AjaxHelper } from '../Util';\r\nimport { RemoteDependencyData as GeneratedRemoteDependencyData } from '../Interfaces/Contracts/Generated/RemoteDependencyData';\r\nvar RemoteDependencyData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RemoteDependencyData, _super);\r\n    /**\r\n     * Constructs a new instance of the RemoteDependencyData object\r\n     */\r\n    function RemoteDependencyData(logger, id, absoluteUrl, commandName, value, success, resultCode, method, requestAPI, properties, measurements) {\r\n        if (requestAPI === void 0) { requestAPI = \"Ajax\"; }\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            id: FieldType.Required,\r\n            ver: FieldType.Required,\r\n            name: FieldType.Default,\r\n            resultCode: FieldType.Default,\r\n            duration: FieldType.Default,\r\n            success: FieldType.Default,\r\n            data: FieldType.Default,\r\n            target: FieldType.Default,\r\n            type: FieldType.Default,\r\n            properties: FieldType.Default,\r\n            measurements: FieldType.Default,\r\n            kind: FieldType.Default,\r\n            value: FieldType.Default,\r\n            count: FieldType.Default,\r\n            min: FieldType.Default,\r\n            max: FieldType.Default,\r\n            stdDev: FieldType.Default,\r\n            dependencyKind: FieldType.Default,\r\n            dependencySource: FieldType.Default,\r\n            commandName: FieldType.Default,\r\n            dependencyTypeName: FieldType.Default,\r\n        };\r\n        _this.id = id;\r\n        _this.duration = Util.msToTimeSpan(value);\r\n        _this.success = success;\r\n        _this.resultCode = resultCode + \"\";\r\n        _this.type = DataSanitizer.sanitizeString(logger, requestAPI);\r\n        var dependencyFields = AjaxHelper.ParseDependencyPath(logger, absoluteUrl, method, commandName);\r\n        _this.data = DataSanitizer.sanitizeUrl(logger, commandName) || dependencyFields.data; // get a value from hosturl if commandName not available\r\n        _this.target = dependencyFields.target;\r\n        _this.name = dependencyFields.name;\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        _this.measurements = DataSanitizer.sanitizeMeasurements(logger, measurements);\r\n        return _this;\r\n    }\r\n    RemoteDependencyData.envelopeType = \"Microsoft.ApplicationInsights.{0}.RemoteDependency\";\r\n    RemoteDependencyData.dataType = \"RemoteDependencyData\";\r\n    return RemoteDependencyData;\r\n}(GeneratedRemoteDependencyData));\r\nexport { RemoteDependencyData };\r\n//# sourceMappingURL=RemoteDependencyData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { Domain } from './Domain';\r\n/**\r\n * An instance of Remote Dependency represents an interaction of the monitored component with a remote component/service like SQL or an HTTP endpoint.\r\n */\r\nvar RemoteDependencyData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RemoteDependencyData, _super);\r\n    function RemoteDependencyData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.success = true;\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return RemoteDependencyData;\r\n}(Domain));\r\nexport { RemoteDependencyData };\r\n//# sourceMappingURL=RemoteDependencyData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { MessageData } from '../Interfaces/Contracts/Generated/MessageData';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { Util } from '../Util';\r\nvar Trace = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Trace, _super);\r\n    /**\r\n     * Constructs a new instance of the TraceTelemetry object\r\n     */\r\n    function Trace(logger, message, severityLevel, properties) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            message: FieldType.Required,\r\n            severityLevel: FieldType.Default,\r\n            properties: FieldType.Default\r\n        };\r\n        message = message || Util.NotSpecified;\r\n        _this.message = DataSanitizer.sanitizeMessage(logger, message);\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        if (severityLevel) {\r\n            _this.severityLevel = severityLevel;\r\n        }\r\n        return _this;\r\n    }\r\n    Trace.envelopeType = \"Microsoft.ApplicationInsights.{0}.Message\";\r\n    Trace.dataType = \"MessageData\";\r\n    return Trace;\r\n}(MessageData));\r\nexport { Trace };\r\n//# sourceMappingURL=Trace.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { Domain } from './Domain';\r\n/**\r\n * Instances of Message represent printf-like trace statements that are text-searched. Log4Net, NLog and other text-based log file entries are translated into intances of this type. The message does not have measurements.\r\n */\r\nvar MessageData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(MessageData, _super);\r\n    function MessageData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.properties = {};\r\n        return _this;\r\n    }\r\n    return MessageData;\r\n}(Domain));\r\nexport { MessageData };\r\n//# sourceMappingURL=MessageData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { PageViewPerfData } from '../Interfaces/Contracts/Generated/PageViewPerfData';\r\nimport { FieldType } from '../Enums';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { Util } from '../Util';\r\nvar PageViewPerformance = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PageViewPerformance, _super);\r\n    /**\r\n     * Constructs a new instance of the PageEventTelemetry object\r\n     */\r\n    function PageViewPerformance(logger, name, url, unused, properties, measurements) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            name: FieldType.Default,\r\n            url: FieldType.Default,\r\n            duration: FieldType.Default,\r\n            perfTotal: FieldType.Default,\r\n            networkConnect: FieldType.Default,\r\n            sentRequest: FieldType.Default,\r\n            receivedResponse: FieldType.Default,\r\n            domProcessing: FieldType.Default,\r\n            properties: FieldType.Default,\r\n            measurements: FieldType.Default\r\n        };\r\n        _this.url = DataSanitizer.sanitizeUrl(logger, url);\r\n        _this.name = DataSanitizer.sanitizeString(logger, name) || Util.NotSpecified;\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        _this.measurements = DataSanitizer.sanitizeMeasurements(logger, measurements);\r\n        return _this;\r\n    }\r\n    PageViewPerformance.envelopeType = \"Microsoft.ApplicationInsights.{0}.PageviewPerformance\";\r\n    PageViewPerformance.dataType = \"PageviewPerformanceData\";\r\n    return PageViewPerformance;\r\n}(PageViewPerfData));\r\nexport { PageViewPerformance };\r\n//# sourceMappingURL=PageViewPerformance.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { PageViewData } from './PageViewData';\r\n/**\r\n * An instance of PageViewPerf represents: a page view with no performance data, a page view with performance data, or just the performance data of an earlier page request.\r\n */\r\nvar PageViewPerfData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PageViewPerfData, _super);\r\n    function PageViewPerfData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return PageViewPerfData;\r\n}(PageViewData));\r\nexport { PageViewPerfData };\r\n//# sourceMappingURL=PageViewPerfData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Data as AIData } from '../../Interfaces/Contracts/Generated/Data';\r\nimport { FieldType } from '../../Enums';\r\nvar Data = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Data, _super);\r\n    /**\r\n     * Constructs a new instance of telemetry data.\r\n     */\r\n    function Data(baseType, data) {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * The data contract for serializing this object.\r\n         */\r\n        _this.aiDataContract = {\r\n            baseType: FieldType.Required,\r\n            baseData: FieldType.Required\r\n        };\r\n        _this.baseType = baseType;\r\n        _this.baseData = data;\r\n        return _this;\r\n    }\r\n    return Data;\r\n}(AIData));\r\nexport { Data };\r\n//# sourceMappingURL=Data.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { CoreUtils } from '@microsoft/applicationinsights-core-js';\r\nvar ConfigurationManager = /** @class */ (function () {\r\n    function ConfigurationManager() {\r\n    }\r\n    ConfigurationManager.getConfig = function (config, field, identifier, defaultValue) {\r\n        if (defaultValue === void 0) { defaultValue = false; }\r\n        var configValue;\r\n        if (identifier && config.extensionConfig && config.extensionConfig[identifier] && !CoreUtils.isNullOrUndefined(config.extensionConfig[identifier][field])) {\r\n            configValue = config.extensionConfig[identifier][field];\r\n        }\r\n        else {\r\n            configValue = config[field];\r\n        }\r\n        return !CoreUtils.isNullOrUndefined(configValue) ? configValue : defaultValue;\r\n    };\r\n    return ConfigurationManager;\r\n}());\r\nexport { ConfigurationManager };\r\n//# sourceMappingURL=IConfig.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\nvar ContextTagKeys = /** @class */ (function () {\r\n    function ContextTagKeys() {\r\n        this.applicationVersion = \"ai.application.ver\";\r\n        this.applicationBuild = \"ai.application.build\";\r\n        this.applicationTypeId = \"ai.application.typeId\";\r\n        this.applicationId = \"ai.application.applicationId\";\r\n        this.applicationLayer = \"ai.application.layer\";\r\n        this.deviceId = \"ai.device.id\";\r\n        this.deviceIp = \"ai.device.ip\";\r\n        this.deviceLanguage = \"ai.device.language\";\r\n        this.deviceLocale = \"ai.device.locale\";\r\n        this.deviceModel = \"ai.device.model\";\r\n        this.deviceFriendlyName = \"ai.device.friendlyName\";\r\n        this.deviceNetwork = \"ai.device.network\";\r\n        this.deviceNetworkName = \"ai.device.networkName\";\r\n        this.deviceOEMName = \"ai.device.oemName\";\r\n        this.deviceOS = \"ai.device.os\";\r\n        this.deviceOSVersion = \"ai.device.osVersion\";\r\n        this.deviceRoleInstance = \"ai.device.roleInstance\";\r\n        this.deviceRoleName = \"ai.device.roleName\";\r\n        this.deviceScreenResolution = \"ai.device.screenResolution\";\r\n        this.deviceType = \"ai.device.type\";\r\n        this.deviceMachineName = \"ai.device.machineName\";\r\n        this.deviceVMName = \"ai.device.vmName\";\r\n        this.deviceBrowser = \"ai.device.browser\";\r\n        this.deviceBrowserVersion = \"ai.device.browserVersion\";\r\n        this.locationIp = \"ai.location.ip\";\r\n        this.locationCountry = \"ai.location.country\";\r\n        this.locationProvince = \"ai.location.province\";\r\n        this.locationCity = \"ai.location.city\";\r\n        this.operationId = \"ai.operation.id\";\r\n        this.operationName = \"ai.operation.name\";\r\n        this.operationParentId = \"ai.operation.parentId\";\r\n        this.operationRootId = \"ai.operation.rootId\";\r\n        this.operationSyntheticSource = \"ai.operation.syntheticSource\";\r\n        this.operationCorrelationVector = \"ai.operation.correlationVector\";\r\n        this.sessionId = \"ai.session.id\";\r\n        this.sessionIsFirst = \"ai.session.isFirst\";\r\n        this.sessionIsNew = \"ai.session.isNew\";\r\n        this.userAccountAcquisitionDate = \"ai.user.accountAcquisitionDate\";\r\n        this.userAccountId = \"ai.user.accountId\";\r\n        this.userAgent = \"ai.user.userAgent\";\r\n        this.userId = \"ai.user.id\";\r\n        this.userStoreRegion = \"ai.user.storeRegion\";\r\n        this.userAuthUserId = \"ai.user.authUserId\";\r\n        this.userAnonymousUserAcquisitionDate = \"ai.user.anonUserAcquisitionDate\";\r\n        this.userAuthenticatedUserAcquisitionDate = \"ai.user.authUserAcquisitionDate\";\r\n        this.cloudName = \"ai.cloud.name\";\r\n        this.cloudRole = \"ai.cloud.role\";\r\n        this.cloudRoleVer = \"ai.cloud.roleVer\";\r\n        this.cloudRoleInstance = \"ai.cloud.roleInstance\";\r\n        this.cloudEnvironment = \"ai.cloud.environment\";\r\n        this.cloudLocation = \"ai.cloud.location\";\r\n        this.cloudDeploymentUnit = \"ai.cloud.deploymentUnit\";\r\n        this.internalNodeName = \"ai.internal.nodeName\";\r\n        this.internalSdkVersion = \"ai.internal.sdkVersion\";\r\n        this.internalAgentVersion = \"ai.internal.agentVersion\";\r\n    }\r\n    return ContextTagKeys;\r\n}());\r\nexport { ContextTagKeys };\r\n//# sourceMappingURL=ContextTagKeys.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { Util } from \"./Util\";\r\nimport { DataSanitizer } from \"./Telemetry/Common/DataSanitizer\";\r\nimport { CoreUtils } from \"@microsoft/applicationinsights-core-js\";\r\nvar TelemetryItemCreator = /** @class */ (function () {\r\n    function TelemetryItemCreator() {\r\n    }\r\n    /**\r\n     * Create a telemetry item that the 1DS channel understands\r\n     * @param item domain specific properties; part B\r\n     * @param baseType telemetry item type. ie PageViewData\r\n     * @param envelopeName name of the envelope. ie Microsoft.ApplicationInsights.<instrumentation key>.PageView\r\n     * @param customProperties user defined custom properties; part C\r\n     * @param systemProperties system properties that are added to the context; part A\r\n     * @returns ITelemetryItem that is sent to channel\r\n     */\r\n    TelemetryItemCreator.create = function (item, baseType, envelopeName, logger, customProperties, systemProperties) {\r\n        envelopeName = DataSanitizer.sanitizeString(logger, envelopeName) || Util.NotSpecified;\r\n        if (CoreUtils.isNullOrUndefined(item) ||\r\n            CoreUtils.isNullOrUndefined(baseType) ||\r\n            CoreUtils.isNullOrUndefined(envelopeName)) {\r\n            throw Error(\"Input doesn't contain all required fields\");\r\n        }\r\n        var telemetryItem = {\r\n            name: envelopeName,\r\n            time: new Date().toISOString(),\r\n            iKey: \"\",\r\n            ext: systemProperties ? systemProperties : {},\r\n            tags: [],\r\n            data: {},\r\n            baseType: baseType,\r\n            baseData: item // Part B\r\n        };\r\n        // Part C\r\n        if (!CoreUtils.isNullOrUndefined(customProperties)) {\r\n            for (var prop in customProperties) {\r\n                if (customProperties.hasOwnProperty(prop)) {\r\n                    telemetryItem.data[prop] = customProperties[prop];\r\n                }\r\n            }\r\n        }\r\n        return telemetryItem;\r\n    };\r\n    return TelemetryItemCreator;\r\n}());\r\nexport { TelemetryItemCreator };\r\n//# sourceMappingURL=TelemetryItemCreator.js.map","import { ContextTagKeys } from \"./Contracts/Generated/ContextTagKeys\";\r\nvar Extensions = /** @class */ (function () {\r\n    function Extensions() {\r\n    }\r\n    Extensions.UserExt = \"user\";\r\n    Extensions.DeviceExt = \"device\";\r\n    Extensions.TraceExt = \"trace\";\r\n    Extensions.WebExt = \"web\";\r\n    Extensions.AppExt = \"app\";\r\n    Extensions.OSExt = \"os\";\r\n    Extensions.SessionExt = \"ses\";\r\n    Extensions.SDKExt = \"sdk\";\r\n    return Extensions;\r\n}());\r\nexport { Extensions };\r\nvar SDKExtensionKeys = /** @class */ (function () {\r\n    function SDKExtensionKeys() {\r\n    }\r\n    SDKExtensionKeys.libVer = 'libVer';\r\n    return SDKExtensionKeys;\r\n}());\r\nexport { SDKExtensionKeys };\r\nexport var CtxTagKeys = new ContextTagKeys();\r\n//# sourceMappingURL=PartAExtensions.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nexport { Util, CorrelationIdHelper, UrlHelper, DateTimeUtils } from './Util';\r\nexport { FieldType } from './Enums';\r\nexport { RequestHeaders } from './RequestResponseHeaders';\r\nexport { DisabledPropertyName, ProcessLegacy, SampleRate, HttpMethod } from './Constants';\r\nexport { Data as AIData } from './Interfaces/Contracts/Generated/Data';\r\nexport { Base as AIBase } from './Interfaces/Contracts/Generated/Base';\r\nexport { Envelope } from './Telemetry/Common/Envelope';\r\nexport { Event } from './Telemetry/Event';\r\nexport { Exception } from './Telemetry/Exception';\r\nexport { Metric } from './Telemetry/Metric';\r\nexport { PageView } from './Telemetry/PageView';\r\nexport { PageViewData } from './Interfaces/Contracts/Generated/PageViewData';\r\nexport { RemoteDependencyData } from './Telemetry/RemoteDependencyData';\r\nexport { Trace } from './Telemetry/Trace';\r\nexport { PageViewPerformance } from './Telemetry/PageViewPerformance';\r\nexport { Data } from './Telemetry/Common/Data';\r\nexport { SeverityLevel } from './Interfaces/Contracts/Generated/SeverityLevel';\r\nexport { ConfigurationManager } from './Interfaces/IConfig';\r\nexport { ContextTagKeys } from './Interfaces/Contracts/Generated/ContextTagKeys';\r\nexport { DataSanitizer } from './Telemetry/Common/DataSanitizer';\r\nexport { TelemetryItemCreator } from './TelemetryItemCreator';\r\nexport { CtxTagKeys, Extensions, SDKExtensionKeys } from './Interfaces/PartAExtensions';\r\nexport var PropertiesPluginIdentifier = \"AppInsightsPropertiesPlugin\";\r\n//# sourceMappingURL=applicationinsights-common.js.map","import { Util, ProcessLegacy } from \"@microsoft/applicationinsights-common\";\r\n// ToDo: fix properties and measurements once updates are done to common\r\nvar AppInsightsDeprecated = /** @class */ (function () {\r\n    function AppInsightsDeprecated(snippet, appInsightsNew) {\r\n        this._hasLegacyInitializers = false;\r\n        this._queue = [];\r\n        this.config = AppInsightsDeprecated.getDefaultConfig(snippet.config);\r\n        this.appInsightsNew = appInsightsNew;\r\n        this.context = { addTelemetryInitializer: this.addTelemetryInitializers.bind(this) };\r\n    }\r\n    /**\r\n    * The array of telemetry initializers to call before sending each telemetry item.\r\n    */\r\n    AppInsightsDeprecated.prototype.addTelemetryInitializers = function (callBack) {\r\n        var _this = this;\r\n        // Add initializer to current processing only if there is any old telemetry initializer\r\n        if (!this._hasLegacyInitializers) {\r\n            this.appInsightsNew.addTelemetryInitializer(function (item) {\r\n                _this._processLegacyInitializers(item); // setup call back for each legacy processor\r\n            });\r\n            this._hasLegacyInitializers = true;\r\n        }\r\n        this._queue.push(callBack);\r\n    };\r\n    AppInsightsDeprecated.prototype._processLegacyInitializers = function (item) {\r\n        // instead of mapping new to legacy and then back again and repeating in channel, attach callback for channel to call\r\n        item.tags[ProcessLegacy] = this._queue;\r\n        return item;\r\n    };\r\n    AppInsightsDeprecated.prototype.startTrackPage = function (name) {\r\n        this.appInsightsNew.startTrackPage(name);\r\n    };\r\n    AppInsightsDeprecated.prototype.stopTrackPage = function (name, url, properties, measurements) {\r\n        this.appInsightsNew.stopTrackPage(name, url, properties); // update\r\n    };\r\n    AppInsightsDeprecated.prototype.trackPageView = function (name, url, properties, measurements, duration) {\r\n        var telemetry = {\r\n            name: name,\r\n            uri: url,\r\n            properties: properties,\r\n            measurements: measurements\r\n        };\r\n        // fix for props, measurements, duration\r\n        this.appInsightsNew.trackPageView(telemetry);\r\n    };\r\n    AppInsightsDeprecated.prototype.trackEvent = function (name, properties, measurements) {\r\n        this.appInsightsNew.trackEvent({ name: name });\r\n    };\r\n    AppInsightsDeprecated.prototype.trackDependency = function (id, method, absoluteUrl, pathName, totalTime, success, resultCode) {\r\n        this.appInsightsNew.trackDependencyData({\r\n            id: id,\r\n            target: absoluteUrl,\r\n            type: pathName,\r\n            duration: totalTime,\r\n            properties: { HttpMethod: method },\r\n            success: success,\r\n            responseCode: resultCode\r\n        });\r\n    };\r\n    AppInsightsDeprecated.prototype.trackException = function (exception, handledAt, properties, measurements, severityLevel) {\r\n        this.appInsightsNew.trackException({\r\n            error: exception\r\n        });\r\n    };\r\n    AppInsightsDeprecated.prototype.trackMetric = function (name, average, sampleCount, min, max, properties) {\r\n        this.appInsightsNew.trackMetric({ name: name, average: average, sampleCount: sampleCount, min: min, max: max });\r\n    };\r\n    AppInsightsDeprecated.prototype.trackTrace = function (message, properties, severityLevel) {\r\n        this.appInsightsNew.trackTrace({ message: message, severityLevel: severityLevel });\r\n    };\r\n    AppInsightsDeprecated.prototype.flush = function (async) {\r\n        this.appInsightsNew.flush(async);\r\n    };\r\n    AppInsightsDeprecated.prototype.setAuthenticatedUserContext = function (authenticatedUserId, accountId, storeInCookie) {\r\n        this.appInsightsNew.context.user.setAuthenticatedUserContext(authenticatedUserId, accountId, storeInCookie);\r\n    };\r\n    AppInsightsDeprecated.prototype.clearAuthenticatedUserContext = function () {\r\n        this.appInsightsNew.context.user.clearAuthenticatedUserContext();\r\n    };\r\n    AppInsightsDeprecated.prototype._onerror = function (message, url, lineNumber, columnNumber, error) {\r\n        this.appInsightsNew._onerror({ message: message, url: url, lineNumber: lineNumber, columnNumber: columnNumber, error: error });\r\n    };\r\n    AppInsightsDeprecated.prototype.startTrackEvent = function (name) {\r\n        this.appInsightsNew.startTrackEvent(name);\r\n    };\r\n    AppInsightsDeprecated.prototype.stopTrackEvent = function (name, properties, measurements) {\r\n        this.appInsightsNew.stopTrackEvent(name, properties, measurements);\r\n    };\r\n    AppInsightsDeprecated.prototype.downloadAndSetup = function (config) {\r\n        throw new Error(\"downloadAndSetup not implemented in web SKU\");\r\n    };\r\n    AppInsightsDeprecated.prototype.updateSnippetDefinitions = function (snippet) {\r\n        // apply full appInsights to the global instance\r\n        // Note: This must be called before loadAppInsights is called\r\n        for (var field in this) {\r\n            if (typeof field === 'string') {\r\n                snippet[field] = this[field];\r\n            }\r\n        }\r\n    };\r\n    // note: these are split into methods to enable unit tests\r\n    AppInsightsDeprecated.prototype.loadAppInsights = function () {\r\n        // initialize global instance of appInsights\r\n        //var appInsights = new Microsoft.ApplicationInsights.AppInsights(this.config);\r\n        var _this = this;\r\n        // implement legacy version of trackPageView for 0.10<\r\n        if (this.config[\"iKey\"]) {\r\n            var originalTrackPageView = this.trackPageView;\r\n            this.trackPageView = function (pagePath, properties, measurements) {\r\n                originalTrackPageView.apply(_this, [null, pagePath, properties, measurements]);\r\n            };\r\n        }\r\n        // implement legacy pageView interface if it is present in the snippet\r\n        var legacyPageView = \"logPageView\";\r\n        if (typeof this.snippet[legacyPageView] === \"function\") {\r\n            this[legacyPageView] = function (pagePath, properties, measurements) {\r\n                _this.trackPageView(null, pagePath, properties, measurements);\r\n            };\r\n        }\r\n        // implement legacy event interface if it is present in the snippet\r\n        var legacyEvent = \"logEvent\";\r\n        if (typeof this.snippet[legacyEvent] === \"function\") {\r\n            this[legacyEvent] = function (name, props, measurements) {\r\n                _this.trackEvent(name, props, measurements);\r\n            };\r\n        }\r\n        return this;\r\n    };\r\n    AppInsightsDeprecated.getDefaultConfig = function (config) {\r\n        if (!config) {\r\n            config = {};\r\n        }\r\n        // set default values\r\n        config.endpointUrl = config.endpointUrl || \"https://dc.services.visualstudio.com/v2/track\";\r\n        config.sessionRenewalMs = 30 * 60 * 1000;\r\n        config.sessionExpirationMs = 24 * 60 * 60 * 1000;\r\n        config.maxBatchSizeInBytes = config.maxBatchSizeInBytes > 0 ? config.maxBatchSizeInBytes : 102400; // 100kb\r\n        config.maxBatchInterval = !isNaN(config.maxBatchInterval) ? config.maxBatchInterval : 15000;\r\n        config.enableDebug = Util.stringToBoolOrDefault(config.enableDebug);\r\n        config.disableExceptionTracking = Util.stringToBoolOrDefault(config.disableExceptionTracking);\r\n        config.disableTelemetry = Util.stringToBoolOrDefault(config.disableTelemetry);\r\n        config.verboseLogging = Util.stringToBoolOrDefault(config.verboseLogging);\r\n        config.emitLineDelimitedJson = Util.stringToBoolOrDefault(config.emitLineDelimitedJson);\r\n        config.diagnosticLogInterval = config.diagnosticLogInterval || 10000;\r\n        config.autoTrackPageVisitTime = Util.stringToBoolOrDefault(config.autoTrackPageVisitTime);\r\n        if (isNaN(config.samplingPercentage) || config.samplingPercentage <= 0 || config.samplingPercentage >= 100) {\r\n            config.samplingPercentage = 100;\r\n        }\r\n        config.disableAjaxTracking = Util.stringToBoolOrDefault(config.disableAjaxTracking);\r\n        config.maxAjaxCallsPerView = !isNaN(config.maxAjaxCallsPerView) ? config.maxAjaxCallsPerView : 500;\r\n        config.isBeaconApiDisabled = Util.stringToBoolOrDefault(config.isBeaconApiDisabled, true);\r\n        config.disableCorrelationHeaders = Util.stringToBoolOrDefault(config.disableCorrelationHeaders);\r\n        config.correlationHeaderExcludedDomains = config.correlationHeaderExcludedDomains || [\r\n            \"*.blob.core.windows.net\",\r\n            \"*.blob.core.chinacloudapi.cn\",\r\n            \"*.blob.core.cloudapi.de\",\r\n            \"*.blob.core.usgovcloudapi.net\"\r\n        ];\r\n        config.disableFlushOnBeforeUnload = Util.stringToBoolOrDefault(config.disableFlushOnBeforeUnload);\r\n        config.enableSessionStorageBuffer = Util.stringToBoolOrDefault(config.enableSessionStorageBuffer, true);\r\n        config.isRetryDisabled = Util.stringToBoolOrDefault(config.isRetryDisabled);\r\n        config.isCookieUseDisabled = Util.stringToBoolOrDefault(config.isCookieUseDisabled);\r\n        config.isStorageUseDisabled = Util.stringToBoolOrDefault(config.isStorageUseDisabled);\r\n        config.isBrowserLinkTrackingEnabled = Util.stringToBoolOrDefault(config.isBrowserLinkTrackingEnabled);\r\n        config.enableCorsCorrelation = Util.stringToBoolOrDefault(config.enableCorsCorrelation);\r\n        return config;\r\n    };\r\n    return AppInsightsDeprecated;\r\n}());\r\nexport { AppInsightsDeprecated };\r\n//# sourceMappingURL=ApplicationInsightsDeprecated.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { DateTimeUtils, Util } from '@microsoft/applicationinsights-common';\r\nimport { CoreUtils, LoggingSeverity, _InternalMessageId } from '@microsoft/applicationinsights-core-js';\r\n/**\r\n* Class encapsulates sending page views and page view performance telemetry.\r\n*/\r\nvar PageViewManager = /** @class */ (function () {\r\n    function PageViewManager(appInsights, overridePageViewDuration, core, pageViewPerformanceManager) {\r\n        this.pageViewPerformanceSent = false;\r\n        this.overridePageViewDuration = false;\r\n        this.overridePageViewDuration = overridePageViewDuration;\r\n        this.appInsights = appInsights;\r\n        this._pageViewPerformanceManager = pageViewPerformanceManager;\r\n        if (core) {\r\n            this._channel = function () { return (core.getTransmissionControls()); };\r\n            this._logger = core.logger;\r\n        }\r\n    }\r\n    /**\r\n    * Currently supported cases:\r\n    * 1) (default case) track page view called with default parameters, overridePageViewDuration = false. Page view is sent with page view performance when navigation timing data is available.\r\n    *    a. If navigation timing is not supported then page view is sent right away with undefined duration. Page view performance is not sent.\r\n    * 2) overridePageViewDuration = true, custom duration provided. Custom duration is used, page view sends right away.\r\n    * 3) overridePageViewDuration = true, custom duration NOT provided. Page view is sent right away, duration is time spent from page load till now (or undefined if navigation timing is not supported).\r\n    * 4) overridePageViewDuration = false, custom duration is provided. Page view is sent right away with custom duration.\r\n    *\r\n    * In all cases page view performance is sent once (only for the 1st call of trackPageView), or not sent if navigation timing is not supported.\r\n    */\r\n    PageViewManager.prototype.trackPageView = function (pageView, customProperties) {\r\n        var _this = this;\r\n        var name = pageView.name;\r\n        if (CoreUtils.isNullOrUndefined(name) || typeof name !== \"string\") {\r\n            pageView.name = window.document && window.document.title || \"\";\r\n        }\r\n        var uri = pageView.uri;\r\n        if (CoreUtils.isNullOrUndefined(uri) || typeof uri !== \"string\") {\r\n            pageView.uri = window.location && window.location.href || \"\";\r\n        }\r\n        // case 1a. if performance timing is not supported by the browser, send the page view telemetry with the duration provided by the user. If the user\r\n        // do not provide the duration, set duration to undefined\r\n        // Also this is case 4\r\n        if (!this._pageViewPerformanceManager.isPerformanceTimingSupported()) {\r\n            this.appInsights.sendPageViewInternal(pageView, customProperties);\r\n            this._channel().forEach(function (queues) { queues.forEach(function (q) { return q.flush(true); }); });\r\n            // no navigation timing (IE 8, iOS Safari 8.4, Opera Mini 8 - see http://caniuse.com/#feat=nav-timing)\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.NavigationTimingNotSupported, \"trackPageView: navigation timing API used for calculation of page duration is not supported in this browser. This page view will be collected without duration and timing info.\");\r\n            return;\r\n        }\r\n        var pageViewSent = false;\r\n        var customDuration = undefined;\r\n        // if the performance timing is supported by the browser, calculate the custom duration\r\n        var start = this._pageViewPerformanceManager.getPerformanceTiming().navigationStart;\r\n        customDuration = DateTimeUtils.GetDuration(start, +new Date);\r\n        if (!this._pageViewPerformanceManager.shouldCollectDuration(customDuration)) {\r\n            customDuration = undefined;\r\n        }\r\n        // if the user has provided duration, send a page view telemetry with the provided duration. Otherwise, if\r\n        // overridePageViewDuration is set to true, send a page view telemetry with the custom duration calculated earlier\r\n        var duration = undefined;\r\n        if (!CoreUtils.isNullOrUndefined(customProperties) &&\r\n            !CoreUtils.isNullOrUndefined(customProperties.duration)) {\r\n            duration = customProperties.duration;\r\n        }\r\n        if (this.overridePageViewDuration || !isNaN(duration)) {\r\n            if (isNaN(duration)) {\r\n                // case 3\r\n                if (!customProperties) {\r\n                    customProperties = {};\r\n                }\r\n                customProperties[\"duration\"] = customDuration;\r\n            }\r\n            // case 2\r\n            this.appInsights.sendPageViewInternal(pageView, customProperties);\r\n            this._channel().forEach(function (queues) { queues.forEach(function (q) { return q.flush(true); }); });\r\n            pageViewSent = true;\r\n        }\r\n        // now try to send the page view performance telemetry\r\n        var maxDurationLimit = 60000;\r\n        if (!customProperties) {\r\n            customProperties = {};\r\n        }\r\n        var handle = setInterval((function () {\r\n            try {\r\n                if (_this._pageViewPerformanceManager.isPerformanceTimingDataReady()) {\r\n                    clearInterval(handle);\r\n                    var pageViewPerformance = {\r\n                        name: name,\r\n                        uri: uri\r\n                    };\r\n                    _this._pageViewPerformanceManager.populatePageViewPerformanceEvent(pageViewPerformance);\r\n                    if (!pageViewPerformance.isValid && !pageViewSent) {\r\n                        // If navigation timing gives invalid numbers, then go back to \"override page view duration\" mode.\r\n                        // That's the best value we can get that makes sense.\r\n                        customProperties[\"duration\"] = customDuration;\r\n                        _this.appInsights.sendPageViewInternal(pageView, customProperties);\r\n                        _this._channel().forEach(function (queues) { queues.forEach(function (q) { return q.flush(true); }); });\r\n                    }\r\n                    else {\r\n                        if (!pageViewSent) {\r\n                            customProperties[\"duration\"] = pageViewPerformance.durationMs;\r\n                            _this.appInsights.sendPageViewInternal(pageView, customProperties);\r\n                        }\r\n                        if (!_this.pageViewPerformanceSent) {\r\n                            _this.appInsights.sendPageViewPerformanceInternal(pageViewPerformance, customProperties);\r\n                            _this.pageViewPerformanceSent = true;\r\n                        }\r\n                        _this._channel().forEach(function (queues) { queues.forEach(function (q) { return q.flush(true); }); });\r\n                    }\r\n                }\r\n                else if (DateTimeUtils.GetDuration(start, +new Date) > maxDurationLimit) {\r\n                    // if performance timings are not ready but we exceeded the maximum duration limit, just log a page view telemetry\r\n                    // with the maximum duration limit. Otherwise, keep waiting until performance timings are ready\r\n                    clearInterval(handle);\r\n                    if (!pageViewSent) {\r\n                        customProperties[\"duration\"] = maxDurationLimit;\r\n                        _this.appInsights.sendPageViewInternal(pageView, customProperties);\r\n                        _this._channel().forEach(function (queues) { queues.forEach(function (q) { return q.flush(true); }); });\r\n                    }\r\n                }\r\n            }\r\n            catch (e) {\r\n                _this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TrackPVFailedCalc, \"trackPageView failed on page load calculation: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }), 100);\r\n    };\r\n    return PageViewManager;\r\n}());\r\nexport { PageViewManager };\r\n//# sourceMappingURL=PageViewManager.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { Util, DateTimeUtils } from '@microsoft/applicationinsights-common';\r\nimport { LoggingSeverity, _InternalMessageId } from '@microsoft/applicationinsights-core-js';\r\n/**\r\n* Class encapsulates sending page view performance telemetry.\r\n*/\r\nvar PageViewPerformanceManager = /** @class */ (function () {\r\n    function PageViewPerformanceManager(core) {\r\n        this.MAX_DURATION_ALLOWED = 3600000; // 1h\r\n        if (core) {\r\n            this._logger = core.logger;\r\n        }\r\n    }\r\n    PageViewPerformanceManager.prototype.populatePageViewPerformanceEvent = function (pageViewPerformance) {\r\n        pageViewPerformance.isValid = false;\r\n        /*\r\n         * http://www.w3.org/TR/navigation-timing/#processing-model\r\n         *  |-navigationStart\r\n         *  |             |-connectEnd\r\n         *  |             ||-requestStart\r\n         *  |             ||             |-responseStart\r\n         *  |             ||             |              |-responseEnd\r\n         *  |             ||             |              |\r\n         *  |             ||             |              |         |-loadEventEnd\r\n         *  |---network---||---request---|---response---|---dom---|\r\n         *  |--------------------------total----------------------|\r\n         */\r\n        var timing = this.getPerformanceTiming();\r\n        if (timing) {\r\n            var total = DateTimeUtils.GetDuration(timing.navigationStart, timing.loadEventEnd);\r\n            var network = DateTimeUtils.GetDuration(timing.navigationStart, timing.connectEnd);\r\n            var request = DateTimeUtils.GetDuration(timing.requestStart, timing.responseStart);\r\n            var response = DateTimeUtils.GetDuration(timing.responseStart, timing.responseEnd);\r\n            var dom = DateTimeUtils.GetDuration(timing.responseEnd, timing.loadEventEnd);\r\n            if (total == 0) {\r\n                this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.ErrorPVCalc, \"error calculating page view performance.\", { total: total, network: network, request: request, response: response, dom: dom });\r\n            }\r\n            else if (!this.shouldCollectDuration(total, network, request, response, dom)) {\r\n                this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.InvalidDurationValue, \"Invalid page load duration value. Browser perf data won't be sent.\", { total: total, network: network, request: request, response: response, dom: dom });\r\n            }\r\n            else if (total < Math.floor(network) + Math.floor(request) + Math.floor(response) + Math.floor(dom)) {\r\n                // some browsers may report individual components incorrectly so that the sum of the parts will be bigger than total PLT\r\n                // in this case, don't report client performance from this page\r\n                this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.ClientPerformanceMathError, \"client performance math error.\", { total: total, network: network, request: request, response: response, dom: dom });\r\n            }\r\n            else {\r\n                pageViewPerformance.durationMs = total;\r\n                // // convert to timespans\r\n                pageViewPerformance.perfTotal = pageViewPerformance.duration = Util.msToTimeSpan(total);\r\n                pageViewPerformance.networkConnect = Util.msToTimeSpan(network);\r\n                pageViewPerformance.sentRequest = Util.msToTimeSpan(request);\r\n                pageViewPerformance.receivedResponse = Util.msToTimeSpan(response);\r\n                pageViewPerformance.domProcessing = Util.msToTimeSpan(dom);\r\n                pageViewPerformance.isValid = true;\r\n            }\r\n        }\r\n    };\r\n    PageViewPerformanceManager.prototype.getPerformanceTiming = function () {\r\n        if (this.isPerformanceTimingSupported()) {\r\n            return window.performance.timing;\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n    * Returns true is window performance timing API is supported, false otherwise.\r\n    */\r\n    PageViewPerformanceManager.prototype.isPerformanceTimingSupported = function () {\r\n        return typeof window != \"undefined\" && window.performance && window.performance.timing;\r\n    };\r\n    /**\r\n    * As page loads different parts of performance timing numbers get set. When all of them are set we can report it.\r\n    * Returns true if ready, false otherwise.\r\n    */\r\n    PageViewPerformanceManager.prototype.isPerformanceTimingDataReady = function () {\r\n        var timing = window.performance.timing;\r\n        return timing.domainLookupStart > 0\r\n            && timing.navigationStart > 0\r\n            && timing.responseStart > 0\r\n            && timing.requestStart > 0\r\n            && timing.loadEventEnd > 0\r\n            && timing.responseEnd > 0\r\n            && timing.connectEnd > 0\r\n            && timing.domLoading > 0;\r\n    };\r\n    /**\r\n    * This method tells if given durations should be excluded from collection.\r\n    */\r\n    PageViewPerformanceManager.prototype.shouldCollectDuration = function () {\r\n        var durations = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            durations[_i] = arguments[_i];\r\n        }\r\n        // a full list of Google crawlers user agent strings - https://support.google.com/webmasters/answer/1061943?hl=en\r\n        var botAgentNames = ['googlebot', 'adsbot-google', 'apis-google', 'mediapartners-google'];\r\n        var userAgent = navigator.userAgent;\r\n        var isGoogleBot = false;\r\n        if (userAgent) {\r\n            for (var i_1 = 0; i_1 < botAgentNames.length; i_1++) {\r\n                isGoogleBot = isGoogleBot || userAgent.toLowerCase().indexOf(botAgentNames[i_1]) !== -1;\r\n            }\r\n        }\r\n        if (isGoogleBot) {\r\n            // Don't report durations for GoogleBot, it is returning invalid values in performance.timing API.\r\n            return false;\r\n        }\r\n        else {\r\n            // for other page views, don't report if it's outside of a reasonable range\r\n            for (var i = 0; i < durations.length; i++) {\r\n                if (durations[i] >= this.MAX_DURATION_ALLOWED) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    return PageViewPerformanceManager;\r\n}());\r\nexport { PageViewPerformanceManager };\r\n//# sourceMappingURL=PageViewPerformanceManager.js.map","/**\r\n * ApplicationInsights.ts\r\n * @copyright Microsoft 2018\r\n */\r\nimport { Util, PageViewPerformance, PageView, RemoteDependencyData, Event, TelemetryItemCreator, Metric, Exception, SeverityLevel, Trace, ConfigurationManager, DateTimeUtils } from \"@microsoft/applicationinsights-common\";\r\nimport { CoreUtils, LoggingSeverity, _InternalMessageId, } from \"@microsoft/applicationinsights-core-js\";\r\nimport { PageViewManager } from \"./Telemetry/PageViewManager\";\r\nimport { PageViewPerformanceManager } from './Telemetry/PageViewPerformanceManager';\r\n\"use strict\";\r\nvar durationProperty = \"duration\";\r\nvar ApplicationInsights = /** @class */ (function () {\r\n    function ApplicationInsights() {\r\n        this.identifier = \"ApplicationInsightsAnalytics\"; // do not change name or priority\r\n        this.priority = 160; // take from reserved priority range 100- 200\r\n        this._isInitialized = false;\r\n        // Counts number of trackAjax invokations.\r\n        // By default we only monitor X ajax call per view to avoid too much load.\r\n        // Default value is set in config.\r\n        // This counter keeps increasing even after the limit is reached.\r\n        this._trackAjaxAttempts = 0;\r\n        this.initialize = this._initialize.bind(this);\r\n    }\r\n    ApplicationInsights.getDefaultConfig = function (config) {\r\n        if (!config) {\r\n            config = {};\r\n        }\r\n        // set default values\r\n        config.sessionRenewalMs = 30 * 60 * 1000;\r\n        config.sessionExpirationMs = 24 * 60 * 60 * 1000;\r\n        config.disableExceptionTracking = Util.stringToBoolOrDefault(config.disableExceptionTracking);\r\n        config.autoTrackPageVisitTime = Util.stringToBoolOrDefault(config.autoTrackPageVisitTime);\r\n        if (isNaN(config.samplingPercentage) || config.samplingPercentage <= 0 || config.samplingPercentage >= 100) {\r\n            config.samplingPercentage = 100;\r\n        }\r\n        config.isCookieUseDisabled = Util.stringToBoolOrDefault(config.isCookieUseDisabled);\r\n        config.isStorageUseDisabled = Util.stringToBoolOrDefault(config.isStorageUseDisabled);\r\n        config.isBrowserLinkTrackingEnabled = Util.stringToBoolOrDefault(config.isBrowserLinkTrackingEnabled);\r\n        return config;\r\n    };\r\n    ApplicationInsights.prototype.processTelemetry = function (env) {\r\n        var doNotSendItem = false;\r\n        var telemetryInitializersCount = this._telemetryInitializers.length;\r\n        for (var i = 0; i < telemetryInitializersCount; ++i) {\r\n            var telemetryInitializer = this._telemetryInitializers[i];\r\n            if (telemetryInitializer) {\r\n                try {\r\n                    if (telemetryInitializer.apply(null, [env]) === false) {\r\n                        doNotSendItem = true;\r\n                        break;\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // log error but dont stop executing rest of the telemetry initializers\r\n                    // doNotSendItem = true;\r\n                    this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TelemetryInitializerFailed, \"One of telemetry initializers failed, telemetry item will not be sent: \" + Util.getExceptionName(e), { exception: Util.dump(e) }, true);\r\n                }\r\n            }\r\n        }\r\n        if (!doNotSendItem && !CoreUtils.isNullOrUndefined(this._nextPlugin)) {\r\n            this._nextPlugin.processTelemetry(env);\r\n        }\r\n    };\r\n    ApplicationInsights.prototype.setNextPlugin = function (next) {\r\n        this._nextPlugin = next;\r\n    };\r\n    ApplicationInsights.prototype.trackEvent = function (event, customProperties) {\r\n        try {\r\n            var telemetryItem = TelemetryItemCreator.create(event, Event.dataType, Event.envelopeType, this._logger, customProperties);\r\n            this._setTelemetryNameAndIKey(telemetryItem);\r\n            this.core.track(telemetryItem);\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.TrackTraceFailed, \"trackTrace failed, trace will not be collected: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n    };\r\n    /**\r\n      * Start timing an extended event. Call `stopTrackEvent` to log the event when it ends.\r\n      * @param   name    A string that identifies this event uniquely within the document.\r\n    */\r\n    ApplicationInsights.prototype.startTrackEvent = function (name) {\r\n        try {\r\n            this._eventTracking.start(name);\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.StartTrackEventFailed, \"startTrackEvent failed, event will not be collected: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n    };\r\n    /**\r\n     * Log an extended event that you started timing with `startTrackEvent`.\r\n     * @param   name    The string you used to identify this event in `startTrackEvent`.\r\n     * @param   properties  map[string, string] - additional data used to filter events and metrics in the portal. Defaults to empty.\r\n     * @param   measurements    map[string, number] - metrics associated with this event, displayed in Metrics Explorer on the portal. Defaults to empty.\r\n     */\r\n    ApplicationInsights.prototype.stopTrackEvent = function (name, properties, measurements) {\r\n        try {\r\n            this._eventTracking.stop(name, undefined, properties); // Todo: Fix to pass measurements once type is updated\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.StopTrackEventFailed, \"stopTrackEvent failed, event will not be collected: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n    };\r\n    /**\r\n     * @description Log a diagnostic message\r\n     * @param {ITraceTelemetry} trace\r\n     * @param ICustomProperties.\r\n     * @memberof ApplicationInsights\r\n     */\r\n    ApplicationInsights.prototype.trackTrace = function (trace, customProperties) {\r\n        try {\r\n            var telemetryItem = TelemetryItemCreator.create(trace, Trace.dataType, Trace.envelopeType, this._logger, customProperties);\r\n            this._setTelemetryNameAndIKey(telemetryItem);\r\n            this.core.track(telemetryItem);\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.TrackTraceFailed, \"trackTrace failed, trace will not be collected: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n    };\r\n    /**\r\n     * @description Log a numeric value that is not associated with a specific event. Typically\r\n     * used to send regular reports of performance indicators. To send single measurement, just\r\n     * use the name and average fields of {@link IMetricTelemetry}. If you take measurements\r\n     * frequently, you can reduce the telemetry bandwidth by aggregating multiple measurements\r\n     * and sending the resulting average at intervals\r\n     * @param {IMetricTelemetry} metric input object argument. Only name and average are mandatory.\r\n     * @param {{[key: string]: any}} customProperties additional data used to filter metrics in the\r\n     * portal. Defaults to empty.\r\n     * @memberof ApplicationInsights\r\n     */\r\n    ApplicationInsights.prototype.trackMetric = function (metric, customProperties) {\r\n        try {\r\n            var telemetryItem = TelemetryItemCreator.create(metric, Metric.dataType, Metric.envelopeType, this._logger, customProperties);\r\n            this._setTelemetryNameAndIKey(telemetryItem);\r\n            this.core.track(telemetryItem);\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TrackMetricFailed, \"trackMetric failed, metric will not be collected: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n    };\r\n    /**\r\n     * Logs that a page or other item was viewed.\r\n     * @param IPageViewTelemetry The string you used as the name in startTrackPage. Defaults to the document title.\r\n     * @param customProperties Additional data used to filter events and metrics. Defaults to empty.\r\n     * If a user wants to provide duration for pageLoad, it'll have to be in pageView.properties.duration\r\n     */\r\n    ApplicationInsights.prototype.trackPageView = function (pageView, customProperties) {\r\n        try {\r\n            this._pageViewManager.trackPageView(pageView, customProperties);\r\n            if (this.config.autoTrackPageVisitTime) {\r\n                this._pageVisitTimeManager.trackPreviousPageVisit(pageView.name, pageView.uri);\r\n            }\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TrackPVFailed, \"trackPageView failed, page view will not be collected: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n    };\r\n    /**\r\n     * Create a page view telemetry item and send it to the SDK pipeline through the core.track API\r\n     * @param pageView Page view item to be sent\r\n     * @param properties Custom properties (Part C) that a user can add to the telemetry item\r\n     * @param systemProperties System level properties (Part A) that a user can add to the telemetry item\r\n     */\r\n    ApplicationInsights.prototype.sendPageViewInternal = function (pageView, properties, systemProperties) {\r\n        if (typeof document !== \"undefined\") {\r\n            pageView.refUri = pageView.refUri || document.referrer;\r\n        }\r\n        var telemetryItem = TelemetryItemCreator.create(pageView, PageView.dataType, PageView.envelopeType, this._logger, properties, systemProperties);\r\n        // set instrumentation key\r\n        this._setTelemetryNameAndIKey(telemetryItem);\r\n        this.core.track(telemetryItem);\r\n        // reset ajaxes counter\r\n        this._trackAjaxAttempts = 0;\r\n    };\r\n    /**\r\n     * @ignore INTERNAL ONLY\r\n     * @param pageViewPerformance\r\n     * @param properties\r\n     */\r\n    ApplicationInsights.prototype.sendPageViewPerformanceInternal = function (pageViewPerformance, properties, systemProperties) {\r\n        var telemetryItem = TelemetryItemCreator.create(pageViewPerformance, PageViewPerformance.dataType, PageViewPerformance.envelopeType, this._logger, properties, systemProperties);\r\n        // set instrumentation key\r\n        this._setTelemetryNameAndIKey(telemetryItem);\r\n        this.core.track(telemetryItem);\r\n    };\r\n    /**\r\n     * Send browser performance metrics.\r\n     * @param pageViewPerformance\r\n     * @param customProperties\r\n     */\r\n    ApplicationInsights.prototype.trackPageViewPerformance = function (pageViewPerformance, customProperties) {\r\n        try {\r\n            this._pageViewPerformanceManager.populatePageViewPerformanceEvent(pageViewPerformance);\r\n            this.sendPageViewPerformanceInternal(pageViewPerformance, customProperties);\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TrackPVFailed, \"trackPageViewPerformance failed, page view will not be collected: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n    };\r\n    /**\r\n     * Starts the timer for tracking a page load time. Use this instead of `trackPageView` if you want to control when the page view timer starts and stops,\r\n     * but don't want to calculate the duration yourself. This method doesn't send any telemetry. Call `stopTrackPage` to log the end of the page view\r\n     * and send the event.\r\n     * @param name A string that idenfities this item, unique within this HTML document. Defaults to the document title.\r\n     */\r\n    ApplicationInsights.prototype.startTrackPage = function (name) {\r\n        try {\r\n            if (typeof name !== \"string\") {\r\n                name = window.document && window.document.title || \"\";\r\n            }\r\n            this._pageTracking.start(name);\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.StartTrackFailed, \"startTrackPage failed, page view may not be collected: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n    };\r\n    /**\r\n     * Stops the timer that was started by calling `startTrackPage` and sends the pageview load time telemetry with the specified properties and measurements.\r\n     * The duration of the page view will be the time between calling `startTrackPage` and `stopTrackPage`.\r\n     * @param   name  The string you used as the name in startTrackPage. Defaults to the document title.\r\n     * @param   url   String - a relative or absolute URL that identifies the page or other item. Defaults to the window location.\r\n     * @param   properties  map[string, string] - additional data used to filter pages and metrics in the portal. Defaults to empty.\r\n     * @param   measurements    map[string, number] - metrics associated with this page, displayed in Metrics Explorer on the portal. Defaults to empty.\r\n     */\r\n    ApplicationInsights.prototype.stopTrackPage = function (name, url, properties, measurement) {\r\n        try {\r\n            if (typeof name !== \"string\") {\r\n                name = window.document && window.document.title || \"\";\r\n            }\r\n            if (typeof url !== \"string\") {\r\n                url = window.location && window.location.href || \"\";\r\n            }\r\n            this._pageTracking.stop(name, url, properties, measurement);\r\n            if (this.config.autoTrackPageVisitTime) {\r\n                this._pageVisitTimeManager.trackPreviousPageVisit(name, url);\r\n            }\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.StopTrackFailed, \"stopTrackPage failed, page view will not be collected: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n    };\r\n    /**\r\n    * @ignore INTERNAL ONLY\r\n    * @param exception\r\n    * @param properties\r\n    * @param systemProperties\r\n    */\r\n    ApplicationInsights.prototype.sendExceptionInternal = function (exception, customProperties, systemProperties) {\r\n        var baseData = new Exception(this._logger, exception.error, exception.properties, exception.measurements, exception.severityLevel);\r\n        var telemetryItem = TelemetryItemCreator.create(baseData, Exception.dataType, Exception.envelopeType, this._logger, customProperties, systemProperties);\r\n        this._setTelemetryNameAndIKey(telemetryItem);\r\n        this.core.track(telemetryItem);\r\n    };\r\n    /**\r\n     * Log an exception you have caught.\r\n     *\r\n     * @param {IExceptionTelemetry} exception   Object which contains exception to be sent\r\n     * @param {{[key: string]: any}} customProperties   Additional data used to filter pages and metrics in the portal. Defaults to empty.\r\n     *\r\n     * Any property of type double will be considered a measurement, and will be treated by Application Insights as a metric.\r\n     * @memberof ApplicationInsights\r\n     */\r\n    ApplicationInsights.prototype.trackException = function (exception, customProperties) {\r\n        try {\r\n            this.sendExceptionInternal(exception, customProperties);\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TrackExceptionFailed, \"trackException failed, exception will not be collected: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n    };\r\n    /**\r\n     * @description Custom error handler for Application Insights Analytics\r\n     * @param {IAutoExceptionTelemetry} exception\r\n     * @memberof ApplicationInsights\r\n     */\r\n    ApplicationInsights.prototype._onerror = function (exception) {\r\n        try {\r\n            var properties = {\r\n                url: (exception && exception.url) || document.URL,\r\n                lineNumber: exception.lineNumber,\r\n                columnNumber: exception.columnNumber,\r\n                message: exception.message\r\n            };\r\n            if (Util.isCrossOriginError(exception.message, exception.url, exception.lineNumber, exception.columnNumber, exception.error)) {\r\n                this._sendCORSException(properties.url);\r\n            }\r\n            else {\r\n                if (!Util.isError(exception.error)) {\r\n                    var stack = \"window.onerror@\" + properties.url + \":\" + exception.lineNumber + \":\" + (exception.columnNumber || 0);\r\n                    exception.error = new Error(exception.message);\r\n                    exception.error.stack = stack;\r\n                }\r\n                this.trackException({ error: exception.error, severityLevel: SeverityLevel.Error }, properties);\r\n            }\r\n        }\r\n        catch (e) {\r\n            var errorString = exception.error ?\r\n                (exception.error.name + \", \" + exception.error.message)\r\n                : \"null\";\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.ExceptionWhileLoggingError, \"_onError threw exception while logging error, error will not be collected: \"\r\n                + Util.getExceptionName(e), { exception: Util.dump(e), errorString: errorString });\r\n        }\r\n    };\r\n    ApplicationInsights.prototype.addTelemetryInitializer = function (telemetryInitializer) {\r\n        this._telemetryInitializers.push(telemetryInitializer);\r\n    };\r\n    ApplicationInsights.prototype._initialize = function (config, core, extensions) {\r\n        var _this = this;\r\n        if (this._isInitialized) {\r\n            return;\r\n        }\r\n        if (CoreUtils.isNullOrUndefined(core)) {\r\n            throw Error(\"Error initializing\");\r\n        }\r\n        this.core = core;\r\n        this._logger = core.logger;\r\n        this._globalconfig = {\r\n            instrumentationKey: config.instrumentationKey,\r\n            endpointUrl: config.endpointUrl || \"https://dc.services.visualstudio.com/v2/track\"\r\n        };\r\n        this.config = config.extensionConfig && config.extensionConfig[this.identifier] ? config.extensionConfig[this.identifier] : {};\r\n        // load default values if specified\r\n        var defaults = ApplicationInsights.getDefaultConfig();\r\n        if (defaults !== undefined) {\r\n            for (var field in defaults) {\r\n                // for each unspecified field, set the default value\r\n                this.config[field] = ConfigurationManager.getConfig(config, field, this.identifier, defaults[field]);\r\n            }\r\n            if (this._globalconfig) {\r\n                for (var field in defaults) {\r\n                    if (this._globalconfig[field] === undefined) {\r\n                        this._globalconfig[field] = defaults[field];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // Todo: move this out of static state\r\n        if (this.config.isCookieUseDisabled) {\r\n            Util.disableCookies();\r\n        }\r\n        // Todo: move this out of static state\r\n        if (this.config.isStorageUseDisabled) {\r\n            Util.disableStorage();\r\n        }\r\n        var configGetters = {\r\n            instrumentationKey: function () { return config.instrumentationKey; },\r\n            accountId: function () { return _this.config.accountId || config.accountId; },\r\n            sessionRenewalMs: function () { return _this.config.sessionRenewalMs || config.sessionRenewalMs; },\r\n            sessionExpirationMs: function () { return _this.config.sessionExpirationMs || config.sessionExpirationMs; },\r\n            sampleRate: function () { return _this.config.samplingPercentage || config.samplingPercentage; },\r\n            cookieDomain: function () { return _this.config.cookieDomain || config.cookieDomain; },\r\n            sdkExtension: function () { return _this.config.sdkExtension || config.sdkExtension; },\r\n            isBrowserLinkTrackingEnabled: function () { return _this.config.isBrowserLinkTrackingEnabled || config.isBrowserLinkTrackingEnabled; },\r\n            appId: function () { return _this.config.appId || config.appId; }\r\n        };\r\n        this._pageViewPerformanceManager = new PageViewPerformanceManager(this.core);\r\n        this._pageViewManager = new PageViewManager(this, this.config.overridePageViewDuration, this.core, this._pageViewPerformanceManager);\r\n        this._telemetryInitializers = [];\r\n        this._addDefaultTelemetryInitializers(configGetters);\r\n        this._eventTracking = new Timing(this._logger, \"trackEvent\");\r\n        this._eventTracking.action =\r\n            function (name, url, duration, properties) {\r\n                if (!properties) {\r\n                    properties = {};\r\n                }\r\n                properties[durationProperty] = duration.toString();\r\n                _this.trackEvent({ name: name, properties: properties });\r\n            };\r\n        // initialize page view timing\r\n        this._pageTracking = new Timing(this._logger, \"trackPageView\");\r\n        this._pageTracking.action = function (name, url, duration, properties, measurements) {\r\n            // duration must be a custom property in order for the collector to extract it\r\n            if (CoreUtils.isNullOrUndefined(properties)) {\r\n                properties = {};\r\n            }\r\n            properties[durationProperty] = duration.toString();\r\n            var pageViewItem = {\r\n                name: name,\r\n                uri: url,\r\n                properties: properties,\r\n                measurements: measurements\r\n            };\r\n            _this.sendPageViewInternal(pageViewItem);\r\n        };\r\n        if (this.config.disableExceptionTracking === false &&\r\n            !this.config.autoExceptionInstrumented) {\r\n            // We want to enable exception auto collection and it has not been done so yet\r\n            var onerror_1 = \"onerror\";\r\n            var originalOnError_1 = window[onerror_1];\r\n            var instance_1 = this;\r\n            window.onerror = function (message, url, lineNumber, columnNumber, error) {\r\n                var handled = originalOnError_1 && originalOnError_1(message, url, lineNumber, columnNumber, error);\r\n                if (handled !== true) {\r\n                    instance_1._onerror({\r\n                        message: message,\r\n                        url: url,\r\n                        lineNumber: lineNumber,\r\n                        columnNumber: columnNumber,\r\n                        error: error\r\n                    });\r\n                }\r\n                return handled;\r\n            };\r\n            this.config.autoExceptionInstrumented = true;\r\n        }\r\n        this._isInitialized = true;\r\n    };\r\n    ApplicationInsights.prototype._addDefaultTelemetryInitializers = function (configGetters) {\r\n        if (!configGetters.isBrowserLinkTrackingEnabled()) {\r\n            var browserLinkPaths_1 = ['/browserLinkSignalR/', '/__browserLink/'];\r\n            var dropBrowserLinkRequests = function (envelope) {\r\n                if (envelope.baseType === RemoteDependencyData.dataType) {\r\n                    var remoteData = envelope.baseData;\r\n                    if (remoteData) {\r\n                        for (var i = 0; i < browserLinkPaths_1.length; i++) {\r\n                            if (remoteData.target && remoteData.target.indexOf(browserLinkPaths_1[i]) >= 0) {\r\n                                return false;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                return true;\r\n            };\r\n            this._addTelemetryInitializer(dropBrowserLinkRequests);\r\n        }\r\n    };\r\n    ApplicationInsights.prototype._addTelemetryInitializer = function (telemetryInitializer) {\r\n        this._telemetryInitializers.push(telemetryInitializer);\r\n    };\r\n    ApplicationInsights.prototype._sendCORSException = function (url) {\r\n        var exception = {\r\n            message: \"Script error: The browser's same-origin policy prevents us from getting the details of this exception. Consider using the 'crossorigin' attribute.\",\r\n            url: url,\r\n            lineNumber: 0,\r\n            columnNumber: 0,\r\n            error: undefined\r\n        };\r\n        var telemetryItem = TelemetryItemCreator.create(exception, Exception.dataType, Exception.envelopeType, this._logger, { url: url });\r\n        this.core.track(telemetryItem);\r\n    };\r\n    // Mutate telemetryItem inplace to add boilerplate iKey & name info\r\n    ApplicationInsights.prototype._setTelemetryNameAndIKey = function (telemetryItem) {\r\n        telemetryItem.iKey = this._globalconfig.instrumentationKey;\r\n        var iKeyNoDashes = this._globalconfig.instrumentationKey.replace(/-/g, \"\");\r\n        telemetryItem.name = telemetryItem.name.replace(\"{0}\", iKeyNoDashes);\r\n    };\r\n    ApplicationInsights.Version = \"2.0.0-beta.3\";\r\n    return ApplicationInsights;\r\n}());\r\nexport { ApplicationInsights };\r\n/**\r\n * Used to record timed events and page views.\r\n */\r\nvar Timing = /** @class */ (function () {\r\n    function Timing(logger, name) {\r\n        this._name = name;\r\n        this._events = {};\r\n        this._logger = logger;\r\n    }\r\n    Timing.prototype.start = function (name) {\r\n        if (typeof this._events[name] !== \"undefined\") {\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.StartCalledMoreThanOnce, \"start was called more than once for this event without calling stop.\", { name: this._name, key: name }, true);\r\n        }\r\n        this._events[name] = +new Date;\r\n    };\r\n    Timing.prototype.stop = function (name, url, properties, measurements) {\r\n        var start = this._events[name];\r\n        if (isNaN(start)) {\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.StopCalledWithoutStart, \"stop was called without a corresponding start.\", { name: this._name, key: name }, true);\r\n        }\r\n        else {\r\n            var end = +new Date;\r\n            var duration = DateTimeUtils.GetDuration(start, end);\r\n            this.action(name, url, duration, properties, measurements);\r\n        }\r\n        delete this._events[name];\r\n        this._events[name] = undefined;\r\n    };\r\n    return Timing;\r\n}());\r\n//# sourceMappingURL=ApplicationInsights.js.map","import { Util } from '@microsoft/applicationinsights-common';\r\nimport { LoggingSeverity, _InternalMessageId } from '@microsoft/applicationinsights-core-js';\r\n/*\r\n * An array based send buffer.\r\n */\r\nvar ArraySendBuffer = /** @class */ (function () {\r\n    function ArraySendBuffer(config) {\r\n        this._config = config;\r\n        this._buffer = [];\r\n    }\r\n    ArraySendBuffer.prototype.enqueue = function (payload) {\r\n        this._buffer.push(payload);\r\n    };\r\n    ArraySendBuffer.prototype.count = function () {\r\n        return this._buffer.length;\r\n    };\r\n    ArraySendBuffer.prototype.clear = function () {\r\n        this._buffer.length = 0;\r\n    };\r\n    ArraySendBuffer.prototype.getItems = function () {\r\n        return this._buffer.slice(0);\r\n    };\r\n    ArraySendBuffer.prototype.batchPayloads = function (payload) {\r\n        if (payload && payload.length > 0) {\r\n            var batch = this._config.emitLineDelimitedJson() ?\r\n                payload.join(\"\\n\") :\r\n                \"[\" + payload.join(\",\") + \"]\";\r\n            return batch;\r\n        }\r\n        return null;\r\n    };\r\n    ArraySendBuffer.prototype.markAsSent = function (payload) {\r\n        this.clear();\r\n    };\r\n    ArraySendBuffer.prototype.clearSent = function (payload) {\r\n        // not supported\r\n    };\r\n    return ArraySendBuffer;\r\n}());\r\nexport { ArraySendBuffer };\r\n/*\r\n * Session storege buffer holds a copy of all unsent items in the browser session storage.\r\n */\r\nvar SessionStorageSendBuffer = /** @class */ (function () {\r\n    function SessionStorageSendBuffer(logger, config) {\r\n        this._bufferFullMessageSent = false;\r\n        this._logger = logger;\r\n        this._config = config;\r\n        var bufferItems = this.getBuffer(SessionStorageSendBuffer.BUFFER_KEY);\r\n        var notDeliveredItems = this.getBuffer(SessionStorageSendBuffer.SENT_BUFFER_KEY);\r\n        this._buffer = bufferItems.concat(notDeliveredItems);\r\n        // If the buffer has too many items, drop items from the end.\r\n        if (this._buffer.length > SessionStorageSendBuffer.MAX_BUFFER_SIZE) {\r\n            this._buffer.length = SessionStorageSendBuffer.MAX_BUFFER_SIZE;\r\n        }\r\n        // update DataLossAnalyzer with the number of recovered items\r\n        // Uncomment if you want to use DataLossanalyzer\r\n        // DataLossAnalyzer.itemsRestoredFromSessionBuffer = this._buffer.length;\r\n        this.setBuffer(SessionStorageSendBuffer.SENT_BUFFER_KEY, []);\r\n        this.setBuffer(SessionStorageSendBuffer.BUFFER_KEY, this._buffer);\r\n    }\r\n    SessionStorageSendBuffer.prototype.enqueue = function (payload) {\r\n        if (this._buffer.length >= SessionStorageSendBuffer.MAX_BUFFER_SIZE) {\r\n            // sent internal log only once per page view\r\n            if (!this._bufferFullMessageSent) {\r\n                this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.SessionStorageBufferFull, \"Maximum buffer size reached: \" + this._buffer.length, true);\r\n                this._bufferFullMessageSent = true;\r\n            }\r\n            return;\r\n        }\r\n        this._buffer.push(payload);\r\n        this.setBuffer(SessionStorageSendBuffer.BUFFER_KEY, this._buffer);\r\n    };\r\n    SessionStorageSendBuffer.prototype.count = function () {\r\n        return this._buffer.length;\r\n    };\r\n    SessionStorageSendBuffer.prototype.clear = function () {\r\n        this._buffer.length = 0;\r\n        this.setBuffer(SessionStorageSendBuffer.BUFFER_KEY, []);\r\n        this.setBuffer(SessionStorageSendBuffer.SENT_BUFFER_KEY, []);\r\n        this._bufferFullMessageSent = false;\r\n    };\r\n    SessionStorageSendBuffer.prototype.getItems = function () {\r\n        return this._buffer.slice(0);\r\n    };\r\n    SessionStorageSendBuffer.prototype.batchPayloads = function (payload) {\r\n        if (payload && payload.length > 0) {\r\n            var batch = this._config.emitLineDelimitedJson() ?\r\n                payload.join(\"\\n\") :\r\n                \"[\" + payload.join(\",\") + \"]\";\r\n            return batch;\r\n        }\r\n        return null;\r\n    };\r\n    SessionStorageSendBuffer.prototype.markAsSent = function (payload) {\r\n        this._buffer = this.removePayloadsFromBuffer(payload, this._buffer);\r\n        this.setBuffer(SessionStorageSendBuffer.BUFFER_KEY, this._buffer);\r\n        var sentElements = this.getBuffer(SessionStorageSendBuffer.SENT_BUFFER_KEY);\r\n        if (sentElements instanceof Array && payload instanceof Array) {\r\n            sentElements = sentElements.concat(payload);\r\n            if (sentElements.length > SessionStorageSendBuffer.MAX_BUFFER_SIZE) {\r\n                // We send telemetry normally. If the SENT_BUFFER is too big we don't add new elements\r\n                // until we receive a response from the backend and the buffer has free space again (see clearSent method)\r\n                this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.SessionStorageBufferFull, \"Sent buffer reached its maximum size: \" + sentElements.length, true);\r\n                sentElements.length = SessionStorageSendBuffer.MAX_BUFFER_SIZE;\r\n            }\r\n            this.setBuffer(SessionStorageSendBuffer.SENT_BUFFER_KEY, sentElements);\r\n        }\r\n    };\r\n    SessionStorageSendBuffer.prototype.clearSent = function (payload) {\r\n        var sentElements = this.getBuffer(SessionStorageSendBuffer.SENT_BUFFER_KEY);\r\n        sentElements = this.removePayloadsFromBuffer(payload, sentElements);\r\n        this.setBuffer(SessionStorageSendBuffer.SENT_BUFFER_KEY, sentElements);\r\n    };\r\n    SessionStorageSendBuffer.prototype.removePayloadsFromBuffer = function (payloads, buffer) {\r\n        var remaining = [];\r\n        for (var i in buffer) {\r\n            var contains = false;\r\n            for (var j in payloads) {\r\n                if (payloads[j] === buffer[i]) {\r\n                    contains = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (!contains) {\r\n                remaining.push(buffer[i]);\r\n            }\r\n        }\r\n        ;\r\n        return remaining;\r\n    };\r\n    SessionStorageSendBuffer.prototype.getBuffer = function (key) {\r\n        try {\r\n            var bufferJson = Util.getSessionStorage(this._logger, key);\r\n            if (bufferJson) {\r\n                var buffer = JSON.parse(bufferJson);\r\n                if (buffer) {\r\n                    return buffer;\r\n                }\r\n            }\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.FailedToRestoreStorageBuffer, \" storage key: \" + key + \", \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n        return [];\r\n    };\r\n    SessionStorageSendBuffer.prototype.setBuffer = function (key, buffer) {\r\n        try {\r\n            var bufferJson = JSON.stringify(buffer);\r\n            Util.setSessionStorage(this._logger, key, bufferJson);\r\n        }\r\n        catch (e) {\r\n            // if there was an error, clear the buffer\r\n            // telemetry is stored in the _buffer array so we won't loose any items\r\n            Util.setSessionStorage(this._logger, key, JSON.stringify([]));\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.FailedToSetStorageBuffer, \" storage key: \" + key + \", \" + Util.getExceptionName(e) + \". Buffer cleared\", { exception: Util.dump(e) });\r\n        }\r\n    };\r\n    SessionStorageSendBuffer.BUFFER_KEY = \"AI_buffer\";\r\n    SessionStorageSendBuffer.SENT_BUFFER_KEY = \"AI_sentBuffer\";\r\n    // Maximum number of payloads stored in the buffer. If the buffer is full, new elements will be dropped. \r\n    SessionStorageSendBuffer.MAX_BUFFER_SIZE = 2000;\r\n    return SessionStorageSendBuffer;\r\n}());\r\nexport { SessionStorageSendBuffer };\r\n//# sourceMappingURL=SendBuffer.js.map","import * as tslib_1 from \"tslib\";\r\nimport { Data, Envelope, RemoteDependencyData, Event, Exception, Metric, PageView, Trace, PageViewPerformance, CtxTagKeys, HttpMethod } from '@microsoft/applicationinsights-common';\r\nimport { CoreUtils, LoggingSeverity, _InternalMessageId } from '@microsoft/applicationinsights-core-js';\r\n// these two constants are used to filter out properties not needed when trying to extract custom properties and measurements from the incoming payload\r\nvar baseType = \"baseType\";\r\nvar baseData = \"baseData\";\r\nvar EnvelopeCreator = /** @class */ (function () {\r\n    function EnvelopeCreator() {\r\n    }\r\n    EnvelopeCreator.extractProperties = function (data) {\r\n        var customProperties = null;\r\n        for (var key in data) {\r\n            if (data.hasOwnProperty(key)) {\r\n                var value = data[key];\r\n                if (typeof value !== \"number\") {\r\n                    if (!customProperties) {\r\n                        customProperties = {};\r\n                    }\r\n                    customProperties[key] = value;\r\n                }\r\n            }\r\n        }\r\n        return customProperties;\r\n    };\r\n    EnvelopeCreator.extractPropsAndMeasurements = function (data, properties, measurements) {\r\n        if (!CoreUtils.isNullOrUndefined(data)) {\r\n            for (var key in data) {\r\n                if (data.hasOwnProperty(key)) {\r\n                    var value = data[key];\r\n                    if (typeof value === \"number\") {\r\n                        measurements[key] = value;\r\n                    }\r\n                    else if (typeof value === \"string\") {\r\n                        properties[key] = value;\r\n                    }\r\n                    else {\r\n                        properties[key] = JSON.stringify(value);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    // TODO: Do we want this to take logger as arg or use this._logger as nonstatic?\r\n    EnvelopeCreator.createEnvelope = function (logger, envelopeType, telemetryItem, data) {\r\n        var envelope = new Envelope(logger, data, envelopeType);\r\n        envelope.iKey = telemetryItem.iKey;\r\n        var iKeyNoDashes = telemetryItem.iKey.replace(/-/g, \"\");\r\n        envelope.name = envelope.name.replace(\"{0}\", iKeyNoDashes);\r\n        // extract all extensions from ctx\r\n        EnvelopeCreator.extractPartAExtensions(telemetryItem, envelope);\r\n        // loop through the envelope tags (extension of Part A) and pick out the ones that should go in outgoing envelope tags\r\n        if (!telemetryItem.tags) {\r\n            telemetryItem.tags = [];\r\n        }\r\n        return envelope;\r\n    };\r\n    /*\r\n     * Maps Part A data from CS 4.0\r\n     */\r\n    EnvelopeCreator.extractPartAExtensions = function (item, env) {\r\n        // todo: switch to keys from common in this method\r\n        if (!env.tags) {\r\n            env.tags = [];\r\n        }\r\n        if (!item.ext) {\r\n            item.ext = {};\r\n        }\r\n        if (!item.tags) {\r\n            item.tags = [];\r\n        }\r\n        if (item.ext.user) {\r\n            if (item.ext.user.authId) {\r\n                env.tags[CtxTagKeys.userAuthUserId] = item.ext.user.authId;\r\n            }\r\n            var userId = item.ext.user.id || item.ext.user.localId;\r\n            if (userId) {\r\n                env.tags[CtxTagKeys.userId] = userId;\r\n            }\r\n        }\r\n        if (item.ext.app) {\r\n            if (item.ext.app.sesId) {\r\n                env.tags[CtxTagKeys.sessionId] = item.ext.app.sesId;\r\n            }\r\n        }\r\n        if (item.ext.device) {\r\n            if (item.ext.device.id || item.ext.device.localId) {\r\n                env.tags[CtxTagKeys.deviceId] = item.ext.device.id || item.ext.device.localId;\r\n            }\r\n            if (item.ext.device.ip) {\r\n                env.tags[CtxTagKeys.deviceIp] = item.ext.device.ip;\r\n            }\r\n        }\r\n        if (item.ext.web) {\r\n            var web = item.ext.web;\r\n            if (web.browserLang) {\r\n                env.tags[CtxTagKeys.deviceLanguage] = web.browserLang;\r\n            }\r\n            if (web.browserVer) {\r\n                env.tags[CtxTagKeys.deviceBrowserVersion] = web.browserVer;\r\n            }\r\n            if (web.browser) {\r\n                env.tags[CtxTagKeys.deviceBrowser] = web.browser;\r\n            }\r\n            env.data = env.data || {};\r\n            env.data.baseData = env.data.baseData || {};\r\n            env.data.baseData.properties = env.data.baseData.properties || {};\r\n            if (web.domain) {\r\n                env.data.baseData.properties['domain'] = web.domain;\r\n            }\r\n            if (web.isManual) {\r\n                env.data.baseData.properties['isManual'] = web.isManual.toString();\r\n            }\r\n            if (web.screenRes) {\r\n                env.data.baseData.properties['screenRes'] = web.screenRes;\r\n            }\r\n            if (web.userConsent) {\r\n                env.data.baseData.properties['userConsent'] = web.userConsent.toString();\r\n            }\r\n        }\r\n        if (item.ext.device) {\r\n            if (item.ext.device.model) {\r\n                env.tags[CtxTagKeys.deviceModel] = item.ext.device.model;\r\n            }\r\n        }\r\n        if (item.ext.os && item.ext.os.name) {\r\n            env.tags[CtxTagKeys.deviceOS] = item.ext.os.name;\r\n        }\r\n        if (item.ext.device) {\r\n            if (item.ext.device.deviceType) {\r\n                env.tags[CtxTagKeys.deviceType] = item.ext.device.deviceType;\r\n            }\r\n        }\r\n        // No support for mapping Trace.traceState to 2.0 as it is currently empty\r\n        if (item.ext.trace) {\r\n            if (item.ext.trace.parentID) {\r\n                env.tags[CtxTagKeys.operationParentId] = item.ext.trace.parentID;\r\n            }\r\n            if (item.ext.trace.name) {\r\n                env.tags[CtxTagKeys.operationName] = item.ext.trace.name;\r\n            }\r\n            if (item.ext.trace.traceID) {\r\n                env.tags[CtxTagKeys.operationId] = item.ext.trace.traceID;\r\n            }\r\n        }\r\n        // Sample 4.0 schema\r\n        //  {\r\n        //     \"time\" : \"2018-09-05T22:51:22.4936Z\",\r\n        //     \"name\" : \"MetricWithNamespace\",\r\n        //     \"iKey\" : \"ABC-5a4cbd20-e601-4ef5-a3c6-5d6577e4398e\",\r\n        //     \"ext\": {  \"cloud\": {\r\n        //          \"role\": \"WATSON3\",\r\n        //          \"roleInstance\": \"CO4AEAP00000260\"\r\n        //      }, \r\n        //      \"device\": {}, \"correlation\": {} },\r\n        //      \"tags\": [\r\n        //        { \"amazon.region\" : \"east2\" },\r\n        //        { \"os.expid\" : \"wp:02df239\" }\r\n        //     ]\r\n        //   }\r\n        var tgs = {};\r\n        item.tags.forEach(function (tg) {\r\n            tgs = tslib_1.__assign({}, tgs, tg);\r\n        });\r\n        env.tags = tslib_1.__assign({}, env.tags, tgs);\r\n    };\r\n    return EnvelopeCreator;\r\n}());\r\nexport { EnvelopeCreator };\r\nvar DependencyEnvelopeCreator = /** @class */ (function (_super) {\r\n    tslib_1.__extends(DependencyEnvelopeCreator, _super);\r\n    function DependencyEnvelopeCreator() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    DependencyEnvelopeCreator.prototype.Create = function (logger, telemetryItem) {\r\n        this._logger = logger;\r\n        if (CoreUtils.isNullOrUndefined(telemetryItem.baseData)) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TelemetryEnvelopeInvalid, \"telemetryItem.baseData cannot be null.\");\r\n        }\r\n        var customMeasurements = telemetryItem.baseData.measurements || {};\r\n        var customProperties = telemetryItem.baseData.properties || {};\r\n        EnvelopeCreator.extractPropsAndMeasurements(telemetryItem.data, customProperties, customMeasurements);\r\n        var bd = telemetryItem.baseData;\r\n        if (CoreUtils.isNullOrUndefined(bd)) {\r\n            logger.warnToConsole(\"Invalid input for dependency data\");\r\n            return null;\r\n        }\r\n        var id = bd.id;\r\n        var absoluteUrl = bd.target;\r\n        var command = bd.name;\r\n        var duration = bd.duration;\r\n        var success = bd.success;\r\n        var resultCode = bd.responseCode;\r\n        var requestAPI = bd.type;\r\n        var method = bd.properties && bd.properties[HttpMethod] ? bd.properties[HttpMethod] : \"GET\";\r\n        var baseData = new RemoteDependencyData(logger, id, absoluteUrl, command, duration, success, resultCode, method, requestAPI, customProperties, customMeasurements);\r\n        var data = new Data(RemoteDependencyData.dataType, baseData);\r\n        return EnvelopeCreator.createEnvelope(logger, RemoteDependencyData.envelopeType, telemetryItem, data);\r\n    };\r\n    DependencyEnvelopeCreator.DependencyEnvelopeCreator = new DependencyEnvelopeCreator();\r\n    return DependencyEnvelopeCreator;\r\n}(EnvelopeCreator));\r\nexport { DependencyEnvelopeCreator };\r\nvar EventEnvelopeCreator = /** @class */ (function (_super) {\r\n    tslib_1.__extends(EventEnvelopeCreator, _super);\r\n    function EventEnvelopeCreator() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    EventEnvelopeCreator.prototype.Create = function (logger, telemetryItem) {\r\n        this._logger = logger;\r\n        if (CoreUtils.isNullOrUndefined(telemetryItem.baseData)) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TelemetryEnvelopeInvalid, \"telemetryItem.baseData cannot be null.\");\r\n        }\r\n        var customProperties = {};\r\n        var customMeasurements = {};\r\n        if (telemetryItem.baseType !== Event.dataType) {\r\n            customProperties['baseTypeSource'] = telemetryItem.baseType; // save the passed in base type as a property\r\n        }\r\n        if (telemetryItem.baseType === Event.dataType) {\r\n            customProperties = telemetryItem.baseData.properties || {};\r\n            customMeasurements = telemetryItem.baseData.measurements || {};\r\n        }\r\n        else {\r\n            if (telemetryItem.baseData) {\r\n                EnvelopeCreator.extractPropsAndMeasurements(telemetryItem.baseData, customProperties, customMeasurements);\r\n            }\r\n        }\r\n        // Exract root level properties from part C telemetryItem.data\r\n        EnvelopeCreator.extractPropsAndMeasurements(telemetryItem.data, customProperties, customMeasurements);\r\n        var eventName = telemetryItem.baseData.name;\r\n        var baseData = new Event(logger, eventName, customProperties, customMeasurements);\r\n        var data = new Data(Event.dataType, baseData);\r\n        return EnvelopeCreator.createEnvelope(logger, Event.envelopeType, telemetryItem, data);\r\n    };\r\n    EventEnvelopeCreator.EventEnvelopeCreator = new EventEnvelopeCreator();\r\n    return EventEnvelopeCreator;\r\n}(EnvelopeCreator));\r\nexport { EventEnvelopeCreator };\r\nvar ExceptionEnvelopeCreator = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ExceptionEnvelopeCreator, _super);\r\n    function ExceptionEnvelopeCreator() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ExceptionEnvelopeCreator.prototype.Create = function (logger, telemetryItem) {\r\n        this._logger = logger;\r\n        if (CoreUtils.isNullOrUndefined(telemetryItem.baseData)) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TelemetryEnvelopeInvalid, \"telemetryItem.baseData cannot be null.\");\r\n        }\r\n        var baseData = telemetryItem.baseData;\r\n        var data = new Data(Exception.dataType, baseData);\r\n        return EnvelopeCreator.createEnvelope(logger, Exception.envelopeType, telemetryItem, data);\r\n    };\r\n    ExceptionEnvelopeCreator.ExceptionEnvelopeCreator = new ExceptionEnvelopeCreator();\r\n    return ExceptionEnvelopeCreator;\r\n}(EnvelopeCreator));\r\nexport { ExceptionEnvelopeCreator };\r\nvar MetricEnvelopeCreator = /** @class */ (function (_super) {\r\n    tslib_1.__extends(MetricEnvelopeCreator, _super);\r\n    function MetricEnvelopeCreator() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    MetricEnvelopeCreator.prototype.Create = function (logger, telemetryItem) {\r\n        this._logger = logger;\r\n        if (CoreUtils.isNullOrUndefined(telemetryItem.baseData)) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TelemetryEnvelopeInvalid, \"telemetryItem.baseData cannot be null.\");\r\n        }\r\n        var props = telemetryItem.baseData.properties || {};\r\n        var customProperties = EnvelopeCreator.extractProperties(telemetryItem.data);\r\n        customProperties = tslib_1.__assign({}, props, customProperties);\r\n        var name = telemetryItem.baseData.name;\r\n        var average = telemetryItem.baseData.average;\r\n        var sampleCount = telemetryItem.baseData.sampleCount;\r\n        var min = telemetryItem.baseData.min;\r\n        var max = telemetryItem.baseData.max;\r\n        var baseData = new Metric(logger, name, average, sampleCount, min, max, customProperties);\r\n        var data = new Data(Metric.dataType, baseData);\r\n        return EnvelopeCreator.createEnvelope(logger, Metric.envelopeType, telemetryItem, data);\r\n    };\r\n    MetricEnvelopeCreator.MetricEnvelopeCreator = new MetricEnvelopeCreator();\r\n    return MetricEnvelopeCreator;\r\n}(EnvelopeCreator));\r\nexport { MetricEnvelopeCreator };\r\nvar PageViewEnvelopeCreator = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PageViewEnvelopeCreator, _super);\r\n    function PageViewEnvelopeCreator() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    PageViewEnvelopeCreator.prototype.Create = function (logger, telemetryItem) {\r\n        this._logger = logger;\r\n        if (CoreUtils.isNullOrUndefined(telemetryItem.baseData)) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TelemetryEnvelopeInvalid, \"telemetryItem.baseData cannot be null.\");\r\n        }\r\n        // Since duration is not part of the domain properties in Common Schema, extract it from part C\r\n        var duration = undefined;\r\n        if (!CoreUtils.isNullOrUndefined(telemetryItem.baseData) &&\r\n            !CoreUtils.isNullOrUndefined(telemetryItem.baseData.properties)) {\r\n            duration = telemetryItem.baseData.properties.duration;\r\n            delete telemetryItem.baseData.properties.duration;\r\n        }\r\n        var bd = telemetryItem.baseData;\r\n        var name = bd.name;\r\n        var url = bd.uri;\r\n        var id = bd.id;\r\n        var properties = bd.properties || {};\r\n        var measurements = bd.measurements || {};\r\n        // refUri is a field that Breeze still does not recognize as part of Part B. For now, put it in Part C until it supports it as a domain property\r\n        if (!CoreUtils.isNullOrUndefined(bd.refUri)) {\r\n            properties[\"refUri\"] = bd.refUri;\r\n        }\r\n        // pageType is a field that Breeze still does not recognize as part of Part B. For now, put it in Part C until it supports it as a domain property\r\n        if (!CoreUtils.isNullOrUndefined(bd.pageType)) {\r\n            properties[\"pageType\"] = bd.pageType;\r\n        }\r\n        // isLoggedIn is a field that Breeze still does not recognize as part of Part B. For now, put it in Part C until it supports it as a domain property\r\n        if (!CoreUtils.isNullOrUndefined(bd.isLoggedIn)) {\r\n            properties[\"isLoggedIn\"] = bd.isLoggedIn.toString();\r\n        }\r\n        // pageTags is a field that Breeze still does not recognize as part of Part B. For now, put it in Part C until it supports it as a domain property\r\n        if (!CoreUtils.isNullOrUndefined(bd.properties)) {\r\n            var pageTags = bd.properties;\r\n            for (var key in pageTags) {\r\n                if (pageTags.hasOwnProperty(key)) {\r\n                    properties[key] = pageTags[key];\r\n                }\r\n            }\r\n        }\r\n        var baseData = new PageView(logger, name, url, duration, properties, measurements, id);\r\n        var data = new Data(PageView.dataType, baseData);\r\n        return EnvelopeCreator.createEnvelope(logger, PageView.envelopeType, telemetryItem, data);\r\n    };\r\n    PageViewEnvelopeCreator.PageViewEnvelopeCreator = new PageViewEnvelopeCreator();\r\n    return PageViewEnvelopeCreator;\r\n}(EnvelopeCreator));\r\nexport { PageViewEnvelopeCreator };\r\nvar PageViewPerformanceEnvelopeCreator = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PageViewPerformanceEnvelopeCreator, _super);\r\n    function PageViewPerformanceEnvelopeCreator() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    PageViewPerformanceEnvelopeCreator.prototype.Create = function (logger, telemetryItem) {\r\n        this._logger = logger;\r\n        if (CoreUtils.isNullOrUndefined(telemetryItem.baseData)) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TelemetryEnvelopeInvalid, \"telemetryItem.baseData cannot be null.\");\r\n        }\r\n        var bd = telemetryItem.baseData;\r\n        var name = bd.name;\r\n        var url = bd.uri;\r\n        var properties = bd.properties;\r\n        var measurements = bd.measurements;\r\n        var baseData = new PageViewPerformance(logger, name, url, undefined, properties, measurements);\r\n        var data = new Data(PageViewPerformance.dataType, baseData);\r\n        return EnvelopeCreator.createEnvelope(logger, PageViewPerformance.envelopeType, telemetryItem, data);\r\n    };\r\n    PageViewPerformanceEnvelopeCreator.PageViewPerformanceEnvelopeCreator = new PageViewPerformanceEnvelopeCreator();\r\n    return PageViewPerformanceEnvelopeCreator;\r\n}(EnvelopeCreator));\r\nexport { PageViewPerformanceEnvelopeCreator };\r\nvar TraceEnvelopeCreator = /** @class */ (function (_super) {\r\n    tslib_1.__extends(TraceEnvelopeCreator, _super);\r\n    function TraceEnvelopeCreator() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    TraceEnvelopeCreator.prototype.Create = function (logger, telemetryItem) {\r\n        this._logger = logger;\r\n        if (CoreUtils.isNullOrUndefined(telemetryItem.baseData)) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TelemetryEnvelopeInvalid, \"telemetryItem.baseData cannot be null.\");\r\n        }\r\n        var message = telemetryItem.baseData.message;\r\n        var severityLevel = telemetryItem.baseData.severityLevel;\r\n        var customProperties = EnvelopeCreator.extractProperties(telemetryItem.data);\r\n        var props = tslib_1.__assign({}, customProperties, telemetryItem.baseData.properties);\r\n        var baseData = new Trace(logger, message, severityLevel, props);\r\n        var data = new Data(Trace.dataType, baseData);\r\n        return EnvelopeCreator.createEnvelope(logger, Trace.envelopeType, telemetryItem, data);\r\n    };\r\n    TraceEnvelopeCreator.TraceEnvelopeCreator = new TraceEnvelopeCreator();\r\n    return TraceEnvelopeCreator;\r\n}(EnvelopeCreator));\r\nexport { TraceEnvelopeCreator };\r\n//# sourceMappingURL=EnvelopeCreator.js.map","var EventValidator = /** @class */ (function () {\r\n    function EventValidator() {\r\n    }\r\n    EventValidator.prototype.Validate = function (item) {\r\n        /* TODO re-enable once design of iTelemetryItem is finalized. Task used to track this:\r\n        https://mseng.visualstudio.com/AppInsights/_workitems/edit/1310871\r\n\r\n        // verify system properties has a ver field\r\n        if (!item.sytemProperties || !item.sytemProperties[\"ver\"]) {\r\n            return false;\r\n        }\r\n        \r\n        if (!item.domainProperties || !item.domainProperties[\"name\"]) {\r\n            return false;\r\n        }\r\n        */\r\n        return true;\r\n    };\r\n    EventValidator.EventValidator = new EventValidator();\r\n    return EventValidator;\r\n}());\r\nexport { EventValidator };\r\n//# sourceMappingURL=EventValidator.js.map","var TraceValidator = /** @class */ (function () {\r\n    function TraceValidator() {\r\n    }\r\n    TraceValidator.prototype.Validate = function (item) {\r\n        /* TODO re-enable once design of iTelemetryItem is finalized. Task used to track this:\r\n         https://mseng.visualstudio.com/AppInsights/_workitems/edit/1310871\r\n\r\n        // verify system properties has a ver field\r\n        if (!item.sytemProperties ||\r\n            !item.sytemProperties[\"ver\"]) {\r\n            return false;\r\n        }\r\n        \r\n        if (!item.domainProperties ||\r\n            !item.domainProperties[\"message\"] ||\r\n            !item.domainProperties[\"severityLevel\"]) {\r\n            return false;\r\n        }\r\n        */\r\n        return true;\r\n    };\r\n    TraceValidator.TraceValidator = new TraceValidator();\r\n    return TraceValidator;\r\n}());\r\nexport { TraceValidator };\r\n//# sourceMappingURL=TraceValidator.js.map","var ExceptionValidator = /** @class */ (function () {\r\n    function ExceptionValidator() {\r\n    }\r\n    ExceptionValidator.prototype.Validate = function (item) {\r\n        /* TODO re-enable once design of iTelemetryItem is finalized. Task used to track this:\r\n         https://mseng.visualstudio.com/AppInsights/_workitems/edit/1310871\r\n\r\n        // verify system properties has a ver field\r\n        if (!item.sytemProperties ||\r\n            !item.sytemProperties[\"ver\"]) {\r\n            return false;\r\n        }\r\n\r\n        if (!item.domainProperties ||\r\n            !item.domainProperties[\"exceptions\"] ||\r\n            !ExceptionValidator._validateExceptions(item.domainProperties[\"exceptions\"])) {\r\n            return false;\r\n        }\r\n        */\r\n        return true;\r\n    };\r\n    // TODO implement validation of exceptions\r\n    ExceptionValidator._validateExceptions = function (exceptions) {\r\n        // typeName\r\n        // message\r\n        // parsedStack\r\n        // stack\r\n        // hasFullStack\r\n        return true;\r\n    };\r\n    ExceptionValidator.ExceptionValidator = new ExceptionValidator();\r\n    return ExceptionValidator;\r\n}());\r\nexport { ExceptionValidator };\r\n//# sourceMappingURL=ExceptionValidator.js.map","var MetricValidator = /** @class */ (function () {\r\n    function MetricValidator() {\r\n    }\r\n    MetricValidator.prototype.Validate = function (event) {\r\n        return true;\r\n    };\r\n    MetricValidator.MetricValidator = new MetricValidator();\r\n    return MetricValidator;\r\n}());\r\nexport { MetricValidator };\r\n//# sourceMappingURL=MetricValidator.js.map","var PageViewPerformanceValidator = /** @class */ (function () {\r\n    function PageViewPerformanceValidator() {\r\n    }\r\n    PageViewPerformanceValidator.prototype.Validate = function (item) {\r\n        /* TODO re-enable once design of iTelemetryItem is finalized. Task used to track this:\r\n         https://mseng.visualstudio.com/AppInsights/_workitems/edit/1310871\r\n        \r\n        // verify system properties has a ver field\r\n        if (!item.sytemProperties ||\r\n            !item.sytemProperties[\"ver\"]) {\r\n            return false;\r\n        }\r\n\r\n        if (!item.domainProperties ||\r\n            !item.domainProperties[\"domProcessing\"] ||\r\n            !item.domainProperties[\"duration\"] ||\r\n            !item.domainProperties[\"name\"] ||\r\n            !item.domainProperties[\"networkConnect\"] ||\r\n            !item.domainProperties[\"perfTotal\"] ||\r\n            !item.domainProperties[\"receivedResponse\"] ||\r\n            !item.domainProperties[\"sentRequest\"] ||\r\n            !item.domainProperties[\"url\"]) {\r\n            return false;\r\n        }\r\n        */\r\n        return true;\r\n    };\r\n    PageViewPerformanceValidator.PageViewPerformanceValidator = new PageViewPerformanceValidator();\r\n    return PageViewPerformanceValidator;\r\n}());\r\nexport { PageViewPerformanceValidator };\r\n//# sourceMappingURL=PageViewPerformanceValidator.js.map","var PageViewValidator = /** @class */ (function () {\r\n    function PageViewValidator() {\r\n    }\r\n    PageViewValidator.prototype.Validate = function (item) {\r\n        /* TODO re-enable once design of iTelemetryItem is finalized. Task used to track this:\r\n         https://mseng.visualstudio.com/AppInsights/_workitems/edit/1310871\r\n\r\n        // verify system properties has a ver field\r\n        if (!item.sytemProperties ||\r\n            !item.sytemProperties[\"ver\"]) {\r\n            return false;\r\n        }\r\n\r\n        if (!item.domainProperties ||\r\n            !item.domainProperties[\"id\"] ||\r\n            !item.domainProperties[\"name\"] ||\r\n            !item.domainProperties[\"duration\"] ||\r\n            !item.domainProperties[\"url\"]) {\r\n            return false;\r\n        }\r\n        */\r\n        return true;\r\n    };\r\n    PageViewValidator.PageViewValidator = new PageViewValidator();\r\n    return PageViewValidator;\r\n}());\r\nexport { PageViewValidator };\r\n//# sourceMappingURL=PageViewValidator.js.map","var RemoteDepdencyValidator = /** @class */ (function () {\r\n    function RemoteDepdencyValidator() {\r\n    }\r\n    RemoteDepdencyValidator.prototype.Validate = function (item) {\r\n        /* TODO re-enable once design of iTelemetryItem is finalized. Task used to track this:\r\n         https://mseng.visualstudio.com/AppInsights/_workitems/edit/1310871\r\n\r\n        // verify system properties has a ver field\r\n        if (!item.sytemProperties ||\r\n            !item.sytemProperties[\"ver\"]) {\r\n            return false;\r\n        }\r\n\r\n        if (!item.domainProperties ||\r\n            !item.domainProperties[\"id\"] ||\r\n            !item.domainProperties[\"name\"] ||\r\n            !item.domainProperties[\"resultCode\"] ||\r\n            !item.domainProperties[\"duration\"] ||\r\n            !item.domainProperties[\"success\"] ||\r\n            !item.domainProperties[\"data\"] ||\r\n            !item.domainProperties[\"target\"] ||\r\n            !item.domainProperties[\"type\"]) {\r\n            return false;\r\n        }\r\n        */\r\n        return true;\r\n    };\r\n    RemoteDepdencyValidator.RemoteDepdencyValidator = new RemoteDepdencyValidator();\r\n    return RemoteDepdencyValidator;\r\n}());\r\nexport { RemoteDepdencyValidator };\r\n//# sourceMappingURL=RemoteDepdencyValidator.js.map","import { Util, FieldType } from '@microsoft/applicationinsights-common';\r\nimport { LoggingSeverity, _InternalMessageId } from '@microsoft/applicationinsights-core-js';\r\nvar Serializer = /** @class */ (function () {\r\n    function Serializer(logger) {\r\n        this._logger = logger;\r\n    }\r\n    /**\r\n     * Serializes the current object to a JSON string.\r\n     */\r\n    Serializer.prototype.serialize = function (input) {\r\n        var output = this._serializeObject(input, \"root\");\r\n        return JSON.stringify(output);\r\n    };\r\n    Serializer.prototype._serializeObject = function (source, name) {\r\n        var circularReferenceCheck = \"__aiCircularRefCheck\";\r\n        var output = {};\r\n        if (!source) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.CannotSerializeObject, \"cannot serialize object because it is null or undefined\", { name: name }, true);\r\n            return output;\r\n        }\r\n        if (source[circularReferenceCheck]) {\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.CircularReferenceDetected, \"Circular reference detected while serializing object\", { name: name }, true);\r\n            return output;\r\n        }\r\n        if (!source.aiDataContract) {\r\n            // special case for measurements/properties/tags\r\n            if (name === \"measurements\") {\r\n                output = this._serializeStringMap(source, \"number\", name);\r\n            }\r\n            else if (name === \"properties\") {\r\n                output = this._serializeStringMap(source, \"string\", name);\r\n            }\r\n            else if (name === \"tags\") {\r\n                output = this._serializeStringMap(source, \"string\", name);\r\n            }\r\n            else if (Util.isArray(source)) {\r\n                output = this._serializeArray(source, name);\r\n            }\r\n            else {\r\n                this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.CannotSerializeObjectNonSerializable, \"Attempting to serialize an object which does not implement ISerializable\", { name: name }, true);\r\n                try {\r\n                    // verify that the object can be stringified\r\n                    JSON.stringify(source);\r\n                    output = source;\r\n                }\r\n                catch (e) {\r\n                    // if serialization fails return an empty string\r\n                    this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.CannotSerializeObject, (e && typeof e.toString === 'function') ? e.toString() : \"Error serializing object\", null, true);\r\n                }\r\n            }\r\n            return output;\r\n        }\r\n        source[circularReferenceCheck] = true;\r\n        for (var field in source.aiDataContract) {\r\n            var contract = source.aiDataContract[field];\r\n            var isRequired = (typeof contract === \"function\") ? (contract() & FieldType.Required) : (contract & FieldType.Required);\r\n            var isHidden = (typeof contract === \"function\") ? (contract() & FieldType.Hidden) : (contract & FieldType.Hidden);\r\n            var isArray = contract & FieldType.Array;\r\n            var isPresent = source[field] !== undefined;\r\n            var isObject = typeof source[field] === \"object\" && source[field] !== null;\r\n            if (isRequired && !isPresent && !isArray) {\r\n                this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.MissingRequiredFieldSpecification, \"Missing required field specification. The field is required but not present on source\", { field: field, name: name });\r\n                // If not in debug mode, continue and hope the error is permissible\r\n                continue;\r\n            }\r\n            if (isHidden) {\r\n                // Don't serialize hidden fields\r\n                continue;\r\n            }\r\n            var value;\r\n            if (isObject) {\r\n                if (isArray) {\r\n                    // special case; resurse on each object in the source array\r\n                    value = this._serializeArray(source[field], field);\r\n                }\r\n                else {\r\n                    // recurse on the source object in this field\r\n                    value = this._serializeObject(source[field], field);\r\n                }\r\n            }\r\n            else {\r\n                // assign the source field to the output even if undefined or required\r\n                value = source[field];\r\n            }\r\n            // only emit this field if the value is defined\r\n            if (value !== undefined) {\r\n                output[field] = value;\r\n            }\r\n        }\r\n        delete source[circularReferenceCheck];\r\n        return output;\r\n    };\r\n    Serializer.prototype._serializeArray = function (sources, name) {\r\n        var output = undefined;\r\n        if (!!sources) {\r\n            if (!Util.isArray(sources)) {\r\n                this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.ItemNotInArray, \"This field was specified as an array in the contract but the item is not an array.\\r\\n\", { name: name }, true);\r\n            }\r\n            else {\r\n                output = [];\r\n                for (var i = 0; i < sources.length; i++) {\r\n                    var source = sources[i];\r\n                    var item = this._serializeObject(source, name + \"[\" + i + \"]\");\r\n                    output.push(item);\r\n                }\r\n            }\r\n        }\r\n        return output;\r\n    };\r\n    Serializer.prototype._serializeStringMap = function (map, expectedType, name) {\r\n        var output = undefined;\r\n        if (map) {\r\n            output = {};\r\n            for (var field in map) {\r\n                var value = map[field];\r\n                if (expectedType === \"string\") {\r\n                    if (value === undefined) {\r\n                        output[field] = \"undefined\";\r\n                    }\r\n                    else if (value === null) {\r\n                        output[field] = \"null\";\r\n                    }\r\n                    else if (!value.toString) {\r\n                        output[field] = \"invalid field: toString() is not defined.\";\r\n                    }\r\n                    else {\r\n                        output[field] = value.toString();\r\n                    }\r\n                }\r\n                else if (expectedType === \"number\") {\r\n                    if (value === undefined) {\r\n                        output[field] = \"undefined\";\r\n                    }\r\n                    else if (value === null) {\r\n                        output[field] = \"null\";\r\n                    }\r\n                    else {\r\n                        var num = parseFloat(value);\r\n                        if (isNaN(num)) {\r\n                            output[field] = \"NaN\";\r\n                        }\r\n                        else {\r\n                            output[field] = num;\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    output[field] = \"invalid field: \" + name + \" is of unknown type.\";\r\n                    this._logger.throwInternal(LoggingSeverity.CRITICAL, output[field], null, true);\r\n                }\r\n            }\r\n        }\r\n        return output;\r\n    };\r\n    return Serializer;\r\n}());\r\nexport { Serializer };\r\n//# sourceMappingURL=Serializer.js.map","/**\r\n * @description Monitors browser for offline events\r\n * @export default - Offline: Static instance of OfflineListener\r\n * @class OfflineListener\r\n */\r\nvar OfflineListener = /** @class */ (function () {\r\n    function OfflineListener() {\r\n        this._onlineStatus = true;\r\n        try {\r\n            if (typeof window === 'undefined') {\r\n                this.isListening = false;\r\n            }\r\n            else if (window && window.addEventListener) {\r\n                window.addEventListener('online', this._setOnline.bind(this), false);\r\n                window.addEventListener('offline', this._setOffline.bind(this), false);\r\n                this.isListening = true;\r\n            }\r\n            else if (document && document.body) {\r\n                document.body.ononline = this._setOnline.bind(this);\r\n                document.body.onoffline = this._setOffline.bind(this);\r\n                this.isListening = true;\r\n            }\r\n            else if (document) {\r\n                document.ononline = this._setOnline.bind(this);\r\n                document.onoffline = this._setOffline.bind(this);\r\n                this.isListening = true;\r\n            }\r\n            else {\r\n                // Could not find a place to add event listener\r\n                this.isListening = false;\r\n            }\r\n        }\r\n        catch (e) {\r\n            //this makes react-native less angry\r\n            this.isListening = false;\r\n        }\r\n    }\r\n    OfflineListener.prototype._setOnline = function () {\r\n        this._onlineStatus = true;\r\n    };\r\n    OfflineListener.prototype._setOffline = function () {\r\n        this._onlineStatus = false;\r\n    };\r\n    OfflineListener.prototype.isOnline = function () {\r\n        if (this.isListening) {\r\n            return this._onlineStatus;\r\n        }\r\n        else if (navigator) {\r\n            return navigator.onLine;\r\n        }\r\n        else {\r\n            // Cannot determine online status - report as online\r\n            return true;\r\n        }\r\n    };\r\n    OfflineListener.prototype.isOffline = function () {\r\n        return !this.isOnline();\r\n    };\r\n    OfflineListener.Offline = new OfflineListener;\r\n    return OfflineListener;\r\n}());\r\nexport { OfflineListener };\r\nexport var Offline = OfflineListener.Offline;\r\n//# sourceMappingURL=Offline.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SessionStorageSendBuffer, ArraySendBuffer } from './SendBuffer';\r\nimport { DependencyEnvelopeCreator, EventEnvelopeCreator, ExceptionEnvelopeCreator, MetricEnvelopeCreator, PageViewEnvelopeCreator, PageViewPerformanceEnvelopeCreator, TraceEnvelopeCreator } from './EnvelopeCreator';\r\nimport { EventValidator } from './TelemetryValidation/EventValidator';\r\nimport { TraceValidator } from './TelemetryValidation/TraceValidator';\r\nimport { ExceptionValidator } from './TelemetryValidation/ExceptionValidator';\r\nimport { MetricValidator } from './TelemetryValidation/MetricValidator';\r\nimport { PageViewPerformanceValidator } from './TelemetryValidation/PageViewPerformanceValidator';\r\nimport { PageViewValidator } from './TelemetryValidation/PageViewValidator';\r\nimport { RemoteDepdencyValidator } from './TelemetryValidation/RemoteDepdencyValidator';\r\nimport { Serializer } from './Serializer'; // todo move to channel\r\nimport { DisabledPropertyName, RequestHeaders, Util, PageView, Event, Trace, Exception, Metric, PageViewPerformance, RemoteDependencyData, ConfigurationManager, ProcessLegacy } from '@microsoft/applicationinsights-common';\r\nimport { _InternalMessageId, LoggingSeverity, } from '@microsoft/applicationinsights-core-js';\r\nimport { CoreUtils } from '@microsoft/applicationinsights-core-js';\r\nimport { Offline } from './Offline';\r\nvar Sender = /** @class */ (function () {\r\n    function Sender() {\r\n        this.priority = 1001;\r\n        /**\r\n         * Whether XMLHttpRequest object is supported. Older version of IE (8,9) do not support it.\r\n         */\r\n        this._XMLHttpRequestSupported = false;\r\n        this.identifier = \"AppInsightsChannelPlugin\";\r\n    }\r\n    Sender.prototype.pause = function () {\r\n        throw new Error(\"Method not implemented.\");\r\n    };\r\n    Sender.prototype.resume = function () {\r\n        throw new Error(\"Method not implemented.\");\r\n    };\r\n    Sender.prototype.flush = function () {\r\n        try {\r\n            this.triggerSend();\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.FlushFailed, \"flush failed, telemetry will not be collected: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n    };\r\n    Sender.prototype.teardown = function () {\r\n        throw new Error(\"Method not implemented.\");\r\n    };\r\n    Sender.prototype.initialize = function (config, core, extensions) {\r\n        var _this = this;\r\n        this._logger = core.logger;\r\n        this._serializer = new Serializer(core.logger);\r\n        this._consecutiveErrors = 0;\r\n        this._retryAt = null;\r\n        this._lastSend = 0;\r\n        this._sender = null;\r\n        var defaultConfig = Sender._getDefaultAppInsightsChannelConfig();\r\n        this._config = Sender._getEmptyAppInsightsChannelConfig();\r\n        var _loop_1 = function (field) {\r\n            this_1._config[field] = function () { return ConfigurationManager.getConfig(config, field, _this.identifier, defaultConfig[field]()); };\r\n        };\r\n        var this_1 = this;\r\n        for (var field in defaultConfig) {\r\n            _loop_1(field);\r\n        }\r\n        this._buffer = (this._config.enableSessionStorageBuffer && Util.canUseSessionStorage())\r\n            ? new SessionStorageSendBuffer(this._logger, this._config) : new ArraySendBuffer(this._config);\r\n        if (!this._config.isBeaconApiDisabled() && Util.IsBeaconApiSupported()) {\r\n            this._sender = this._beaconSender;\r\n        }\r\n        else {\r\n            if (typeof XMLHttpRequest != \"undefined\") {\r\n                var testXhr = new XMLHttpRequest();\r\n                if (\"withCredentials\" in testXhr) {\r\n                    this._sender = this._xhrSender;\r\n                    this._XMLHttpRequestSupported = true;\r\n                }\r\n                else if (typeof XDomainRequest !== \"undefined\") {\r\n                    this._sender = this._xdrSender; //IE 8 and 9\r\n                }\r\n            }\r\n        }\r\n    };\r\n    Sender.prototype.processTelemetry = function (telemetryItem) {\r\n        var _this = this;\r\n        try {\r\n            // if master off switch is set, don't send any data\r\n            if (this._config.disableTelemetry()) {\r\n                // Do not send/save data\r\n                return;\r\n            }\r\n            // validate input\r\n            if (!telemetryItem) {\r\n                this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.CannotSendEmptyTelemetry, \"Cannot send empty telemetry\");\r\n                return;\r\n            }\r\n            // ensure a sender was constructed\r\n            if (!this._sender) {\r\n                this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.SenderNotInitialized, \"Sender was not initialized\");\r\n                return;\r\n            }\r\n            // first we need to validate that the envelope passed down is valid\r\n            var isValid = Sender._validate(telemetryItem);\r\n            if (!isValid) {\r\n                this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TelemetryEnvelopeInvalid, \"Invalid telemetry envelope\");\r\n                return;\r\n            }\r\n            // construct an envelope that Application Insights endpoint can understand\r\n            var aiEnvelope_1 = Sender.constructEnvelope(telemetryItem, this._config.instrumentationKey(), this._logger);\r\n            if (!aiEnvelope_1) {\r\n                this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.CreateEnvelopeError, \"Unable to create an AppInsights envelope\");\r\n                return;\r\n            }\r\n            var doNotSendItem_1 = false;\r\n            // this is for running in legacy mode, where customer may already have a custom initializer present\r\n            if (telemetryItem.tags && telemetryItem.tags[ProcessLegacy]) {\r\n                telemetryItem.tags[ProcessLegacy].forEach(function (callBack) {\r\n                    try {\r\n                        if (callBack && callBack(aiEnvelope_1) === false) {\r\n                            doNotSendItem_1 = true;\r\n                            _this._logger.warnToConsole(\"Telemetry processor check returns false\");\r\n                        }\r\n                    }\r\n                    catch (e) {\r\n                        // log error but dont stop executing rest of the telemetry initializers\r\n                        // doNotSendItem = true;\r\n                        _this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TelemetryInitializerFailed, \"One of telemetry initializers failed, telemetry item will not be sent: \" + Util.getExceptionName(e), { exception: Util.dump(e) }, true);\r\n                    }\r\n                });\r\n                delete telemetryItem.tags[ProcessLegacy];\r\n            }\r\n            if (doNotSendItem_1) {\r\n                return; // do not send, no need to execute next plugin\r\n            }\r\n            // check if the incoming payload is too large, truncate if necessary\r\n            var payload = this._serializer.serialize(aiEnvelope_1);\r\n            // flush if we would exceed the max-size limit by adding this item\r\n            var bufferPayload = this._buffer.getItems();\r\n            var batch = this._buffer.batchPayloads(bufferPayload);\r\n            if (batch && (batch.length + payload.length > this._config.maxBatchSizeInBytes())) {\r\n                this.triggerSend();\r\n            }\r\n            // enqueue the payload\r\n            this._buffer.enqueue(payload);\r\n            // ensure an invocation timeout is set\r\n            this._setupTimer();\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.FailedAddingTelemetryToBuffer, \"Failed adding telemetry to the sender's buffer, some telemetry will be lost: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n        // hand off the telemetry item to the next plugin\r\n        if (!CoreUtils.isNullOrUndefined(this._nextPlugin)) {\r\n            this._nextPlugin.processTelemetry(telemetryItem);\r\n        }\r\n    };\r\n    Sender.prototype.setNextPlugin = function (next) {\r\n        this._nextPlugin = next;\r\n    };\r\n    /**\r\n     * xhr state changes\r\n     */\r\n    Sender.prototype._xhrReadyStateChange = function (xhr, payload, countOfItemsInPayload) {\r\n        if (xhr.readyState === 4) {\r\n            var response = null;\r\n            if (!this._appId) {\r\n                response = this._parseResponse(xhr.responseText || xhr.response);\r\n                if (response && response.appId) {\r\n                    this._appId = response.appId;\r\n                }\r\n            }\r\n            if ((xhr.status < 200 || xhr.status >= 300) && xhr.status !== 0) {\r\n                if (!this._config.isRetryDisabled() && this._isRetriable(xhr.status)) {\r\n                    this._resendPayload(payload);\r\n                    this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.TransmissionFailed, \". \" +\r\n                        \"Response code \" + xhr.status + \". Will retry to send \" + payload.length + \" items.\");\r\n                }\r\n                else {\r\n                    this._onError(payload, this._formatErrorMessageXhr(xhr));\r\n                }\r\n            }\r\n            else if (Offline.isOffline()) {\r\n                // Note: Don't check for staus == 0, since adblock gives this code\r\n                if (!this._config.isRetryDisabled()) {\r\n                    var offlineBackOffMultiplier = 10; // arbritrary number\r\n                    this._resendPayload(payload, offlineBackOffMultiplier);\r\n                    this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.TransmissionFailed, \". Offline - Response Code: \" + xhr.status + \". Offline status: \" + Offline.isOffline() + \". Will retry to send \" + payload.length + \" items.\");\r\n                }\r\n            }\r\n            else {\r\n                if (xhr.status === 206) {\r\n                    if (!response) {\r\n                        response = this._parseResponse(xhr.responseText || xhr.response);\r\n                    }\r\n                    if (response && !this._config.isRetryDisabled()) {\r\n                        this._onPartialSuccess(payload, response);\r\n                    }\r\n                    else {\r\n                        this._onError(payload, this._formatErrorMessageXhr(xhr));\r\n                    }\r\n                }\r\n                else {\r\n                    this._consecutiveErrors = 0;\r\n                    this._onSuccess(payload, countOfItemsInPayload);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Immediately send buffered data\r\n     * @param async {boolean} - Indicates if the events should be sent asynchronously\r\n     */\r\n    Sender.prototype.triggerSend = function (async) {\r\n        if (async === void 0) { async = true; }\r\n        try {\r\n            // Send data only if disableTelemetry is false\r\n            if (!this._config.disableTelemetry()) {\r\n                if (this._buffer.count() > 0) {\r\n                    var payload = this._buffer.getItems();\r\n                    // invoke send\r\n                    this._sender(payload, async);\r\n                }\r\n                // update lastSend time to enable throttling\r\n                this._lastSend = +new Date;\r\n            }\r\n            else {\r\n                this._buffer.clear();\r\n            }\r\n            clearTimeout(this._timeoutHandle);\r\n            this._timeoutHandle = null;\r\n            this._retryAt = null;\r\n        }\r\n        catch (e) {\r\n            /* Ignore this error for IE under v10 */\r\n            if (!Util.getIEVersion() || Util.getIEVersion() > 9) {\r\n                this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TransmissionFailed, \"Telemetry transmission failed, some telemetry will be lost: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * error handler\r\n     */\r\n    Sender.prototype._onError = function (payload, message, event) {\r\n        this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.OnError, \"Failed to send telemetry.\", { message: message });\r\n        this._buffer.clearSent(payload);\r\n    };\r\n    /**\r\n     * partial success handler\r\n     */\r\n    Sender.prototype._onPartialSuccess = function (payload, results) {\r\n        var failed = [];\r\n        var retry = [];\r\n        // Iterate through the reversed array of errors so that splicing doesn't have invalid indexes after the first item.\r\n        var errors = results.errors.reverse();\r\n        for (var _i = 0, errors_1 = errors; _i < errors_1.length; _i++) {\r\n            var error = errors_1[_i];\r\n            var extracted = payload.splice(error.index, 1)[0];\r\n            if (this._isRetriable(error.statusCode)) {\r\n                retry.push(extracted);\r\n            }\r\n            else {\r\n                // All other errors, including: 402 (Monthly quota exceeded) and 439 (Too many requests and refresh cache).\r\n                failed.push(extracted);\r\n            }\r\n        }\r\n        if (payload.length > 0) {\r\n            this._onSuccess(payload, results.itemsAccepted);\r\n        }\r\n        if (failed.length > 0) {\r\n            this._onError(failed, this._formatErrorMessageXhr(null, ['partial success', results.itemsAccepted, 'of', results.itemsReceived].join(' ')));\r\n        }\r\n        if (retry.length > 0) {\r\n            this._resendPayload(retry);\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.TransmissionFailed, \"Partial success. \" +\r\n                \"Delivered: \" + payload.length + \", Failed: \" + failed.length +\r\n                \". Will retry to send \" + retry.length + \" our of \" + results.itemsReceived + \" items\");\r\n        }\r\n    };\r\n    /**\r\n     * success handler\r\n     */\r\n    Sender.prototype._onSuccess = function (payload, countOfItemsInPayload) {\r\n        this._buffer.clearSent(payload);\r\n    };\r\n    /**\r\n     * xdr state changes\r\n     */\r\n    Sender.prototype._xdrOnLoad = function (xdr, payload) {\r\n        if (xdr && (xdr.responseText + \"\" === \"200\" || xdr.responseText === \"\")) {\r\n            this._consecutiveErrors = 0;\r\n            this._onSuccess(payload, 0);\r\n        }\r\n        else {\r\n            var results = this._parseResponse(xdr.responseText);\r\n            if (results && results.itemsReceived && results.itemsReceived > results.itemsAccepted\r\n                && !this._config.isRetryDisabled()) {\r\n                this._onPartialSuccess(payload, results);\r\n            }\r\n            else {\r\n                this._onError(payload, this._formatErrorMessageXdr(xdr));\r\n            }\r\n        }\r\n    };\r\n    Sender.constructEnvelope = function (orig, iKey, logger) {\r\n        var envelope;\r\n        if (iKey !== orig.iKey && !CoreUtils.isNullOrUndefined(iKey)) {\r\n            envelope = tslib_1.__assign({}, orig, { iKey: iKey });\r\n        }\r\n        else {\r\n            envelope = orig;\r\n        }\r\n        switch (envelope.baseType) {\r\n            case Event.dataType:\r\n                return EventEnvelopeCreator.EventEnvelopeCreator.Create(logger, envelope);\r\n            case Trace.dataType:\r\n                return TraceEnvelopeCreator.TraceEnvelopeCreator.Create(logger, envelope);\r\n            case PageView.dataType:\r\n                return PageViewEnvelopeCreator.PageViewEnvelopeCreator.Create(logger, envelope);\r\n            case PageViewPerformance.dataType:\r\n                return PageViewPerformanceEnvelopeCreator.PageViewPerformanceEnvelopeCreator.Create(logger, envelope);\r\n            case Exception.dataType:\r\n                return ExceptionEnvelopeCreator.ExceptionEnvelopeCreator.Create(logger, envelope);\r\n            case Metric.dataType:\r\n                return MetricEnvelopeCreator.MetricEnvelopeCreator.Create(logger, envelope);\r\n            case RemoteDependencyData.dataType:\r\n                return DependencyEnvelopeCreator.DependencyEnvelopeCreator.Create(logger, envelope);\r\n            default:\r\n                return EventEnvelopeCreator.EventEnvelopeCreator.Create(logger, envelope);\r\n        }\r\n    };\r\n    Sender._getDefaultAppInsightsChannelConfig = function () {\r\n        var resultConfig = {};\r\n        // set default values\r\n        resultConfig.endpointUrl = function () { return \"https://dc.services.visualstudio.com/v2/track\"; };\r\n        resultConfig.emitLineDelimitedJson = function () { return false; };\r\n        resultConfig.maxBatchInterval = function () { return 15000; };\r\n        resultConfig.maxBatchSizeInBytes = function () { return 102400; }; // 100kb\r\n        resultConfig.disableTelemetry = function () { return false; };\r\n        resultConfig.enableSessionStorageBuffer = function () { return true; };\r\n        resultConfig.isRetryDisabled = function () { return false; };\r\n        resultConfig.isBeaconApiDisabled = function () { return true; };\r\n        resultConfig.instrumentationKey = function () { return undefined; }; // Channel doesn't need iKey, it should be set already\r\n        return resultConfig;\r\n    };\r\n    Sender._getEmptyAppInsightsChannelConfig = function () {\r\n        return {\r\n            endpointUrl: undefined,\r\n            emitLineDelimitedJson: undefined,\r\n            maxBatchInterval: undefined,\r\n            maxBatchSizeInBytes: undefined,\r\n            disableTelemetry: undefined,\r\n            enableSessionStorageBuffer: undefined,\r\n            isRetryDisabled: undefined,\r\n            isBeaconApiDisabled: undefined,\r\n            instrumentationKey: undefined\r\n        };\r\n    };\r\n    Sender._validate = function (envelope) {\r\n        // call the appropriate Validate depending on the baseType\r\n        switch (envelope.baseType) {\r\n            case Event.dataType:\r\n                return EventValidator.EventValidator.Validate(envelope);\r\n            case Trace.dataType:\r\n                return TraceValidator.TraceValidator.Validate(envelope);\r\n            case Exception.dataType:\r\n                return ExceptionValidator.ExceptionValidator.Validate(envelope);\r\n            case Metric.dataType:\r\n                return MetricValidator.MetricValidator.Validate(envelope);\r\n            case PageView.dataType:\r\n                return PageViewValidator.PageViewValidator.Validate(envelope);\r\n            case PageViewPerformance.dataType:\r\n                return PageViewPerformanceValidator.PageViewPerformanceValidator.Validate(envelope);\r\n            case RemoteDependencyData.dataType:\r\n                return RemoteDepdencyValidator.RemoteDepdencyValidator.Validate(envelope);\r\n            default:\r\n                return EventValidator.EventValidator.Validate(envelope);\r\n        }\r\n    };\r\n    /**\r\n     * Send Beacon API request\r\n     * @param payload {string} - The data payload to be sent.\r\n     * @param isAsync {boolean} - not used\r\n     * Note: Beacon API does not support custom headers and we are not able to get\r\n     * appId from the backend for the correct correlation.\r\n     */\r\n    Sender.prototype._beaconSender = function (payload, isAsync) {\r\n        var url = this._config.endpointUrl();\r\n        var batch = this._buffer.batchPayloads(payload);\r\n        // Chrome only allows CORS-safelisted values for the sendBeacon data argument\r\n        // see: https://bugs.chromium.org/p/chromium/issues/detail?id=720283\r\n        var plainTextBatch = new Blob([batch], { type: 'text/plain;charset=UTF-8' });\r\n        // The sendBeacon method returns true if the user agent is able to successfully queue the data for transfer. Otherwise it returns false.\r\n        var queued = navigator.sendBeacon(url, plainTextBatch);\r\n        if (queued) {\r\n            this._buffer.markAsSent(payload);\r\n        }\r\n        else {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TransmissionFailed, \". \" + \"Failed to send telemetry with Beacon API.\");\r\n        }\r\n    };\r\n    /**\r\n     * Send XMLHttpRequest\r\n     * @param payload {string} - The data payload to be sent.\r\n     * @param isAsync {boolean} - Indicates if the request should be sent asynchronously\r\n     */\r\n    Sender.prototype._xhrSender = function (payload, isAsync) {\r\n        var _this = this;\r\n        var xhr = new XMLHttpRequest();\r\n        xhr[DisabledPropertyName] = true;\r\n        xhr.open(\"POST\", this._config.endpointUrl(), isAsync);\r\n        xhr.setRequestHeader(\"Content-type\", \"application/json\");\r\n        // append Sdk-Context request header only in case of breeze endpoint\r\n        if (Util.isInternalApplicationInsightsEndpoint(this._config.endpointUrl())) {\r\n            xhr.setRequestHeader(RequestHeaders.sdkContextHeader, RequestHeaders.sdkContextHeaderAppIdRequest);\r\n        }\r\n        xhr.onreadystatechange = function () { return _this._xhrReadyStateChange(xhr, payload, payload.length); };\r\n        xhr.onerror = function (event) { return _this._onError(payload, _this._formatErrorMessageXhr(xhr), event); };\r\n        // compose an array of payloads\r\n        var batch = this._buffer.batchPayloads(payload);\r\n        xhr.send(batch);\r\n        this._buffer.markAsSent(payload);\r\n    };\r\n    /**\r\n     * Parses the response from the backend.\r\n     * @param response - XMLHttpRequest or XDomainRequest response\r\n     */\r\n    Sender.prototype._parseResponse = function (response) {\r\n        try {\r\n            if (response && response !== \"\") {\r\n                var result = JSON.parse(response);\r\n                if (result && result.itemsReceived && result.itemsReceived >= result.itemsAccepted &&\r\n                    result.itemsReceived - result.itemsAccepted == result.errors.length) {\r\n                    return result;\r\n                }\r\n            }\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.InvalidBackendResponse, \"Cannot parse the response. \" + Util.getExceptionName(e), {\r\n                response: response\r\n            });\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Resend payload. Adds payload back to the send buffer and setup a send timer (with exponential backoff).\r\n     * @param payload\r\n     */\r\n    Sender.prototype._resendPayload = function (payload, linearFactor) {\r\n        if (linearFactor === void 0) { linearFactor = 1; }\r\n        if (!payload || payload.length === 0) {\r\n            return;\r\n        }\r\n        this._buffer.clearSent(payload);\r\n        this._consecutiveErrors++;\r\n        for (var _i = 0, payload_1 = payload; _i < payload_1.length; _i++) {\r\n            var item = payload_1[_i];\r\n            this._buffer.enqueue(item);\r\n        }\r\n        // setup timer\r\n        this._setRetryTime(linearFactor);\r\n        this._setupTimer();\r\n    };\r\n    /** Calculates the time to wait before retrying in case of an error based on\r\n     * http://en.wikipedia.org/wiki/Exponential_backoff\r\n     */\r\n    Sender.prototype._setRetryTime = function (linearFactor) {\r\n        var SlotDelayInSeconds = 10;\r\n        var delayInSeconds;\r\n        if (this._consecutiveErrors <= 1) {\r\n            delayInSeconds = SlotDelayInSeconds;\r\n        }\r\n        else {\r\n            var backOffSlot = (Math.pow(2, this._consecutiveErrors) - 1) / 2;\r\n            // tslint:disable-next-line:insecure-random\r\n            var backOffDelay = Math.floor(Math.random() * backOffSlot * SlotDelayInSeconds) + 1;\r\n            backOffDelay = linearFactor * backOffDelay;\r\n            delayInSeconds = Math.max(Math.min(backOffDelay, 3600), SlotDelayInSeconds);\r\n        }\r\n        // TODO: Log the backoff time like the C# version does.\r\n        var retryAfterTimeSpan = Date.now() + (delayInSeconds * 1000);\r\n        // TODO: Log the retry at time like the C# version does.\r\n        this._retryAt = retryAfterTimeSpan;\r\n    };\r\n    /**\r\n     * Sets up the timer which triggers actually sending the data.\r\n     */\r\n    Sender.prototype._setupTimer = function () {\r\n        var _this = this;\r\n        if (!this._timeoutHandle) {\r\n            var retryInterval = this._retryAt ? Math.max(0, this._retryAt - Date.now()) : 0;\r\n            var timerValue = Math.max(this._config.maxBatchInterval(), retryInterval);\r\n            this._timeoutHandle = setTimeout(function () {\r\n                _this.triggerSend();\r\n            }, timerValue);\r\n        }\r\n    };\r\n    /**\r\n     * Checks if the SDK should resend the payload after receiving this status code from the backend.\r\n     * @param statusCode\r\n     */\r\n    Sender.prototype._isRetriable = function (statusCode) {\r\n        return statusCode == 408 // Timeout\r\n            || statusCode == 429 // Too many requests.\r\n            || statusCode == 500 // Internal server error.\r\n            || statusCode == 503; // Service unavailable.\r\n    };\r\n    Sender.prototype._formatErrorMessageXhr = function (xhr, message) {\r\n        if (xhr) {\r\n            return \"XMLHttpRequest,Status:\" + xhr.status + \",Response:\" + xhr.responseText || xhr.response || \"\";\r\n        }\r\n        return message;\r\n    };\r\n    /**\r\n     * Send XDomainRequest\r\n     * @param payload {string} - The data payload to be sent.\r\n     * @param isAsync {boolean} - Indicates if the request should be sent asynchronously\r\n     *\r\n     * Note: XDomainRequest does not support sync requests. This 'isAsync' parameter is added\r\n     * to maintain consistency with the xhrSender's contract\r\n     * Note: XDomainRequest does not support custom headers and we are not able to get\r\n     * appId from the backend for the correct correlation.\r\n     */\r\n    Sender.prototype._xdrSender = function (payload, isAsync) {\r\n        var _this = this;\r\n        var xdr = new XDomainRequest();\r\n        xdr.onload = function () { return _this._xdrOnLoad(xdr, payload); };\r\n        xdr.onerror = function (event) { return _this._onError(payload, _this._formatErrorMessageXdr(xdr), event); };\r\n        // XDomainRequest requires the same protocol as the hosting page.\r\n        // If the protocol doesn't match, we can't send the telemetry :(.\r\n        var hostingProtocol = window.location && window.location.protocol;\r\n        if (this._config.endpointUrl().lastIndexOf(hostingProtocol, 0) !== 0) {\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.TransmissionFailed, \". \" +\r\n                \"Cannot send XDomain request. The endpoint URL protocol doesn't match the hosting page protocol.\");\r\n            this._buffer.clear();\r\n            return;\r\n        }\r\n        var endpointUrl = this._config.endpointUrl().replace(/^(https?:)/, \"\");\r\n        xdr.open('POST', endpointUrl);\r\n        // compose an array of payloads\r\n        var batch = this._buffer.batchPayloads(payload);\r\n        xdr.send(batch);\r\n        this._buffer.markAsSent(payload);\r\n    };\r\n    Sender.prototype._formatErrorMessageXdr = function (xdr, message) {\r\n        if (xdr) {\r\n            return \"XDomainRequest,Response:\" + xdr.responseText || \"\";\r\n        }\r\n        return message;\r\n    };\r\n    return Sender;\r\n}());\r\nexport { Sender };\r\n//# sourceMappingURL=Sender.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { Util, DateTimeUtils } from '@microsoft/applicationinsights-common';\r\nimport { _InternalMessageId, LoggingSeverity, CoreUtils, DiagnosticLogger } from '@microsoft/applicationinsights-core-js';\r\nvar Session = /** @class */ (function () {\r\n    function Session() {\r\n    }\r\n    return Session;\r\n}());\r\nexport { Session };\r\nvar _SessionManager = /** @class */ (function () {\r\n    function _SessionManager(config, logger) {\r\n        var _this = this;\r\n        if (CoreUtils.isNullOrUndefined(logger)) {\r\n            this._logger = new DiagnosticLogger();\r\n        }\r\n        else {\r\n            this._logger = logger;\r\n        }\r\n        if (!config) {\r\n            config = {};\r\n        }\r\n        if (!(typeof config.sessionExpirationMs === \"function\")) {\r\n            config.sessionExpirationMs = function () { return _SessionManager.acquisitionSpan; };\r\n        }\r\n        if (!(typeof config.sessionRenewalMs === \"function\")) {\r\n            config.sessionRenewalMs = function () { return _SessionManager.renewalSpan; };\r\n        }\r\n        this.config = config;\r\n        this._storageNamePrefix = function () { return _this.config.namePrefix && _this.config.namePrefix() ? _SessionManager.cookieNameConst + _this.config.namePrefix() : _SessionManager.cookieNameConst; };\r\n        this.automaticSession = new Session();\r\n    }\r\n    _SessionManager.prototype.update = function () {\r\n        if (!this.automaticSession.id) {\r\n            this.initializeAutomaticSession();\r\n        }\r\n        var now = DateTimeUtils.Now();\r\n        var acquisitionExpired = now - this.automaticSession.acquisitionDate > this.config.sessionExpirationMs();\r\n        var renewalExpired = now - this.automaticSession.renewalDate > this.config.sessionRenewalMs();\r\n        // renew if acquisitionSpan or renewalSpan has ellapsed\r\n        if (acquisitionExpired || renewalExpired) {\r\n            // update automaticSession so session state has correct id\r\n            this.renew();\r\n        }\r\n        else {\r\n            // do not update the cookie more often than cookieUpdateInterval\r\n            if (!this.cookieUpdatedTimestamp || now - this.cookieUpdatedTimestamp > _SessionManager.cookieUpdateInterval) {\r\n                this.automaticSession.renewalDate = now;\r\n                this.setCookie(this.automaticSession.id, this.automaticSession.acquisitionDate, this.automaticSession.renewalDate);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     *  Record the current state of the automatic session and store it in our cookie string format\r\n     *  into the browser's local storage. This is used to restore the session data when the cookie\r\n     *  expires.\r\n     */\r\n    _SessionManager.prototype.backup = function () {\r\n        this.setStorage(this.automaticSession.id, this.automaticSession.acquisitionDate, this.automaticSession.renewalDate);\r\n    };\r\n    /**\r\n     *  Use config.namePrefix + ai_session cookie data or local storage data (when the cookie is unavailable) to\r\n     *  initialize the automatic session.\r\n     */\r\n    _SessionManager.prototype.initializeAutomaticSession = function () {\r\n        var cookie = Util.getCookie(this._logger, this._storageNamePrefix());\r\n        if (cookie && typeof cookie.split === \"function\") {\r\n            this.initializeAutomaticSessionWithData(cookie);\r\n        }\r\n        else {\r\n            // There's no cookie, but we might have session data in local storage\r\n            // This can happen if the session expired or the user actively deleted the cookie\r\n            // We only want to recover data if the cookie is missing from expiry. We should respect the user's wishes if the cookie was deleted actively.\r\n            // The User class handles this for us and deletes our local storage object if the persistent user cookie was removed.\r\n            var storage = Util.getStorage(this._logger, this._storageNamePrefix());\r\n            if (storage) {\r\n                this.initializeAutomaticSessionWithData(storage);\r\n            }\r\n        }\r\n        if (!this.automaticSession.id) {\r\n            this.renew();\r\n        }\r\n    };\r\n    /**\r\n     *  Extract id, aquisitionDate, and renewalDate from an ai_session payload string and\r\n     *  use this data to initialize automaticSession.\r\n     *\r\n     *  @param {string} sessionData - The string stored in an ai_session cookie or local storage backup\r\n     */\r\n    _SessionManager.prototype.initializeAutomaticSessionWithData = function (sessionData) {\r\n        var params = sessionData.split(\"|\");\r\n        if (params.length > 0) {\r\n            this.automaticSession.id = params[0];\r\n        }\r\n        try {\r\n            if (params.length > 1) {\r\n                var acq = +params[1];\r\n                this.automaticSession.acquisitionDate = +new Date(acq);\r\n                this.automaticSession.acquisitionDate = this.automaticSession.acquisitionDate > 0 ? this.automaticSession.acquisitionDate : 0;\r\n            }\r\n            if (params.length > 2) {\r\n                var renewal = +params[2];\r\n                this.automaticSession.renewalDate = +new Date(renewal);\r\n                this.automaticSession.renewalDate = this.automaticSession.renewalDate > 0 ? this.automaticSession.renewalDate : 0;\r\n            }\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.ErrorParsingAISessionCookie, \"Error parsing ai_session cookie, session will be reset: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n        if (this.automaticSession.renewalDate == 0) {\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.SessionRenewalDateIsZero, \"AI session renewal date is 0, session will be reset.\");\r\n        }\r\n    };\r\n    _SessionManager.prototype.renew = function () {\r\n        var now = DateTimeUtils.Now();\r\n        this.automaticSession.id = Util.newId();\r\n        this.automaticSession.acquisitionDate = now;\r\n        this.automaticSession.renewalDate = now;\r\n        this.setCookie(this.automaticSession.id, this.automaticSession.acquisitionDate, this.automaticSession.renewalDate);\r\n        // If this browser does not support local storage, fire an internal log to keep track of it at this point\r\n        if (!Util.canUseLocalStorage()) {\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserDoesNotSupportLocalStorage, \"Browser does not support local storage. Session durations will be inaccurate.\");\r\n        }\r\n    };\r\n    _SessionManager.prototype.setCookie = function (guid, acq, renewal) {\r\n        // Set cookie to expire after the session expiry time passes or the session renewal deadline, whichever is sooner\r\n        // Expiring the cookie will cause the session to expire even if the user isn't on the page\r\n        var acquisitionExpiry = acq + this.config.sessionExpirationMs();\r\n        var renewalExpiry = renewal + this.config.sessionRenewalMs();\r\n        var cookieExpiry = new Date();\r\n        var cookie = [guid, acq, renewal];\r\n        if (acquisitionExpiry < renewalExpiry) {\r\n            cookieExpiry.setTime(acquisitionExpiry);\r\n        }\r\n        else {\r\n            cookieExpiry.setTime(renewalExpiry);\r\n        }\r\n        var cookieDomnain = this.config.cookieDomain ? this.config.cookieDomain() : null;\r\n        Util.setCookie(this._logger, this._storageNamePrefix(), cookie.join('|') + ';expires=' + cookieExpiry.toUTCString(), cookieDomnain);\r\n        this.cookieUpdatedTimestamp = DateTimeUtils.Now();\r\n    };\r\n    _SessionManager.prototype.setStorage = function (guid, acq, renewal) {\r\n        // Keep data in local storage to retain the last session id, allowing us to cleanly end the session when it expires\r\n        // Browsers that don't support local storage won't be able to end sessions cleanly from the client\r\n        // The server will notice this and end the sessions itself, with loss of accurate session duration\r\n        Util.setStorage(this._logger, this._storageNamePrefix(), [guid, acq, renewal].join('|'));\r\n    };\r\n    _SessionManager.acquisitionSpan = 86400000; // 24 hours in ms\r\n    _SessionManager.renewalSpan = 1800000; // 30 minutes in ms\r\n    _SessionManager.cookieUpdateInterval = 60000; // 1 minute in ms\r\n    _SessionManager.cookieNameConst = 'ai_session';\r\n    return _SessionManager;\r\n}());\r\nexport { _SessionManager };\r\n//# sourceMappingURL=Session.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nvar Application = /** @class */ (function () {\r\n    function Application() {\r\n    }\r\n    return Application;\r\n}());\r\nexport { Application };\r\n//# sourceMappingURL=Application.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nvar Device = /** @class */ (function () {\r\n    /**\r\n     * Constructs a new instance of the Device class\r\n     */\r\n    function Device() {\r\n        // don't attempt to fingerprint browsers\r\n        this.id = \"browser\";\r\n        // Device type is a dimension in our data platform\r\n        // Setting it to 'Browser' allows to separate client and server dependencies/exceptions\r\n        this.deviceClass = \"Browser\";\r\n    }\r\n    return Device;\r\n}());\r\nexport { Device };\r\n//# sourceMappingURL=Device.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nvar Version = \"2.0.2-beta\";\r\nvar Internal = /** @class */ (function () {\r\n    /**\r\n    * Constructs a new instance of the internal telemetry data class.\r\n    */\r\n    function Internal(config) {\r\n        this.sdkVersion = (config.sdkExtension && config.sdkExtension() ? config.sdkExtension() + \"_\" : \"\") + \"javascript:\" + Version;\r\n    }\r\n    return Internal;\r\n}());\r\nexport { Internal };\r\n//# sourceMappingURL=Internal.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nvar HashCodeScoreGenerator = /** @class */ (function () {\r\n    function HashCodeScoreGenerator() {\r\n    }\r\n    HashCodeScoreGenerator.prototype.getHashCodeScore = function (key) {\r\n        var score = this.getHashCode(key) / HashCodeScoreGenerator.INT_MAX_VALUE;\r\n        return score * 100;\r\n    };\r\n    HashCodeScoreGenerator.prototype.getHashCode = function (input) {\r\n        if (input == \"\") {\r\n            return 0;\r\n        }\r\n        while (input.length < HashCodeScoreGenerator.MIN_INPUT_LENGTH) {\r\n            input = input.concat(input);\r\n        }\r\n        // 5381 is a magic number: http://stackoverflow.com/questions/10696223/reason-for-5381-number-in-djb-hash-function\r\n        var hash = 5381;\r\n        for (var i = 0; i < input.length; ++i) {\r\n            hash = ((hash << 5) + hash) + input.charCodeAt(i);\r\n            // 'hash' is of number type which means 53 bit integer (http://www.ecma-international.org/ecma-262/6.0/#sec-ecmascript-language-types-number-type)\r\n            // 'hash & hash' will keep it 32 bit integer - just to make it clearer what the result is.\r\n            hash = hash & hash;\r\n        }\r\n        return Math.abs(hash);\r\n    };\r\n    // We're using 32 bit math, hence max value is (2^31 - 1)\r\n    HashCodeScoreGenerator.INT_MAX_VALUE = 2147483647;\r\n    // (Magic number) DJB algorithm can't work on shorter strings (results in poor distribution\r\n    HashCodeScoreGenerator.MIN_INPUT_LENGTH = 8;\r\n    return HashCodeScoreGenerator;\r\n}());\r\nexport { HashCodeScoreGenerator };\r\n//# sourceMappingURL=HashCodeScoreGenerator.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { HashCodeScoreGenerator } from './HashCodeScoreGenerator';\r\nimport { ContextTagKeys } from '@microsoft/applicationinsights-common';\r\nvar SamplingScoreGenerator = /** @class */ (function () {\r\n    function SamplingScoreGenerator() {\r\n        this.hashCodeGeneragor = new HashCodeScoreGenerator();\r\n    }\r\n    SamplingScoreGenerator.prototype.getSamplingScore = function (envelope) {\r\n        var tagKeys = new ContextTagKeys();\r\n        var score = 0;\r\n        if (envelope.tags[tagKeys.userId]) {\r\n            score = this.hashCodeGeneragor.getHashCodeScore(envelope.tags[tagKeys.userId]);\r\n        }\r\n        else if (envelope.tags[tagKeys.operationId]) {\r\n            score = this.hashCodeGeneragor.getHashCodeScore(envelope.tags[tagKeys.operationId]);\r\n        }\r\n        else {\r\n            // tslint:disable-next-line:insecure-random\r\n            score = Math.random();\r\n        }\r\n        return score;\r\n    };\r\n    return SamplingScoreGenerator;\r\n}());\r\nexport { SamplingScoreGenerator };\r\n//# sourceMappingURL=SamplingScoreGenerator.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { SamplingScoreGenerator } from '../SamplingScoreGenerator';\r\nimport { _InternalMessageId, LoggingSeverity, DiagnosticLogger, CoreUtils } from '@microsoft/applicationinsights-core-js';\r\nvar Sample = /** @class */ (function () {\r\n    function Sample(sampleRate, logger) {\r\n        // We're using 32 bit math, hence max value is (2^31 - 1)\r\n        this.INT_MAX_VALUE = 2147483647;\r\n        if (CoreUtils.isNullOrUndefined(logger)) {\r\n            this._logger = new DiagnosticLogger();\r\n        }\r\n        else {\r\n            this._logger = logger;\r\n        }\r\n        if (sampleRate > 100 || sampleRate < 0) {\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.SampleRateOutOfRange, \"Sampling rate is out of range (0..100). Sampling will be disabled, you may be sending too much data which may affect your AI service level.\", { samplingRate: sampleRate }, true);\r\n            this.sampleRate = 100;\r\n        }\r\n        this.sampleRate = sampleRate;\r\n        this.samplingScoreGenerator = new SamplingScoreGenerator();\r\n    }\r\n    /**\r\n    * Determines if an envelope is sampled in (i.e. will be sent) or not (i.e. will be dropped).\r\n    */\r\n    Sample.prototype.isSampledIn = function (envelope) {\r\n        // return true as sampling will move to different extension\r\n        return true;\r\n    };\r\n    return Sample;\r\n}());\r\nexport { Sample };\r\n//# sourceMappingURL=Sample.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { Util } from '@microsoft/applicationinsights-common';\r\nimport { _InternalMessageId, LoggingSeverity } from '@microsoft/applicationinsights-core-js';\r\nvar User = /** @class */ (function () {\r\n    function User(config, logger) {\r\n        this._logger = logger;\r\n        //get userId or create new one if none exists\r\n        var cookie = Util.getCookie(this._logger, User.userCookieName);\r\n        if (cookie) {\r\n            var params = cookie.split(User.cookieSeparator);\r\n            if (params.length > 0) {\r\n                this.id = params[0];\r\n            }\r\n        }\r\n        this.config = config;\r\n        if (!this.id) {\r\n            this.id = Util.newId();\r\n            var date = new Date();\r\n            var acqStr = Util.toISOStringForIE8(date);\r\n            this.accountAcquisitionDate = acqStr;\r\n            // without expiration, cookies expire at the end of the session\r\n            // set it to 365 days from now\r\n            // 365 * 24 * 60 * 60 * 1000 = 31536000000 \r\n            date.setTime(date.getTime() + 31536000000);\r\n            var newCookie = [this.id, acqStr];\r\n            var cookieDomain = this.config.cookieDomain ? this.config.cookieDomain() : undefined;\r\n            Util.setCookie(this._logger, User.userCookieName, newCookie.join(User.cookieSeparator) + ';expires=' + date.toUTCString(), cookieDomain);\r\n            // If we have an config.namePrefix() + ai_session in local storage this means the user actively removed our cookies.\r\n            // We should respect their wishes and clear ourselves from local storage\r\n            var name_1 = config.namePrefix && config.namePrefix() ? config.namePrefix() + 'ai_session' : 'ai_session';\r\n            Util.removeStorage(this._logger, name_1);\r\n        }\r\n        // We still take the account id from the ctor param for backward compatibility. \r\n        // But if the the customer set the accountId through the newer setAuthenticatedUserContext API, we will override it.\r\n        this.accountId = config.accountId ? config.accountId() : undefined;\r\n        // Get the auth user id and account id from the cookie if exists\r\n        // Cookie is in the pattern: <authenticatedId>|<accountId>\r\n        var authCookie = Util.getCookie(this._logger, User.authUserCookieName);\r\n        if (authCookie) {\r\n            authCookie = decodeURI(authCookie);\r\n            var authCookieString = authCookie.split(User.cookieSeparator);\r\n            if (authCookieString[0]) {\r\n                this.authenticatedId = authCookieString[0];\r\n            }\r\n            if (authCookieString.length > 1 && authCookieString[1]) {\r\n                this.accountId = authCookieString[1];\r\n            }\r\n        }\r\n    }\r\n    /**\r\n    * Sets the authenticated user id and the account id in this session.\r\n    *\r\n    * @param authenticatedUserId {string} - The authenticated user id. A unique and persistent string that represents each authenticated user in the service.\r\n    * @param accountId {string} - An optional string to represent the account associated with the authenticated user.\r\n    */\r\n    User.prototype.setAuthenticatedUserContext = function (authenticatedUserId, accountId, storeInCookie) {\r\n        if (storeInCookie === void 0) { storeInCookie = false; }\r\n        // Validate inputs to ensure no cookie control characters.\r\n        var isInvalidInput = !this.validateUserInput(authenticatedUserId) || (accountId && !this.validateUserInput(accountId));\r\n        if (isInvalidInput) {\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.SetAuthContextFailedAccountName, \"Setting auth user context failed. \" +\r\n                \"User auth/account id should be of type string, and not contain commas, semi-colons, equal signs, spaces, or vertical-bars.\", true);\r\n            return;\r\n        }\r\n        // Create cookie string.\r\n        this.authenticatedId = authenticatedUserId;\r\n        var authCookie = this.authenticatedId;\r\n        if (accountId) {\r\n            this.accountId = accountId;\r\n            authCookie = [this.authenticatedId, this.accountId].join(User.cookieSeparator);\r\n        }\r\n        if (storeInCookie) {\r\n            // Set the cookie. No expiration date because this is a session cookie (expires when browser closed).\r\n            // Encoding the cookie to handle unexpected unicode characters.\r\n            Util.setCookie(this._logger, User.authUserCookieName, encodeURI(authCookie), this.config.cookieDomain());\r\n        }\r\n    };\r\n    /**\r\n     * Clears the authenticated user id and the account id from the user context.\r\n     * @returns {}\r\n     */\r\n    User.prototype.clearAuthenticatedUserContext = function () {\r\n        this.authenticatedId = null;\r\n        this.accountId = null;\r\n        Util.deleteCookie(this._logger, User.authUserCookieName);\r\n    };\r\n    User.prototype.validateUserInput = function (id) {\r\n        // Validate:\r\n        // 1. Id is a non-empty string.\r\n        // 2. It does not contain special characters for cookies.\r\n        if (typeof id !== 'string' ||\r\n            !id ||\r\n            id.match(/,|;|=| |\\|/)) {\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n    User.cookieSeparator = '|';\r\n    User.userCookieName = 'ai_user';\r\n    User.authUserCookieName = 'ai_authUser';\r\n    return User;\r\n}());\r\nexport { User };\r\n//# sourceMappingURL=User.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nvar Location = /** @class */ (function () {\r\n    function Location() {\r\n    }\r\n    return Location;\r\n}());\r\nexport { Location };\r\n//# sourceMappingURL=Location.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { Util } from '@microsoft/applicationinsights-common';\r\nvar TelemetryTrace = /** @class */ (function () {\r\n    function TelemetryTrace(id, parentId, name) {\r\n        this.traceID = id || Util.newId();\r\n        this.parentID = parentId;\r\n        this.name = name;\r\n    }\r\n    return TelemetryTrace;\r\n}());\r\nexport { TelemetryTrace };\r\n//# sourceMappingURL=TelemetryTrace.js.map","/**\r\n * PropertiesPlugin.ts\r\n * @copyright Microsoft 2018\r\n */\r\nimport { Session, _SessionManager } from './Context/Session';\r\nimport { Extensions, CtxTagKeys, SDKExtensionKeys } from '@microsoft/applicationinsights-common';\r\nimport { Application } from './Context/Application';\r\nimport { Device } from './Context/Device';\r\nimport { Internal } from './Context/Internal';\r\nimport { Sample } from './Context/Sample';\r\nimport { User } from './Context/User';\r\nimport { Location } from './Context/Location';\r\nimport { TelemetryTrace } from './Context/TelemetryTrace';\r\nvar TelemetryContext = /** @class */ (function () {\r\n    function TelemetryContext(logger, defaultConfig) {\r\n        if (typeof window !== 'undefined') {\r\n            this.sessionManager = new _SessionManager(defaultConfig, logger);\r\n            this.application = new Application();\r\n            this.device = new Device();\r\n            this.internal = new Internal(defaultConfig);\r\n            this.location = new Location();\r\n            this.user = new User(defaultConfig, logger);\r\n            this.telemetryTrace = new TelemetryTrace();\r\n            this.session = new Session();\r\n            this.sample = new Sample(defaultConfig.samplingPercentage(), logger);\r\n        }\r\n    }\r\n    TelemetryContext.prototype.applySessionContext = function (event) {\r\n        var sessionContext = this.session || this.sessionManager.automaticSession;\r\n        if (sessionContext) {\r\n            if (typeof sessionContext.id === \"string\") {\r\n                event.ext.app.sesId = sessionContext.id;\r\n            }\r\n        }\r\n        if (this.session) {\r\n            // If customer set session info, apply his context; otherwise apply context automatically generated \r\n            if (typeof this.session.id === \"string\") {\r\n                event.ext.app.sesId = this.session.id;\r\n            }\r\n            else {\r\n                event.ext.app.sesId = this.sessionManager.automaticSession.id;\r\n            }\r\n        }\r\n    };\r\n    TelemetryContext.prototype.applyOperatingSystemContxt = function (event) {\r\n        if (this.os && this.os.name) {\r\n            event.ext.os = this.os;\r\n        }\r\n    };\r\n    TelemetryContext.prototype.applyApplicationContext = function (event) {\r\n        if (this.application) {\r\n            if (typeof this.application.ver === \"string\") {\r\n                event.tags.push((_a = {}, _a[CtxTagKeys.applicationVersion] = this.application.ver, _a));\r\n            }\r\n            if (typeof this.application.build === \"string\") {\r\n                event.tags.push((_b = {}, _b[CtxTagKeys.applicationBuild] = this.application.build, _b));\r\n            }\r\n        }\r\n        var _a, _b;\r\n    };\r\n    TelemetryContext.prototype.applyDeviceContext = function (event) {\r\n        if (this.device) {\r\n            if (typeof this.device.id === \"string\") {\r\n                event.ext.device.localId = this.device.id;\r\n            }\r\n            if (typeof this.device.ip === \"string\") {\r\n                event.ext.device.ip = this.device.ip;\r\n            }\r\n            if (typeof this.device.model === \"string\") {\r\n                event.ext.device.model = this.device.model;\r\n            }\r\n            if (typeof this.device.deviceClass === \"string\") {\r\n                event.ext.device.deviceClass = this.device.deviceClass;\r\n            }\r\n        }\r\n    };\r\n    TelemetryContext.prototype.applyInternalContext = function (event) {\r\n        if (this.internal) {\r\n            if (typeof this.internal.agentVersion === \"string\") {\r\n                event.tags.push((_a = {}, _a[CtxTagKeys.internalAgentVersion] = this.internal.agentVersion, _a)); // not mapped in CS 4.0\r\n            }\r\n            if (typeof this.internal.sdkVersion === \"string\") {\r\n                event.tags.push((_b = {}, _b[CtxTagKeys.internalSdkVersion] = this.internal.sdkVersion, _b));\r\n            }\r\n            else {\r\n                // store the version provided by core\r\n                if (event[Extensions.SDKExt] && event[Extensions.SDKExt][SDKExtensionKeys.libVer]) {\r\n                    event.tags.push((_c = {}, _c[CtxTagKeys.internalSdkVersion] = event[Extensions.SDKExt][SDKExtensionKeys.libVer], _c)); // map sdk.libVer \r\n                }\r\n            }\r\n        }\r\n        var _a, _b, _c;\r\n    };\r\n    TelemetryContext.prototype.applyLocationContext = function (event) {\r\n        if (this.location) {\r\n            if (typeof this.location.ip === \"string\") {\r\n                event.tags.push((_a = {}, _a[CtxTagKeys.locationIp] = this.location.ip, _a));\r\n            }\r\n        }\r\n        var _a;\r\n    };\r\n    TelemetryContext.prototype.applySampleContext = function (event) {\r\n        if (this.sample) {\r\n            event.tags.push({ SampleRate: this.sample.sampleRate }); // tags.sampleRate -> mapped in CS 4.0\r\n        }\r\n    };\r\n    TelemetryContext.prototype.applyOperationContext = function (event) {\r\n        if (this.telemetryTrace) {\r\n            var trace = event.ext.trace || { traceID: undefined, parentID: undefined };\r\n            if (typeof this.telemetryTrace.traceID === \"string\") {\r\n                trace.traceID = this.telemetryTrace.traceID;\r\n            }\r\n            if (typeof this.telemetryTrace.name === \"string\") {\r\n                trace.name = this.telemetryTrace.name;\r\n            }\r\n            if (typeof this.telemetryTrace.parentID === \"string\") {\r\n                trace.parentID = this.telemetryTrace.parentID;\r\n            }\r\n            event.ext.trace = trace;\r\n        }\r\n    };\r\n    TelemetryContext.prototype.applyWebContext = function (event) {\r\n        if (this.web) {\r\n            event.ext.web = event.ext.web || {};\r\n            event.ext.web = this.web;\r\n        }\r\n    };\r\n    TelemetryContext.prototype.applyUserContext = function (event) {\r\n        if (this.user) {\r\n            if (!event.tags) {\r\n                event.tags = [];\r\n            }\r\n            // stays in tags\r\n            if (typeof this.user.accountId === \"string\") {\r\n                var item = {};\r\n                event.tags.push((_a = {}, _a[CtxTagKeys.userAccountId] = this.user.accountId, _a));\r\n            }\r\n            // CS 4.0            \r\n            if (typeof this.user.id === \"string\") {\r\n                event.ext.user.id = this.user.id;\r\n            }\r\n            if (typeof this.user.authenticatedId === \"string\") {\r\n                event.ext.user.authId = this.user.authenticatedId;\r\n            }\r\n        }\r\n        var _a;\r\n    };\r\n    TelemetryContext.prototype.cleanUp = function (event) {\r\n        if (event.ext[Extensions.DeviceExt] && Object.keys(event.ext[Extensions.DeviceExt]).length === 0) {\r\n            delete event.ext[Extensions.DeviceExt];\r\n        }\r\n        if (event.ext[Extensions.UserExt] && Object.keys(event.ext[Extensions.UserExt]).length === 0) {\r\n            delete event.ext[Extensions.UserExt];\r\n        }\r\n        if (event.ext[Extensions.WebExt] && Object.keys(event.ext[Extensions.WebExt]).length === 0) {\r\n            delete event.ext[Extensions.WebExt];\r\n        }\r\n        if (event.ext[Extensions.OSExt] && Object.keys(event.ext[Extensions.OSExt]).length === 0) {\r\n            delete event.ext[Extensions.OSExt];\r\n        }\r\n        if (event.ext[Extensions.AppExt] && Object.keys(event.ext[Extensions.AppExt]).length === 0) {\r\n            delete event.ext[Extensions.AppExt];\r\n        }\r\n        if (event.ext[Extensions.TraceExt] && Object.keys(event.ext[Extensions.TraceExt]).length === 0) {\r\n            delete event.ext[Extensions.TraceExt];\r\n        }\r\n    };\r\n    return TelemetryContext;\r\n}());\r\nexport { TelemetryContext };\r\n//# sourceMappingURL=TelemetryContext.js.map","/**\r\n * PropertiesPlugin.ts\r\n * @copyright Microsoft 2018\r\n */\r\nimport { CoreUtils } from '@microsoft/applicationinsights-core-js';\r\nimport { TelemetryContext } from './TelemetryContext';\r\nimport { PageView, ConfigurationManager, PropertiesPluginIdentifier, Extensions } from '@microsoft/applicationinsights-common';\r\nvar PropertiesPlugin = /** @class */ (function () {\r\n    function PropertiesPlugin() {\r\n        this.priority = 170;\r\n        this.identifier = PropertiesPluginIdentifier;\r\n    }\r\n    PropertiesPlugin.getDefaultConfig = function () {\r\n        var defaultConfig = {\r\n            instrumentationKey: function () { return undefined; },\r\n            accountId: function () { return null; },\r\n            sessionRenewalMs: function () { return 30 * 60 * 1000; },\r\n            samplingPercentage: function () { return 100; },\r\n            sessionExpirationMs: function () { return 24 * 60 * 60 * 1000; },\r\n            cookieDomain: function () { return null; },\r\n            sdkExtension: function () { return null; },\r\n            isBrowserLinkTrackingEnabled: function () { return false; },\r\n            appId: function () { return null; },\r\n            namePrefix: function () { return undefined; }\r\n        };\r\n        return defaultConfig;\r\n    };\r\n    PropertiesPlugin.prototype.initialize = function (config, core, extensions) {\r\n        var _this = this;\r\n        var defaultConfig = PropertiesPlugin.getDefaultConfig();\r\n        this._extensionConfig = this._extensionConfig || PropertiesPlugin.getDefaultConfig();\r\n        var _loop_1 = function (field) {\r\n            this_1._extensionConfig[field] = function () { return ConfigurationManager.getConfig(config, field, _this.identifier, defaultConfig[field]()); };\r\n        };\r\n        var this_1 = this;\r\n        for (var field in defaultConfig) {\r\n            _loop_1(field);\r\n        }\r\n        this._logger = core.logger;\r\n        this.context = new TelemetryContext(core.logger, this._extensionConfig);\r\n    };\r\n    /**\r\n     * Add Part A fields to the event\r\n     * @param event The event that needs to be processed\r\n     */\r\n    PropertiesPlugin.prototype.processTelemetry = function (event) {\r\n        if (CoreUtils.isNullOrUndefined(event)) {\r\n            // TODO(barustum): throw an internal event once we have support for internal logging\r\n        }\r\n        else {\r\n            // if the event is not sampled in, do not bother going through the pipeline\r\n            if (this.context.sample.isSampledIn(event)) {\r\n                // If the envelope is PageView, reset the internal message count so that we can send internal telemetry for the new page.\r\n                if (event.name === PageView.envelopeType) {\r\n                    this._logger.resetInternalMessageCount();\r\n                }\r\n                if (this.context.session) {\r\n                    // If customer did not provide custom session id update the session manager\r\n                    if (typeof this.context.session.id !== \"string\") {\r\n                        this.context.sessionManager.update();\r\n                    }\r\n                }\r\n                this._processTelemetryInternal(event);\r\n            }\r\n            if (!CoreUtils.isNullOrUndefined(this._nextPlugin)) {\r\n                this._nextPlugin.processTelemetry(event);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Sets the next plugin that comes after this plugin\r\n     * @param nextPlugin The next plugin\r\n     */\r\n    PropertiesPlugin.prototype.setNextPlugin = function (nextPlugin) {\r\n        this._nextPlugin = nextPlugin;\r\n    };\r\n    PropertiesPlugin.prototype._processTelemetryInternal = function (event) {\r\n        // set part A  fields\r\n        if (!event.tags) {\r\n            event.tags = [];\r\n        }\r\n        if (!event.ext) {\r\n            event.ext = {};\r\n        }\r\n        event.ext[Extensions.DeviceExt] = event.ext[Extensions.DeviceExt] || {};\r\n        event.ext[Extensions.WebExt] = event.ext[Extensions.WebExt] || {};\r\n        event.ext[Extensions.UserExt] = event.ext[Extensions.UserExt] || {};\r\n        event.ext[Extensions.OSExt] = event.ext[Extensions.OSExt] || {};\r\n        event.ext[Extensions.AppExt] = event.ext[Extensions.AppExt] || {};\r\n        event.ext[Extensions.TraceExt] = event.ext[Extensions.TraceExt] || {};\r\n        this.context.applySessionContext(event);\r\n        this.context.applyApplicationContext(event);\r\n        this.context.applyDeviceContext(event);\r\n        this.context.applyOperationContext(event);\r\n        this.context.applyUserContext(event);\r\n        this.context.applyOperatingSystemContxt(event);\r\n        this.context.applyWebContext(event);\r\n        this.context.applyLocationContext(event); // legacy tags\r\n        this.context.applySampleContext(event); // legacy tags\r\n        this.context.applyInternalContext(event); // legacy tags\r\n        this.context.cleanUp(event);\r\n    };\r\n    return PropertiesPlugin;\r\n}());\r\nexport default PropertiesPlugin;\r\n//# sourceMappingURL=PropertiesPlugin.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { DataSanitizer, UrlHelper, DateTimeUtils } from '@microsoft/applicationinsights-common';\r\nvar XHRMonitoringState = /** @class */ (function () {\r\n    function XHRMonitoringState() {\r\n        this.openDone = false;\r\n        this.setRequestHeaderDone = false;\r\n        this.sendDone = false;\r\n        this.abortDone = false;\r\n        //<summary>True, if onreadyStateChangeCallback function attached to xhr, otherwise false</summary>\r\n        this.onreadystatechangeCallbackAttached = false;\r\n    }\r\n    return XHRMonitoringState;\r\n}());\r\nexport { XHRMonitoringState };\r\nvar ajaxRecord = /** @class */ (function () {\r\n    function ajaxRecord(id, logger) {\r\n        this.completed = false;\r\n        this.requestHeadersSize = null;\r\n        this.ttfb = null;\r\n        this.responseReceivingDuration = null;\r\n        this.callbackDuration = null;\r\n        this.ajaxTotalDuration = null;\r\n        this.aborted = null;\r\n        this.pageUrl = null;\r\n        this.requestUrl = null;\r\n        this.requestSize = 0;\r\n        this.method = null;\r\n        ///<summary>Returns the HTTP status code.</summary>\r\n        this.status = null;\r\n        //<summary>The timestamp when open method was invoked</summary>\r\n        this.requestSentTime = null;\r\n        //<summary>The timestamps when first byte was received</summary>\r\n        this.responseStartedTime = null;\r\n        //<summary>The timestamp when last byte was received</summary>\r\n        this.responseFinishedTime = null;\r\n        //<summary>The timestamp when onreadystatechange callback in readyState 4 finished</summary>\r\n        this.callbackFinishedTime = null;\r\n        //<summary>The timestamp at which ajax was ended</summary>\r\n        this.endTime = null;\r\n        //<summary>The original xhr onreadystatechange event</summary>\r\n        this.originalOnreadystatechage = null;\r\n        this.xhrMonitoringState = new XHRMonitoringState();\r\n        //<summary>Determines whether or not JavaScript exception occured in xhr.onreadystatechange code. 1 if occured, otherwise 0.</summary>\r\n        this.clientFailure = 0;\r\n        this.CalculateMetrics = function () {\r\n            var self = this;\r\n            // round to 3 decimal points\r\n            self.ajaxTotalDuration = Math.round(DateTimeUtils.GetDuration(self.requestSentTime, self.responseFinishedTime) * 1000) / 1000;\r\n        };\r\n        this.id = id;\r\n        this._logger = logger;\r\n    }\r\n    ajaxRecord.prototype.getAbsoluteUrl = function () {\r\n        return this.requestUrl ? UrlHelper.getAbsoluteUrl(this.requestUrl) : null;\r\n    };\r\n    ajaxRecord.prototype.getPathName = function () {\r\n        return this.requestUrl ? DataSanitizer.sanitizeUrl(this._logger, UrlHelper.getCompleteUrl(this.method, this.requestUrl)) : null;\r\n    };\r\n    return ajaxRecord;\r\n}());\r\nexport { ajaxRecord };\r\n;\r\n//# sourceMappingURL=ajaxRecord.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { CoreUtils } from '@microsoft/applicationinsights-core-js';\r\nvar stringUtils = /** @class */ (function () {\r\n    function stringUtils() {\r\n    }\r\n    stringUtils.GetLength = function (strObject) {\r\n        var res = 0;\r\n        if (!CoreUtils.isNullOrUndefined(strObject)) {\r\n            var stringified = \"\";\r\n            try {\r\n                stringified = strObject.toString();\r\n            }\r\n            catch (ex) {\r\n                // some troubles with complex object\r\n            }\r\n            res = stringified.length;\r\n            res = isNaN(res) ? 0 : res;\r\n        }\r\n        return res;\r\n    };\r\n    return stringUtils;\r\n}());\r\nexport { stringUtils };\r\nvar EventHelper = /** @class */ (function () {\r\n    function EventHelper() {\r\n    }\r\n    ///<summary>Binds the specified function to an event, so that the function gets called whenever the event fires on the object</summary>\r\n    ///<param name=\"obj\">Object to which </param>\r\n    ///<param name=\"eventNameWithoutOn\">String that specifies any of the standard DHTML Events without \"on\" prefix</param>\r\n    ///<param name=\"handlerRef\">Pointer that specifies the function to call when event fires</param>\r\n    ///<returns>True if the function was bound successfully to the event, otherwise false</returns>\r\n    EventHelper.AttachEvent = function (obj, eventNameWithoutOn, handlerRef) {\r\n        var result = false;\r\n        if (!CoreUtils.isNullOrUndefined(obj)) {\r\n            if (!CoreUtils.isNullOrUndefined(obj.attachEvent)) {\r\n                // IE before version 9                    \r\n                obj.attachEvent(\"on\" + eventNameWithoutOn, handlerRef);\r\n                result = true;\r\n            }\r\n            else {\r\n                if (!CoreUtils.isNullOrUndefined(obj.addEventListener)) {\r\n                    // all browsers except IE before version 9\r\n                    obj.addEventListener(eventNameWithoutOn, handlerRef, false);\r\n                    result = true;\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    EventHelper.DetachEvent = function (obj, eventNameWithoutOn, handlerRef) {\r\n        if (!CoreUtils.isNullOrUndefined(obj)) {\r\n            if (!CoreUtils.isNullOrUndefined(obj.detachEvent)) {\r\n                obj.detachEvent(\"on\" + eventNameWithoutOn, handlerRef);\r\n            }\r\n            else {\r\n                if (!CoreUtils.isNullOrUndefined(obj.removeEventListener)) {\r\n                    obj.removeEventListener(eventNameWithoutOn, handlerRef, false);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    return EventHelper;\r\n}());\r\nexport { EventHelper };\r\n//# sourceMappingURL=ajaxUtils.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { RequestHeaders, Util, CorrelationIdHelper, TelemetryItemCreator, RemoteDependencyData, DateTimeUtils, DisabledPropertyName, ConfigurationManager, PropertiesPluginIdentifier } from '@microsoft/applicationinsights-common';\r\nimport { CoreUtils, LoggingSeverity, _InternalMessageId } from '@microsoft/applicationinsights-core-js';\r\nimport { ajaxRecord } from './ajaxRecord';\r\nimport { EventHelper } from './ajaxUtils';\r\nvar AjaxMonitor = /** @class */ (function () {\r\n    function AjaxMonitor() {\r\n        this._trackAjaxAttempts = 0;\r\n        this.identifier = AjaxMonitor.identifier;\r\n        this.priority = 161;\r\n        this.currentWindowHost = window && window.location && window.location.host && window.location.host.toLowerCase();\r\n        this.initialized = false;\r\n        this._fetchInitialized = false;\r\n    }\r\n    ///<summary>Verifies that particalar instance of XMLHttpRequest needs to be monitored</summary>\r\n    ///<param name=\"excludeAjaxDataValidation\">Optional parameter. True if ajaxData must be excluded from verification</param>\r\n    ///<returns type=\"bool\">True if instance needs to be monitored, otherwise false</returns>\r\n    AjaxMonitor.prototype.isMonitoredInstance = function (xhr, excludeAjaxDataValidation, request, init) {\r\n        var disabledProperty = false;\r\n        var ajaxValidation = true;\r\n        var initialized = false;\r\n        if (typeof request !== 'undefined') {\r\n            initialized = this._fetchInitialized;\r\n            // Look for DisabledPropertyName in either Request or RequestInit\r\n            disabledProperty = (typeof request === 'object' ? request[DisabledPropertyName] === true : false) ||\r\n                (init ? init[DisabledPropertyName] === true : false);\r\n        }\r\n        else if (typeof xhr !== 'undefined') {\r\n            initialized = this.initialized;\r\n            disabledProperty = xhr[DisabledPropertyName] === true;\r\n            ajaxValidation = excludeAjaxDataValidation === true || !CoreUtils.isNullOrUndefined(xhr.ajaxData);\r\n        }\r\n        // checking to see that all interested functions on xhr were instrumented\r\n        return initialized\r\n            // checking on ajaxData to see that it was not removed in user code\r\n            && ajaxValidation\r\n            // check that this instance is not not used by ajax call performed inside client side monitoring to send data to collector\r\n            && !disabledProperty;\r\n    };\r\n    ///<summary>Determines whether ajax monitoring can be enabled on this document</summary>\r\n    ///<returns>True if Ajax monitoring is supported on this page, otherwise false</returns>\r\n    AjaxMonitor.prototype.supportsAjaxMonitoring = function () {\r\n        var result = true;\r\n        if (CoreUtils.isNullOrUndefined(XMLHttpRequest) ||\r\n            CoreUtils.isNullOrUndefined(XMLHttpRequest.prototype) ||\r\n            CoreUtils.isNullOrUndefined(XMLHttpRequest.prototype.open) ||\r\n            CoreUtils.isNullOrUndefined(XMLHttpRequest.prototype.send) ||\r\n            CoreUtils.isNullOrUndefined(XMLHttpRequest.prototype.abort)) {\r\n            result = false;\r\n        }\r\n        // disable in IE8 or older (https://www.w3schools.com/jsref/jsref_trim_string.asp)\r\n        try {\r\n            \" a \".trim();\r\n        }\r\n        catch (ex) {\r\n            result = false;\r\n        }\r\n        return result;\r\n    };\r\n    AjaxMonitor.prototype.instrumentOpen = function () {\r\n        var originalOpen = XMLHttpRequest.prototype.open;\r\n        var ajaxMonitorInstance = this;\r\n        XMLHttpRequest.prototype.open = function (method, url, async) {\r\n            try {\r\n                if (ajaxMonitorInstance.isMonitoredInstance(this, true) &&\r\n                    (!this.ajaxData ||\r\n                        !this.ajaxData.xhrMonitoringState.openDone)) {\r\n                    ajaxMonitorInstance.openHandler(this, method, url, async);\r\n                }\r\n            }\r\n            catch (e) {\r\n                this._core.logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.FailedMonitorAjaxOpen, \"Failed to monitor XMLHttpRequest.open, monitoring data for this ajax call may be incorrect.\", {\r\n                    ajaxDiagnosticsMessage: AjaxMonitor.getFailedAjaxDiagnosticsMessage(this),\r\n                    exception: Util.dump(e)\r\n                });\r\n            }\r\n            return originalOpen.apply(this, arguments);\r\n        };\r\n    };\r\n    AjaxMonitor.prototype.openHandler = function (xhr, method, url, async) {\r\n        var id;\r\n        if (this._context && this._context.telemetryTrace && this._context.telemetryTrace.traceID) {\r\n            // this format corresponds with activity logic on server-side and is required for the correct correlation\r\n            id = \"|\" + this._context.telemetryTrace.traceID + \".\" + Util.newId();\r\n        }\r\n        else {\r\n            id = Util.newId();\r\n        }\r\n        var ajaxData = new ajaxRecord(id, this._core.logger);\r\n        ajaxData.method = method;\r\n        ajaxData.requestUrl = url;\r\n        ajaxData.xhrMonitoringState.openDone = true;\r\n        xhr.ajaxData = ajaxData;\r\n        this.attachToOnReadyStateChange(xhr);\r\n    };\r\n    AjaxMonitor.getFailedAjaxDiagnosticsMessage = function (xhr) {\r\n        var result = \"\";\r\n        try {\r\n            if (!CoreUtils.isNullOrUndefined(xhr) &&\r\n                !CoreUtils.isNullOrUndefined(xhr.ajaxData) &&\r\n                !CoreUtils.isNullOrUndefined(xhr.ajaxData.requestUrl)) {\r\n                result += \"(url: '\" + xhr.ajaxData.requestUrl + \"')\";\r\n            }\r\n        }\r\n        catch (e) { }\r\n        return result;\r\n    };\r\n    AjaxMonitor.prototype.instrumentSend = function () {\r\n        var originalSend = XMLHttpRequest.prototype.send;\r\n        var ajaxMonitorInstance = this;\r\n        XMLHttpRequest.prototype.send = function (content) {\r\n            try {\r\n                if (ajaxMonitorInstance.isMonitoredInstance(this) && !this.ajaxData.xhrMonitoringState.sendDone) {\r\n                    ajaxMonitorInstance.sendHandler(this, content);\r\n                }\r\n            }\r\n            catch (e) {\r\n                this._core.logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.FailedMonitorAjaxSend, \"Failed to monitor XMLHttpRequest, monitoring data for this ajax call may be incorrect.\", {\r\n                    ajaxDiagnosticsMessage: AjaxMonitor.getFailedAjaxDiagnosticsMessage(this),\r\n                    exception: Util.dump(e)\r\n                });\r\n            }\r\n            return originalSend.apply(this, arguments);\r\n        };\r\n    };\r\n    AjaxMonitor.prototype.sendHandler = function (xhr, content) {\r\n        xhr.ajaxData.requestSentTime = DateTimeUtils.Now();\r\n        xhr = this.includeCorrelationHeaders(xhr.ajaxData, undefined, undefined, xhr);\r\n        xhr.ajaxData.xhrMonitoringState.sendDone = true;\r\n    };\r\n    AjaxMonitor.prototype.instrumentAbort = function () {\r\n        var originalAbort = XMLHttpRequest.prototype.abort;\r\n        var ajaxMonitorInstance = this;\r\n        XMLHttpRequest.prototype.abort = function () {\r\n            try {\r\n                if (ajaxMonitorInstance.isMonitoredInstance(this) && !this.ajaxData.xhrMonitoringState.abortDone) {\r\n                    this.ajaxData.aborted = 1;\r\n                    this.ajaxData.xhrMonitoringState.abortDone = true;\r\n                }\r\n            }\r\n            catch (e) {\r\n                this._core.logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.FailedMonitorAjaxAbort, \"Failed to monitor XMLHttpRequest.abort, monitoring data for this ajax call may be incorrect.\", {\r\n                    ajaxDiagnosticsMessage: AjaxMonitor.getFailedAjaxDiagnosticsMessage(this),\r\n                    exception: Util.dump(e)\r\n                });\r\n            }\r\n            return originalAbort.apply(this, arguments);\r\n        };\r\n    };\r\n    AjaxMonitor.prototype.attachToOnReadyStateChange = function (xhr) {\r\n        var _this = this;\r\n        var ajaxMonitorInstance = this;\r\n        xhr.ajaxData.xhrMonitoringState.onreadystatechangeCallbackAttached = EventHelper.AttachEvent(xhr, \"readystatechange\", function () {\r\n            try {\r\n                if (ajaxMonitorInstance.isMonitoredInstance(xhr)) {\r\n                    if (xhr.readyState === 4) {\r\n                        ajaxMonitorInstance.onAjaxComplete(xhr);\r\n                    }\r\n                }\r\n            }\r\n            catch (e) {\r\n                var exceptionText = Util.dump(e);\r\n                // ignore messages with c00c023f, as this a known IE9 XHR abort issue\r\n                if (!exceptionText || exceptionText.toLowerCase().indexOf(\"c00c023f\") == -1) {\r\n                    _this._core.logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.FailedMonitorAjaxRSC, \"Failed to monitor XMLHttpRequest 'readystatechange' event handler, monitoring data for this ajax call may be incorrect.\", {\r\n                        ajaxDiagnosticsMessage: AjaxMonitor.getFailedAjaxDiagnosticsMessage(xhr),\r\n                        exception: Util.dump(e)\r\n                    });\r\n                }\r\n            }\r\n        });\r\n    };\r\n    AjaxMonitor.prototype.onAjaxComplete = function (xhr) {\r\n        xhr.ajaxData.responseFinishedTime = DateTimeUtils.Now();\r\n        xhr.ajaxData.status = xhr.status;\r\n        xhr.ajaxData.CalculateMetrics();\r\n        if (xhr.ajaxData.ajaxTotalDuration < 0) {\r\n            this._core.logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.FailedMonitorAjaxDur, \"Failed to calculate the duration of the ajax call, monitoring data for this ajax call won't be sent.\", {\r\n                ajaxDiagnosticsMessage: AjaxMonitor.getFailedAjaxDiagnosticsMessage(xhr),\r\n                requestSentTime: xhr.ajaxData.requestSentTime,\r\n                responseFinishedTime: xhr.ajaxData.responseFinishedTime\r\n            });\r\n        }\r\n        else {\r\n            var dependency = {\r\n                id: xhr.ajaxData.id,\r\n                target: xhr.ajaxData.getAbsoluteUrl(),\r\n                name: xhr.ajaxData.getPathName(),\r\n                type: \"Ajax\",\r\n                duration: xhr.ajaxData.ajaxTotalDuration,\r\n                success: (+(xhr.ajaxData.status)) >= 200 && (+(xhr.ajaxData.status)) < 400,\r\n                responseCode: +xhr.ajaxData.status,\r\n                method: xhr.ajaxData.method\r\n            };\r\n            // enrich dependency target with correlation context from the server\r\n            var correlationContext = this.getAjaxCorrelationContext(xhr);\r\n            if (correlationContext) {\r\n                dependency.correlationContext = /* dependency.target + \" | \" + */ correlationContext;\r\n            }\r\n            this.trackDependencyDataInternal(dependency);\r\n            xhr.ajaxData = null;\r\n        }\r\n    };\r\n    AjaxMonitor.prototype.getAjaxCorrelationContext = function (xhr) {\r\n        try {\r\n            var responseHeadersString = xhr.getAllResponseHeaders();\r\n            if (responseHeadersString !== null) {\r\n                var index = responseHeadersString.toLowerCase().indexOf(RequestHeaders.requestContextHeaderLowerCase);\r\n                if (index !== -1) {\r\n                    var responseHeader = xhr.getResponseHeader(RequestHeaders.requestContextHeader);\r\n                    return CorrelationIdHelper.getCorrelationContext(responseHeader);\r\n                }\r\n            }\r\n        }\r\n        catch (e) {\r\n            this._core.logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.FailedMonitorAjaxGetCorrelationHeader, \"Failed to get Request-Context correlation header as it may be not included in the response or not accessible.\", {\r\n                ajaxDiagnosticsMessage: AjaxMonitor.getFailedAjaxDiagnosticsMessage(xhr),\r\n                exception: Util.dump(e)\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Logs dependency call\r\n     * @param dependencyData dependency data object\r\n     */\r\n    AjaxMonitor.prototype.trackDependencyDataInternal = function (dependency, properties, systemProperties) {\r\n        if (this._config.maxAjaxCallsPerView === -1 || this._trackAjaxAttempts < this._config.maxAjaxCallsPerView) {\r\n            var item = TelemetryItemCreator.create(dependency, RemoteDependencyData.dataType, RemoteDependencyData.envelopeType, this._core.logger, properties, systemProperties);\r\n            this._core.track(item);\r\n        }\r\n        else if (this._trackAjaxAttempts === this._config.maxAjaxCallsPerView) {\r\n            this._core.logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.MaxAjaxPerPVExceeded, \"Maximum ajax per page view limit reached, ajax monitoring is paused until the next trackPageView(). In order to increase the limit set the maxAjaxCallsPerView configuration parameter.\", true);\r\n        }\r\n        ++this._trackAjaxAttempts;\r\n    };\r\n    AjaxMonitor.prototype.trackDependencyData = function (dependency, properties) {\r\n        this.trackDependencyDataInternal(dependency, properties);\r\n    };\r\n    AjaxMonitor.prototype.processTelemetry = function (item) {\r\n        if (this._nextPlugin && this._nextPlugin.processTelemetry) {\r\n            this._nextPlugin.processTelemetry(item);\r\n        }\r\n    };\r\n    AjaxMonitor.prototype.setNextPlugin = function (next) {\r\n        if (next) {\r\n            this._nextPlugin = next;\r\n        }\r\n    };\r\n    // Fetch Stuff\r\n    AjaxMonitor.prototype.instrumentFetch = function () {\r\n        if (!this.supportsFetch() || this._fetchInitialized) {\r\n            return;\r\n        }\r\n        var originalFetch = window.fetch;\r\n        var fetchMonitorInstance = this;\r\n        window.fetch = function fetch(input, init) {\r\n            var fetchData;\r\n            if (fetchMonitorInstance.isFetchInstrumented(input) && fetchMonitorInstance.isMonitoredInstance(undefined, undefined, input, init)) {\r\n                try {\r\n                    fetchData = fetchMonitorInstance.createFetchRecord(input, init);\r\n                    init = fetchMonitorInstance.includeCorrelationHeaders(fetchData, input, init);\r\n                }\r\n                catch (e) {\r\n                    fetchMonitorInstance._core.logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.FailedMonitorAjaxOpen, \"Failed to monitor Window.fetch, monitoring data for this fetch call may be incorrect.\", {\r\n                        ajaxDiagnosticsMessage: this.getFailedFetchDiagnosticsMessage(input),\r\n                        exception: Util.dump(e)\r\n                    });\r\n                }\r\n            }\r\n            return originalFetch(input, init)\r\n                .then(function (response) {\r\n                fetchMonitorInstance.onFetchComplete(response, fetchData);\r\n                return response;\r\n            })\r\n                .catch(function (reason) {\r\n                fetchMonitorInstance.onFetchFailed(input, fetchData, reason);\r\n                throw reason;\r\n            });\r\n        };\r\n        this._fetchInitialized = true;\r\n    };\r\n    AjaxMonitor.prototype.isFetchInstrumented = function (input) {\r\n        return this._fetchInitialized && input[DisabledPropertyName] !== true;\r\n    };\r\n    AjaxMonitor.prototype.supportsFetch = function () {\r\n        var result = true;\r\n        if (!window || CoreUtils.isNullOrUndefined(window.Request) ||\r\n            CoreUtils.isNullOrUndefined(window.Request.prototype) ||\r\n            CoreUtils.isNullOrUndefined(window.fetch)) {\r\n            result = false;\r\n        }\r\n        return result;\r\n    };\r\n    AjaxMonitor.prototype.createFetchRecord = function (input, init) {\r\n        var id;\r\n        if (this._context && this._context.telemetryTrace && this._context.telemetryTrace.traceID) {\r\n            // this format corresponds with activity logic on server-side and is required for the correct correlation\r\n            id = \"|\" + this._context.telemetryTrace.traceID + \".\" + Util.newId();\r\n        }\r\n        else {\r\n            id = Util.newId();\r\n        }\r\n        var ajaxData = new ajaxRecord(id, this._core.logger);\r\n        ajaxData.requestSentTime = DateTimeUtils.Now();\r\n        if (input instanceof Request) {\r\n            ajaxData.requestUrl = input ? input.url : \"\";\r\n        }\r\n        else {\r\n            ajaxData.requestUrl = input;\r\n        }\r\n        if (init && init.method) {\r\n            ajaxData.method = init.method;\r\n        }\r\n        else if (input && input instanceof Request) {\r\n            ajaxData.method = input.method;\r\n        }\r\n        else {\r\n            ajaxData.method = \"GET\";\r\n        }\r\n        return ajaxData;\r\n    };\r\n    AjaxMonitor.prototype.includeCorrelationHeaders = function (ajaxData, input, init, xhr) {\r\n        if (input) {\r\n            if (CorrelationIdHelper.canIncludeCorrelationHeader(this._config, ajaxData.getAbsoluteUrl(), this.currentWindowHost)) {\r\n                if (!init) {\r\n                    init = {};\r\n                }\r\n                // init headers override original request headers\r\n                // so, if they exist use only them, otherwise use request's because they should have been applied in the first place\r\n                // not using original request headers will result in them being lost\r\n                init.headers = new Headers(init.headers || (input instanceof Request ? (input.headers || {}) : {}));\r\n                init.headers.set(RequestHeaders.requestIdHeader, ajaxData.id);\r\n                var appId_1 = this._config.appId;\r\n                if (appId_1) {\r\n                    init.headers.set(RequestHeaders.requestContextHeader, RequestHeaders.requestContextAppIdFormat + appId_1);\r\n                }\r\n                return init;\r\n            }\r\n            return init;\r\n        }\r\n        else if (xhr) {\r\n            if (this.currentWindowHost && CorrelationIdHelper.canIncludeCorrelationHeader(this._config, xhr.ajaxData.getAbsoluteUrl(), this.currentWindowHost)) {\r\n                xhr.setRequestHeader(RequestHeaders.requestIdHeader, xhr.ajaxData.id);\r\n                var appId = this._config.appId; // Todo: also, get appId from channel as breeze returns it\r\n                if (appId) {\r\n                    xhr.setRequestHeader(RequestHeaders.requestContextHeader, RequestHeaders.requestContextAppIdFormat + appId);\r\n                }\r\n            }\r\n            return xhr;\r\n        }\r\n        return undefined;\r\n    };\r\n    AjaxMonitor.prototype.getFailedFetchDiagnosticsMessage = function (input) {\r\n        var result = \"\";\r\n        try {\r\n            if (!CoreUtils.isNullOrUndefined(input)) {\r\n                if (typeof (input) === \"string\") {\r\n                    result += \"(url: '\" + input + \"')\";\r\n                }\r\n                else {\r\n                    result += \"(url: '\" + input.url + \"')\";\r\n                }\r\n            }\r\n        }\r\n        catch (e) {\r\n            this._core.logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.FailedMonitorAjaxOpen, \"Failed to grab failed fetch diagnostics message\", { exception: Util.dump(e) });\r\n        }\r\n        return result;\r\n    };\r\n    AjaxMonitor.prototype.onFetchComplete = function (response, ajaxData) {\r\n        if (!ajaxData) {\r\n            return;\r\n        }\r\n        try {\r\n            ajaxData.responseFinishedTime = DateTimeUtils.Now();\r\n            ajaxData.CalculateMetrics();\r\n            if (ajaxData.ajaxTotalDuration < 0) {\r\n                this._core.logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.FailedMonitorAjaxDur, \"Failed to calculate the duration of the fetch call, monitoring data for this fetch call won't be sent.\", {\r\n                    fetchDiagnosticsMessage: this.getFailedFetchDiagnosticsMessage(response),\r\n                    requestSentTime: ajaxData.requestSentTime,\r\n                    responseFinishedTime: ajaxData.responseFinishedTime\r\n                });\r\n            }\r\n            else {\r\n                var dependency = {\r\n                    id: ajaxData.id,\r\n                    target: ajaxData.getAbsoluteUrl(),\r\n                    name: ajaxData.getPathName(),\r\n                    type: \"Fetch\",\r\n                    duration: ajaxData.ajaxTotalDuration,\r\n                    success: response.status >= 200 && response.status < 400,\r\n                    responseCode: response.status,\r\n                    properties: { HttpMethod: ajaxData.method }\r\n                };\r\n                // enrich dependency target with correlation context from the server\r\n                var correlationContext = this.getFetchCorrelationContext(response);\r\n                if (correlationContext) {\r\n                    dependency.correlationContext = correlationContext;\r\n                }\r\n                this.trackDependencyDataInternal(dependency);\r\n            }\r\n        }\r\n        catch (e) {\r\n            this._core.logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.FailedMonitorAjaxGetCorrelationHeader, \"Failed to calculate the duration of the fetch call, monitoring data for this fetch call won't be sent.\", {\r\n                fetchDiagnosticsMessage: this.getFailedFetchDiagnosticsMessage(response),\r\n                exception: Util.dump(e)\r\n            });\r\n        }\r\n    };\r\n    AjaxMonitor.prototype.onFetchFailed = function (input, ajaxData, reason) {\r\n        if (!ajaxData) {\r\n            return;\r\n        }\r\n        try {\r\n            ajaxData.responseFinishedTime = DateTimeUtils.Now();\r\n            ajaxData.CalculateMetrics();\r\n            if (ajaxData.ajaxTotalDuration < 0) {\r\n                this._core.logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.FailedMonitorAjaxDur, \"Failed to calculate the duration of the failed fetch call, monitoring data for this fetch call won't be sent.\", {\r\n                    fetchDiagnosticsMessage: this.getFailedFetchDiagnosticsMessage(input),\r\n                    requestSentTime: ajaxData.requestSentTime,\r\n                    responseFinishedTime: ajaxData.responseFinishedTime\r\n                });\r\n            }\r\n            else {\r\n                var dependency = {\r\n                    id: ajaxData.id,\r\n                    target: ajaxData.getAbsoluteUrl(),\r\n                    name: ajaxData.getPathName(),\r\n                    type: \"Fetch\",\r\n                    duration: ajaxData.ajaxTotalDuration,\r\n                    success: false,\r\n                    responseCode: 0,\r\n                    properties: { HttpMethod: ajaxData.method }\r\n                };\r\n                this.trackDependencyDataInternal(dependency, { error: reason.message });\r\n            }\r\n        }\r\n        catch (e) {\r\n            this._core.logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.FailedMonitorAjaxGetCorrelationHeader, \"Failed to calculate the duration of the failed fetch call, monitoring data for this fetch call won't be sent.\", {\r\n                fetchDiagnosticsMessage: this.getFailedFetchDiagnosticsMessage(input),\r\n                exception: Util.dump(e)\r\n            });\r\n        }\r\n    };\r\n    AjaxMonitor.prototype.getFetchCorrelationContext = function (response) {\r\n        try {\r\n            var responseHeader = response.headers.get(RequestHeaders.requestContextHeader);\r\n            return CorrelationIdHelper.getCorrelationContext(responseHeader);\r\n        }\r\n        catch (e) {\r\n            this._core.logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.FailedMonitorAjaxGetCorrelationHeader, \"Failed to get Request-Context correlation header as it may be not included in the response or not accessible.\", {\r\n                fetchDiagnosticsMessage: this.getFailedFetchDiagnosticsMessage(response),\r\n                exception: Util.dump(e)\r\n            });\r\n        }\r\n    };\r\n    AjaxMonitor.prototype.instrumentXhr = function () {\r\n        if (this.supportsAjaxMonitoring() && !this.initialized) {\r\n            this.instrumentOpen();\r\n            this.instrumentSend();\r\n            this.instrumentAbort();\r\n            this.initialized = true;\r\n        }\r\n    };\r\n    AjaxMonitor.getDefaultConfig = function () {\r\n        var config = {\r\n            maxAjaxCallsPerView: 500,\r\n            disableAjaxTracking: false,\r\n            disableFetchTracking: true,\r\n            disableCorrelationHeaders: false,\r\n            correlationHeaderExcludedDomains: [\r\n                \"*.blob.core.windows.net\",\r\n                \"*.blob.core.chinacloudapi.cn\",\r\n                \"*.blob.core.cloudapi.de\",\r\n                \"*.blob.core.usgovcloudapi.net\"\r\n            ],\r\n            appId: undefined,\r\n            enableCorsCorrelation: false\r\n        };\r\n        return config;\r\n    };\r\n    AjaxMonitor.getEmptyConfig = function () {\r\n        return {\r\n            maxAjaxCallsPerView: undefined,\r\n            disableAjaxTracking: undefined,\r\n            disableFetchTracking: undefined,\r\n            disableCorrelationHeaders: undefined,\r\n            correlationHeaderExcludedDomains: undefined,\r\n            appId: undefined,\r\n            enableCorsCorrelation: undefined\r\n        };\r\n    };\r\n    AjaxMonitor.prototype.initialize = function (config, core, extensions) {\r\n        if (!this.initialized && !this._fetchInitialized) {\r\n            this._core = core;\r\n            var defaultConfig = AjaxMonitor.getDefaultConfig();\r\n            this._config = AjaxMonitor.getEmptyConfig();\r\n            for (var field in defaultConfig) {\r\n                this._config[field] = ConfigurationManager.getConfig(config, field, AjaxMonitor.identifier, defaultConfig[field]);\r\n            }\r\n            if (this._config.disableAjaxTracking === false) {\r\n                this.instrumentXhr();\r\n            }\r\n            if (this._config.disableFetchTracking === false) {\r\n                this.instrumentFetch();\r\n            }\r\n            if (extensions.length > 0 && extensions) {\r\n                var propExt = extensions[PropertiesPluginIdentifier];\r\n                if (propExt) {\r\n                    this._context = propExt.context; // we could move IPropertiesPlugin to common as well\r\n                }\r\n            }\r\n        }\r\n    };\r\n    AjaxMonitor.identifier = \"AjaxDependencyPlugin\";\r\n    return AjaxMonitor;\r\n}());\r\nexport { AjaxMonitor };\r\n//# sourceMappingURL=ajax.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { AppInsightsCore, LoggingSeverity, _InternalMessageId } from \"@microsoft/applicationinsights-core-js\";\r\nimport { ApplicationInsights } from \"@microsoft/applicationinsights-analytics-js\";\r\nimport { Util, PropertiesPluginIdentifier } from \"@microsoft/applicationinsights-common\";\r\nimport { Sender } from \"@microsoft/applicationinsights-channel-js\";\r\nimport { PropertiesPlugin } from \"@microsoft/applicationinsights-properties-js\";\r\nimport { AjaxPlugin as DependenciesPlugin } from '@microsoft/applicationinsights-dependencies-js';\r\n\"use strict\";\r\n;\r\n/**\r\n * Application Insights API\r\n * @class Initialization\r\n * @implements {IApplicationInsights}\r\n */\r\nvar Initialization = /** @class */ (function () {\r\n    function Initialization(snippet) {\r\n        // initialize the queue and config in case they are undefined\r\n        snippet.queue = snippet.queue || [];\r\n        snippet.version = snippet.version || 2.0; // Default to new version\r\n        var config = snippet.config || {};\r\n        // ensure instrumentationKey is specified\r\n        if (config && !config.instrumentationKey) {\r\n            config = snippet;\r\n            ApplicationInsights.Version = \"2.0.2-beta\";\r\n        }\r\n        this.appInsights = new ApplicationInsights();\r\n        this.properties = new PropertiesPlugin();\r\n        this.dependencies = new DependenciesPlugin();\r\n        this.core = new AppInsightsCore();\r\n        this.snippet = snippet;\r\n        this.config = config;\r\n        this.getSKUDefaults();\r\n    }\r\n    // Analytics Plugin\r\n    /**\r\n     * Log a user action or other occurrence.\r\n     * @param {IEventTelemetry} event\r\n     * @param {ICustomProperties} [customProperties]\r\n     * @memberof Initialization\r\n     */\r\n    Initialization.prototype.trackEvent = function (event, customProperties) {\r\n        this.appInsights.trackEvent(event, customProperties);\r\n    };\r\n    /**\r\n     * Logs that a page, or similar container was displayed to the user.\r\n     * @param {IPageViewTelemetry} pageView\r\n     * @memberof Initialization\r\n     */\r\n    Initialization.prototype.trackPageView = function (pageView) {\r\n        this.appInsights.trackPageView(pageView);\r\n    };\r\n    /**\r\n     * Log a bag of performance information via the customProperties field.\r\n     * @param {IPageViewPerformanceTelemetry} pageViewPerformance\r\n     * @memberof Initialization\r\n     */\r\n    Initialization.prototype.trackPageViewPerformance = function (pageViewPerformance) {\r\n        this.appInsights.trackPageViewPerformance(pageViewPerformance);\r\n    };\r\n    /**\r\n     * Log an exception that you have caught.\r\n     * @param {IExceptionTelemetry} exception\r\n     * @memberof Initialization\r\n     */\r\n    Initialization.prototype.trackException = function (exception) {\r\n        this.appInsights.trackException(exception);\r\n    };\r\n    /**\r\n     * Manually send uncaught exception telemetry. This method is automatically triggered\r\n     * on a window.onerror event.\r\n     * @param {IAutoExceptionTelemetry} exception\r\n     * @memberof Initialization\r\n     */\r\n    Initialization.prototype._onerror = function (exception) {\r\n        this.appInsights._onerror(exception);\r\n    };\r\n    /**\r\n     * Log a diagnostic scenario such entering or leaving a function.\r\n     * @param {ITraceTelemetry} trace\r\n     * @param {ICustomProperties} [customProperties]\r\n     * @memberof Initialization\r\n     */\r\n    Initialization.prototype.trackTrace = function (trace, customProperties) {\r\n        this.appInsights.trackTrace(trace, customProperties);\r\n    };\r\n    /**\r\n     * Log a numeric value that is not associated with a specific event. Typically used\r\n     * to send regular reports of performance indicators.\r\n     *\r\n     * To send a single measurement, just use the `name` and `average` fields\r\n     * of {@link IMetricTelemetry}.\r\n     *\r\n     * If you take measurements frequently, you can reduce the telemetry bandwidth by\r\n     * aggregating multiple measurements and sending the resulting average and modifying\r\n     * the `sampleCount` field of {@link IMetricTelemetry}.\r\n     * @param {IMetricTelemetry} metric input object argument. Only `name` and `average` are mandatory.\r\n     * @param {ICustomProperties} [customProperties]\r\n     * @memberof Initialization\r\n     */\r\n    Initialization.prototype.trackMetric = function (metric, customProperties) {\r\n        this.appInsights.trackMetric(metric, customProperties);\r\n    };\r\n    /**\r\n     * Starts the timer for tracking a page load time. Use this instead of `trackPageView` if you want to control when the page view timer starts and stops,\r\n     * but don't want to calculate the duration yourself. This method doesn't send any telemetry. Call `stopTrackPage` to log the end of the page view\r\n     * and send the event.\r\n     * @param name A string that idenfities this item, unique within this HTML document. Defaults to the document title.\r\n     */\r\n    Initialization.prototype.startTrackPage = function (name) {\r\n        this.appInsights.startTrackPage(name);\r\n    };\r\n    /**\r\n     * Stops the timer that was started by calling `startTrackPage` and sends the pageview load time telemetry with the specified properties and measurements.\r\n     * The duration of the page view will be the time between calling `startTrackPage` and `stopTrackPage`.\r\n     * @param   name  The string you used as the name in startTrackPage. Defaults to the document title.\r\n     * @param   url   String - a relative or absolute URL that identifies the page or other item. Defaults to the window location.\r\n     * @param   properties  map[string, string] - additional data used to filter pages and metrics in the portal. Defaults to empty.\r\n     * @param   measurements    map[string, number] - metrics associated with this page, displayed in Metrics Explorer on the portal. Defaults to empty.\r\n     */\r\n    Initialization.prototype.stopTrackPage = function (name, url, customProperties, measurements) {\r\n        this.appInsights.stopTrackPage(name, url, customProperties, measurements);\r\n    };\r\n    Initialization.prototype.startTrackEvent = function (name) {\r\n        this.appInsights.startTrackEvent(name);\r\n    };\r\n    /**\r\n     * Log an extended event that you started timing with `startTrackEvent`.\r\n     * @param   name    The string you used to identify this event in `startTrackEvent`.\r\n     * @param   properties  map[string, string] - additional data used to filter events and metrics in the portal. Defaults to empty.\r\n     * @param   measurements    map[string, number] - metrics associated with this event, displayed in Metrics Explorer on the portal. Defaults to empty.\r\n     */\r\n    Initialization.prototype.stopTrackEvent = function (name, properties, measurements) {\r\n        this.appInsights.stopTrackEvent(name, properties, measurements); // Todo: Fix to pass measurements once type is updated\r\n    };\r\n    Initialization.prototype.addTelemetryInitializer = function (telemetryInitializer) {\r\n        return this.appInsights.addTelemetryInitializer(telemetryInitializer);\r\n    };\r\n    // Properties Plugin\r\n    /**\r\n     * Set the authenticated user id and the account id. Used for identifying a specific signed-in user. Parameters must not contain whitespace or ,;=|\r\n     *\r\n     * The method will only set the `authenicatedUserId` and `accountId` in the curent page view. To set them for the whole sesion, you should set `storeInCookie = true`\r\n     * @param {string} authenticatedUserId\r\n     * @param {string} [accountId]\r\n     * @param {boolean} [storeInCookie=false]\r\n     * @memberof Initialization\r\n     */\r\n    Initialization.prototype.setAuthenticatedUserContext = function (authenticatedUserId, accountId, storeInCookie) {\r\n        if (storeInCookie === void 0) { storeInCookie = false; }\r\n        this.properties.context.user.setAuthenticatedUserContext(authenticatedUserId, accountId, storeInCookie);\r\n    };\r\n    /**\r\n     * Clears the authenticated user id and account id. The associated cookie is cleared, if present.\r\n     * @memberof Initialization\r\n     */\r\n    Initialization.prototype.clearAuthenticatedUserContext = function () {\r\n        this.properties.context.user.clearAuthenticatedUserContext();\r\n    };\r\n    // Dependencies Plugin\r\n    /**\r\n     * Log a dependency call (e.g. ajax)\r\n     * @param {IDependencyTelemetry} dependency\r\n     * @memberof Initialization\r\n     */\r\n    Initialization.prototype.trackDependencyData = function (dependency) {\r\n        this.dependencies.trackDependencyData(dependency);\r\n    };\r\n    // Misc\r\n    /**\r\n     * Manually trigger an immediate send of all telemetry still in the buffer.\r\n     * @param {boolean} [async=true]\r\n     * @memberof Initialization\r\n     */\r\n    Initialization.prototype.flush = function (async) {\r\n        if (async === void 0) { async = true; }\r\n        this.core.getTransmissionControls().forEach(function (channels) {\r\n            channels.forEach(function (channel) {\r\n                channel.flush(async);\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Initialize this instance of ApplicationInsights\r\n     * @returns {IApplicationInsights}\r\n     * @memberof Initialization\r\n     */\r\n    Initialization.prototype.loadAppInsights = function (legacyMode) {\r\n        if (legacyMode === void 0) { legacyMode = false; }\r\n        // dont allow additional channels/other extensions for legacy mode; legacy mode is only to allow users to switch with no code changes!\r\n        if (legacyMode && this.config.extensions && this.config.extensions.length > 0) {\r\n            throw new Error(\"Extensions not allowed in legacy mode\");\r\n        }\r\n        var extensions = [];\r\n        var appInsightsChannel = new Sender();\r\n        extensions.push(appInsightsChannel);\r\n        extensions.push(this.properties);\r\n        extensions.push(this.dependencies);\r\n        extensions.push(this.appInsights);\r\n        // initialize core\r\n        this.core.initialize(this.config, extensions);\r\n        // Empty queue of all api calls logged prior to sdk download\r\n        this.emptyQueue();\r\n        this.pollInternalLogs();\r\n        this.addHousekeepingBeforeUnload(this);\r\n        this.context = this.properties.context;\r\n        return this;\r\n    };\r\n    /**\r\n     * Overwrite the lazy loaded fields of global window snippet to contain the\r\n     * actual initialized API methods\r\n     * @param {Snippet} snippet\r\n     * @memberof Initialization\r\n     */\r\n    Initialization.prototype.updateSnippetDefinitions = function (snippet) {\r\n        // apply full appInsights to the global instance\r\n        // Note: This must be called before loadAppInsights is called\r\n        for (var field in this) {\r\n            if (typeof field === 'string') {\r\n                snippet[field] = this[field];\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Call any functions that were queued before the main script was loaded\r\n     * @memberof Initialization\r\n     */\r\n    Initialization.prototype.emptyQueue = function () {\r\n        // call functions that were queued before the main script was loaded\r\n        try {\r\n            if (Util.isArray(this.snippet.queue)) {\r\n                // note: do not check length in the for-loop conditional in case something goes wrong and the stub methods are not overridden.\r\n                var length = this.snippet.queue.length;\r\n                for (var i = 0; i < length; i++) {\r\n                    var call = this.snippet.queue[i];\r\n                    call();\r\n                }\r\n                this.snippet.queue = undefined;\r\n                delete this.snippet.queue;\r\n            }\r\n        }\r\n        catch (exception) {\r\n            var properties = {};\r\n            if (exception && typeof exception.toString === \"function\") {\r\n                properties.exception = exception.toString();\r\n            }\r\n            // need from core\r\n            // Microsoft.ApplicationInsights._InternalLogging.throwInternal(\r\n            //     LoggingSeverity.WARNING,\r\n            //     _InternalMessageId.FailedToSendQueuedTelemetry,\r\n            //     \"Failed to send queued telemetry\",\r\n            //     properties);\r\n        }\r\n    };\r\n    Initialization.prototype.pollInternalLogs = function () {\r\n        this.core.pollInternalLogs();\r\n    };\r\n    Initialization.prototype.addHousekeepingBeforeUnload = function (appInsightsInstance) {\r\n        // Add callback to push events when the user navigates away\r\n        if (!appInsightsInstance.appInsights.config.disableFlushOnBeforeUnload && ('onbeforeunload' in window)) {\r\n            var performHousekeeping = function () {\r\n                // Adds the ability to flush all data before the page unloads.\r\n                // Note: This approach tries to push an async request with all the pending events onbeforeunload.\r\n                // Firefox does not respect this.Other browsers DO push out the call with < 100% hit rate.\r\n                // Telemetry here will help us analyze how effective this approach is.\r\n                // Another approach would be to make this call sync with a acceptable timeout to reduce the\r\n                // impact on user experience.\r\n                //appInsightsInstance.context._sender.triggerSend();\r\n                appInsightsInstance.flush(false);\r\n                // Back up the current session to local storage\r\n                // This lets us close expired sessions after the cookies themselves expire\r\n                var ext = appInsightsInstance.appInsights.core['_extensions'][PropertiesPluginIdentifier];\r\n                if (ext && ext.context && ext.context._sessionManager) {\r\n                    ext.context._sessionManager.backup();\r\n                }\r\n            };\r\n            if (!Util.addEventHandler('beforeunload', performHousekeeping)) {\r\n                appInsightsInstance.appInsights.core.logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.FailedToAddHandlerForOnBeforeUnload, 'Could not add handler for beforeunload');\r\n            }\r\n        }\r\n    };\r\n    Initialization.prototype.getSKUDefaults = function () {\r\n        this.config.diagnosticLogInterval =\r\n            this.config.diagnosticLogInterval && this.config.diagnosticLogInterval > 0 ? this.config.diagnosticLogInterval : 10000;\r\n    };\r\n    return Initialization;\r\n}());\r\nexport { Initialization };\r\n//# sourceMappingURL=Initialization.js.map","import { AppInsightsDeprecated } from \"./ApplicationInsightsDeprecated\";\r\nimport { Initialization as ApplicationInsights } from \"./Initialization\";\r\nvar ApplicationInsightsContainer = /** @class */ (function () {\r\n    function ApplicationInsightsContainer() {\r\n    }\r\n    ApplicationInsightsContainer.getAppInsights = function (snippet, version) {\r\n        var initialization = new ApplicationInsights(snippet);\r\n        var legacyMode = version !== 2.0 ? true : false;\r\n        // Two target scenarios:\r\n        // 1. Customer runs v1 snippet + runtime. If customer updates just cdn location to new SDK, it will run in compat mode so old apis work\r\n        // 2. Customer updates to new snippet (that uses cdn location to new SDK. This is same as a new customer onboarding\r\n        // and all api signatures are expected to map to new SDK. Note new snippet specifies version\r\n        if (version === 2.0) {\r\n            initialization.updateSnippetDefinitions(snippet);\r\n            initialization.loadAppInsights(legacyMode);\r\n            return initialization; // default behavior with new snippet\r\n        }\r\n        else {\r\n            var legacy = new AppInsightsDeprecated(snippet, initialization); // target scenario old snippet + updated endpoint\r\n            legacy.updateSnippetDefinitions(snippet);\r\n            initialization.loadAppInsights(legacyMode);\r\n            return legacy;\r\n        }\r\n    };\r\n    return ApplicationInsightsContainer;\r\n}());\r\nexport { ApplicationInsightsContainer };\r\n//# sourceMappingURL=ApplicationInsightsContainer.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { ApplicationInsightsContainer } from \"./ApplicationInsightsContainer\";\r\nexport { Initialization as ApplicationInsights } from \"./Initialization\";\r\n\"use strict\";\r\n//should be global function that should load as soon as SDK loads\r\ntry {\r\n    // E2E sku on load initializes core and pipeline using snippet as input for configuration\r\n    var aiName;\r\n    if (typeof window !== \"undefined\" && typeof JSON !== \"undefined\") {\r\n        // get snippet or initialize to an empty object\r\n        aiName = window[\"appInsightsSDK\"] || \"appInsights\";\r\n        if (window[aiName] !== undefined) {\r\n            // this is the typical case for browser+snippet\r\n            var snippet = window[aiName] || { version: 2.0 };\r\n            // overwrite snippet with full appInsights\r\n            // for 2.0 initialize only if required\r\n            if ((snippet.version === 2.0 && window[aiName].initialize) || snippet.version === undefined) {\r\n                ApplicationInsightsContainer.getAppInsights(snippet, snippet.version);\r\n            }\r\n        }\r\n    }\r\n}\r\ncatch (e) {\r\n    // TODO: Find better place to warn to console when SDK initialization fails\r\n    if (console) {\r\n        console.warn('Failed to initialize AppInsights JS SDK for instance ' + aiName + e.message);\r\n    }\r\n}\r\n//# sourceMappingURL=Init.js.map"],"names":["StorageType","FieldType","LoggingSeverity","EventsDiscardedReason","CoreUtils","isNullOrUndefined","input","newGuid","replace","GuidRegex","c","r","Math","random","toString","NotificationManager","this","listeners","prototype","addNotificationListener","listener","push","removeNotificationListener","index","indexOf","splice","eventsSent","events","_this","_loop_1","i","this_1","setTimeout","length","eventsDiscarded","reason","_loop_2","this_2","_InternalMessageId","_InternalLogMessage","msgId","msg","isUserAct","properties","messageId","message","AiUserActionablePrefix","AiNonUserActionablePrefix","diagnosticText","sanitizeDiagnosticText","JSON","stringify","text","dataType","DiagnosticLogger","config","AIInternalMessagePrefix","enableDebugExceptions","consoleLoggingLevel","telemetryLoggingLevel","maxInternalMessageLimit","queue","_messageCount","_messageLogged","loggingLevelConsole","loggingLevelTelemetry","maxMessageLimit","throwInternal","severity","messageKey","WARNING","warnToConsole","logInternalMessage","console","warn","log","resetInternalMessageCount","_areInternalMessagesThrottled","logMessage","throttleLimitMessage","throttleMessage","AppInsightsCore","_isInitialized","_extensions","Array","_channelController","ChannelController","initialize","extensions","Error","instrumentationKey","_notificationManager","extensionConfig","logger","forEach","extension","validationError","isValid_1","containsChannels_1","item","priority","ChannelControllerPriority","validationErrorInExt","_a","apply","concat","sort","a","b","extA","extB","typeExtA","processTelemetry","typeExtB","ext","t","identifier","idx","curr","setNextPlugin","getTransmissionControls","ChannelControls","track","telemetryItem","_notifiyInvalidEvent","baseData","baseType","iKey","time","Date","toISOString","ver","_validateTelmetryItem","_updateSdkVersion","pollInternalLogs","interval","diagnosticLogInterval","setInterval","name","sdk","version","str","channelQueue","queues","Object","defineProperty","get","enumerable","configurable","core","channels","invalidChannelIdentifier_1","undefined","queueItem","ChannelValidationMessage","arr","plugin","RequestHeaders","requestContextHeader","requestContextTargetKey","requestContextAppIdFormat","requestIdHeader","sdkContextHeader","sdkContextHeaderAppIdRequest","requestContextHeaderLowerCase","DataSanitizer","sanitizeKeyAndAddUniqueness","key","map","origLength","field","sanitizeKey","uniqueField","substring","MAX_NAME_LENGTH","padNumber","trim","sanitizeString","value","maxLength","MAX_STRING_LENGTH","sanitizeUrl","url","sanitizeInput","MAX_URL_LENGTH","sanitizeMessage","MAX_MESSAGE_LENGTH","sanitizeException","exception","MAX_EXCEPTION_LENGTH","sanitizeProperties","tempProps","prop","e","MAX_PROPERTY_LENGTH","sanitizeMeasurements","measurements","tempMeasurements","measure","sanitizeId","id","MAX_ID_LENGTH","_msgId","data","num","s","substr","Util","disableStorage","_canUseLocalStorage","_canUseSessionStorage","_getLocalStorageObject","canUseLocalStorage","_getVerifiedStorageObject","LocalStorage","storageType","fail","uid","storage","window","localStorage","sessionStorage","setItem","getItem","removeItem","isInternalApplicationInsightsEndpoint","endpointUrl","_internalEndpoints","toLowerCase","getStorage","getExceptionName","dump","setStorage","removeStorage","_getSessionStorageObject","canUseSessionStorage","SessionStorage","getSessionStorageKeys","keys","getSessionStorage","setSessionStorage","removeSessionStorage","disableCookies","_canUseCookies","canUseCookies","document","cookie","setCookie","domain","domainAttrib","secureAttrib","location","protocol","stringToBoolOrDefault","defaultValue","getCookie","cookieName","cookies","split","deleteCookie","newId","result","charAt","floor","isArray","obj","call","isError","isDate","toISOStringForIE8","date","pad","String","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","toFixed","slice","getIEVersion","userAgentStr","myNav","navigator","userAgent","parseInt","msToTimeSpan","totalms","isNaN","ms","round","sec","min","hour","days","isCrossOriginError","lineNumber","columnNumber","error","object","objectTypeDump","propertyValueDump","stack","addEventHandler","eventName","callback","verbEventName","addEventListener","IsBeaconApiSupported","sendBeacon","NotSpecified","UrlHelper","parseUrl","htmlAnchorElement","createElement","href","getAbsoluteUrl","getPathName","pathname","getCompleteUrl","method","absoluteUrl","toUpperCase","CorrelationIdHelper","canIncludeCorrelationHeader","requestUrl","currentHost","disableCorrelationHeaders","requestHost","host","enableCorsCorrelation","excludedDomains","correlationHeaderExcludedDomains","RegExp","test","getCorrelationContext","responseHeader","correlationId","getCorrelationContextValue","correlationIdPrefix","keyValues","keyValue","AjaxHelper","ParseDependencyPath","commandName","target","parsedUrl","pathName","DateTimeUtils","Now","getTime","performance","now","timing","navigationStart","GetDuration","start","end","DisabledPropertyName","ProcessLegacy","HttpMethod","extendStatics","d","setPrototypeOf","__proto__","p","hasOwnProperty","__extends","__","constructor","create","DataPointType","__assign","assign","n","arguments","Data","_super","tslib_1.__extends","Envelope","aiDataContract","Required","sampleRate","Hidden","tags","Domain","EventData","Event","Default","envelopeType","StackFrame","ExceptionDetails","hasFullStack","parsedStack","Exception","severityLevel","exceptions","_ExceptionDetails","CreateSimpleException","typeName","assembly","fileName","details","line","ExceptionData","outerId","parseStack","frames","level","totalSizeInBytes","frame","_StackFrame","regex","parsedFrame","sizeInBytes","left","right","size","acceptedLeft","acceptedRight","howMany","matches","match","baseSize","MetricData","metrics","SeverityLevel","DataPoint","kind","count","max","stdDev","Measurement","Metric","dataPoint","PageViewData","PageView","durationMs","duration","RemoteDependencyData","success","resultCode","requestAPI","type","dependencyKind","dependencySource","dependencyTypeName","dependencyFields","Trace","MessageData","PageViewPerformance","unused","perfTotal","networkConnect","sentRequest","receivedResponse","domProcessing","PageViewPerfData","AIData","ConfigurationManager","getConfig","configValue","ContextTagKeys","applicationVersion","applicationBuild","applicationTypeId","applicationId","applicationLayer","deviceId","deviceIp","deviceLanguage","deviceLocale","deviceModel","deviceFriendlyName","deviceNetwork","deviceNetworkName","deviceOEMName","deviceOS","deviceOSVersion","deviceRoleInstance","deviceRoleName","deviceScreenResolution","deviceType","deviceMachineName","deviceVMName","deviceBrowser","deviceBrowserVersion","locationIp","locationCountry","locationProvince","locationCity","operationId","operationName","operationParentId","operationRootId","operationSyntheticSource","operationCorrelationVector","sessionId","sessionIsFirst","sessionIsNew","userAccountAcquisitionDate","userAccountId","userId","userStoreRegion","userAuthUserId","userAnonymousUserAcquisitionDate","userAuthenticatedUserAcquisitionDate","cloudName","cloudRole","cloudRoleVer","cloudRoleInstance","cloudEnvironment","cloudLocation","cloudDeploymentUnit","internalNodeName","internalSdkVersion","internalAgentVersion","TelemetryItemCreator","envelopeName","customProperties","systemProperties","Extensions","UserExt","DeviceExt","TraceExt","WebExt","AppExt","OSExt","SessionExt","SDKExt","SDKExtensionKeys","libVer","CtxTagKeys","PropertiesPluginIdentifier","AppInsightsDeprecated","snippet","appInsightsNew","_hasLegacyInitializers","_queue","getDefaultConfig","context","addTelemetryInitializer","addTelemetryInitializers","bind","callBack","_processLegacyInitializers","startTrackPage","stopTrackPage","trackPageView","telemetry","uri","trackEvent","trackDependency","totalTime","trackDependencyData","responseCode","trackException","handledAt","trackMetric","average","sampleCount","trackTrace","flush","async","setAuthenticatedUserContext","authenticatedUserId","accountId","storeInCookie","user","clearAuthenticatedUserContext","_onerror","startTrackEvent","stopTrackEvent","downloadAndSetup","updateSnippetDefinitions","loadAppInsights","originalTrackPageView","pagePath","legacyPageView","legacyEvent","props","sessionRenewalMs","sessionExpirationMs","maxBatchSizeInBytes","maxBatchInterval","enableDebug","disableExceptionTracking","disableTelemetry","verboseLogging","emitLineDelimitedJson","autoTrackPageVisitTime","samplingPercentage","disableAjaxTracking","maxAjaxCallsPerView","isBeaconApiDisabled","disableFlushOnBeforeUnload","enableSessionStorageBuffer","isRetryDisabled","isCookieUseDisabled","isStorageUseDisabled","isBrowserLinkTrackingEnabled","PageViewManager","appInsights","overridePageViewDuration","pageViewPerformanceManager","pageViewPerformanceSent","_pageViewPerformanceManager","_channel","_logger","pageView","title","isPerformanceTimingSupported","sendPageViewInternal","q","pageViewSent","customDuration","getPerformanceTiming","shouldCollectDuration","handle","isPerformanceTimingDataReady","clearInterval","pageViewPerformance","populatePageViewPerformanceEvent","isValid","sendPageViewPerformanceInternal","CRITICAL","PageViewPerformanceManager","MAX_DURATION_ALLOWED","total","loadEventEnd","network","connectEnd","request","requestStart","responseStart","response","responseEnd","dom","domainLookupStart","domLoading","durations","_i","botAgentNames","isGoogleBot","i_1","durationProperty","ApplicationInsights","_trackAjaxAttempts","_initialize","env","doNotSendItem","telemetryInitializersCount","_telemetryInitializers","telemetryInitializer","_nextPlugin","next","event","_setTelemetryNameAndIKey","_eventTracking","stop","trace","metric","_pageViewManager","_pageVisitTimeManager","trackPreviousPageVisit","refUri","referrer","trackPageViewPerformance","_pageTracking","measurement","sendExceptionInternal","URL","_sendCORSException","errorString","_globalconfig","defaults","configGetters","cookieDomain","sdkExtension","appId","_addDefaultTelemetryInitializers","Timing","action","pageViewItem","autoExceptionInstrumented","originalOnError_1","instance_1","onerror","handled","browserLinkPaths_1","_addTelemetryInitializer","envelope","remoteData","iKeyNoDashes","Version","_name","_events","ArraySendBuffer","_config","_buffer","enqueue","payload","clear","getItems","batchPayloads","join","markAsSent","clearSent","SessionStorageSendBuffer","_bufferFullMessageSent","bufferItems","getBuffer","BUFFER_KEY","notDeliveredItems","SENT_BUFFER_KEY","MAX_BUFFER_SIZE","setBuffer","removePayloadsFromBuffer","sentElements","payloads","buffer","remaining","contains","j","bufferJson","parse","EnvelopeCreator","extractProperties","extractPropsAndMeasurements","createEnvelope","extractPartAExtensions","authId","localId","app","sesId","device","ip","web","browserLang","browserVer","browser","isManual","screenRes","userConsent","model","os","parentID","traceID","tgs","tg","tslib_1.__assign","DependencyEnvelopeCreator","Create","customMeasurements","bd","command","EventEnvelopeCreator","ExceptionEnvelopeCreator","MetricEnvelopeCreator","PageViewEnvelopeCreator","pageType","isLoggedIn","pageTags","PageViewPerformanceEnvelopeCreator","TraceEnvelopeCreator","EventValidator","Validate","TraceValidator","ExceptionValidator","_validateExceptions","MetricValidator","PageViewPerformanceValidator","PageViewValidator","RemoteDepdencyValidator","Serializer","serialize","output","_serializeObject","source","circularReferenceCheck","_serializeStringMap","_serializeArray","contract","isRequired","isHidden","isPresent","isObject","sources","expectedType","parseFloat","Offline","OfflineListener","_onlineStatus","isListening","_setOnline","_setOffline","body","ononline","onoffline","isOnline","onLine","isOffline","Sender","_XMLHttpRequestSupported","pause","resume","triggerSend","teardown","_serializer","_consecutiveErrors","_retryAt","_lastSend","_sender","defaultConfig","_getDefaultAppInsightsChannelConfig","_getEmptyAppInsightsChannelConfig","_beaconSender","XMLHttpRequest","_xhrSender","XDomainRequest","_xdrSender","_validate","aiEnvelope_1","constructEnvelope","doNotSendItem_1","bufferPayload","batch","_setupTimer","_xhrReadyStateChange","xhr","countOfItemsInPayload","readyState","_appId","_parseResponse","responseText","status","_isRetriable","_resendPayload","_onError","_formatErrorMessageXhr","_onPartialSuccess","_onSuccess","clearTimeout","_timeoutHandle","results","failed","retry","errors_1","errors","reverse","extracted","statusCode","itemsAccepted","itemsReceived","_xdrOnLoad","xdr","_formatErrorMessageXdr","orig","resultConfig","isAsync","plainTextBatch","Blob","open","setRequestHeader","onreadystatechange","send","linearFactor","payload_1","_setRetryTime","delayInSeconds","backOffSlot","pow","backOffDelay","retryAfterTimeSpan","retryInterval","timerValue","onload","hostingProtocol","lastIndexOf","Session","_SessionManager","acquisitionSpan","renewalSpan","_storageNamePrefix","namePrefix","cookieNameConst","automaticSession","update","initializeAutomaticSession","acquisitionExpired","acquisitionDate","renewalExpired","renewalDate","renew","cookieUpdatedTimestamp","cookieUpdateInterval","backup","initializeAutomaticSessionWithData","sessionData","params","acq","renewal","guid","acquisitionExpiry","renewalExpiry","cookieExpiry","setTime","cookieDomnain","toUTCString","Application","Device","deviceClass","Internal","sdkVersion","HashCodeScoreGenerator","getHashCodeScore","getHashCode","INT_MAX_VALUE","MIN_INPUT_LENGTH","hash","charCodeAt","abs","SamplingScoreGenerator","hashCodeGeneragor","getSamplingScore","tagKeys","Sample","samplingRate","samplingScoreGenerator","isSampledIn","User","userCookieName","cookieSeparator","acqStr","accountAcquisitionDate","newCookie","name_1","authCookie","authUserCookieName","authCookieString","decodeURI","authenticatedId","validateUserInput","encodeURI","Location","TelemetryTrace","parentId","TelemetryContext","sessionManager","application","internal","telemetryTrace","session","sample","applySessionContext","sessionContext","applyOperatingSystemContxt","applyApplicationContext","_b","build","applyDeviceContext","applyInternalContext","_c","agentVersion","applyLocationContext","applySampleContext","SampleRate","applyOperationContext","applyWebContext","applyUserContext","cleanUp","PropertiesPlugin","_extensionConfig","_processTelemetryInternal","nextPlugin","XHRMonitoringState","openDone","setRequestHeaderDone","sendDone","abortDone","onreadystatechangeCallbackAttached","ajaxRecord","completed","requestHeadersSize","ttfb","responseReceivingDuration","callbackDuration","ajaxTotalDuration","aborted","pageUrl","requestSize","requestSentTime","responseStartedTime","responseFinishedTime","callbackFinishedTime","endTime","originalOnreadystatechage","xhrMonitoringState","clientFailure","CalculateMetrics","EventHelper","AttachEvent","eventNameWithoutOn","handlerRef","attachEvent","DetachEvent","detachEvent","removeEventListener","AjaxMonitor","currentWindowHost","initialized","_fetchInitialized","isMonitoredInstance","excludeAjaxDataValidation","init","disabledProperty","ajaxValidation","ajaxData","supportsAjaxMonitoring","abort","instrumentOpen","originalOpen","ajaxMonitorInstance","openHandler","_core","ajaxDiagnosticsMessage","getFailedAjaxDiagnosticsMessage","_context","attachToOnReadyStateChange","instrumentSend","originalSend","content","sendHandler","includeCorrelationHeaders","instrumentAbort","originalAbort","onAjaxComplete","exceptionText","dependency","correlationContext","getAjaxCorrelationContext","trackDependencyDataInternal","responseHeadersString","getAllResponseHeaders","getResponseHeader","instrumentFetch","supportsFetch","originalFetch","fetch","fetchMonitorInstance","fetchData","isFetchInstrumented","createFetchRecord","getFailedFetchDiagnosticsMessage","then","onFetchComplete","catch","onFetchFailed","Request","headers","Headers","set","appId_1","fetchDiagnosticsMessage","getFetchCorrelationContext","instrumentXhr","disableFetchTracking","getEmptyConfig","propExt","Initialization","dependencies","DependenciesPlugin","getSKUDefaults","channel","legacyMode","appInsightsChannel","emptyQueue","addHousekeepingBeforeUnload","appInsightsInstance","_sessionManager","ApplicationInsightsContainer","getAppInsights","initialization","legacy","aiName"],"mappings":"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"}