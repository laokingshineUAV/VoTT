{"version":3,"file":"applicationinsights-web.min.js","sources":["../../shared/AppInsightsCore/dist-esm/JavaScriptSDK.Enums/EventsDiscardedReason.js","../../shared/AppInsightsCore/dist-esm/JavaScriptSDK.Enums/LoggingEnums.js","../../shared/AppInsightsCore/dist-esm/JavaScriptSDK/CoreUtils.js","../../shared/AppInsightsCore/dist-esm/JavaScriptSDK/NotificationManager.js","../../shared/AppInsightsCommon/dist-esm/Enums.js","../../shared/AppInsightsCore/dist-esm/JavaScriptSDK/DiagnosticLogger.js","../../shared/AppInsightsCore/dist-esm/JavaScriptSDK/AppInsightsCore.js","../../shared/AppInsightsCommon/dist-esm/RequestResponseHeaders.js","../../shared/AppInsightsCommon/dist-esm/Telemetry/Common/DataSanitizer.js","../../shared/AppInsightsCommon/dist-esm/Util.js","../../shared/AppInsightsCommon/dist-esm/Constants.js","../../common/temp/node_modules/tslib/tslib.es6.js","../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/DataPointType.js","../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/Data.js","../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/Base.js","../../shared/AppInsightsCommon/dist-esm/Telemetry/Common/Envelope.js","../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/Envelope.js","../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/Domain.js","../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/EventData.js","../../shared/AppInsightsCommon/dist-esm/Telemetry/Event.js","../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/StackFrame.js","../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/ExceptionDetails.js","../../shared/AppInsightsCommon/dist-esm/Telemetry/Exception.js","../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/ExceptionData.js","../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/MetricData.js","../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/DataPoint.js","../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/SeverityLevel.js","../../shared/AppInsightsCommon/dist-esm/Telemetry/Common/DataPoint.js","../../shared/AppInsightsCommon/dist-esm/Telemetry/Metric.js","../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/PageViewData.js","../../shared/AppInsightsCommon/dist-esm/Telemetry/PageView.js","../../shared/AppInsightsCommon/dist-esm/Telemetry/RemoteDependencyData.js","../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/RemoteDependencyData.js","../../shared/AppInsightsCommon/dist-esm/Telemetry/Trace.js","../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/MessageData.js","../../shared/AppInsightsCommon/dist-esm/Telemetry/PageViewPerformance.js","../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/PageViewPerfData.js","../../shared/AppInsightsCommon/dist-esm/Telemetry/Common/Data.js","../../shared/AppInsightsCommon/dist-esm/Interfaces/IConfig.js","../../shared/AppInsightsCommon/dist-esm/Interfaces/Contracts/Generated/ContextTagKeys.js","../../shared/AppInsightsCommon/dist-esm/TelemetryItemCreator.js","../../shared/AppInsightsCommon/dist-esm/Interfaces/PartAExtensions.js","../../shared/AppInsightsCommon/dist-esm/applicationinsights-common.js","../../extensions/applicationinsights-analytics-js/dist-esm/JavaScriptSDK/Telemetry/PageViewManager.js","../../extensions/applicationinsights-analytics-js/dist-esm/JavaScriptSDK/Telemetry/PageViewPerformanceManager.js","../../extensions/applicationinsights-analytics-js/dist-esm/JavaScriptSDK/ApplicationInsights.js","../../channels/applicationinsights-channel-js/dist-esm/SendBuffer.js","../../channels/applicationinsights-channel-js/dist-esm/EnvelopeCreator.js","../../channels/applicationinsights-channel-js/dist-esm/TelemetryValidation/EventValidator.js","../../channels/applicationinsights-channel-js/dist-esm/TelemetryValidation/TraceValidator.js","../../channels/applicationinsights-channel-js/dist-esm/TelemetryValidation/ExceptionValidator.js","../../channels/applicationinsights-channel-js/dist-esm/TelemetryValidation/MetricValidator.js","../../channels/applicationinsights-channel-js/dist-esm/TelemetryValidation/PageViewPerformanceValidator.js","../../channels/applicationinsights-channel-js/dist-esm/TelemetryValidation/PageViewValidator.js","../../channels/applicationinsights-channel-js/dist-esm/TelemetryValidation/RemoteDepdencyValidator.js","../../channels/applicationinsights-channel-js/dist-esm/Serializer.js","../../channels/applicationinsights-channel-js/dist-esm/Offline.js","../../channels/applicationinsights-channel-js/dist-esm/Sender.js","../../extensions/applicationinsights-properties-js/dist-esm/Context/Session.js","../../extensions/applicationinsights-properties-js/dist-esm/Context/Application.js","../../extensions/applicationinsights-properties-js/dist-esm/Context/Device.js","../../extensions/applicationinsights-properties-js/dist-esm/Context/Internal.js","../../extensions/applicationinsights-properties-js/dist-esm/HashCodeScoreGenerator.js","../../extensions/applicationinsights-properties-js/dist-esm/SamplingScoreGenerator.js","../../extensions/applicationinsights-properties-js/dist-esm/Context/Sample.js","../../extensions/applicationinsights-properties-js/dist-esm/Context/User.js","../../extensions/applicationinsights-properties-js/dist-esm/Context/Location.js","../../extensions/applicationinsights-properties-js/dist-esm/Context/TelemetryTrace.js","../../extensions/applicationinsights-properties-js/dist-esm/TelemetryContext.js","../../extensions/applicationinsights-properties-js/dist-esm/PropertiesPlugin.js","../../extensions/applicationinsights-dependencies-js/dist-esm/ajaxRecord.js","../../extensions/applicationinsights-dependencies-js/dist-esm/ajaxUtils.js","../../extensions/applicationinsights-dependencies-js/dist-esm/ajax.js","../dist-esm/Initialization.js","../dist-esm/ApplicationInsightsDeprecated.js","../dist-esm/ApplicationInsightsContainer.js"],"sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n/**\r\n * The EventsDiscardedReason enumeration contains a set of values that specify the reason for discarding an event.\r\n */\r\nexport var EventsDiscardedReason = {\r\n    /**\r\n     * Unknown.\r\n     */\r\n    Unknown: 0,\r\n    /**\r\n     * Status set to non-retryable.\r\n     */\r\n    NonRetryableStatus: 1,\r\n    /**\r\n     * The event is invalid.\r\n     */\r\n    InvalidEvent: 2,\r\n    /**\r\n     * The size of the event is too large.\r\n     */\r\n    SizeLimitExceeded: 3,\r\n    /**\r\n     * The server is not accepting events from this instrumentation key.\r\n     */\r\n    KillSwitch: 4,\r\n    /**\r\n     * The event queue is full.\r\n     */\r\n    QueueFull: 5,\r\n};\r\n//# sourceMappingURL=EventsDiscardedReason.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nexport var LoggingSeverity;\r\n(function (LoggingSeverity) {\r\n    /**\r\n     * Error will be sent as internal telemetry\r\n     */\r\n    LoggingSeverity[LoggingSeverity[\"CRITICAL\"] = 1] = \"CRITICAL\";\r\n    /**\r\n     * Error will NOT be sent as internal telemetry, and will only be shown in browser console\r\n     */\r\n    LoggingSeverity[LoggingSeverity[\"WARNING\"] = 2] = \"WARNING\";\r\n})(LoggingSeverity || (LoggingSeverity = {}));\r\n/**\r\n * Internal message ID. Please create a new one for every conceptually different message. Please keep alphabetically ordered\r\n */\r\nexport var _InternalMessageId = {\r\n    // Non user actionable\r\n    BrowserDoesNotSupportLocalStorage: 0,\r\n    BrowserCannotReadLocalStorage: 1,\r\n    BrowserCannotReadSessionStorage: 2,\r\n    BrowserCannotWriteLocalStorage: 3,\r\n    BrowserCannotWriteSessionStorage: 4,\r\n    BrowserFailedRemovalFromLocalStorage: 5,\r\n    BrowserFailedRemovalFromSessionStorage: 6,\r\n    CannotSendEmptyTelemetry: 7,\r\n    ClientPerformanceMathError: 8,\r\n    ErrorParsingAISessionCookie: 9,\r\n    ErrorPVCalc: 10,\r\n    ExceptionWhileLoggingError: 11,\r\n    FailedAddingTelemetryToBuffer: 12,\r\n    FailedMonitorAjaxAbort: 13,\r\n    FailedMonitorAjaxDur: 14,\r\n    FailedMonitorAjaxOpen: 15,\r\n    FailedMonitorAjaxRSC: 16,\r\n    FailedMonitorAjaxSend: 17,\r\n    FailedMonitorAjaxGetCorrelationHeader: 18,\r\n    FailedToAddHandlerForOnBeforeUnload: 19,\r\n    FailedToSendQueuedTelemetry: 20,\r\n    FailedToReportDataLoss: 21,\r\n    FlushFailed: 22,\r\n    MessageLimitPerPVExceeded: 23,\r\n    MissingRequiredFieldSpecification: 24,\r\n    NavigationTimingNotSupported: 25,\r\n    OnError: 26,\r\n    SessionRenewalDateIsZero: 27,\r\n    SenderNotInitialized: 28,\r\n    StartTrackEventFailed: 29,\r\n    StopTrackEventFailed: 30,\r\n    StartTrackFailed: 31,\r\n    StopTrackFailed: 32,\r\n    TelemetrySampledAndNotSent: 33,\r\n    TrackEventFailed: 34,\r\n    TrackExceptionFailed: 35,\r\n    TrackMetricFailed: 36,\r\n    TrackPVFailed: 37,\r\n    TrackPVFailedCalc: 38,\r\n    TrackTraceFailed: 39,\r\n    TransmissionFailed: 40,\r\n    FailedToSetStorageBuffer: 41,\r\n    FailedToRestoreStorageBuffer: 42,\r\n    InvalidBackendResponse: 43,\r\n    FailedToFixDepricatedValues: 44,\r\n    InvalidDurationValue: 45,\r\n    TelemetryEnvelopeInvalid: 46,\r\n    CreateEnvelopeError: 47,\r\n    // User actionable\r\n    CannotSerializeObject: 48,\r\n    CannotSerializeObjectNonSerializable: 49,\r\n    CircularReferenceDetected: 50,\r\n    ClearAuthContextFailed: 51,\r\n    ExceptionTruncated: 52,\r\n    IllegalCharsInName: 53,\r\n    ItemNotInArray: 54,\r\n    MaxAjaxPerPVExceeded: 55,\r\n    MessageTruncated: 56,\r\n    NameTooLong: 57,\r\n    SampleRateOutOfRange: 58,\r\n    SetAuthContextFailed: 59,\r\n    SetAuthContextFailedAccountName: 60,\r\n    StringValueTooLong: 61,\r\n    StartCalledMoreThanOnce: 62,\r\n    StopCalledWithoutStart: 63,\r\n    TelemetryInitializerFailed: 64,\r\n    TrackArgumentsNotSpecified: 65,\r\n    UrlTooLong: 66,\r\n    SessionStorageBufferFull: 67,\r\n    CannotAccessCookie: 68,\r\n    IdTooLong: 69,\r\n};\r\n//# sourceMappingURL=LoggingEnums.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\"use strict\";\r\nvar CoreUtils = /** @class */ (function () {\r\n    function CoreUtils() {\r\n    }\r\n    CoreUtils.isNullOrUndefined = function (input) {\r\n        return input === null || input === undefined;\r\n    };\r\n    /**\r\n* Creates a new GUID.\r\n* @return {string} A GUID.\r\n*/\r\n    CoreUtils.newGuid = function () {\r\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(GuidRegex, function (c) {\r\n            // tslint:disable-next-line:insecure-random\r\n            var r = (Math.random() * 16 | 0), v = (c === 'x' ? r : r & 0x3 | 0x8);\r\n            return v.toString(16);\r\n        });\r\n    };\r\n    return CoreUtils;\r\n}());\r\nexport { CoreUtils };\r\nvar GuidRegex = /[xy]/g;\r\n//# sourceMappingURL=CoreUtils.js.map","/**\r\n * Class to manage sending notifications to all the listeners.\r\n */\r\nvar NotificationManager = /** @class */ (function () {\r\n    function NotificationManager() {\r\n        this.listeners = [];\r\n    }\r\n    /**\r\n     * Adds a notification listener.\r\n     * @param {INotificationListener} listener - The notification listener to be added.\r\n     */\r\n    NotificationManager.prototype.addNotificationListener = function (listener) {\r\n        this.listeners.push(listener);\r\n    };\r\n    /**\r\n     * Removes all instances of the listener.\r\n     * @param {INotificationListener} listener - AWTNotificationListener to remove.\r\n     */\r\n    NotificationManager.prototype.removeNotificationListener = function (listener) {\r\n        var index = this.listeners.indexOf(listener);\r\n        while (index > -1) {\r\n            this.listeners.splice(index, 1);\r\n            index = this.listeners.indexOf(listener);\r\n        }\r\n    };\r\n    /**\r\n     * Notification for events sent.\r\n     * @param {ITelemetryItem[]} events - The array of events that have been sent.\r\n     */\r\n    NotificationManager.prototype.eventsSent = function (events) {\r\n        var _this = this;\r\n        var _loop_1 = function (i) {\r\n            if (this_1.listeners[i].eventsSent) {\r\n                setTimeout(function () { return _this.listeners[i].eventsSent(events); }, 0);\r\n            }\r\n        };\r\n        var this_1 = this;\r\n        for (var i = 0; i < this.listeners.length; ++i) {\r\n            _loop_1(i);\r\n        }\r\n    };\r\n    /**\r\n     * Notification for events being discarded.\r\n     * @param {ITelemetryItem[]} events - The array of events that have been discarded by the SDK.\r\n     * @param {number} reason           - The reason for which the SDK discarded the events. The EventsDiscardedReason\r\n     * constant should be used to check the different values.\r\n     */\r\n    NotificationManager.prototype.eventsDiscarded = function (events, reason) {\r\n        var _this = this;\r\n        var _loop_2 = function (i) {\r\n            if (this_2.listeners[i].eventsDiscarded) {\r\n                setTimeout(function () { return _this.listeners[i].eventsDiscarded(events, reason); }, 0);\r\n            }\r\n        };\r\n        var this_2 = this;\r\n        for (var i = 0; i < this.listeners.length; ++i) {\r\n            _loop_2(i);\r\n        }\r\n    };\r\n    return NotificationManager;\r\n}());\r\nexport { NotificationManager };\r\n//# sourceMappingURL=NotificationManager.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n/**\r\n* Type of storage to differentiate between local storage and session storage\r\n*/\r\nexport var StorageType;\r\n(function (StorageType) {\r\n    StorageType[StorageType[\"LocalStorage\"] = 0] = \"LocalStorage\";\r\n    StorageType[StorageType[\"SessionStorage\"] = 1] = \"SessionStorage\";\r\n})(StorageType || (StorageType = {}));\r\n/**\r\n * Enum is used in aiDataContract to describe how fields are serialized.\r\n * For instance: (Fieldtype.Required | FieldType.Array) will mark the field as required and indicate it's an array\r\n */\r\nexport var FieldType;\r\n(function (FieldType) {\r\n    FieldType[FieldType[\"Default\"] = 0] = \"Default\";\r\n    FieldType[FieldType[\"Required\"] = 1] = \"Required\";\r\n    FieldType[FieldType[\"Array\"] = 2] = \"Array\";\r\n    FieldType[FieldType[\"Hidden\"] = 4] = \"Hidden\";\r\n})(FieldType || (FieldType = {}));\r\n;\r\n//# sourceMappingURL=Enums.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\"use strict\";\r\nimport { _InternalMessageId, LoggingSeverity } from \"../JavaScriptSDK.Enums/LoggingEnums\";\r\nimport { CoreUtils } from \"./CoreUtils\";\r\nvar _InternalLogMessage = /** @class */ (function () {\r\n    function _InternalLogMessage(msgId, msg, isUserAct, properties) {\r\n        if (isUserAct === void 0) { isUserAct = false; }\r\n        this.messageId = msgId;\r\n        this.message =\r\n            (isUserAct ? _InternalLogMessage.AiUserActionablePrefix : _InternalLogMessage.AiNonUserActionablePrefix) +\r\n                msgId;\r\n        var diagnosticText = (msg ? \" message:\" + _InternalLogMessage.sanitizeDiagnosticText(msg) : \"\") +\r\n            (properties ? \" props:\" + _InternalLogMessage.sanitizeDiagnosticText(JSON.stringify(properties)) : \"\");\r\n        this.message += diagnosticText;\r\n    }\r\n    _InternalLogMessage.sanitizeDiagnosticText = function (text) {\r\n        return \"\\\"\" + text.replace(/\\\"/g, \"\") + \"\\\"\";\r\n    };\r\n    _InternalLogMessage.dataType = \"MessageData\";\r\n    /**\r\n     * For user non actionable traces use AI Internal prefix.\r\n     */\r\n    _InternalLogMessage.AiNonUserActionablePrefix = \"AI (Internal): \";\r\n    /**\r\n     * Prefix of the traces in portal.\r\n     */\r\n    _InternalLogMessage.AiUserActionablePrefix = \"AI: \";\r\n    return _InternalLogMessage;\r\n}());\r\nexport { _InternalLogMessage };\r\nvar DiagnosticLogger = /** @class */ (function () {\r\n    function DiagnosticLogger(config) {\r\n        /**\r\n        *  Session storage key for the prefix for the key indicating message type already logged\r\n        */\r\n        this.AIInternalMessagePrefix = \"AITR_\";\r\n        /**\r\n         * When this is true the SDK will throw exceptions to aid in debugging.\r\n         */\r\n        this.enableDebugExceptions = function () { return false; };\r\n        /**\r\n         * 0: OFF\r\n         * 1: CRITICAL (default)\r\n         * 2: >= WARNING\r\n         */\r\n        this.consoleLoggingLevel = function () { return 1; };\r\n        /**\r\n         * 0: OFF (default)\r\n         * 1: CRITICAL\r\n         * 2: >= WARNING\r\n         */\r\n        this.telemetryLoggingLevel = function () { return 0; };\r\n        /**\r\n         * The maximum number of internal messages allowed to be sent per page view\r\n         */\r\n        this.maxInternalMessageLimit = function () { return 25; };\r\n        /**\r\n         * The internal logging queue\r\n         */\r\n        this.queue = [];\r\n        /**\r\n         * Count of internal messages sent\r\n         */\r\n        this._messageCount = 0;\r\n        /**\r\n         * Holds information about what message types were already logged to console or sent to server.\r\n         */\r\n        this._messageLogged = {};\r\n        if (CoreUtils.isNullOrUndefined(config)) {\r\n            // TODO: Use default config\r\n            // config = AppInsightsCore.defaultConfig;\r\n            // For now, use defaults specified in DiagnosticLogger members;\r\n            return;\r\n        }\r\n        if (!CoreUtils.isNullOrUndefined(config.loggingLevelConsole)) {\r\n            this.consoleLoggingLevel = function () { return config.loggingLevelConsole; };\r\n        }\r\n        if (!CoreUtils.isNullOrUndefined(config.loggingLevelTelemetry)) {\r\n            this.telemetryLoggingLevel = function () { return config.loggingLevelTelemetry; };\r\n        }\r\n        if (!CoreUtils.isNullOrUndefined(config.maxMessageLimit)) {\r\n            this.maxInternalMessageLimit = function () { return config.maxMessageLimit; };\r\n        }\r\n        if (!CoreUtils.isNullOrUndefined(config.enableDebugExceptions)) {\r\n            this.enableDebugExceptions = function () { return config.enableDebugExceptions; };\r\n        }\r\n    }\r\n    /**\r\n     * This method will throw exceptions in debug mode or attempt to log the error as a console warning.\r\n     * @param severity {LoggingSeverity} - The severity of the log message\r\n     * @param message {_InternalLogMessage} - The log message.\r\n     */\r\n    DiagnosticLogger.prototype.throwInternal = function (severity, msgId, msg, properties, isUserAct) {\r\n        if (isUserAct === void 0) { isUserAct = false; }\r\n        var message = new _InternalLogMessage(msgId, msg, isUserAct, properties);\r\n        if (this.enableDebugExceptions()) {\r\n            throw message;\r\n        }\r\n        else {\r\n            if (typeof (message) !== \"undefined\" && !!message) {\r\n                if (typeof (message.message) !== \"undefined\") {\r\n                    if (isUserAct) {\r\n                        // check if this message type was already logged to console for this page view and if so, don't log it again\r\n                        var messageKey = +message.messageId;\r\n                        if (!this._messageLogged[messageKey] || this.consoleLoggingLevel() >= LoggingSeverity.WARNING) {\r\n                            this.warnToConsole(message.message);\r\n                            this._messageLogged[messageKey] = true;\r\n                        }\r\n                    }\r\n                    else {\r\n                        // don't log internal AI traces in the console, unless the verbose logging is enabled\r\n                        if (this.consoleLoggingLevel() >= LoggingSeverity.WARNING) {\r\n                            this.warnToConsole(message.message);\r\n                        }\r\n                    }\r\n                    this.logInternalMessage(severity, message);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * This will write a warning to the console if possible\r\n     * @param message {string} - The warning message\r\n     */\r\n    DiagnosticLogger.prototype.warnToConsole = function (message) {\r\n        if (typeof console !== \"undefined\" && !!console) {\r\n            if (typeof console.warn === \"function\") {\r\n                console.warn(message);\r\n            }\r\n            else if (typeof console.log === \"function\") {\r\n                console.log(message);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Resets the internal message count\r\n     */\r\n    DiagnosticLogger.prototype.resetInternalMessageCount = function () {\r\n        this._messageCount = 0;\r\n        this._messageLogged = {};\r\n    };\r\n    /**\r\n     * Logs a message to the internal queue.\r\n     * @param severity {LoggingSeverity} - The severity of the log message\r\n     * @param message {_InternalLogMessage} - The message to log.\r\n     */\r\n    DiagnosticLogger.prototype.logInternalMessage = function (severity, message) {\r\n        if (this._areInternalMessagesThrottled()) {\r\n            return;\r\n        }\r\n        // check if this message type was already logged for this session and if so, don't log it again\r\n        var logMessage = true;\r\n        var messageKey = this.AIInternalMessagePrefix + message.messageId;\r\n        // if the session storage is not available, limit to only one message type per page view\r\n        if (this._messageLogged[messageKey]) {\r\n            logMessage = false;\r\n        }\r\n        else {\r\n            this._messageLogged[messageKey] = true;\r\n        }\r\n        if (logMessage) {\r\n            // Push the event in the internal queue\r\n            if (severity <= this.telemetryLoggingLevel()) {\r\n                this.queue.push(message);\r\n                this._messageCount++;\r\n            }\r\n            // When throttle limit reached, send a special event\r\n            if (this._messageCount == this.maxInternalMessageLimit()) {\r\n                var throttleLimitMessage = \"Internal events throttle limit per PageView reached for this app.\";\r\n                var throttleMessage = new _InternalLogMessage(_InternalMessageId.MessageLimitPerPVExceeded, throttleLimitMessage, false);\r\n                this.queue.push(throttleMessage);\r\n                this.warnToConsole(throttleLimitMessage);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Indicates whether the internal events are throttled\r\n     */\r\n    DiagnosticLogger.prototype._areInternalMessagesThrottled = function () {\r\n        return this._messageCount >= this.maxInternalMessageLimit();\r\n    };\r\n    return DiagnosticLogger;\r\n}());\r\nexport { DiagnosticLogger };\r\n//# sourceMappingURL=DiagnosticLogger.js.map","import { EventsDiscardedReason } from \"../JavaScriptSDK.Enums/EventsDiscardedReason\";\r\nimport { CoreUtils } from \"./CoreUtils\";\r\nimport { NotificationManager } from \"./NotificationManager\";\r\nimport { _InternalLogMessage, DiagnosticLogger } from \"./DiagnosticLogger\";\r\n\"use strict\";\r\nvar AppInsightsCore = /** @class */ (function () {\r\n    function AppInsightsCore() {\r\n        this._isInitialized = false;\r\n        this._extensions = new Array();\r\n        this._channelController = new ChannelController();\r\n    }\r\n    AppInsightsCore.prototype.initialize = function (config, extensions) {\r\n        var _this = this;\r\n        // Make sure core is only initialized once\r\n        if (this._isInitialized) {\r\n            throw Error(\"Core should not be initialized more than once\");\r\n        }\r\n        if (!config || CoreUtils.isNullOrUndefined(config.instrumentationKey)) {\r\n            throw Error(\"Please provide instrumentation key\");\r\n        }\r\n        this.config = config;\r\n        this._notificationManager = new NotificationManager();\r\n        this.config.extensions = CoreUtils.isNullOrUndefined(this.config.extensions) ? [] : this.config.extensions;\r\n        // add notification to the extensions in the config so other plugins can access it\r\n        this.config.extensionConfig = CoreUtils.isNullOrUndefined(this.config.extensionConfig) ? {} : this.config.extensionConfig;\r\n        this.config.extensionConfig.NotificationManager = this._notificationManager;\r\n        this.logger = new DiagnosticLogger(config);\r\n        // Initial validation\r\n        extensions.forEach(function (extension) {\r\n            if (CoreUtils.isNullOrUndefined(extension.initialize)) {\r\n                throw Error(validationError);\r\n            }\r\n        });\r\n        if (this.config.extensions.length > 0) {\r\n            var isValid_1 = true;\r\n            var containsChannels_1 = false;\r\n            this.config.extensions.forEach(function (item) {\r\n                if (CoreUtils.isNullOrUndefined(item)) {\r\n                    isValid_1 = false;\r\n                }\r\n                if (item.priority > ChannelControllerPriority) {\r\n                    containsChannels_1 = true;\r\n                }\r\n            });\r\n            if (!isValid_1) {\r\n                throw Error(validationError);\r\n            }\r\n            if (containsChannels_1) {\r\n                throw Error(validationErrorInExt);\r\n            }\r\n        }\r\n        // Initial validation complete\r\n        // Concat all available extensions before sorting by priority\r\n        (_a = this._extensions).push.apply(_a, [this._channelController].concat(extensions, this.config.extensions));\r\n        this._extensions = this._extensions.sort(function (a, b) {\r\n            var extA = a;\r\n            var extB = b;\r\n            var typeExtA = typeof extA.processTelemetry;\r\n            var typeExtB = typeof extB.processTelemetry;\r\n            if (typeExtA === 'function' && typeExtB === 'function') {\r\n                return extA.priority - extB.priority;\r\n            }\r\n            if (typeExtA === 'function' && typeExtB !== 'function') {\r\n                // keep non telemetryplugin specific extensions at start\r\n                return 1;\r\n            }\r\n            if (typeExtA !== 'function' && typeExtB === 'function') {\r\n                return -1;\r\n            }\r\n        });\r\n        // sort complete\r\n        // Check if any two extensions have the same priority, then warn to console\r\n        var priority = {};\r\n        this._extensions.forEach(function (ext) {\r\n            var t = ext;\r\n            if (t && t.priority) {\r\n                if (!CoreUtils.isNullOrUndefined(priority[t.priority])) {\r\n                    _this.logger.warnToConsole(\"Two extensions have same priority\" + priority[t.priority] + \", \" + t.identifier);\r\n                }\r\n                else {\r\n                    priority[t.priority] = t.identifier; // set a value\r\n                }\r\n            }\r\n        });\r\n        var c = -1;\r\n        // Set next plugin for all until channel controller\r\n        for (var idx = 0; idx < this._extensions.length - 1; idx++) {\r\n            var curr = (this._extensions[idx]);\r\n            if (curr && typeof curr.processTelemetry !== 'function') {\r\n                // these are initialized only, allowing an entry point for extensions to be initialized when SDK initializes\r\n                continue;\r\n            }\r\n            if (curr.priority === ChannelControllerPriority) {\r\n                c = idx + 1;\r\n                break; // channel controller will set remaining pipeline\r\n            }\r\n            this._extensions[idx].setNextPlugin(this._extensions[idx + 1]); // set next plugin\r\n        }\r\n        // initialize channel controller first, this will initialize all channel plugins\r\n        this._channelController.initialize(this.config, this, this._extensions);\r\n        // initialize remaining regular plugins\r\n        this._extensions.forEach(function (ext) {\r\n            var e = ext;\r\n            if (e && e.priority < ChannelControllerPriority) {\r\n                ext.initialize(_this.config, _this, _this._extensions); // initialize\r\n            }\r\n        });\r\n        // Remove sender channels from main list\r\n        if (c < this._extensions.length) {\r\n            this._extensions.splice(c);\r\n        }\r\n        if (this.getTransmissionControls().length === 0) {\r\n            throw new Error(\"No channels available\");\r\n        }\r\n        this._isInitialized = true;\r\n        var _a;\r\n    };\r\n    AppInsightsCore.prototype.getTransmissionControls = function () {\r\n        return this._channelController.ChannelControls;\r\n    };\r\n    AppInsightsCore.prototype.track = function (telemetryItem) {\r\n        if (telemetryItem === null) {\r\n            this._notifiyInvalidEvent(telemetryItem);\r\n            // throw error\r\n            throw Error(\"Invalid telemetry item\");\r\n        }\r\n        if (telemetryItem.baseData && !telemetryItem.baseType) {\r\n            this._notifiyInvalidEvent(telemetryItem);\r\n            throw Error(\"Provide data.baseType for data.baseData\");\r\n        }\r\n        if (!telemetryItem.baseType) {\r\n            // Hard coded from Common::Event.ts::Event.dataType\r\n            telemetryItem.baseType = \"EventData\";\r\n        }\r\n        if (!telemetryItem.iKey) {\r\n            // setup default iKey if not passed in\r\n            telemetryItem.iKey = this.config.instrumentationKey;\r\n        }\r\n        if (!telemetryItem.time) {\r\n            // add default timestamp if not passed in\r\n            telemetryItem.time = new Date().toISOString();\r\n        }\r\n        if (CoreUtils.isNullOrUndefined(telemetryItem.ver)) {\r\n            // CommonSchema 4.0\r\n            telemetryItem.ver = \"4.0\";\r\n        }\r\n        // do basic validation before sending it through the pipeline\r\n        this._validateTelmetryItem(telemetryItem);\r\n        this._updateSdkVersion(telemetryItem);\r\n        // invoke any common telemetry processors before sending through pipeline\r\n        var i = 0;\r\n        while (i < this._extensions.length) {\r\n            if (this._extensions[i].processTelemetry) {\r\n                this._extensions[i].processTelemetry(telemetryItem); // pass on to first extension that can support processing\r\n                break;\r\n            }\r\n            i++;\r\n        }\r\n    };\r\n    /**\r\n     * Adds a notification listener. The SDK calls methods on the listener when an appropriate notification is raised.\r\n     * The added plugins must raise notifications. If the plugins do not implement the notifications, then no methods will be\r\n     * called.\r\n     * @param {INotificationListener} listener - An INotificationListener object.\r\n     */\r\n    AppInsightsCore.prototype.addNotificationListener = function (listener) {\r\n        this._notificationManager.addNotificationListener(listener);\r\n    };\r\n    /**\r\n     * Removes all instances of the listener.\r\n     * @param {INotificationListener} listener - INotificationListener to remove.\r\n     */\r\n    AppInsightsCore.prototype.removeNotificationListener = function (listener) {\r\n        this._notificationManager.removeNotificationListener(listener);\r\n    };\r\n    /**\r\n     * Periodically check logger.queue for\r\n     */\r\n    AppInsightsCore.prototype.pollInternalLogs = function () {\r\n        var _this = this;\r\n        var interval = this.config.diagnosticLogInterval;\r\n        if (!(interval > 0)) {\r\n            interval = 10000;\r\n        }\r\n        return setInterval(function () {\r\n            var queue = _this.logger.queue;\r\n            queue.forEach(function (logMessage) {\r\n                var item = {\r\n                    name: \"InternalMessageId: \" + logMessage.messageId,\r\n                    iKey: _this.config.instrumentationKey,\r\n                    time: new Date().toISOString(),\r\n                    baseType: _InternalLogMessage.dataType,\r\n                    baseData: { message: logMessage.message }\r\n                };\r\n                _this.track(item);\r\n            });\r\n            queue.length = 0;\r\n        }, interval);\r\n    };\r\n    AppInsightsCore.prototype._validateTelmetryItem = function (telemetryItem) {\r\n        if (CoreUtils.isNullOrUndefined(telemetryItem.name)) {\r\n            this._notifiyInvalidEvent(telemetryItem);\r\n            throw Error(\"telemetry name required\");\r\n        }\r\n        if (CoreUtils.isNullOrUndefined(telemetryItem.time)) {\r\n            this._notifiyInvalidEvent(telemetryItem);\r\n            throw Error(\"telemetry timestamp required\");\r\n        }\r\n        if (CoreUtils.isNullOrUndefined(telemetryItem.iKey)) {\r\n            this._notifiyInvalidEvent(telemetryItem);\r\n            throw Error(\"telemetry instrumentationKey required\");\r\n        }\r\n    };\r\n    AppInsightsCore.prototype._updateSdkVersion = function (telemetryItem) {\r\n        if (!telemetryItem.ext) {\r\n            telemetryItem.ext = {};\r\n        }\r\n        if (!telemetryItem.ext.sdk) {\r\n            telemetryItem.ext.sdk = {};\r\n        }\r\n        var version = \"\";\r\n        for (var i = 0; i < this._extensions.length; i++) {\r\n            var ext = this._extensions[i];\r\n            if (ext.identifier && ext.version) {\r\n                var str = ext.identifier + \":\" + ext.version + \";\";\r\n                version = version.concat(str);\r\n            }\r\n        }\r\n        if (version != \"\") {\r\n            telemetryItem.ext.sdk['libVer'] = version;\r\n        }\r\n    };\r\n    AppInsightsCore.prototype._notifiyInvalidEvent = function (telemetryItem) {\r\n        this._notificationManager.eventsDiscarded([telemetryItem], EventsDiscardedReason.InvalidEvent);\r\n    };\r\n    return AppInsightsCore;\r\n}());\r\nexport { AppInsightsCore };\r\nvar ChannelController = /** @class */ (function () {\r\n    function ChannelController() {\r\n        this.identifier = \"ChannelControllerPlugin\";\r\n        this.priority = ChannelControllerPriority; // in reserved range 100 to 200\r\n    }\r\n    ChannelController.prototype.processTelemetry = function (item) {\r\n        this.channelQueue.forEach(function (queues) {\r\n            // pass on to first item in queue\r\n            if (queues.length > 0) {\r\n                queues[0].processTelemetry(item);\r\n            }\r\n        });\r\n    };\r\n    Object.defineProperty(ChannelController.prototype, \"ChannelControls\", {\r\n        get: function () {\r\n            return this.channelQueue;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ChannelController.prototype.initialize = function (config, core, extensions) {\r\n        var _this = this;\r\n        this.channelQueue = new Array();\r\n        if (config.channels) {\r\n            var invalidChannelIdentifier_1 = undefined;\r\n            config.channels.forEach(function (queue) {\r\n                if (queue && queue.length > 0) {\r\n                    queue = queue.sort(function (a, b) {\r\n                        return a.priority - b.priority;\r\n                    });\r\n                    // Initialize each plugin\r\n                    queue.forEach(function (queueItem) {\r\n                        if (queueItem.priority < ChannelControllerPriority) {\r\n                            invalidChannelIdentifier_1 = queueItem.identifier;\r\n                        }\r\n                        queueItem.initialize(config, core, extensions);\r\n                    });\r\n                    if (invalidChannelIdentifier_1) {\r\n                        throw Error(ChannelValidationMessage + invalidChannelIdentifier_1);\r\n                    }\r\n                    for (var i = 1; i < queue.length; i++) {\r\n                        queue[i - 1].setNextPlugin(queue[i]); // setup processing chain\r\n                    }\r\n                    _this.channelQueue.push(queue);\r\n                }\r\n            });\r\n        }\r\n        var arr = new Array();\r\n        for (var i = 0; i < extensions.length; i++) {\r\n            var plugin = extensions[i];\r\n            if (plugin.priority > ChannelControllerPriority) {\r\n                arr.push(plugin);\r\n            }\r\n        }\r\n        if (arr.length > 0) {\r\n            // sort if not sorted\r\n            arr = arr.sort(function (a, b) {\r\n                return a.priority - b.priority;\r\n            });\r\n            // Initialize each plugin\r\n            arr.forEach(function (queueItem) { return queueItem.initialize(config, core, extensions); });\r\n            // setup next plugin\r\n            for (var i = 1; i < arr.length; i++) {\r\n                arr[i - 1].setNextPlugin(arr[i]);\r\n            }\r\n            this.channelQueue.push(arr);\r\n        }\r\n    };\r\n    return ChannelController;\r\n}());\r\nvar validationError = \"Extensions must provide callback to initialize\";\r\nvar validationErrorInExt = \"Channels must be provided through config.channels only\";\r\nvar ChannelControllerPriority = 500;\r\nvar ChannelValidationMessage = \"Channel has invalid priority\";\r\n//# sourceMappingURL=AppInsightsCore.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nvar RequestHeaders = /** @class */ (function () {\r\n    function RequestHeaders() {\r\n    }\r\n    /**\r\n     * Request-Context header\r\n     */\r\n    RequestHeaders.requestContextHeader = \"Request-Context\";\r\n    /**\r\n     * Target instrumentation header that is added to the response and retrieved by the\r\n     * calling application when processing incoming responses.\r\n     */\r\n    RequestHeaders.requestContextTargetKey = \"appId\";\r\n    /**\r\n     * Request-Context appId format\r\n     */\r\n    RequestHeaders.requestContextAppIdFormat = \"appId=cid-v1:\";\r\n    /**\r\n     * Request-Id header\r\n     */\r\n    RequestHeaders.requestIdHeader = \"Request-Id\";\r\n    /**\r\n     * Sdk-Context header\r\n     * If this header passed with appId in content then appId will be returned back by the backend.\r\n     */\r\n    RequestHeaders.sdkContextHeader = \"Sdk-Context\";\r\n    /**\r\n     * String to pass in header for requesting appId back from the backend.\r\n     */\r\n    RequestHeaders.sdkContextHeaderAppIdRequest = \"appId\";\r\n    RequestHeaders.requestContextHeaderLowerCase = \"request-context\";\r\n    return RequestHeaders;\r\n}());\r\nexport { RequestHeaders };\r\n//# sourceMappingURL=RequestResponseHeaders.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { LoggingSeverity, _InternalMessageId } from '@microsoft/applicationinsights-core-js';\r\nvar DataSanitizer = /** @class */ (function () {\r\n    function DataSanitizer() {\r\n    }\r\n    DataSanitizer.sanitizeKeyAndAddUniqueness = function (logger, key, map) {\r\n        var origLength = key.length;\r\n        var field = DataSanitizer.sanitizeKey(logger, key);\r\n        // validation truncated the length.  We need to add uniqueness\r\n        if (field.length !== origLength) {\r\n            var i = 0;\r\n            var uniqueField = field;\r\n            while (map[uniqueField] !== undefined) {\r\n                i++;\r\n                uniqueField = field.substring(0, DataSanitizer.MAX_NAME_LENGTH - 3) + DataSanitizer.padNumber(i);\r\n            }\r\n            field = uniqueField;\r\n        }\r\n        return field;\r\n    };\r\n    DataSanitizer.sanitizeKey = function (logger, name) {\r\n        if (name) {\r\n            // Remove any leading or trailing whitepace\r\n            name = DataSanitizer.trim(name.toString());\r\n            // truncate the string to 150 chars\r\n            if (name.length > DataSanitizer.MAX_NAME_LENGTH) {\r\n                name = name.substring(0, DataSanitizer.MAX_NAME_LENGTH);\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.NameTooLong, \"name is too long.  It has been truncated to \" + DataSanitizer.MAX_NAME_LENGTH + \" characters.\", { name: name }, true);\r\n            }\r\n        }\r\n        return name;\r\n    };\r\n    DataSanitizer.sanitizeString = function (logger, value, maxLength) {\r\n        if (maxLength === void 0) { maxLength = DataSanitizer.MAX_STRING_LENGTH; }\r\n        if (value) {\r\n            maxLength = maxLength ? maxLength : DataSanitizer.MAX_STRING_LENGTH; // in case default parameters dont work\r\n            value = DataSanitizer.trim(value);\r\n            if (value.toString().length > maxLength) {\r\n                value = value.toString().substring(0, maxLength);\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.StringValueTooLong, \"string value is too long. It has been truncated to \" + maxLength + \" characters.\", { value: value }, true);\r\n            }\r\n        }\r\n        return value;\r\n    };\r\n    DataSanitizer.sanitizeUrl = function (logger, url) {\r\n        return DataSanitizer.sanitizeInput(logger, url, DataSanitizer.MAX_URL_LENGTH, _InternalMessageId.UrlTooLong);\r\n    };\r\n    DataSanitizer.sanitizeMessage = function (logger, message) {\r\n        if (message) {\r\n            if (message.length > DataSanitizer.MAX_MESSAGE_LENGTH) {\r\n                message = message.substring(0, DataSanitizer.MAX_MESSAGE_LENGTH);\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.MessageTruncated, \"message is too long, it has been truncated to \" + DataSanitizer.MAX_MESSAGE_LENGTH + \" characters.\", { message: message }, true);\r\n            }\r\n        }\r\n        return message;\r\n    };\r\n    DataSanitizer.sanitizeException = function (logger, exception) {\r\n        if (exception) {\r\n            if (exception.length > DataSanitizer.MAX_EXCEPTION_LENGTH) {\r\n                exception = exception.substring(0, DataSanitizer.MAX_EXCEPTION_LENGTH);\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.ExceptionTruncated, \"exception is too long, it has been truncated to \" + DataSanitizer.MAX_EXCEPTION_LENGTH + \" characters.\", { exception: exception }, true);\r\n            }\r\n        }\r\n        return exception;\r\n    };\r\n    DataSanitizer.sanitizeProperties = function (logger, properties) {\r\n        if (properties) {\r\n            var tempProps = {};\r\n            for (var prop in properties) {\r\n                var value = properties[prop];\r\n                if (typeof value === \"object\" && typeof JSON !== \"undefined\") {\r\n                    // Stringify any part C properties\r\n                    try {\r\n                        value = JSON.stringify(value);\r\n                    }\r\n                    catch (e) {\r\n                        logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.CannotSerializeObjectNonSerializable, \"custom property is not valid\", { exception: e }, true);\r\n                    }\r\n                }\r\n                value = DataSanitizer.sanitizeString(logger, value, DataSanitizer.MAX_PROPERTY_LENGTH);\r\n                prop = DataSanitizer.sanitizeKeyAndAddUniqueness(logger, prop, tempProps);\r\n                tempProps[prop] = value;\r\n            }\r\n            properties = tempProps;\r\n        }\r\n        return properties;\r\n    };\r\n    DataSanitizer.sanitizeMeasurements = function (logger, measurements) {\r\n        if (measurements) {\r\n            var tempMeasurements = {};\r\n            for (var measure in measurements) {\r\n                var value = measurements[measure];\r\n                measure = DataSanitizer.sanitizeKeyAndAddUniqueness(logger, measure, tempMeasurements);\r\n                tempMeasurements[measure] = value;\r\n            }\r\n            measurements = tempMeasurements;\r\n        }\r\n        return measurements;\r\n    };\r\n    DataSanitizer.sanitizeId = function (logger, id) {\r\n        return id ? DataSanitizer.sanitizeInput(logger, id, DataSanitizer.MAX_ID_LENGTH, _InternalMessageId.IdTooLong).toString() : id;\r\n    };\r\n    DataSanitizer.sanitizeInput = function (logger, input, maxLength, _msgId) {\r\n        if (input) {\r\n            input = DataSanitizer.trim(input);\r\n            if (input.length > maxLength) {\r\n                input = input.substring(0, maxLength);\r\n                logger.throwInternal(LoggingSeverity.WARNING, _msgId, \"input is too long, it has been truncated to \" + maxLength + \" characters.\", { data: input }, true);\r\n            }\r\n        }\r\n        return input;\r\n    };\r\n    DataSanitizer.padNumber = function (num) {\r\n        var s = \"00\" + num;\r\n        return s.substr(s.length - 3);\r\n    };\r\n    /**\r\n     * helper method to trim strings (IE8 does not implement String.prototype.trim)\r\n     */\r\n    DataSanitizer.trim = function (str) {\r\n        if (typeof str !== \"string\")\r\n            return str;\r\n        return str.replace(/^\\s+|\\s+$/g, \"\");\r\n    };\r\n    /**\r\n    * Max length allowed for custom names.\r\n    */\r\n    DataSanitizer.MAX_NAME_LENGTH = 150;\r\n    /**\r\n     * Max length allowed for Id field in page views.\r\n     */\r\n    DataSanitizer.MAX_ID_LENGTH = 128;\r\n    /**\r\n     * Max length allowed for custom values.\r\n     */\r\n    DataSanitizer.MAX_PROPERTY_LENGTH = 8192;\r\n    /**\r\n     * Max length allowed for names\r\n     */\r\n    DataSanitizer.MAX_STRING_LENGTH = 1024;\r\n    /**\r\n     * Max length allowed for url.\r\n     */\r\n    DataSanitizer.MAX_URL_LENGTH = 2048;\r\n    /**\r\n     * Max length allowed for messages.\r\n     */\r\n    DataSanitizer.MAX_MESSAGE_LENGTH = 32768;\r\n    /**\r\n     * Max length allowed for exceptions.\r\n     */\r\n    DataSanitizer.MAX_EXCEPTION_LENGTH = 32768;\r\n    return DataSanitizer;\r\n}());\r\nexport { DataSanitizer };\r\n//# sourceMappingURL=DataSanitizer.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { StorageType } from \"./Enums\";\r\nimport { CoreUtils, _InternalMessageId, LoggingSeverity } from \"@microsoft/applicationinsights-core-js\";\r\nimport { RequestHeaders } from \"./RequestResponseHeaders\";\r\nimport { DataSanitizer } from \"./Telemetry/Common/DataSanitizer\";\r\nvar Util = /** @class */ (function () {\r\n    function Util() {\r\n    }\r\n    /*\r\n     * Force the SDK not to use local and session storage\r\n    */\r\n    Util.disableStorage = function () {\r\n        Util._canUseLocalStorage = false;\r\n        Util._canUseSessionStorage = false;\r\n    };\r\n    /**\r\n     * Gets the localStorage object if available\r\n     * @return {Storage} - Returns the storage object if available else returns null\r\n     */\r\n    Util._getLocalStorageObject = function () {\r\n        if (Util.canUseLocalStorage()) {\r\n            return Util._getVerifiedStorageObject(StorageType.LocalStorage);\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Tests storage object (localStorage or sessionStorage) to verify that it is usable\r\n     * More details here: https://mathiasbynens.be/notes/localstorage-pattern\r\n     * @param storageType Type of storage\r\n     * @return {Storage} Returns storage object verified that it is usable\r\n     */\r\n    Util._getVerifiedStorageObject = function (storageType) {\r\n        var storage = null;\r\n        var fail;\r\n        var uid;\r\n        try {\r\n            if (typeof window === 'undefined') {\r\n                return null;\r\n            }\r\n            uid = new Date;\r\n            storage = storageType === StorageType.LocalStorage ? window.localStorage : window.sessionStorage;\r\n            storage.setItem(uid, uid);\r\n            fail = storage.getItem(uid) != uid;\r\n            storage.removeItem(uid);\r\n            if (fail) {\r\n                storage = null;\r\n            }\r\n        }\r\n        catch (exception) {\r\n            storage = null;\r\n        }\r\n        return storage;\r\n    };\r\n    /**\r\n     *  Checks if endpoint URL is application insights internal injestion service URL.\r\n     *\r\n     *  @param endpointUrl Endpoint URL to check.\r\n     *  @returns {boolean} True if if endpoint URL is application insights internal injestion service URL.\r\n     */\r\n    Util.isInternalApplicationInsightsEndpoint = function (endpointUrl) {\r\n        return Util._internalEndpoints.indexOf(endpointUrl.toLowerCase()) !== -1;\r\n    };\r\n    /**\r\n     *  Check if the browser supports local storage.\r\n     *\r\n     *  @returns {boolean} True if local storage is supported.\r\n     */\r\n    Util.canUseLocalStorage = function () {\r\n        if (Util._canUseLocalStorage === undefined) {\r\n            Util._canUseLocalStorage = !!Util._getVerifiedStorageObject(StorageType.LocalStorage);\r\n        }\r\n        return Util._canUseLocalStorage;\r\n    };\r\n    /**\r\n     *  Get an object from the browser's local storage\r\n     *\r\n     *  @param {string} name - the name of the object to get from storage\r\n     *  @returns {string} The contents of the storage object with the given name. Null if storage is not supported.\r\n     */\r\n    Util.getStorage = function (logger, name) {\r\n        var storage = Util._getLocalStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                return storage.getItem(name);\r\n            }\r\n            catch (e) {\r\n                Util._canUseLocalStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserCannotReadLocalStorage, \"Browser failed read of local storage. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     *  Set the contents of an object in the browser's local storage\r\n     *\r\n     *  @param {string} name - the name of the object to set in storage\r\n     *  @param {string} data - the contents of the object to set in storage\r\n     *  @returns {boolean} True if the storage object could be written.\r\n     */\r\n    Util.setStorage = function (logger, name, data) {\r\n        var storage = Util._getLocalStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                storage.setItem(name, data);\r\n                return true;\r\n            }\r\n            catch (e) {\r\n                Util._canUseLocalStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserCannotWriteLocalStorage, \"Browser failed write to local storage. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     *  Remove an object from the browser's local storage\r\n     *\r\n     *  @param {string} name - the name of the object to remove from storage\r\n     *  @returns {boolean} True if the storage object could be removed.\r\n     */\r\n    Util.removeStorage = function (logger, name) {\r\n        var storage = Util._getLocalStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                storage.removeItem(name);\r\n                return true;\r\n            }\r\n            catch (e) {\r\n                Util._canUseLocalStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserFailedRemovalFromLocalStorage, \"Browser failed removal of local storage item. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * Gets the sessionStorage object if available\r\n     * @return {Storage} - Returns the storage object if available else returns null\r\n     */\r\n    Util._getSessionStorageObject = function () {\r\n        if (Util.canUseSessionStorage()) {\r\n            return Util._getVerifiedStorageObject(StorageType.SessionStorage);\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     *  Check if the browser supports session storage.\r\n     *\r\n     *  @returns {boolean} True if session storage is supported.\r\n     */\r\n    Util.canUseSessionStorage = function () {\r\n        if (Util._canUseSessionStorage === undefined) {\r\n            Util._canUseSessionStorage = !!Util._getVerifiedStorageObject(StorageType.SessionStorage);\r\n        }\r\n        return Util._canUseSessionStorage;\r\n    };\r\n    /**\r\n     *  Gets the list of session storage keys\r\n     *\r\n     *  @returns {string[]} List of session storage keys\r\n     */\r\n    Util.getSessionStorageKeys = function () {\r\n        var keys = [];\r\n        if (Util.canUseSessionStorage()) {\r\n            for (var key in window.sessionStorage) {\r\n                keys.push(key);\r\n            }\r\n        }\r\n        return keys;\r\n    };\r\n    /**\r\n     *  Get an object from the browser's session storage\r\n     *\r\n     *  @param {string} name - the name of the object to get from storage\r\n     *  @returns {string} The contents of the storage object with the given name. Null if storage is not supported.\r\n     */\r\n    Util.getSessionStorage = function (logger, name) {\r\n        var storage = Util._getSessionStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                return storage.getItem(name);\r\n            }\r\n            catch (e) {\r\n                Util._canUseSessionStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserCannotReadSessionStorage, \"Browser failed read of session storage. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     *  Set the contents of an object in the browser's session storage\r\n     *\r\n     *  @param {string} name - the name of the object to set in storage\r\n     *  @param {string} data - the contents of the object to set in storage\r\n     *  @returns {boolean} True if the storage object could be written.\r\n     */\r\n    Util.setSessionStorage = function (logger, name, data) {\r\n        var storage = Util._getSessionStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                storage.setItem(name, data);\r\n                return true;\r\n            }\r\n            catch (e) {\r\n                Util._canUseSessionStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserCannotWriteSessionStorage, \"Browser failed write to session storage. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     *  Remove an object from the browser's session storage\r\n     *\r\n     *  @param {string} name - the name of the object to remove from storage\r\n     *  @returns {boolean} True if the storage object could be removed.\r\n     */\r\n    Util.removeSessionStorage = function (logger, name) {\r\n        var storage = Util._getSessionStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                storage.removeItem(name);\r\n                return true;\r\n            }\r\n            catch (e) {\r\n                Util._canUseSessionStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserFailedRemovalFromSessionStorage, \"Browser failed removal of session storage item. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /*\r\n     * Force the SDK not to store and read any data from cookies\r\n     */\r\n    Util.disableCookies = function () {\r\n        Util._canUseCookies = false;\r\n    };\r\n    /*\r\n     * helper method to tell if document.cookie object is available\r\n     */\r\n    Util.canUseCookies = function (logger) {\r\n        if (Util._canUseCookies === undefined) {\r\n            Util._canUseCookies = false;\r\n            try {\r\n                Util._canUseCookies = Util.document.cookie !== undefined;\r\n            }\r\n            catch (e) {\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.CannotAccessCookie, \"Cannot access document.cookie - \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n            ;\r\n        }\r\n        return Util._canUseCookies;\r\n    };\r\n    /**\r\n     * helper method to set userId and sessionId cookie\r\n     */\r\n    Util.setCookie = function (logger, name, value, domain) {\r\n        var domainAttrib = \"\";\r\n        var secureAttrib = \"\";\r\n        if (domain) {\r\n            domainAttrib = \";domain=\" + domain;\r\n        }\r\n        if (Util.document.location && Util.document.location.protocol === \"https:\") {\r\n            secureAttrib = \";secure\";\r\n        }\r\n        if (Util.canUseCookies(logger)) {\r\n            Util.document.cookie = name + \"=\" + value + domainAttrib + \";path=/\" + secureAttrib;\r\n        }\r\n    };\r\n    Util.stringToBoolOrDefault = function (str, defaultValue) {\r\n        if (defaultValue === void 0) { defaultValue = false; }\r\n        if (str === undefined || str === null) {\r\n            return defaultValue;\r\n        }\r\n        return str.toString().toLowerCase() === \"true\";\r\n    };\r\n    /**\r\n     * helper method to access userId and sessionId cookie\r\n     */\r\n    Util.getCookie = function (logger, name) {\r\n        if (!Util.canUseCookies(logger)) {\r\n            return;\r\n        }\r\n        var value = \"\";\r\n        if (name && name.length) {\r\n            var cookieName = name + \"=\";\r\n            var cookies = Util.document.cookie.split(\";\");\r\n            for (var i = 0; i < cookies.length; i++) {\r\n                var cookie = cookies[i];\r\n                cookie = Util.trim(cookie);\r\n                if (cookie && cookie.indexOf(cookieName) === 0) {\r\n                    value = cookie.substring(cookieName.length, cookies[i].length);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return value;\r\n    };\r\n    /**\r\n     * Deletes a cookie by setting it's expiration time in the past.\r\n     * @param name - The name of the cookie to delete.\r\n     */\r\n    Util.deleteCookie = function (logger, name) {\r\n        if (Util.canUseCookies(logger)) {\r\n            // Setting the expiration date in the past immediately removes the cookie\r\n            Util.document.cookie = name + \"=;path=/;expires=Thu, 01 Jan 1970 00:00:01 GMT;\";\r\n        }\r\n    };\r\n    /**\r\n     * helper method to trim strings (IE8 does not implement String.prototype.trim)\r\n     */\r\n    Util.trim = function (str) {\r\n        if (typeof str !== \"string\")\r\n            return str;\r\n        return str.replace(/^\\s+|\\s+$/g, \"\");\r\n    };\r\n    /**\r\n     * generate random id string\r\n     */\r\n    Util.newId = function () {\r\n        var base64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\r\n        var result = \"\";\r\n        // tslint:disable-next-line:insecure-random\r\n        var random = Math.random() * 1073741824; //5 symbols in base64, almost maxint\r\n        while (random > 0) {\r\n            var char = base64chars.charAt(random % 64);\r\n            result += char;\r\n            random = Math.floor(random / 64);\r\n        }\r\n        return result;\r\n    };\r\n    /**\r\n     * Check if an object is of type Array\r\n     */\r\n    Util.isArray = function (obj) {\r\n        return Object.prototype.toString.call(obj) === \"[object Array]\";\r\n    };\r\n    /**\r\n     * Check if an object is of type Error\r\n     */\r\n    Util.isError = function (obj) {\r\n        return Object.prototype.toString.call(obj) === \"[object Error]\";\r\n    };\r\n    /**\r\n     * Check if an object is of type Date\r\n     */\r\n    Util.isDate = function (obj) {\r\n        return Object.prototype.toString.call(obj) === \"[object Date]\";\r\n    };\r\n    /**\r\n     * Convert a date to I.S.O. format in IE8\r\n     */\r\n    Util.toISOStringForIE8 = function (date) {\r\n        if (Util.isDate(date)) {\r\n            if (Date.prototype.toISOString) {\r\n                return date.toISOString();\r\n            }\r\n            else {\r\n                var pad = function (num) {\r\n                    var r = String(num);\r\n                    if (r.length === 1) {\r\n                        r = \"0\" + r;\r\n                    }\r\n                    return r;\r\n                };\r\n                return date.getUTCFullYear()\r\n                    + \"-\" + pad(date.getUTCMonth() + 1)\r\n                    + \"-\" + pad(date.getUTCDate())\r\n                    + \"T\" + pad(date.getUTCHours())\r\n                    + \":\" + pad(date.getUTCMinutes())\r\n                    + \":\" + pad(date.getUTCSeconds())\r\n                    + \".\" + String((date.getUTCMilliseconds() / 1000).toFixed(3)).slice(2, 5)\r\n                    + \"Z\";\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Gets IE version if we are running on IE, or null otherwise\r\n     */\r\n    Util.getIEVersion = function (userAgentStr) {\r\n        if (userAgentStr === void 0) { userAgentStr = null; }\r\n        var myNav = userAgentStr ? userAgentStr.toLowerCase() : navigator.userAgent.toLowerCase();\r\n        return (myNav.indexOf('msie') != -1) ? parseInt(myNav.split('msie')[1]) : null;\r\n    };\r\n    /**\r\n     * Convert ms to c# time span format\r\n     */\r\n    Util.msToTimeSpan = function (totalms) {\r\n        if (isNaN(totalms) || totalms < 0) {\r\n            totalms = 0;\r\n        }\r\n        totalms = Math.round(totalms);\r\n        var ms = \"\" + totalms % 1000;\r\n        var sec = \"\" + Math.floor(totalms / 1000) % 60;\r\n        var min = \"\" + Math.floor(totalms / (1000 * 60)) % 60;\r\n        var hour = \"\" + Math.floor(totalms / (1000 * 60 * 60)) % 24;\r\n        var days = Math.floor(totalms / (1000 * 60 * 60 * 24));\r\n        ms = ms.length === 1 ? \"00\" + ms : ms.length === 2 ? \"0\" + ms : ms;\r\n        sec = sec.length < 2 ? \"0\" + sec : sec;\r\n        min = min.length < 2 ? \"0\" + min : min;\r\n        hour = hour.length < 2 ? \"0\" + hour : hour;\r\n        return (days > 0 ? days + \".\" : \"\") + hour + \":\" + min + \":\" + sec + \".\" + ms;\r\n    };\r\n    /**\r\n    * Checks if error has no meaningful data inside. Ususally such errors are received by window.onerror when error\r\n    * happens in a script from other domain (cross origin, CORS).\r\n    */\r\n    Util.isCrossOriginError = function (message, url, lineNumber, columnNumber, error) {\r\n        return (message === \"Script error.\" || message === \"Script error\") && !error;\r\n    };\r\n    /**\r\n    * Returns string representation of an object suitable for diagnostics logging.\r\n    */\r\n    Util.dump = function (object) {\r\n        var objectTypeDump = Object.prototype.toString.call(object);\r\n        var propertyValueDump = JSON.stringify(object);\r\n        if (objectTypeDump === \"[object Error]\") {\r\n            propertyValueDump = \"{ stack: '\" + object.stack + \"', message: '\" + object.message + \"', name: '\" + object.name + \"'\";\r\n        }\r\n        return objectTypeDump + propertyValueDump;\r\n    };\r\n    /**\r\n    * Returns the name of object if it's an Error. Otherwise, returns empty string.\r\n    */\r\n    Util.getExceptionName = function (object) {\r\n        var objectTypeDump = Object.prototype.toString.call(object);\r\n        if (objectTypeDump === \"[object Error]\") {\r\n            return object.name;\r\n        }\r\n        return \"\";\r\n    };\r\n    /**\r\n     * Adds an event handler for the specified event\r\n     * @param eventName {string} - The name of the event\r\n     * @param callback {any} - The callback function that needs to be executed for the given event\r\n     * @return {boolean} - true if the handler was successfully added\r\n     */\r\n    Util.addEventHandler = function (eventName, callback) {\r\n        if (typeof window === 'undefined' || !window || typeof eventName !== 'string' || typeof callback !== 'function') {\r\n            return false;\r\n        }\r\n        // Create verb for the event\r\n        var verbEventName = 'on' + eventName;\r\n        // check if addEventListener is available\r\n        if (window.addEventListener) {\r\n            window.addEventListener(eventName, callback, false);\r\n        }\r\n        else if (window[\"attachEvent\"]) {\r\n            window[\"attachEvent\"](verbEventName, callback);\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     * Tells if a browser supports a Beacon API\r\n     */\r\n    Util.IsBeaconApiSupported = function () {\r\n        return ('sendBeacon' in navigator && navigator.sendBeacon);\r\n    };\r\n    Util.document = typeof document !== \"undefined\" ? document : {};\r\n    Util._canUseCookies = undefined;\r\n    Util._canUseLocalStorage = undefined;\r\n    Util._canUseSessionStorage = undefined;\r\n    // listing only non-geo specific locations \r\n    Util._internalEndpoints = [\r\n        \"https://dc.services.visualstudio.com/v2/track\",\r\n        \"https://breeze.aimon.applicationinsights.io/v2/track\",\r\n        \"https://dc-int.services.visualstudio.com/v2/track\"\r\n    ];\r\n    Util.NotSpecified = \"not_specified\";\r\n    return Util;\r\n}());\r\nexport { Util };\r\nvar UrlHelper = /** @class */ (function () {\r\n    function UrlHelper() {\r\n    }\r\n    UrlHelper.parseUrl = function (url) {\r\n        if (!UrlHelper.htmlAnchorElement) {\r\n            UrlHelper.htmlAnchorElement = !!UrlHelper.document.createElement ? UrlHelper.document.createElement('a') : {};\r\n        }\r\n        UrlHelper.htmlAnchorElement.href = url;\r\n        return UrlHelper.htmlAnchorElement;\r\n    };\r\n    UrlHelper.getAbsoluteUrl = function (url) {\r\n        var result;\r\n        var a = UrlHelper.parseUrl(url);\r\n        if (a) {\r\n            result = a.href;\r\n        }\r\n        return result;\r\n    };\r\n    UrlHelper.getPathName = function (url) {\r\n        var result;\r\n        var a = UrlHelper.parseUrl(url);\r\n        if (a) {\r\n            result = a.pathname;\r\n        }\r\n        return result;\r\n    };\r\n    UrlHelper.getCompleteUrl = function (method, absoluteUrl) {\r\n        if (method) {\r\n            return method.toUpperCase() + \" \" + absoluteUrl;\r\n        }\r\n        else {\r\n            return absoluteUrl;\r\n        }\r\n    };\r\n    UrlHelper.document = typeof document !== \"undefined\" ? document : {};\r\n    return UrlHelper;\r\n}());\r\nexport { UrlHelper };\r\nvar CorrelationIdHelper = /** @class */ (function () {\r\n    function CorrelationIdHelper() {\r\n    }\r\n    /**\r\n    * Checks if a request url is not on a excluded domain list and if it is safe to add correlation headers\r\n    */\r\n    CorrelationIdHelper.canIncludeCorrelationHeader = function (config, requestUrl, currentHost) {\r\n        if (config && config.disableCorrelationHeaders) {\r\n            return false;\r\n        }\r\n        if (!requestUrl) {\r\n            return false;\r\n        }\r\n        var requestHost = UrlHelper.parseUrl(requestUrl).host.toLowerCase();\r\n        if ((!config || !config.enableCorsCorrelation) && requestHost !== currentHost) {\r\n            return false;\r\n        }\r\n        var excludedDomains = config && config.correlationHeaderExcludedDomains;\r\n        if (!excludedDomains || excludedDomains.length == 0) {\r\n            return true;\r\n        }\r\n        for (var i = 0; i < excludedDomains.length; i++) {\r\n            var regex = new RegExp(excludedDomains[i].toLowerCase().replace(/\\./g, \"\\.\").replace(/\\*/g, \".*\"));\r\n            if (regex.test(requestHost)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n    * Combines target appId and target role name from response header.\r\n    */\r\n    CorrelationIdHelper.getCorrelationContext = function (responseHeader) {\r\n        if (responseHeader) {\r\n            var correlationId = CorrelationIdHelper.getCorrelationContextValue(responseHeader, RequestHeaders.requestContextTargetKey);\r\n            if (correlationId && correlationId !== CorrelationIdHelper.correlationIdPrefix) {\r\n                return correlationId;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n    * Gets key from correlation response header\r\n    */\r\n    CorrelationIdHelper.getCorrelationContextValue = function (responseHeader, key) {\r\n        if (responseHeader) {\r\n            var keyValues = responseHeader.split(\",\");\r\n            for (var i = 0; i < keyValues.length; ++i) {\r\n                var keyValue = keyValues[i].split(\"=\");\r\n                if (keyValue.length == 2 && keyValue[0] == key) {\r\n                    return keyValue[1];\r\n                }\r\n            }\r\n        }\r\n    };\r\n    CorrelationIdHelper.correlationIdPrefix = \"cid-v1:\";\r\n    return CorrelationIdHelper;\r\n}());\r\nexport { CorrelationIdHelper };\r\nvar AjaxHelper = /** @class */ (function () {\r\n    function AjaxHelper() {\r\n    }\r\n    AjaxHelper.ParseDependencyPath = function (logger, absoluteUrl, method, commandName) {\r\n        var target, name = commandName, data = commandName;\r\n        if (absoluteUrl && absoluteUrl.length > 0) {\r\n            var parsedUrl = UrlHelper.parseUrl(absoluteUrl);\r\n            target = parsedUrl.host;\r\n            if (!name) {\r\n                if (parsedUrl.pathname != null) {\r\n                    var pathName = (parsedUrl.pathname.length === 0) ? \"/\" : parsedUrl.pathname;\r\n                    if (pathName.charAt(0) !== '/') {\r\n                        pathName = \"/\" + pathName;\r\n                    }\r\n                    data = parsedUrl.pathname;\r\n                    name = DataSanitizer.sanitizeString(logger, method ? method + \" \" + pathName : pathName);\r\n                }\r\n                else {\r\n                    name = DataSanitizer.sanitizeString(logger, absoluteUrl);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            target = commandName;\r\n            name = commandName;\r\n        }\r\n        return {\r\n            target: target,\r\n            name: name,\r\n            data: data\r\n        };\r\n    };\r\n    return AjaxHelper;\r\n}());\r\nexport { AjaxHelper };\r\n/**\r\n * A utility class that helps getting time related parameters\r\n */\r\nvar DateTimeUtils = /** @class */ (function () {\r\n    function DateTimeUtils() {\r\n    }\r\n    /**\r\n     * Get the number of milliseconds since 1970/01/01 in local timezone\r\n     */\r\n    DateTimeUtils.Now = (typeof window === 'undefined') ? function () { return new Date().getTime(); } :\r\n        (window.performance && window.performance.now && window.performance.timing) ?\r\n            function () {\r\n                return window.performance.now() + window.performance.timing.navigationStart;\r\n            }\r\n            :\r\n                function () {\r\n                    return new Date().getTime();\r\n                };\r\n    /**\r\n     * Gets duration between two timestamps\r\n     */\r\n    DateTimeUtils.GetDuration = function (start, end) {\r\n        var result = null;\r\n        if (start !== 0 && end !== 0 && !CoreUtils.isNullOrUndefined(start) && !CoreUtils.isNullOrUndefined(end)) {\r\n            result = end - start;\r\n        }\r\n        return result;\r\n    };\r\n    return DateTimeUtils;\r\n}());\r\nexport { DateTimeUtils };\r\n//# sourceMappingURL=Util.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nexport var DisabledPropertyName = \"Microsoft_ApplicationInsights_BypassAjaxInstrumentation\";\r\nexport var SampleRate = \"sampleRate\";\r\nexport var ProcessLegacy = \"ProcessLegacy\";\r\nexport var HttpMethod = \"http.method\";\r\n//# sourceMappingURL=Constants.js.map","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\n/**\r\n * Type of the metric data measurement.\r\n */\r\nexport var DataPointType;\r\n(function (DataPointType) {\r\n    DataPointType[DataPointType[\"Measurement\"] = 0] = \"Measurement\";\r\n    DataPointType[DataPointType[\"Aggregation\"] = 1] = \"Aggregation\";\r\n})(DataPointType || (DataPointType = {}));\r\n//# sourceMappingURL=DataPointType.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { Base } from './Base';\r\n/**\r\n * Data struct to contain both B and C sections.\r\n */\r\nvar Data = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Data, _super);\r\n    function Data() {\r\n        return _super.call(this) || this;\r\n    }\r\n    return Data;\r\n}(Base));\r\nexport { Data };\r\n//# sourceMappingURL=Data.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\n/**\r\n     * Data struct to contain only C section with custom fields.\r\n     */\r\nvar Base = /** @class */ (function () {\r\n    function Base() {\r\n    }\r\n    return Base;\r\n}());\r\nexport { Base };\r\n//# sourceMappingURL=Base.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Envelope as AIEnvelope } from '../../Interfaces/Contracts/Generated/Envelope';\r\nimport { DataSanitizer } from './DataSanitizer';\r\nimport { FieldType } from '../../Enums';\r\nimport { Util } from '../../Util';\r\nvar Envelope = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Envelope, _super);\r\n    /**\r\n     * Constructs a new instance of telemetry data.\r\n     */\r\n    function Envelope(logger, data, name) {\r\n        var _this = _super.call(this) || this;\r\n        _this.name = DataSanitizer.sanitizeString(logger, name) || Util.NotSpecified;\r\n        _this.data = data;\r\n        _this.time = Util.toISOStringForIE8(new Date());\r\n        _this.aiDataContract = {\r\n            time: FieldType.Required,\r\n            iKey: FieldType.Required,\r\n            name: FieldType.Required,\r\n            sampleRate: function () {\r\n                return (_this.sampleRate == 100) ? FieldType.Hidden : FieldType.Required;\r\n            },\r\n            tags: FieldType.Required,\r\n            data: FieldType.Required\r\n        };\r\n        return _this;\r\n    }\r\n    return Envelope;\r\n}(AIEnvelope));\r\nexport { Envelope };\r\n//# sourceMappingURL=Envelope.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n/**\r\n * System variables for a telemetry item.\r\n */\r\nvar Envelope = /** @class */ (function () {\r\n    function Envelope() {\r\n        this.ver = 1;\r\n        this.sampleRate = 100.0;\r\n        this.tags = {};\r\n    }\r\n    return Envelope;\r\n}());\r\nexport { Envelope };\r\n//# sourceMappingURL=Envelope.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\n/**\r\n * The abstract common base of all domains.\r\n */\r\nvar Domain = /** @class */ (function () {\r\n    function Domain() {\r\n    }\r\n    return Domain;\r\n}());\r\nexport { Domain };\r\n//# sourceMappingURL=Domain.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { Domain } from './Domain';\r\n/**\r\n * Instances of Event represent structured event records that can be grouped and searched by their properties. Event data item also creates a metric of event count by name.\r\n */\r\nvar EventData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(EventData, _super);\r\n    function EventData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return EventData;\r\n}(Domain));\r\nexport { EventData };\r\n//# sourceMappingURL=EventData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { EventData } from '../Interfaces/Contracts/Generated/EventData';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { Util } from '../Util';\r\nvar Event = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Event, _super);\r\n    /**\r\n     * Constructs a new instance of the EventTelemetry object\r\n     */\r\n    function Event(logger, name, properties, measurements) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            name: FieldType.Required,\r\n            properties: FieldType.Default,\r\n            measurements: FieldType.Default\r\n        };\r\n        _this.name = DataSanitizer.sanitizeString(logger, name) || Util.NotSpecified;\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        _this.measurements = DataSanitizer.sanitizeMeasurements(logger, measurements);\r\n        return _this;\r\n    }\r\n    Event.envelopeType = \"Microsoft.ApplicationInsights.{0}.Event\";\r\n    Event.dataType = \"EventData\";\r\n    return Event;\r\n}(EventData));\r\nexport { Event };\r\n//# sourceMappingURL=Event.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\n/**\r\n * Stack frame information.\r\n */\r\nvar StackFrame = /** @class */ (function () {\r\n    function StackFrame() {\r\n    }\r\n    return StackFrame;\r\n}());\r\nexport { StackFrame };\r\n//# sourceMappingURL=StackFrame.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n/**\r\n * Exception details of the exception in a chain.\r\n */\r\nvar ExceptionDetails = /** @class */ (function () {\r\n    function ExceptionDetails() {\r\n        this.hasFullStack = true;\r\n        this.parsedStack = [];\r\n    }\r\n    return ExceptionDetails;\r\n}());\r\nexport { ExceptionDetails };\r\n//# sourceMappingURL=ExceptionDetails.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { StackFrame } from '../Interfaces/Contracts/Generated/StackFrame';\r\nimport { ExceptionData } from '../Interfaces/Contracts/Generated/ExceptionData';\r\nimport { ExceptionDetails } from '../Interfaces/Contracts/Generated/ExceptionDetails';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { Util } from '../Util';\r\nvar Exception = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Exception, _super);\r\n    /**\r\n    * Constructs a new isntance of the ExceptionTelemetry object\r\n    */\r\n    function Exception(logger, exception, properties, measurements, severityLevel) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            exceptions: FieldType.Required,\r\n            severityLevel: FieldType.Default,\r\n            properties: FieldType.Default,\r\n            measurements: FieldType.Default\r\n        };\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        _this.measurements = DataSanitizer.sanitizeMeasurements(logger, measurements);\r\n        _this.exceptions = [new _ExceptionDetails(logger, exception)];\r\n        if (severityLevel) {\r\n            _this.severityLevel = severityLevel;\r\n        }\r\n        return _this;\r\n    }\r\n    /**\r\n    * Creates a simple exception with 1 stack frame. Useful for manual constracting of exception.\r\n    */\r\n    Exception.CreateSimpleException = function (message, typeName, assembly, fileName, details, line) {\r\n        return {\r\n            exceptions: [\r\n                {\r\n                    hasFullStack: true,\r\n                    message: message,\r\n                    stack: details,\r\n                    typeName: typeName\r\n                }\r\n            ]\r\n        };\r\n    };\r\n    Exception.envelopeType = \"Microsoft.ApplicationInsights.{0}.Exception\";\r\n    Exception.dataType = \"ExceptionData\";\r\n    return Exception;\r\n}(ExceptionData));\r\nexport { Exception };\r\nvar _ExceptionDetails = /** @class */ (function (_super) {\r\n    tslib_1.__extends(_ExceptionDetails, _super);\r\n    function _ExceptionDetails(logger, exception) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            id: FieldType.Default,\r\n            outerId: FieldType.Default,\r\n            typeName: FieldType.Required,\r\n            message: FieldType.Required,\r\n            hasFullStack: FieldType.Default,\r\n            stack: FieldType.Default,\r\n            parsedStack: FieldType.Array\r\n        };\r\n        _this.typeName = DataSanitizer.sanitizeString(logger, exception.name) || Util.NotSpecified;\r\n        _this.message = DataSanitizer.sanitizeMessage(logger, exception.message) || Util.NotSpecified;\r\n        var stack = exception[\"stack\"];\r\n        _this.parsedStack = _this.parseStack(stack);\r\n        _this.stack = DataSanitizer.sanitizeException(logger, stack);\r\n        _this.hasFullStack = Util.isArray(_this.parsedStack) && _this.parsedStack.length > 0;\r\n        return _this;\r\n    }\r\n    _ExceptionDetails.prototype.parseStack = function (stack) {\r\n        var parsedStack = undefined;\r\n        if (typeof stack === \"string\") {\r\n            var frames = stack.split('\\n');\r\n            parsedStack = [];\r\n            var level = 0;\r\n            var totalSizeInBytes = 0;\r\n            for (var i = 0; i <= frames.length; i++) {\r\n                var frame = frames[i];\r\n                if (_StackFrame.regex.test(frame)) {\r\n                    var parsedFrame = new _StackFrame(frames[i], level++);\r\n                    totalSizeInBytes += parsedFrame.sizeInBytes;\r\n                    parsedStack.push(parsedFrame);\r\n                }\r\n            }\r\n            // DP Constraint - exception parsed stack must be < 32KB\r\n            // remove frames from the middle to meet the threshold\r\n            var exceptionParsedStackThreshold = 32 * 1024;\r\n            if (totalSizeInBytes > exceptionParsedStackThreshold) {\r\n                var left = 0;\r\n                var right = parsedStack.length - 1;\r\n                var size = 0;\r\n                var acceptedLeft = left;\r\n                var acceptedRight = right;\r\n                while (left < right) {\r\n                    // check size\r\n                    var lSize = parsedStack[left].sizeInBytes;\r\n                    var rSize = parsedStack[right].sizeInBytes;\r\n                    size += lSize + rSize;\r\n                    if (size > exceptionParsedStackThreshold) {\r\n                        // remove extra frames from the middle\r\n                        var howMany = acceptedRight - acceptedLeft + 1;\r\n                        parsedStack.splice(acceptedLeft, howMany);\r\n                        break;\r\n                    }\r\n                    // update pointers\r\n                    acceptedLeft = left;\r\n                    acceptedRight = right;\r\n                    left++;\r\n                    right--;\r\n                }\r\n            }\r\n        }\r\n        return parsedStack;\r\n    };\r\n    return _ExceptionDetails;\r\n}(ExceptionDetails));\r\nvar _StackFrame = /** @class */ (function (_super) {\r\n    tslib_1.__extends(_StackFrame, _super);\r\n    function _StackFrame(frame, level) {\r\n        var _this = _super.call(this) || this;\r\n        _this.sizeInBytes = 0;\r\n        _this.aiDataContract = {\r\n            level: FieldType.Required,\r\n            method: FieldType.Required,\r\n            assembly: FieldType.Default,\r\n            fileName: FieldType.Default,\r\n            line: FieldType.Default\r\n        };\r\n        _this.level = level;\r\n        _this.method = \"<no_method>\";\r\n        _this.assembly = Util.trim(frame);\r\n        var matches = frame.match(_StackFrame.regex);\r\n        if (matches && matches.length >= 5) {\r\n            _this.method = Util.trim(matches[2]) || _this.method;\r\n            _this.fileName = Util.trim(matches[4]);\r\n            _this.line = parseInt(matches[5]) || 0;\r\n        }\r\n        _this.sizeInBytes += _this.method.length;\r\n        _this.sizeInBytes += _this.fileName.length;\r\n        _this.sizeInBytes += _this.assembly.length;\r\n        // todo: these might need to be removed depending on how the back-end settles on their size calculation\r\n        _this.sizeInBytes += _StackFrame.baseSize;\r\n        _this.sizeInBytes += _this.level.toString().length;\r\n        _this.sizeInBytes += _this.line.toString().length;\r\n        return _this;\r\n    }\r\n    // regex to match stack frames from ie/chrome/ff\r\n    // methodName=$2, fileName=$4, lineNo=$5, column=$6\r\n    _StackFrame.regex = /^([\\s]+at)?(.*?)(\\@|\\s\\(|\\s)([^\\(\\@\\n]+):([0-9]+):([0-9]+)(\\)?)$/;\r\n    _StackFrame.baseSize = 58; //'{\"method\":\"\",\"level\":,\"assembly\":\"\",\"fileName\":\"\",\"line\":}'.length\r\n    return _StackFrame;\r\n}(StackFrame));\r\nexport { _StackFrame };\r\n//# sourceMappingURL=Exception.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Domain } from './Domain';\r\n/**\r\n * An instance of Exception represents a handled or unhandled exception that occurred during execution of the monitored application.\r\n */\r\nvar ExceptionData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ExceptionData, _super);\r\n    function ExceptionData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.exceptions = [];\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return ExceptionData;\r\n}(Domain));\r\nexport { ExceptionData };\r\n//# sourceMappingURL=ExceptionData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { Domain } from './Domain';\r\n/**\r\n * An instance of the Metric item is a list of measurements (single data points) and/or aggregations.\r\n */\r\nvar MetricData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(MetricData, _super);\r\n    function MetricData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.metrics = [];\r\n        _this.properties = {};\r\n        return _this;\r\n    }\r\n    return MetricData;\r\n}(Domain));\r\nexport { MetricData };\r\n//# sourceMappingURL=MetricData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { DataPointType } from './DataPointType';\r\n/**\r\n * Metric data single measurement.\r\n */\r\nvar DataPoint = /** @class */ (function () {\r\n    function DataPoint() {\r\n        this.kind = DataPointType.Measurement;\r\n    }\r\n    return DataPoint;\r\n}());\r\nexport { DataPoint };\r\n//# sourceMappingURL=DataPoint.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\n/**\r\n* Defines the level of severity for the event.\r\n*/\r\nexport var SeverityLevel;\r\n(function (SeverityLevel) {\r\n    SeverityLevel[SeverityLevel[\"Verbose\"] = 0] = \"Verbose\";\r\n    SeverityLevel[SeverityLevel[\"Information\"] = 1] = \"Information\";\r\n    SeverityLevel[SeverityLevel[\"Warning\"] = 2] = \"Warning\";\r\n    SeverityLevel[SeverityLevel[\"Error\"] = 3] = \"Error\";\r\n    SeverityLevel[SeverityLevel[\"Critical\"] = 4] = \"Critical\";\r\n})(SeverityLevel || (SeverityLevel = {}));\r\n//# sourceMappingURL=SeverityLevel.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { DataPoint as AIDataPoint } from '../../Interfaces/Contracts/Generated/DataPoint';\r\nimport { FieldType } from '../../Enums';\r\nvar DataPoint = /** @class */ (function (_super) {\r\n    tslib_1.__extends(DataPoint, _super);\r\n    function DataPoint() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * The data contract for serializing this object.\r\n         */\r\n        _this.aiDataContract = {\r\n            name: FieldType.Required,\r\n            kind: FieldType.Default,\r\n            value: FieldType.Required,\r\n            count: FieldType.Default,\r\n            min: FieldType.Default,\r\n            max: FieldType.Default,\r\n            stdDev: FieldType.Default\r\n        };\r\n        return _this;\r\n    }\r\n    return DataPoint;\r\n}(AIDataPoint));\r\nexport { DataPoint };\r\n//# sourceMappingURL=DataPoint.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { MetricData } from '../Interfaces/Contracts/Generated/MetricData';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { DataPoint } from './Common/DataPoint';\r\nimport { Util } from '../Util';\r\nvar Metric = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Metric, _super);\r\n    /**\r\n     * Constructs a new instance of the MetricTelemetry object\r\n     */\r\n    function Metric(logger, name, value, count, min, max, properties) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            metrics: FieldType.Required,\r\n            properties: FieldType.Default\r\n        };\r\n        var dataPoint = new DataPoint();\r\n        dataPoint.count = count > 0 ? count : undefined;\r\n        dataPoint.max = isNaN(max) || max === null ? undefined : max;\r\n        dataPoint.min = isNaN(min) || min === null ? undefined : min;\r\n        dataPoint.name = DataSanitizer.sanitizeString(logger, name) || Util.NotSpecified;\r\n        dataPoint.value = value;\r\n        _this.metrics = [dataPoint];\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        return _this;\r\n    }\r\n    Metric.envelopeType = \"Microsoft.ApplicationInsights.{0}.Metric\";\r\n    Metric.dataType = \"MetricData\";\r\n    return Metric;\r\n}(MetricData));\r\nexport { Metric };\r\n//# sourceMappingURL=Metric.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { EventData } from './EventData';\r\n/**\r\n * An instance of PageView represents a generic action on a page like a button click. It is also the base type for PageView.\r\n */\r\nvar PageViewData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PageViewData, _super);\r\n    function PageViewData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return PageViewData;\r\n}(EventData));\r\nexport { PageViewData };\r\n//# sourceMappingURL=PageViewData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { PageViewData } from '../Interfaces/Contracts/Generated/PageViewData';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { Util } from '../Util';\r\nvar PageView = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PageView, _super);\r\n    /**\r\n     * Constructs a new instance of the PageEventTelemetry object\r\n     */\r\n    function PageView(logger, name, url, durationMs, properties, measurements, id) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            name: FieldType.Default,\r\n            url: FieldType.Default,\r\n            duration: FieldType.Default,\r\n            properties: FieldType.Default,\r\n            measurements: FieldType.Default,\r\n            id: FieldType.Default\r\n        };\r\n        _this.id = DataSanitizer.sanitizeId(logger, id);\r\n        _this.url = DataSanitizer.sanitizeUrl(logger, url);\r\n        _this.name = DataSanitizer.sanitizeString(logger, name) || Util.NotSpecified;\r\n        if (!isNaN(durationMs)) {\r\n            _this.duration = Util.msToTimeSpan(durationMs);\r\n        }\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        _this.measurements = DataSanitizer.sanitizeMeasurements(logger, measurements);\r\n        return _this;\r\n    }\r\n    PageView.envelopeType = \"Microsoft.ApplicationInsights.{0}.Pageview\";\r\n    PageView.dataType = \"PageviewData\";\r\n    return PageView;\r\n}(PageViewData));\r\nexport { PageView };\r\n//# sourceMappingURL=PageView.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { Util } from '../Util';\r\nimport { AjaxHelper } from '../Util';\r\nimport { RemoteDependencyData as GeneratedRemoteDependencyData } from '../Interfaces/Contracts/Generated/RemoteDependencyData';\r\nvar RemoteDependencyData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RemoteDependencyData, _super);\r\n    /**\r\n     * Constructs a new instance of the RemoteDependencyData object\r\n     */\r\n    function RemoteDependencyData(logger, id, absoluteUrl, commandName, value, success, resultCode, method, requestAPI, properties, measurements) {\r\n        if (requestAPI === void 0) { requestAPI = \"Ajax\"; }\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            id: FieldType.Required,\r\n            ver: FieldType.Required,\r\n            name: FieldType.Default,\r\n            resultCode: FieldType.Default,\r\n            duration: FieldType.Default,\r\n            success: FieldType.Default,\r\n            data: FieldType.Default,\r\n            target: FieldType.Default,\r\n            type: FieldType.Default,\r\n            properties: FieldType.Default,\r\n            measurements: FieldType.Default,\r\n            kind: FieldType.Default,\r\n            value: FieldType.Default,\r\n            count: FieldType.Default,\r\n            min: FieldType.Default,\r\n            max: FieldType.Default,\r\n            stdDev: FieldType.Default,\r\n            dependencyKind: FieldType.Default,\r\n            dependencySource: FieldType.Default,\r\n            commandName: FieldType.Default,\r\n            dependencyTypeName: FieldType.Default,\r\n        };\r\n        _this.id = id;\r\n        _this.duration = Util.msToTimeSpan(value);\r\n        _this.success = success;\r\n        _this.resultCode = resultCode + \"\";\r\n        _this.type = DataSanitizer.sanitizeString(logger, requestAPI);\r\n        var dependencyFields = AjaxHelper.ParseDependencyPath(logger, absoluteUrl, method, commandName);\r\n        _this.data = DataSanitizer.sanitizeUrl(logger, commandName) || dependencyFields.data; // get a value from hosturl if commandName not available\r\n        _this.target = dependencyFields.target;\r\n        _this.name = dependencyFields.name;\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        _this.measurements = DataSanitizer.sanitizeMeasurements(logger, measurements);\r\n        return _this;\r\n    }\r\n    RemoteDependencyData.envelopeType = \"Microsoft.ApplicationInsights.{0}.RemoteDependency\";\r\n    RemoteDependencyData.dataType = \"RemoteDependencyData\";\r\n    return RemoteDependencyData;\r\n}(GeneratedRemoteDependencyData));\r\nexport { RemoteDependencyData };\r\n//# sourceMappingURL=RemoteDependencyData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { Domain } from './Domain';\r\n/**\r\n * An instance of Remote Dependency represents an interaction of the monitored component with a remote component/service like SQL or an HTTP endpoint.\r\n */\r\nvar RemoteDependencyData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RemoteDependencyData, _super);\r\n    function RemoteDependencyData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.success = true;\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return RemoteDependencyData;\r\n}(Domain));\r\nexport { RemoteDependencyData };\r\n//# sourceMappingURL=RemoteDependencyData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { MessageData } from '../Interfaces/Contracts/Generated/MessageData';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { Util } from '../Util';\r\nvar Trace = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Trace, _super);\r\n    /**\r\n     * Constructs a new instance of the TraceTelemetry object\r\n     */\r\n    function Trace(logger, message, severityLevel, properties) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            message: FieldType.Required,\r\n            severityLevel: FieldType.Default,\r\n            properties: FieldType.Default\r\n        };\r\n        message = message || Util.NotSpecified;\r\n        _this.message = DataSanitizer.sanitizeMessage(logger, message);\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        if (severityLevel) {\r\n            _this.severityLevel = severityLevel;\r\n        }\r\n        return _this;\r\n    }\r\n    Trace.envelopeType = \"Microsoft.ApplicationInsights.{0}.Message\";\r\n    Trace.dataType = \"MessageData\";\r\n    return Trace;\r\n}(MessageData));\r\nexport { Trace };\r\n//# sourceMappingURL=Trace.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { Domain } from './Domain';\r\n/**\r\n * Instances of Message represent printf-like trace statements that are text-searched. Log4Net, NLog and other text-based log file entries are translated into intances of this type. The message does not have measurements.\r\n */\r\nvar MessageData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(MessageData, _super);\r\n    function MessageData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.properties = {};\r\n        return _this;\r\n    }\r\n    return MessageData;\r\n}(Domain));\r\nexport { MessageData };\r\n//# sourceMappingURL=MessageData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { PageViewPerfData } from '../Interfaces/Contracts/Generated/PageViewPerfData';\r\nimport { FieldType } from '../Enums';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { Util } from '../Util';\r\nvar PageViewPerformance = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PageViewPerformance, _super);\r\n    /**\r\n     * Constructs a new instance of the PageEventTelemetry object\r\n     */\r\n    function PageViewPerformance(logger, name, url, unused, properties, measurements) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            name: FieldType.Default,\r\n            url: FieldType.Default,\r\n            duration: FieldType.Default,\r\n            perfTotal: FieldType.Default,\r\n            networkConnect: FieldType.Default,\r\n            sentRequest: FieldType.Default,\r\n            receivedResponse: FieldType.Default,\r\n            domProcessing: FieldType.Default,\r\n            properties: FieldType.Default,\r\n            measurements: FieldType.Default\r\n        };\r\n        _this.url = DataSanitizer.sanitizeUrl(logger, url);\r\n        _this.name = DataSanitizer.sanitizeString(logger, name) || Util.NotSpecified;\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        _this.measurements = DataSanitizer.sanitizeMeasurements(logger, measurements);\r\n        return _this;\r\n    }\r\n    PageViewPerformance.envelopeType = \"Microsoft.ApplicationInsights.{0}.PageviewPerformance\";\r\n    PageViewPerformance.dataType = \"PageviewPerformanceData\";\r\n    return PageViewPerformance;\r\n}(PageViewPerfData));\r\nexport { PageViewPerformance };\r\n//# sourceMappingURL=PageViewPerformance.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { PageViewData } from './PageViewData';\r\n/**\r\n * An instance of PageViewPerf represents: a page view with no performance data, a page view with performance data, or just the performance data of an earlier page request.\r\n */\r\nvar PageViewPerfData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PageViewPerfData, _super);\r\n    function PageViewPerfData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return PageViewPerfData;\r\n}(PageViewData));\r\nexport { PageViewPerfData };\r\n//# sourceMappingURL=PageViewPerfData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Data as AIData } from '../../Interfaces/Contracts/Generated/Data';\r\nimport { FieldType } from '../../Enums';\r\nvar Data = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Data, _super);\r\n    /**\r\n     * Constructs a new instance of telemetry data.\r\n     */\r\n    function Data(baseType, data) {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * The data contract for serializing this object.\r\n         */\r\n        _this.aiDataContract = {\r\n            baseType: FieldType.Required,\r\n            baseData: FieldType.Required\r\n        };\r\n        _this.baseType = baseType;\r\n        _this.baseData = data;\r\n        return _this;\r\n    }\r\n    return Data;\r\n}(AIData));\r\nexport { Data };\r\n//# sourceMappingURL=Data.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { CoreUtils } from '@microsoft/applicationinsights-core-js';\r\nvar ConfigurationManager = /** @class */ (function () {\r\n    function ConfigurationManager() {\r\n    }\r\n    ConfigurationManager.getConfig = function (config, field, identifier, defaultValue) {\r\n        if (defaultValue === void 0) { defaultValue = false; }\r\n        var configValue;\r\n        if (identifier && config.extensionConfig && config.extensionConfig[identifier] && !CoreUtils.isNullOrUndefined(config.extensionConfig[identifier][field])) {\r\n            configValue = config.extensionConfig[identifier][field];\r\n        }\r\n        else {\r\n            configValue = config[field];\r\n        }\r\n        return !CoreUtils.isNullOrUndefined(configValue) ? configValue : defaultValue;\r\n    };\r\n    return ConfigurationManager;\r\n}());\r\nexport { ConfigurationManager };\r\n//# sourceMappingURL=IConfig.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\nvar ContextTagKeys = /** @class */ (function () {\r\n    function ContextTagKeys() {\r\n        this.applicationVersion = \"ai.application.ver\";\r\n        this.applicationBuild = \"ai.application.build\";\r\n        this.applicationTypeId = \"ai.application.typeId\";\r\n        this.applicationId = \"ai.application.applicationId\";\r\n        this.applicationLayer = \"ai.application.layer\";\r\n        this.deviceId = \"ai.device.id\";\r\n        this.deviceIp = \"ai.device.ip\";\r\n        this.deviceLanguage = \"ai.device.language\";\r\n        this.deviceLocale = \"ai.device.locale\";\r\n        this.deviceModel = \"ai.device.model\";\r\n        this.deviceFriendlyName = \"ai.device.friendlyName\";\r\n        this.deviceNetwork = \"ai.device.network\";\r\n        this.deviceNetworkName = \"ai.device.networkName\";\r\n        this.deviceOEMName = \"ai.device.oemName\";\r\n        this.deviceOS = \"ai.device.os\";\r\n        this.deviceOSVersion = \"ai.device.osVersion\";\r\n        this.deviceRoleInstance = \"ai.device.roleInstance\";\r\n        this.deviceRoleName = \"ai.device.roleName\";\r\n        this.deviceScreenResolution = \"ai.device.screenResolution\";\r\n        this.deviceType = \"ai.device.type\";\r\n        this.deviceMachineName = \"ai.device.machineName\";\r\n        this.deviceVMName = \"ai.device.vmName\";\r\n        this.deviceBrowser = \"ai.device.browser\";\r\n        this.deviceBrowserVersion = \"ai.device.browserVersion\";\r\n        this.locationIp = \"ai.location.ip\";\r\n        this.locationCountry = \"ai.location.country\";\r\n        this.locationProvince = \"ai.location.province\";\r\n        this.locationCity = \"ai.location.city\";\r\n        this.operationId = \"ai.operation.id\";\r\n        this.operationName = \"ai.operation.name\";\r\n        this.operationParentId = \"ai.operation.parentId\";\r\n        this.operationRootId = \"ai.operation.rootId\";\r\n        this.operationSyntheticSource = \"ai.operation.syntheticSource\";\r\n        this.operationCorrelationVector = \"ai.operation.correlationVector\";\r\n        this.sessionId = \"ai.session.id\";\r\n        this.sessionIsFirst = \"ai.session.isFirst\";\r\n        this.sessionIsNew = \"ai.session.isNew\";\r\n        this.userAccountAcquisitionDate = \"ai.user.accountAcquisitionDate\";\r\n        this.userAccountId = \"ai.user.accountId\";\r\n        this.userAgent = \"ai.user.userAgent\";\r\n        this.userId = \"ai.user.id\";\r\n        this.userStoreRegion = \"ai.user.storeRegion\";\r\n        this.userAuthUserId = \"ai.user.authUserId\";\r\n        this.userAnonymousUserAcquisitionDate = \"ai.user.anonUserAcquisitionDate\";\r\n        this.userAuthenticatedUserAcquisitionDate = \"ai.user.authUserAcquisitionDate\";\r\n        this.cloudName = \"ai.cloud.name\";\r\n        this.cloudRole = \"ai.cloud.role\";\r\n        this.cloudRoleVer = \"ai.cloud.roleVer\";\r\n        this.cloudRoleInstance = \"ai.cloud.roleInstance\";\r\n        this.cloudEnvironment = \"ai.cloud.environment\";\r\n        this.cloudLocation = \"ai.cloud.location\";\r\n        this.cloudDeploymentUnit = \"ai.cloud.deploymentUnit\";\r\n        this.internalNodeName = \"ai.internal.nodeName\";\r\n        this.internalSdkVersion = \"ai.internal.sdkVersion\";\r\n        this.internalAgentVersion = \"ai.internal.agentVersion\";\r\n    }\r\n    return ContextTagKeys;\r\n}());\r\nexport { ContextTagKeys };\r\n//# sourceMappingURL=ContextTagKeys.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { Util } from \"./Util\";\r\nimport { DataSanitizer } from \"./Telemetry/Common/DataSanitizer\";\r\nimport { CoreUtils } from \"@microsoft/applicationinsights-core-js\";\r\nvar TelemetryItemCreator = /** @class */ (function () {\r\n    function TelemetryItemCreator() {\r\n    }\r\n    /**\r\n     * Create a telemetry item that the 1DS channel understands\r\n     * @param item domain specific properties; part B\r\n     * @param baseType telemetry item type. ie PageViewData\r\n     * @param envelopeName name of the envelope. ie Microsoft.ApplicationInsights.<instrumentation key>.PageView\r\n     * @param customProperties user defined custom properties; part C\r\n     * @param systemProperties system properties that are added to the context; part A\r\n     * @returns ITelemetryItem that is sent to channel\r\n     */\r\n    TelemetryItemCreator.create = function (item, baseType, envelopeName, logger, customProperties, systemProperties) {\r\n        envelopeName = DataSanitizer.sanitizeString(logger, envelopeName) || Util.NotSpecified;\r\n        if (CoreUtils.isNullOrUndefined(item) ||\r\n            CoreUtils.isNullOrUndefined(baseType) ||\r\n            CoreUtils.isNullOrUndefined(envelopeName)) {\r\n            throw Error(\"Input doesn't contain all required fields\");\r\n        }\r\n        var telemetryItem = {\r\n            name: envelopeName,\r\n            time: new Date().toISOString(),\r\n            iKey: \"\",\r\n            ext: systemProperties ? systemProperties : {},\r\n            tags: [],\r\n            data: {},\r\n            baseType: baseType,\r\n            baseData: item // Part B\r\n        };\r\n        // Part C\r\n        if (!CoreUtils.isNullOrUndefined(customProperties)) {\r\n            for (var prop in customProperties) {\r\n                if (customProperties.hasOwnProperty(prop)) {\r\n                    telemetryItem.data[prop] = customProperties[prop];\r\n                }\r\n            }\r\n        }\r\n        return telemetryItem;\r\n    };\r\n    return TelemetryItemCreator;\r\n}());\r\nexport { TelemetryItemCreator };\r\n//# sourceMappingURL=TelemetryItemCreator.js.map","import { ContextTagKeys } from \"./Contracts/Generated/ContextTagKeys\";\r\nvar Extensions = /** @class */ (function () {\r\n    function Extensions() {\r\n    }\r\n    Extensions.UserExt = \"user\";\r\n    Extensions.DeviceExt = \"device\";\r\n    Extensions.TraceExt = \"trace\";\r\n    Extensions.WebExt = \"web\";\r\n    Extensions.AppExt = \"app\";\r\n    Extensions.OSExt = \"os\";\r\n    Extensions.SessionExt = \"ses\";\r\n    Extensions.SDKExt = \"sdk\";\r\n    return Extensions;\r\n}());\r\nexport { Extensions };\r\nvar SDKExtensionKeys = /** @class */ (function () {\r\n    function SDKExtensionKeys() {\r\n    }\r\n    SDKExtensionKeys.libVer = 'libVer';\r\n    return SDKExtensionKeys;\r\n}());\r\nexport { SDKExtensionKeys };\r\nexport var CtxTagKeys = new ContextTagKeys();\r\n//# sourceMappingURL=PartAExtensions.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nexport { Util, CorrelationIdHelper, UrlHelper, DateTimeUtils } from './Util';\r\nexport { FieldType } from './Enums';\r\nexport { RequestHeaders } from './RequestResponseHeaders';\r\nexport { DisabledPropertyName, ProcessLegacy, SampleRate, HttpMethod } from './Constants';\r\nexport { Data as AIData } from './Interfaces/Contracts/Generated/Data';\r\nexport { Base as AIBase } from './Interfaces/Contracts/Generated/Base';\r\nexport { Envelope } from './Telemetry/Common/Envelope';\r\nexport { Event } from './Telemetry/Event';\r\nexport { Exception } from './Telemetry/Exception';\r\nexport { Metric } from './Telemetry/Metric';\r\nexport { PageView } from './Telemetry/PageView';\r\nexport { PageViewData } from './Interfaces/Contracts/Generated/PageViewData';\r\nexport { RemoteDependencyData } from './Telemetry/RemoteDependencyData';\r\nexport { Trace } from './Telemetry/Trace';\r\nexport { PageViewPerformance } from './Telemetry/PageViewPerformance';\r\nexport { Data } from './Telemetry/Common/Data';\r\nexport { SeverityLevel } from './Interfaces/Contracts/Generated/SeverityLevel';\r\nexport { ConfigurationManager } from './Interfaces/IConfig';\r\nexport { ContextTagKeys } from './Interfaces/Contracts/Generated/ContextTagKeys';\r\nexport { DataSanitizer } from './Telemetry/Common/DataSanitizer';\r\nexport { TelemetryItemCreator } from './TelemetryItemCreator';\r\nexport { CtxTagKeys, Extensions, SDKExtensionKeys } from './Interfaces/PartAExtensions';\r\nexport var PropertiesPluginIdentifier = \"AppInsightsPropertiesPlugin\";\r\n//# sourceMappingURL=applicationinsights-common.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { DateTimeUtils, Util } from '@microsoft/applicationinsights-common';\r\nimport { CoreUtils, LoggingSeverity, _InternalMessageId } from '@microsoft/applicationinsights-core-js';\r\n/**\r\n* Class encapsulates sending page views and page view performance telemetry.\r\n*/\r\nvar PageViewManager = /** @class */ (function () {\r\n    function PageViewManager(appInsights, overridePageViewDuration, core, pageViewPerformanceManager) {\r\n        this.pageViewPerformanceSent = false;\r\n        this.overridePageViewDuration = false;\r\n        this.overridePageViewDuration = overridePageViewDuration;\r\n        this.appInsights = appInsights;\r\n        this._pageViewPerformanceManager = pageViewPerformanceManager;\r\n        if (core) {\r\n            this._channel = function () { return (core.getTransmissionControls()); };\r\n            this._logger = core.logger;\r\n        }\r\n    }\r\n    /**\r\n    * Currently supported cases:\r\n    * 1) (default case) track page view called with default parameters, overridePageViewDuration = false. Page view is sent with page view performance when navigation timing data is available.\r\n    *    a. If navigation timing is not supported then page view is sent right away with undefined duration. Page view performance is not sent.\r\n    * 2) overridePageViewDuration = true, custom duration provided. Custom duration is used, page view sends right away.\r\n    * 3) overridePageViewDuration = true, custom duration NOT provided. Page view is sent right away, duration is time spent from page load till now (or undefined if navigation timing is not supported).\r\n    * 4) overridePageViewDuration = false, custom duration is provided. Page view is sent right away with custom duration.\r\n    *\r\n    * In all cases page view performance is sent once (only for the 1st call of trackPageView), or not sent if navigation timing is not supported.\r\n    */\r\n    PageViewManager.prototype.trackPageView = function (pageView, customProperties) {\r\n        var _this = this;\r\n        var name = pageView.name;\r\n        if (CoreUtils.isNullOrUndefined(name) || typeof name !== \"string\") {\r\n            pageView.name = window.document && window.document.title || \"\";\r\n        }\r\n        var uri = pageView.uri;\r\n        if (CoreUtils.isNullOrUndefined(uri) || typeof uri !== \"string\") {\r\n            pageView.uri = window.location && window.location.href || \"\";\r\n        }\r\n        // case 1a. if performance timing is not supported by the browser, send the page view telemetry with the duration provided by the user. If the user\r\n        // do not provide the duration, set duration to undefined\r\n        // Also this is case 4\r\n        if (!this._pageViewPerformanceManager.isPerformanceTimingSupported()) {\r\n            this.appInsights.sendPageViewInternal(pageView, customProperties);\r\n            this._channel().forEach(function (queues) { queues.forEach(function (q) { return q.flush(true); }); });\r\n            // no navigation timing (IE 8, iOS Safari 8.4, Opera Mini 8 - see http://caniuse.com/#feat=nav-timing)\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.NavigationTimingNotSupported, \"trackPageView: navigation timing API used for calculation of page duration is not supported in this browser. This page view will be collected without duration and timing info.\");\r\n            return;\r\n        }\r\n        var pageViewSent = false;\r\n        var customDuration = undefined;\r\n        // if the performance timing is supported by the browser, calculate the custom duration\r\n        var start = this._pageViewPerformanceManager.getPerformanceTiming().navigationStart;\r\n        customDuration = DateTimeUtils.GetDuration(start, +new Date);\r\n        if (!this._pageViewPerformanceManager.shouldCollectDuration(customDuration)) {\r\n            customDuration = undefined;\r\n        }\r\n        // if the user has provided duration, send a page view telemetry with the provided duration. Otherwise, if\r\n        // overridePageViewDuration is set to true, send a page view telemetry with the custom duration calculated earlier\r\n        var duration = undefined;\r\n        if (!CoreUtils.isNullOrUndefined(customProperties) &&\r\n            !CoreUtils.isNullOrUndefined(customProperties.duration)) {\r\n            duration = customProperties.duration;\r\n        }\r\n        if (this.overridePageViewDuration || !isNaN(duration)) {\r\n            if (isNaN(duration)) {\r\n                // case 3\r\n                if (!customProperties) {\r\n                    customProperties = {};\r\n                }\r\n                customProperties[\"duration\"] = customDuration;\r\n            }\r\n            // case 2\r\n            this.appInsights.sendPageViewInternal(pageView, customProperties);\r\n            this._channel().forEach(function (queues) { queues.forEach(function (q) { return q.flush(true); }); });\r\n            pageViewSent = true;\r\n        }\r\n        // now try to send the page view performance telemetry\r\n        var maxDurationLimit = 60000;\r\n        if (!customProperties) {\r\n            customProperties = {};\r\n        }\r\n        var handle = setInterval((function () {\r\n            try {\r\n                if (_this._pageViewPerformanceManager.isPerformanceTimingDataReady()) {\r\n                    clearInterval(handle);\r\n                    var pageViewPerformance = {\r\n                        name: name,\r\n                        uri: uri\r\n                    };\r\n                    _this._pageViewPerformanceManager.populatePageViewPerformanceEvent(pageViewPerformance);\r\n                    if (!pageViewPerformance.isValid && !pageViewSent) {\r\n                        // If navigation timing gives invalid numbers, then go back to \"override page view duration\" mode.\r\n                        // That's the best value we can get that makes sense.\r\n                        customProperties[\"duration\"] = customDuration;\r\n                        _this.appInsights.sendPageViewInternal(pageView, customProperties);\r\n                        _this._channel().forEach(function (queues) { queues.forEach(function (q) { return q.flush(true); }); });\r\n                    }\r\n                    else {\r\n                        if (!pageViewSent) {\r\n                            customProperties[\"duration\"] = pageViewPerformance.durationMs;\r\n                            _this.appInsights.sendPageViewInternal(pageView, customProperties);\r\n                        }\r\n                        if (!_this.pageViewPerformanceSent) {\r\n                            _this.appInsights.sendPageViewPerformanceInternal(pageViewPerformance, customProperties);\r\n                            _this.pageViewPerformanceSent = true;\r\n                        }\r\n                        _this._channel().forEach(function (queues) { queues.forEach(function (q) { return q.flush(true); }); });\r\n                    }\r\n                }\r\n                else if (DateTimeUtils.GetDuration(start, +new Date) > maxDurationLimit) {\r\n                    // if performance timings are not ready but we exceeded the maximum duration limit, just log a page view telemetry\r\n                    // with the maximum duration limit. Otherwise, keep waiting until performance timings are ready\r\n                    clearInterval(handle);\r\n                    if (!pageViewSent) {\r\n                        customProperties[\"duration\"] = maxDurationLimit;\r\n                        _this.appInsights.sendPageViewInternal(pageView, customProperties);\r\n                        _this._channel().forEach(function (queues) { queues.forEach(function (q) { return q.flush(true); }); });\r\n                    }\r\n                }\r\n            }\r\n            catch (e) {\r\n                _this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TrackPVFailedCalc, \"trackPageView failed on page load calculation: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }), 100);\r\n    };\r\n    return PageViewManager;\r\n}());\r\nexport { PageViewManager };\r\n//# sourceMappingURL=PageViewManager.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { Util, DateTimeUtils } from '@microsoft/applicationinsights-common';\r\nimport { LoggingSeverity, _InternalMessageId } from '@microsoft/applicationinsights-core-js';\r\n/**\r\n* Class encapsulates sending page view performance telemetry.\r\n*/\r\nvar PageViewPerformanceManager = /** @class */ (function () {\r\n    function PageViewPerformanceManager(core) {\r\n        this.MAX_DURATION_ALLOWED = 3600000; // 1h\r\n        if (core) {\r\n            this._logger = core.logger;\r\n        }\r\n    }\r\n    PageViewPerformanceManager.prototype.populatePageViewPerformanceEvent = function (pageViewPerformance) {\r\n        pageViewPerformance.isValid = false;\r\n        /*\r\n         * http://www.w3.org/TR/navigation-timing/#processing-model\r\n         *  |-navigationStart\r\n         *  |             |-connectEnd\r\n         *  |             ||-requestStart\r\n         *  |             ||             |-responseStart\r\n         *  |             ||             |              |-responseEnd\r\n         *  |             ||             |              |\r\n         *  |             ||             |              |         |-loadEventEnd\r\n         *  |---network---||---request---|---response---|---dom---|\r\n         *  |--------------------------total----------------------|\r\n         */\r\n        var timing = this.getPerformanceTiming();\r\n        if (timing) {\r\n            var total = DateTimeUtils.GetDuration(timing.navigationStart, timing.loadEventEnd);\r\n            var network = DateTimeUtils.GetDuration(timing.navigationStart, timing.connectEnd);\r\n            var request = DateTimeUtils.GetDuration(timing.requestStart, timing.responseStart);\r\n            var response = DateTimeUtils.GetDuration(timing.responseStart, timing.responseEnd);\r\n            var dom = DateTimeUtils.GetDuration(timing.responseEnd, timing.loadEventEnd);\r\n            if (total == 0) {\r\n                this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.ErrorPVCalc, \"error calculating page view performance.\", { total: total, network: network, request: request, response: response, dom: dom });\r\n            }\r\n            else if (!this.shouldCollectDuration(total, network, request, response, dom)) {\r\n                this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.InvalidDurationValue, \"Invalid page load duration value. Browser perf data won't be sent.\", { total: total, network: network, request: request, response: response, dom: dom });\r\n            }\r\n            else if (total < Math.floor(network) + Math.floor(request) + Math.floor(response) + Math.floor(dom)) {\r\n                // some browsers may report individual components incorrectly so that the sum of the parts will be bigger than total PLT\r\n                // in this case, don't report client performance from this page\r\n                this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.ClientPerformanceMathError, \"client performance math error.\", { total: total, network: network, request: request, response: response, dom: dom });\r\n            }\r\n            else {\r\n                pageViewPerformance.durationMs = total;\r\n                // // convert to timespans\r\n                pageViewPerformance.perfTotal = pageViewPerformance.duration = Util.msToTimeSpan(total);\r\n                pageViewPerformance.networkConnect = Util.msToTimeSpan(network);\r\n                pageViewPerformance.sentRequest = Util.msToTimeSpan(request);\r\n                pageViewPerformance.receivedResponse = Util.msToTimeSpan(response);\r\n                pageViewPerformance.domProcessing = Util.msToTimeSpan(dom);\r\n                pageViewPerformance.isValid = true;\r\n            }\r\n        }\r\n    };\r\n    PageViewPerformanceManager.prototype.getPerformanceTiming = function () {\r\n        if (this.isPerformanceTimingSupported()) {\r\n            return window.performance.timing;\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n    * Returns true is window performance timing API is supported, false otherwise.\r\n    */\r\n    PageViewPerformanceManager.prototype.isPerformanceTimingSupported = function () {\r\n        return typeof window != \"undefined\" && window.performance && window.performance.timing;\r\n    };\r\n    /**\r\n    * As page loads different parts of performance timing numbers get set. When all of them are set we can report it.\r\n    * Returns true if ready, false otherwise.\r\n    */\r\n    PageViewPerformanceManager.prototype.isPerformanceTimingDataReady = function () {\r\n        var timing = window.performance.timing;\r\n        return timing.domainLookupStart > 0\r\n            && timing.navigationStart > 0\r\n            && timing.responseStart > 0\r\n            && timing.requestStart > 0\r\n            && timing.loadEventEnd > 0\r\n            && timing.responseEnd > 0\r\n            && timing.connectEnd > 0\r\n            && timing.domLoading > 0;\r\n    };\r\n    /**\r\n    * This method tells if given durations should be excluded from collection.\r\n    */\r\n    PageViewPerformanceManager.prototype.shouldCollectDuration = function () {\r\n        var durations = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            durations[_i] = arguments[_i];\r\n        }\r\n        // a full list of Google crawlers user agent strings - https://support.google.com/webmasters/answer/1061943?hl=en\r\n        var botAgentNames = ['googlebot', 'adsbot-google', 'apis-google', 'mediapartners-google'];\r\n        var userAgent = navigator.userAgent;\r\n        var isGoogleBot = false;\r\n        if (userAgent) {\r\n            for (var i_1 = 0; i_1 < botAgentNames.length; i_1++) {\r\n                isGoogleBot = isGoogleBot || userAgent.toLowerCase().indexOf(botAgentNames[i_1]) !== -1;\r\n            }\r\n        }\r\n        if (isGoogleBot) {\r\n            // Don't report durations for GoogleBot, it is returning invalid values in performance.timing API.\r\n            return false;\r\n        }\r\n        else {\r\n            // for other page views, don't report if it's outside of a reasonable range\r\n            for (var i = 0; i < durations.length; i++) {\r\n                if (durations[i] >= this.MAX_DURATION_ALLOWED) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    return PageViewPerformanceManager;\r\n}());\r\nexport { PageViewPerformanceManager };\r\n//# sourceMappingURL=PageViewPerformanceManager.js.map","/**\r\n * ApplicationInsights.ts\r\n * @copyright Microsoft 2018\r\n */\r\nimport { Util, PageViewPerformance, PageView, RemoteDependencyData, Event, TelemetryItemCreator, Metric, Exception, SeverityLevel, Trace, ConfigurationManager, DateTimeUtils } from \"@microsoft/applicationinsights-common\";\r\nimport { CoreUtils, LoggingSeverity, _InternalMessageId, } from \"@microsoft/applicationinsights-core-js\";\r\nimport { PageViewManager } from \"./Telemetry/PageViewManager\";\r\nimport { PageViewPerformanceManager } from './Telemetry/PageViewPerformanceManager';\r\n\"use strict\";\r\nvar durationProperty = \"duration\";\r\nvar ApplicationInsights = /** @class */ (function () {\r\n    function ApplicationInsights() {\r\n        this.identifier = \"ApplicationInsightsAnalytics\"; // do not change name or priority\r\n        this.priority = 160; // take from reserved priority range 100- 200\r\n        this._isInitialized = false;\r\n        // Counts number of trackAjax invokations.\r\n        // By default we only monitor X ajax call per view to avoid too much load.\r\n        // Default value is set in config.\r\n        // This counter keeps increasing even after the limit is reached.\r\n        this._trackAjaxAttempts = 0;\r\n        this.initialize = this._initialize.bind(this);\r\n    }\r\n    ApplicationInsights.getDefaultConfig = function (config) {\r\n        if (!config) {\r\n            config = {};\r\n        }\r\n        // set default values\r\n        config.sessionRenewalMs = 30 * 60 * 1000;\r\n        config.sessionExpirationMs = 24 * 60 * 60 * 1000;\r\n        config.disableExceptionTracking = Util.stringToBoolOrDefault(config.disableExceptionTracking);\r\n        config.autoTrackPageVisitTime = Util.stringToBoolOrDefault(config.autoTrackPageVisitTime);\r\n        if (isNaN(config.samplingPercentage) || config.samplingPercentage <= 0 || config.samplingPercentage >= 100) {\r\n            config.samplingPercentage = 100;\r\n        }\r\n        config.isCookieUseDisabled = Util.stringToBoolOrDefault(config.isCookieUseDisabled);\r\n        config.isStorageUseDisabled = Util.stringToBoolOrDefault(config.isStorageUseDisabled);\r\n        config.isBrowserLinkTrackingEnabled = Util.stringToBoolOrDefault(config.isBrowserLinkTrackingEnabled);\r\n        return config;\r\n    };\r\n    ApplicationInsights.prototype.processTelemetry = function (env) {\r\n        var doNotSendItem = false;\r\n        var telemetryInitializersCount = this._telemetryInitializers.length;\r\n        for (var i = 0; i < telemetryInitializersCount; ++i) {\r\n            var telemetryInitializer = this._telemetryInitializers[i];\r\n            if (telemetryInitializer) {\r\n                try {\r\n                    if (telemetryInitializer.apply(null, [env]) === false) {\r\n                        doNotSendItem = true;\r\n                        break;\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // log error but dont stop executing rest of the telemetry initializers\r\n                    // doNotSendItem = true;\r\n                    this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TelemetryInitializerFailed, \"One of telemetry initializers failed, telemetry item will not be sent: \" + Util.getExceptionName(e), { exception: Util.dump(e) }, true);\r\n                }\r\n            }\r\n        }\r\n        if (!doNotSendItem && !CoreUtils.isNullOrUndefined(this._nextPlugin)) {\r\n            this._nextPlugin.processTelemetry(env);\r\n        }\r\n    };\r\n    ApplicationInsights.prototype.setNextPlugin = function (next) {\r\n        this._nextPlugin = next;\r\n    };\r\n    ApplicationInsights.prototype.trackEvent = function (event, customProperties) {\r\n        try {\r\n            var telemetryItem = TelemetryItemCreator.create(event, Event.dataType, Event.envelopeType, this._logger, customProperties);\r\n            this._setTelemetryNameAndIKey(telemetryItem);\r\n            this.core.track(telemetryItem);\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.TrackTraceFailed, \"trackTrace failed, trace will not be collected: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n    };\r\n    /**\r\n      * Start timing an extended event. Call `stopTrackEvent` to log the event when it ends.\r\n      * @param   name    A string that identifies this event uniquely within the document.\r\n    */\r\n    ApplicationInsights.prototype.startTrackEvent = function (name) {\r\n        try {\r\n            this._eventTracking.start(name);\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.StartTrackEventFailed, \"startTrackEvent failed, event will not be collected: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n    };\r\n    /**\r\n     * Log an extended event that you started timing with `startTrackEvent`.\r\n     * @param   name    The string you used to identify this event in `startTrackEvent`.\r\n     * @param   properties  map[string, string] - additional data used to filter events and metrics in the portal. Defaults to empty.\r\n     * @param   measurements    map[string, number] - metrics associated with this event, displayed in Metrics Explorer on the portal. Defaults to empty.\r\n     */\r\n    ApplicationInsights.prototype.stopTrackEvent = function (name, properties, measurements) {\r\n        try {\r\n            this._eventTracking.stop(name, undefined, properties); // Todo: Fix to pass measurements once type is updated\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.StopTrackEventFailed, \"stopTrackEvent failed, event will not be collected: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n    };\r\n    /**\r\n     * @description Log a diagnostic message\r\n     * @param {ITraceTelemetry} trace\r\n     * @param ICustomProperties.\r\n     * @memberof ApplicationInsights\r\n     */\r\n    ApplicationInsights.prototype.trackTrace = function (trace, customProperties) {\r\n        try {\r\n            var telemetryItem = TelemetryItemCreator.create(trace, Trace.dataType, Trace.envelopeType, this._logger, customProperties);\r\n            this._setTelemetryNameAndIKey(telemetryItem);\r\n            this.core.track(telemetryItem);\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.TrackTraceFailed, \"trackTrace failed, trace will not be collected: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n    };\r\n    /**\r\n     * @description Log a numeric value that is not associated with a specific event. Typically\r\n     * used to send regular reports of performance indicators. To send single measurement, just\r\n     * use the name and average fields of {@link IMetricTelemetry}. If you take measurements\r\n     * frequently, you can reduce the telemetry bandwidth by aggregating multiple measurements\r\n     * and sending the resulting average at intervals\r\n     * @param {IMetricTelemetry} metric input object argument. Only name and average are mandatory.\r\n     * @param {{[key: string]: any}} customProperties additional data used to filter metrics in the\r\n     * portal. Defaults to empty.\r\n     * @memberof ApplicationInsights\r\n     */\r\n    ApplicationInsights.prototype.trackMetric = function (metric, customProperties) {\r\n        try {\r\n            var telemetryItem = TelemetryItemCreator.create(metric, Metric.dataType, Metric.envelopeType, this._logger, customProperties);\r\n            this._setTelemetryNameAndIKey(telemetryItem);\r\n            this.core.track(telemetryItem);\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TrackMetricFailed, \"trackMetric failed, metric will not be collected: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n    };\r\n    /**\r\n     * Logs that a page or other item was viewed.\r\n     * @param IPageViewTelemetry The string you used as the name in startTrackPage. Defaults to the document title.\r\n     * @param customProperties Additional data used to filter events and metrics. Defaults to empty.\r\n     * If a user wants to provide duration for pageLoad, it'll have to be in pageView.properties.duration\r\n     */\r\n    ApplicationInsights.prototype.trackPageView = function (pageView, customProperties) {\r\n        try {\r\n            this._pageViewManager.trackPageView(pageView, customProperties);\r\n            if (this.config.autoTrackPageVisitTime) {\r\n                this._pageVisitTimeManager.trackPreviousPageVisit(pageView.name, pageView.uri);\r\n            }\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TrackPVFailed, \"trackPageView failed, page view will not be collected: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n    };\r\n    /**\r\n     * Create a page view telemetry item and send it to the SDK pipeline through the core.track API\r\n     * @param pageView Page view item to be sent\r\n     * @param properties Custom properties (Part C) that a user can add to the telemetry item\r\n     * @param systemProperties System level properties (Part A) that a user can add to the telemetry item\r\n     */\r\n    ApplicationInsights.prototype.sendPageViewInternal = function (pageView, properties, systemProperties) {\r\n        if (typeof document !== \"undefined\") {\r\n            pageView.refUri = pageView.refUri || document.referrer;\r\n        }\r\n        var telemetryItem = TelemetryItemCreator.create(pageView, PageView.dataType, PageView.envelopeType, this._logger, properties, systemProperties);\r\n        // set instrumentation key\r\n        this._setTelemetryNameAndIKey(telemetryItem);\r\n        this.core.track(telemetryItem);\r\n        // reset ajaxes counter\r\n        this._trackAjaxAttempts = 0;\r\n    };\r\n    /**\r\n     * @ignore INTERNAL ONLY\r\n     * @param pageViewPerformance\r\n     * @param properties\r\n     */\r\n    ApplicationInsights.prototype.sendPageViewPerformanceInternal = function (pageViewPerformance, properties, systemProperties) {\r\n        var telemetryItem = TelemetryItemCreator.create(pageViewPerformance, PageViewPerformance.dataType, PageViewPerformance.envelopeType, this._logger, properties, systemProperties);\r\n        // set instrumentation key\r\n        this._setTelemetryNameAndIKey(telemetryItem);\r\n        this.core.track(telemetryItem);\r\n    };\r\n    /**\r\n     * Send browser performance metrics.\r\n     * @param pageViewPerformance\r\n     * @param customProperties\r\n     */\r\n    ApplicationInsights.prototype.trackPageViewPerformance = function (pageViewPerformance, customProperties) {\r\n        try {\r\n            this._pageViewPerformanceManager.populatePageViewPerformanceEvent(pageViewPerformance);\r\n            this.sendPageViewPerformanceInternal(pageViewPerformance, customProperties);\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TrackPVFailed, \"trackPageViewPerformance failed, page view will not be collected: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n    };\r\n    /**\r\n     * Starts the timer for tracking a page load time. Use this instead of `trackPageView` if you want to control when the page view timer starts and stops,\r\n     * but don't want to calculate the duration yourself. This method doesn't send any telemetry. Call `stopTrackPage` to log the end of the page view\r\n     * and send the event.\r\n     * @param name A string that idenfities this item, unique within this HTML document. Defaults to the document title.\r\n     */\r\n    ApplicationInsights.prototype.startTrackPage = function (name) {\r\n        try {\r\n            if (typeof name !== \"string\") {\r\n                name = window.document && window.document.title || \"\";\r\n            }\r\n            this._pageTracking.start(name);\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.StartTrackFailed, \"startTrackPage failed, page view may not be collected: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n    };\r\n    /**\r\n     * Stops the timer that was started by calling `startTrackPage` and sends the pageview load time telemetry with the specified properties and measurements.\r\n     * The duration of the page view will be the time between calling `startTrackPage` and `stopTrackPage`.\r\n     * @param   name  The string you used as the name in startTrackPage. Defaults to the document title.\r\n     * @param   url   String - a relative or absolute URL that identifies the page or other item. Defaults to the window location.\r\n     * @param   properties  map[string, string] - additional data used to filter pages and metrics in the portal. Defaults to empty.\r\n     * @param   measurements    map[string, number] - metrics associated with this page, displayed in Metrics Explorer on the portal. Defaults to empty.\r\n     */\r\n    ApplicationInsights.prototype.stopTrackPage = function (name, url, properties, measurement) {\r\n        try {\r\n            if (typeof name !== \"string\") {\r\n                name = window.document && window.document.title || \"\";\r\n            }\r\n            if (typeof url !== \"string\") {\r\n                url = window.location && window.location.href || \"\";\r\n            }\r\n            this._pageTracking.stop(name, url, properties, measurement);\r\n            if (this.config.autoTrackPageVisitTime) {\r\n                this._pageVisitTimeManager.trackPreviousPageVisit(name, url);\r\n            }\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.StopTrackFailed, \"stopTrackPage failed, page view will not be collected: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n    };\r\n    /**\r\n    * @ignore INTERNAL ONLY\r\n    * @param exception\r\n    * @param properties\r\n    * @param systemProperties\r\n    */\r\n    ApplicationInsights.prototype.sendExceptionInternal = function (exception, customProperties, systemProperties) {\r\n        var baseData = new Exception(this._logger, exception.error, exception.properties, exception.measurements, exception.severityLevel);\r\n        var telemetryItem = TelemetryItemCreator.create(baseData, Exception.dataType, Exception.envelopeType, this._logger, customProperties, systemProperties);\r\n        this._setTelemetryNameAndIKey(telemetryItem);\r\n        this.core.track(telemetryItem);\r\n    };\r\n    /**\r\n     * Log an exception you have caught.\r\n     *\r\n     * @param {IExceptionTelemetry} exception   Object which contains exception to be sent\r\n     * @param {{[key: string]: any}} customProperties   Additional data used to filter pages and metrics in the portal. Defaults to empty.\r\n     *\r\n     * Any property of type double will be considered a measurement, and will be treated by Application Insights as a metric.\r\n     * @memberof ApplicationInsights\r\n     */\r\n    ApplicationInsights.prototype.trackException = function (exception, customProperties) {\r\n        try {\r\n            this.sendExceptionInternal(exception, customProperties);\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TrackExceptionFailed, \"trackException failed, exception will not be collected: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n    };\r\n    /**\r\n     * @description Custom error handler for Application Insights Analytics\r\n     * @param {IAutoExceptionTelemetry} exception\r\n     * @memberof ApplicationInsights\r\n     */\r\n    ApplicationInsights.prototype._onerror = function (exception) {\r\n        try {\r\n            var properties = {\r\n                url: (exception && exception.url) || document.URL,\r\n                lineNumber: exception.lineNumber,\r\n                columnNumber: exception.columnNumber,\r\n                message: exception.message\r\n            };\r\n            if (Util.isCrossOriginError(exception.message, exception.url, exception.lineNumber, exception.columnNumber, exception.error)) {\r\n                this._sendCORSException(properties.url);\r\n            }\r\n            else {\r\n                if (!Util.isError(exception.error)) {\r\n                    var stack = \"window.onerror@\" + properties.url + \":\" + exception.lineNumber + \":\" + (exception.columnNumber || 0);\r\n                    exception.error = new Error(exception.message);\r\n                    exception.error.stack = stack;\r\n                }\r\n                this.trackException({ error: exception.error, severityLevel: SeverityLevel.Error }, properties);\r\n            }\r\n        }\r\n        catch (e) {\r\n            var errorString = exception.error ?\r\n                (exception.error.name + \", \" + exception.error.message)\r\n                : \"null\";\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.ExceptionWhileLoggingError, \"_onError threw exception while logging error, error will not be collected: \"\r\n                + Util.getExceptionName(e), { exception: Util.dump(e), errorString: errorString });\r\n        }\r\n    };\r\n    ApplicationInsights.prototype.addTelemetryInitializer = function (telemetryInitializer) {\r\n        this._telemetryInitializers.push(telemetryInitializer);\r\n    };\r\n    ApplicationInsights.prototype._initialize = function (config, core, extensions) {\r\n        var _this = this;\r\n        if (this._isInitialized) {\r\n            return;\r\n        }\r\n        if (CoreUtils.isNullOrUndefined(core)) {\r\n            throw Error(\"Error initializing\");\r\n        }\r\n        this.core = core;\r\n        this._logger = core.logger;\r\n        this._globalconfig = {\r\n            instrumentationKey: config.instrumentationKey,\r\n            endpointUrl: config.endpointUrl || \"https://dc.services.visualstudio.com/v2/track\"\r\n        };\r\n        this.config = config.extensionConfig && config.extensionConfig[this.identifier] ? config.extensionConfig[this.identifier] : {};\r\n        // load default values if specified\r\n        var defaults = ApplicationInsights.getDefaultConfig();\r\n        if (defaults !== undefined) {\r\n            for (var field in defaults) {\r\n                // for each unspecified field, set the default value\r\n                this.config[field] = ConfigurationManager.getConfig(config, field, this.identifier, defaults[field]);\r\n            }\r\n            if (this._globalconfig) {\r\n                for (var field in defaults) {\r\n                    if (this._globalconfig[field] === undefined) {\r\n                        this._globalconfig[field] = defaults[field];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // Todo: move this out of static state\r\n        if (this.config.isCookieUseDisabled) {\r\n            Util.disableCookies();\r\n        }\r\n        // Todo: move this out of static state\r\n        if (this.config.isStorageUseDisabled) {\r\n            Util.disableStorage();\r\n        }\r\n        var configGetters = {\r\n            instrumentationKey: function () { return config.instrumentationKey; },\r\n            accountId: function () { return _this.config.accountId || config.accountId; },\r\n            sessionRenewalMs: function () { return _this.config.sessionRenewalMs || config.sessionRenewalMs; },\r\n            sessionExpirationMs: function () { return _this.config.sessionExpirationMs || config.sessionExpirationMs; },\r\n            sampleRate: function () { return _this.config.samplingPercentage || config.samplingPercentage; },\r\n            cookieDomain: function () { return _this.config.cookieDomain || config.cookieDomain; },\r\n            sdkExtension: function () { return _this.config.sdkExtension || config.sdkExtension; },\r\n            isBrowserLinkTrackingEnabled: function () { return _this.config.isBrowserLinkTrackingEnabled || config.isBrowserLinkTrackingEnabled; },\r\n            appId: function () { return _this.config.appId || config.appId; }\r\n        };\r\n        this._pageViewPerformanceManager = new PageViewPerformanceManager(this.core);\r\n        this._pageViewManager = new PageViewManager(this, this.config.overridePageViewDuration, this.core, this._pageViewPerformanceManager);\r\n        this._telemetryInitializers = [];\r\n        this._addDefaultTelemetryInitializers(configGetters);\r\n        this._eventTracking = new Timing(this._logger, \"trackEvent\");\r\n        this._eventTracking.action =\r\n            function (name, url, duration, properties) {\r\n                if (!properties) {\r\n                    properties = {};\r\n                }\r\n                properties[durationProperty] = duration.toString();\r\n                _this.trackEvent({ name: name, properties: properties });\r\n            };\r\n        // initialize page view timing\r\n        this._pageTracking = new Timing(this._logger, \"trackPageView\");\r\n        this._pageTracking.action = function (name, url, duration, properties, measurements) {\r\n            // duration must be a custom property in order for the collector to extract it\r\n            if (CoreUtils.isNullOrUndefined(properties)) {\r\n                properties = {};\r\n            }\r\n            properties[durationProperty] = duration.toString();\r\n            var pageViewItem = {\r\n                name: name,\r\n                uri: url,\r\n                properties: properties,\r\n                measurements: measurements\r\n            };\r\n            _this.sendPageViewInternal(pageViewItem);\r\n        };\r\n        if (this.config.disableExceptionTracking === false &&\r\n            !this.config.autoExceptionInstrumented) {\r\n            // We want to enable exception auto collection and it has not been done so yet\r\n            var onerror_1 = \"onerror\";\r\n            var originalOnError_1 = window[onerror_1];\r\n            var instance_1 = this;\r\n            window.onerror = function (message, url, lineNumber, columnNumber, error) {\r\n                var handled = originalOnError_1 && originalOnError_1(message, url, lineNumber, columnNumber, error);\r\n                if (handled !== true) {\r\n                    instance_1._onerror({\r\n                        message: message,\r\n                        url: url,\r\n                        lineNumber: lineNumber,\r\n                        columnNumber: columnNumber,\r\n                        error: error\r\n                    });\r\n                }\r\n                return handled;\r\n            };\r\n            this.config.autoExceptionInstrumented = true;\r\n        }\r\n        this._isInitialized = true;\r\n    };\r\n    ApplicationInsights.prototype._addDefaultTelemetryInitializers = function (configGetters) {\r\n        if (!configGetters.isBrowserLinkTrackingEnabled()) {\r\n            var browserLinkPaths_1 = ['/browserLinkSignalR/', '/__browserLink/'];\r\n            var dropBrowserLinkRequests = function (envelope) {\r\n                if (envelope.baseType === RemoteDependencyData.dataType) {\r\n                    var remoteData = envelope.baseData;\r\n                    if (remoteData) {\r\n                        for (var i = 0; i < browserLinkPaths_1.length; i++) {\r\n                            if (remoteData.target && remoteData.target.indexOf(browserLinkPaths_1[i]) >= 0) {\r\n                                return false;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                return true;\r\n            };\r\n            this._addTelemetryInitializer(dropBrowserLinkRequests);\r\n        }\r\n    };\r\n    ApplicationInsights.prototype._addTelemetryInitializer = function (telemetryInitializer) {\r\n        this._telemetryInitializers.push(telemetryInitializer);\r\n    };\r\n    ApplicationInsights.prototype._sendCORSException = function (url) {\r\n        var exception = {\r\n            message: \"Script error: The browser's same-origin policy prevents us from getting the details of this exception. Consider using the 'crossorigin' attribute.\",\r\n            url: url,\r\n            lineNumber: 0,\r\n            columnNumber: 0,\r\n            error: undefined\r\n        };\r\n        var telemetryItem = TelemetryItemCreator.create(exception, Exception.dataType, Exception.envelopeType, this._logger, { url: url });\r\n        this.core.track(telemetryItem);\r\n    };\r\n    // Mutate telemetryItem inplace to add boilerplate iKey & name info\r\n    ApplicationInsights.prototype._setTelemetryNameAndIKey = function (telemetryItem) {\r\n        telemetryItem.iKey = this._globalconfig.instrumentationKey;\r\n        var iKeyNoDashes = this._globalconfig.instrumentationKey.replace(/-/g, \"\");\r\n        telemetryItem.name = telemetryItem.name.replace(\"{0}\", iKeyNoDashes);\r\n    };\r\n    ApplicationInsights.Version = \"2.0.0-beta.3\";\r\n    return ApplicationInsights;\r\n}());\r\nexport { ApplicationInsights };\r\n/**\r\n * Used to record timed events and page views.\r\n */\r\nvar Timing = /** @class */ (function () {\r\n    function Timing(logger, name) {\r\n        this._name = name;\r\n        this._events = {};\r\n        this._logger = logger;\r\n    }\r\n    Timing.prototype.start = function (name) {\r\n        if (typeof this._events[name] !== \"undefined\") {\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.StartCalledMoreThanOnce, \"start was called more than once for this event without calling stop.\", { name: this._name, key: name }, true);\r\n        }\r\n        this._events[name] = +new Date;\r\n    };\r\n    Timing.prototype.stop = function (name, url, properties, measurements) {\r\n        var start = this._events[name];\r\n        if (isNaN(start)) {\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.StopCalledWithoutStart, \"stop was called without a corresponding start.\", { name: this._name, key: name }, true);\r\n        }\r\n        else {\r\n            var end = +new Date;\r\n            var duration = DateTimeUtils.GetDuration(start, end);\r\n            this.action(name, url, duration, properties, measurements);\r\n        }\r\n        delete this._events[name];\r\n        this._events[name] = undefined;\r\n    };\r\n    return Timing;\r\n}());\r\n//# sourceMappingURL=ApplicationInsights.js.map","import { Util } from '@microsoft/applicationinsights-common';\r\nimport { LoggingSeverity, _InternalMessageId } from '@microsoft/applicationinsights-core-js';\r\n/*\r\n * An array based send buffer.\r\n */\r\nvar ArraySendBuffer = /** @class */ (function () {\r\n    function ArraySendBuffer(config) {\r\n        this._config = config;\r\n        this._buffer = [];\r\n    }\r\n    ArraySendBuffer.prototype.enqueue = function (payload) {\r\n        this._buffer.push(payload);\r\n    };\r\n    ArraySendBuffer.prototype.count = function () {\r\n        return this._buffer.length;\r\n    };\r\n    ArraySendBuffer.prototype.clear = function () {\r\n        this._buffer.length = 0;\r\n    };\r\n    ArraySendBuffer.prototype.getItems = function () {\r\n        return this._buffer.slice(0);\r\n    };\r\n    ArraySendBuffer.prototype.batchPayloads = function (payload) {\r\n        if (payload && payload.length > 0) {\r\n            var batch = this._config.emitLineDelimitedJson() ?\r\n                payload.join(\"\\n\") :\r\n                \"[\" + payload.join(\",\") + \"]\";\r\n            return batch;\r\n        }\r\n        return null;\r\n    };\r\n    ArraySendBuffer.prototype.markAsSent = function (payload) {\r\n        this.clear();\r\n    };\r\n    ArraySendBuffer.prototype.clearSent = function (payload) {\r\n        // not supported\r\n    };\r\n    return ArraySendBuffer;\r\n}());\r\nexport { ArraySendBuffer };\r\n/*\r\n * Session storege buffer holds a copy of all unsent items in the browser session storage.\r\n */\r\nvar SessionStorageSendBuffer = /** @class */ (function () {\r\n    function SessionStorageSendBuffer(logger, config) {\r\n        this._bufferFullMessageSent = false;\r\n        this._logger = logger;\r\n        this._config = config;\r\n        var bufferItems = this.getBuffer(SessionStorageSendBuffer.BUFFER_KEY);\r\n        var notDeliveredItems = this.getBuffer(SessionStorageSendBuffer.SENT_BUFFER_KEY);\r\n        this._buffer = bufferItems.concat(notDeliveredItems);\r\n        // If the buffer has too many items, drop items from the end.\r\n        if (this._buffer.length > SessionStorageSendBuffer.MAX_BUFFER_SIZE) {\r\n            this._buffer.length = SessionStorageSendBuffer.MAX_BUFFER_SIZE;\r\n        }\r\n        // update DataLossAnalyzer with the number of recovered items\r\n        // Uncomment if you want to use DataLossanalyzer\r\n        // DataLossAnalyzer.itemsRestoredFromSessionBuffer = this._buffer.length;\r\n        this.setBuffer(SessionStorageSendBuffer.SENT_BUFFER_KEY, []);\r\n        this.setBuffer(SessionStorageSendBuffer.BUFFER_KEY, this._buffer);\r\n    }\r\n    SessionStorageSendBuffer.prototype.enqueue = function (payload) {\r\n        if (this._buffer.length >= SessionStorageSendBuffer.MAX_BUFFER_SIZE) {\r\n            // sent internal log only once per page view\r\n            if (!this._bufferFullMessageSent) {\r\n                this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.SessionStorageBufferFull, \"Maximum buffer size reached: \" + this._buffer.length, true);\r\n                this._bufferFullMessageSent = true;\r\n            }\r\n            return;\r\n        }\r\n        this._buffer.push(payload);\r\n        this.setBuffer(SessionStorageSendBuffer.BUFFER_KEY, this._buffer);\r\n    };\r\n    SessionStorageSendBuffer.prototype.count = function () {\r\n        return this._buffer.length;\r\n    };\r\n    SessionStorageSendBuffer.prototype.clear = function () {\r\n        this._buffer.length = 0;\r\n        this.setBuffer(SessionStorageSendBuffer.BUFFER_KEY, []);\r\n        this.setBuffer(SessionStorageSendBuffer.SENT_BUFFER_KEY, []);\r\n        this._bufferFullMessageSent = false;\r\n    };\r\n    SessionStorageSendBuffer.prototype.getItems = function () {\r\n        return this._buffer.slice(0);\r\n    };\r\n    SessionStorageSendBuffer.prototype.batchPayloads = function (payload) {\r\n        if (payload && payload.length > 0) {\r\n            var batch = this._config.emitLineDelimitedJson() ?\r\n                payload.join(\"\\n\") :\r\n                \"[\" + payload.join(\",\") + \"]\";\r\n            return batch;\r\n        }\r\n        return null;\r\n    };\r\n    SessionStorageSendBuffer.prototype.markAsSent = function (payload) {\r\n        this._buffer = this.removePayloadsFromBuffer(payload, this._buffer);\r\n        this.setBuffer(SessionStorageSendBuffer.BUFFER_KEY, this._buffer);\r\n        var sentElements = this.getBuffer(SessionStorageSendBuffer.SENT_BUFFER_KEY);\r\n        if (sentElements instanceof Array && payload instanceof Array) {\r\n            sentElements = sentElements.concat(payload);\r\n            if (sentElements.length > SessionStorageSendBuffer.MAX_BUFFER_SIZE) {\r\n                // We send telemetry normally. If the SENT_BUFFER is too big we don't add new elements\r\n                // until we receive a response from the backend and the buffer has free space again (see clearSent method)\r\n                this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.SessionStorageBufferFull, \"Sent buffer reached its maximum size: \" + sentElements.length, true);\r\n                sentElements.length = SessionStorageSendBuffer.MAX_BUFFER_SIZE;\r\n            }\r\n            this.setBuffer(SessionStorageSendBuffer.SENT_BUFFER_KEY, sentElements);\r\n        }\r\n    };\r\n    SessionStorageSendBuffer.prototype.clearSent = function (payload) {\r\n        var sentElements = this.getBuffer(SessionStorageSendBuffer.SENT_BUFFER_KEY);\r\n        sentElements = this.removePayloadsFromBuffer(payload, sentElements);\r\n        this.setBuffer(SessionStorageSendBuffer.SENT_BUFFER_KEY, sentElements);\r\n    };\r\n    SessionStorageSendBuffer.prototype.removePayloadsFromBuffer = function (payloads, buffer) {\r\n        var remaining = [];\r\n        for (var i in buffer) {\r\n            var contains = false;\r\n            for (var j in payloads) {\r\n                if (payloads[j] === buffer[i]) {\r\n                    contains = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (!contains) {\r\n                remaining.push(buffer[i]);\r\n            }\r\n        }\r\n        ;\r\n        return remaining;\r\n    };\r\n    SessionStorageSendBuffer.prototype.getBuffer = function (key) {\r\n        try {\r\n            var bufferJson = Util.getSessionStorage(this._logger, key);\r\n            if (bufferJson) {\r\n                var buffer = JSON.parse(bufferJson);\r\n                if (buffer) {\r\n                    return buffer;\r\n                }\r\n            }\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.FailedToRestoreStorageBuffer, \" storage key: \" + key + \", \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n        return [];\r\n    };\r\n    SessionStorageSendBuffer.prototype.setBuffer = function (key, buffer) {\r\n        try {\r\n            var bufferJson = JSON.stringify(buffer);\r\n            Util.setSessionStorage(this._logger, key, bufferJson);\r\n        }\r\n        catch (e) {\r\n            // if there was an error, clear the buffer\r\n            // telemetry is stored in the _buffer array so we won't loose any items\r\n            Util.setSessionStorage(this._logger, key, JSON.stringify([]));\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.FailedToSetStorageBuffer, \" storage key: \" + key + \", \" + Util.getExceptionName(e) + \". Buffer cleared\", { exception: Util.dump(e) });\r\n        }\r\n    };\r\n    SessionStorageSendBuffer.BUFFER_KEY = \"AI_buffer\";\r\n    SessionStorageSendBuffer.SENT_BUFFER_KEY = \"AI_sentBuffer\";\r\n    // Maximum number of payloads stored in the buffer. If the buffer is full, new elements will be dropped. \r\n    SessionStorageSendBuffer.MAX_BUFFER_SIZE = 2000;\r\n    return SessionStorageSendBuffer;\r\n}());\r\nexport { SessionStorageSendBuffer };\r\n//# sourceMappingURL=SendBuffer.js.map","import * as tslib_1 from \"tslib\";\r\nimport { Data, Envelope, RemoteDependencyData, Event, Exception, Metric, PageView, Trace, PageViewPerformance, CtxTagKeys, HttpMethod } from '@microsoft/applicationinsights-common';\r\nimport { CoreUtils, LoggingSeverity, _InternalMessageId } from '@microsoft/applicationinsights-core-js';\r\n// these two constants are used to filter out properties not needed when trying to extract custom properties and measurements from the incoming payload\r\nvar baseType = \"baseType\";\r\nvar baseData = \"baseData\";\r\nvar EnvelopeCreator = /** @class */ (function () {\r\n    function EnvelopeCreator() {\r\n    }\r\n    EnvelopeCreator.extractProperties = function (data) {\r\n        var customProperties = null;\r\n        for (var key in data) {\r\n            if (data.hasOwnProperty(key)) {\r\n                var value = data[key];\r\n                if (typeof value !== \"number\") {\r\n                    if (!customProperties) {\r\n                        customProperties = {};\r\n                    }\r\n                    customProperties[key] = value;\r\n                }\r\n            }\r\n        }\r\n        return customProperties;\r\n    };\r\n    EnvelopeCreator.extractPropsAndMeasurements = function (data, properties, measurements) {\r\n        if (!CoreUtils.isNullOrUndefined(data)) {\r\n            for (var key in data) {\r\n                if (data.hasOwnProperty(key)) {\r\n                    var value = data[key];\r\n                    if (typeof value === \"number\") {\r\n                        measurements[key] = value;\r\n                    }\r\n                    else if (typeof value === \"string\") {\r\n                        properties[key] = value;\r\n                    }\r\n                    else {\r\n                        properties[key] = JSON.stringify(value);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    // TODO: Do we want this to take logger as arg or use this._logger as nonstatic?\r\n    EnvelopeCreator.createEnvelope = function (logger, envelopeType, telemetryItem, data) {\r\n        var envelope = new Envelope(logger, data, envelopeType);\r\n        envelope.iKey = telemetryItem.iKey;\r\n        var iKeyNoDashes = telemetryItem.iKey.replace(/-/g, \"\");\r\n        envelope.name = envelope.name.replace(\"{0}\", iKeyNoDashes);\r\n        // extract all extensions from ctx\r\n        EnvelopeCreator.extractPartAExtensions(telemetryItem, envelope);\r\n        // loop through the envelope tags (extension of Part A) and pick out the ones that should go in outgoing envelope tags\r\n        if (!telemetryItem.tags) {\r\n            telemetryItem.tags = [];\r\n        }\r\n        return envelope;\r\n    };\r\n    /*\r\n     * Maps Part A data from CS 4.0\r\n     */\r\n    EnvelopeCreator.extractPartAExtensions = function (item, env) {\r\n        // todo: switch to keys from common in this method\r\n        if (!env.tags) {\r\n            env.tags = [];\r\n        }\r\n        if (!item.ext) {\r\n            item.ext = {};\r\n        }\r\n        if (!item.tags) {\r\n            item.tags = [];\r\n        }\r\n        if (item.ext.user) {\r\n            if (item.ext.user.authId) {\r\n                env.tags[CtxTagKeys.userAuthUserId] = item.ext.user.authId;\r\n            }\r\n            var userId = item.ext.user.id || item.ext.user.localId;\r\n            if (userId) {\r\n                env.tags[CtxTagKeys.userId] = userId;\r\n            }\r\n        }\r\n        if (item.ext.app) {\r\n            if (item.ext.app.sesId) {\r\n                env.tags[CtxTagKeys.sessionId] = item.ext.app.sesId;\r\n            }\r\n        }\r\n        if (item.ext.device) {\r\n            if (item.ext.device.id || item.ext.device.localId) {\r\n                env.tags[CtxTagKeys.deviceId] = item.ext.device.id || item.ext.device.localId;\r\n            }\r\n            if (item.ext.device.ip) {\r\n                env.tags[CtxTagKeys.deviceIp] = item.ext.device.ip;\r\n            }\r\n        }\r\n        if (item.ext.web) {\r\n            var web = item.ext.web;\r\n            if (web.browserLang) {\r\n                env.tags[CtxTagKeys.deviceLanguage] = web.browserLang;\r\n            }\r\n            if (web.browserVer) {\r\n                env.tags[CtxTagKeys.deviceBrowserVersion] = web.browserVer;\r\n            }\r\n            if (web.browser) {\r\n                env.tags[CtxTagKeys.deviceBrowser] = web.browser;\r\n            }\r\n            env.data = env.data || {};\r\n            env.data.baseData = env.data.baseData || {};\r\n            env.data.baseData.properties = env.data.baseData.properties || {};\r\n            if (web.domain) {\r\n                env.data.baseData.properties['domain'] = web.domain;\r\n            }\r\n            if (web.isManual) {\r\n                env.data.baseData.properties['isManual'] = web.isManual.toString();\r\n            }\r\n            if (web.screenRes) {\r\n                env.data.baseData.properties['screenRes'] = web.screenRes;\r\n            }\r\n            if (web.userConsent) {\r\n                env.data.baseData.properties['userConsent'] = web.userConsent.toString();\r\n            }\r\n        }\r\n        if (item.ext.device) {\r\n            if (item.ext.device.model) {\r\n                env.tags[CtxTagKeys.deviceModel] = item.ext.device.model;\r\n            }\r\n        }\r\n        if (item.ext.os && item.ext.os.name) {\r\n            env.tags[CtxTagKeys.deviceOS] = item.ext.os.name;\r\n        }\r\n        if (item.ext.device) {\r\n            if (item.ext.device.deviceType) {\r\n                env.tags[CtxTagKeys.deviceType] = item.ext.device.deviceType;\r\n            }\r\n        }\r\n        // No support for mapping Trace.traceState to 2.0 as it is currently empty\r\n        if (item.ext.trace) {\r\n            if (item.ext.trace.parentID) {\r\n                env.tags[CtxTagKeys.operationParentId] = item.ext.trace.parentID;\r\n            }\r\n            if (item.ext.trace.name) {\r\n                env.tags[CtxTagKeys.operationName] = item.ext.trace.name;\r\n            }\r\n            if (item.ext.trace.traceID) {\r\n                env.tags[CtxTagKeys.operationId] = item.ext.trace.traceID;\r\n            }\r\n        }\r\n        // Sample 4.0 schema\r\n        //  {\r\n        //     \"time\" : \"2018-09-05T22:51:22.4936Z\",\r\n        //     \"name\" : \"MetricWithNamespace\",\r\n        //     \"iKey\" : \"ABC-5a4cbd20-e601-4ef5-a3c6-5d6577e4398e\",\r\n        //     \"ext\": {  \"cloud\": {\r\n        //          \"role\": \"WATSON3\",\r\n        //          \"roleInstance\": \"CO4AEAP00000260\"\r\n        //      }, \r\n        //      \"device\": {}, \"correlation\": {} },\r\n        //      \"tags\": [\r\n        //        { \"amazon.region\" : \"east2\" },\r\n        //        { \"os.expid\" : \"wp:02df239\" }\r\n        //     ]\r\n        //   }\r\n        var tgs = {};\r\n        item.tags.forEach(function (tg) {\r\n            tgs = tslib_1.__assign({}, tgs, tg);\r\n        });\r\n        env.tags = tslib_1.__assign({}, env.tags, tgs);\r\n    };\r\n    return EnvelopeCreator;\r\n}());\r\nexport { EnvelopeCreator };\r\nvar DependencyEnvelopeCreator = /** @class */ (function (_super) {\r\n    tslib_1.__extends(DependencyEnvelopeCreator, _super);\r\n    function DependencyEnvelopeCreator() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    DependencyEnvelopeCreator.prototype.Create = function (logger, telemetryItem) {\r\n        this._logger = logger;\r\n        if (CoreUtils.isNullOrUndefined(telemetryItem.baseData)) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TelemetryEnvelopeInvalid, \"telemetryItem.baseData cannot be null.\");\r\n        }\r\n        var customMeasurements = telemetryItem.baseData.measurements || {};\r\n        var customProperties = telemetryItem.baseData.properties || {};\r\n        EnvelopeCreator.extractPropsAndMeasurements(telemetryItem.data, customProperties, customMeasurements);\r\n        var bd = telemetryItem.baseData;\r\n        if (CoreUtils.isNullOrUndefined(bd)) {\r\n            logger.warnToConsole(\"Invalid input for dependency data\");\r\n            return null;\r\n        }\r\n        var id = bd.id;\r\n        var absoluteUrl = bd.target;\r\n        var command = bd.name;\r\n        var duration = bd.duration;\r\n        var success = bd.success;\r\n        var resultCode = bd.responseCode;\r\n        var requestAPI = bd.type;\r\n        var method = bd.properties && bd.properties[HttpMethod] ? bd.properties[HttpMethod] : \"GET\";\r\n        var baseData = new RemoteDependencyData(logger, id, absoluteUrl, command, duration, success, resultCode, method, requestAPI, customProperties, customMeasurements);\r\n        var data = new Data(RemoteDependencyData.dataType, baseData);\r\n        return EnvelopeCreator.createEnvelope(logger, RemoteDependencyData.envelopeType, telemetryItem, data);\r\n    };\r\n    DependencyEnvelopeCreator.DependencyEnvelopeCreator = new DependencyEnvelopeCreator();\r\n    return DependencyEnvelopeCreator;\r\n}(EnvelopeCreator));\r\nexport { DependencyEnvelopeCreator };\r\nvar EventEnvelopeCreator = /** @class */ (function (_super) {\r\n    tslib_1.__extends(EventEnvelopeCreator, _super);\r\n    function EventEnvelopeCreator() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    EventEnvelopeCreator.prototype.Create = function (logger, telemetryItem) {\r\n        this._logger = logger;\r\n        if (CoreUtils.isNullOrUndefined(telemetryItem.baseData)) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TelemetryEnvelopeInvalid, \"telemetryItem.baseData cannot be null.\");\r\n        }\r\n        var customProperties = {};\r\n        var customMeasurements = {};\r\n        if (telemetryItem.baseType !== Event.dataType) {\r\n            customProperties['baseTypeSource'] = telemetryItem.baseType; // save the passed in base type as a property\r\n        }\r\n        if (telemetryItem.baseType === Event.dataType) {\r\n            customProperties = telemetryItem.baseData.properties || {};\r\n            customMeasurements = telemetryItem.baseData.measurements || {};\r\n        }\r\n        else {\r\n            if (telemetryItem.baseData) {\r\n                EnvelopeCreator.extractPropsAndMeasurements(telemetryItem.baseData, customProperties, customMeasurements);\r\n            }\r\n        }\r\n        // Exract root level properties from part C telemetryItem.data\r\n        EnvelopeCreator.extractPropsAndMeasurements(telemetryItem.data, customProperties, customMeasurements);\r\n        var eventName = telemetryItem.baseData.name;\r\n        var baseData = new Event(logger, eventName, customProperties, customMeasurements);\r\n        var data = new Data(Event.dataType, baseData);\r\n        return EnvelopeCreator.createEnvelope(logger, Event.envelopeType, telemetryItem, data);\r\n    };\r\n    EventEnvelopeCreator.EventEnvelopeCreator = new EventEnvelopeCreator();\r\n    return EventEnvelopeCreator;\r\n}(EnvelopeCreator));\r\nexport { EventEnvelopeCreator };\r\nvar ExceptionEnvelopeCreator = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ExceptionEnvelopeCreator, _super);\r\n    function ExceptionEnvelopeCreator() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ExceptionEnvelopeCreator.prototype.Create = function (logger, telemetryItem) {\r\n        this._logger = logger;\r\n        if (CoreUtils.isNullOrUndefined(telemetryItem.baseData)) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TelemetryEnvelopeInvalid, \"telemetryItem.baseData cannot be null.\");\r\n        }\r\n        var baseData = telemetryItem.baseData;\r\n        var data = new Data(Exception.dataType, baseData);\r\n        return EnvelopeCreator.createEnvelope(logger, Exception.envelopeType, telemetryItem, data);\r\n    };\r\n    ExceptionEnvelopeCreator.ExceptionEnvelopeCreator = new ExceptionEnvelopeCreator();\r\n    return ExceptionEnvelopeCreator;\r\n}(EnvelopeCreator));\r\nexport { ExceptionEnvelopeCreator };\r\nvar MetricEnvelopeCreator = /** @class */ (function (_super) {\r\n    tslib_1.__extends(MetricEnvelopeCreator, _super);\r\n    function MetricEnvelopeCreator() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    MetricEnvelopeCreator.prototype.Create = function (logger, telemetryItem) {\r\n        this._logger = logger;\r\n        if (CoreUtils.isNullOrUndefined(telemetryItem.baseData)) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TelemetryEnvelopeInvalid, \"telemetryItem.baseData cannot be null.\");\r\n        }\r\n        var props = telemetryItem.baseData.properties || {};\r\n        var customProperties = EnvelopeCreator.extractProperties(telemetryItem.data);\r\n        customProperties = tslib_1.__assign({}, props, customProperties);\r\n        var name = telemetryItem.baseData.name;\r\n        var average = telemetryItem.baseData.average;\r\n        var sampleCount = telemetryItem.baseData.sampleCount;\r\n        var min = telemetryItem.baseData.min;\r\n        var max = telemetryItem.baseData.max;\r\n        var baseData = new Metric(logger, name, average, sampleCount, min, max, customProperties);\r\n        var data = new Data(Metric.dataType, baseData);\r\n        return EnvelopeCreator.createEnvelope(logger, Metric.envelopeType, telemetryItem, data);\r\n    };\r\n    MetricEnvelopeCreator.MetricEnvelopeCreator = new MetricEnvelopeCreator();\r\n    return MetricEnvelopeCreator;\r\n}(EnvelopeCreator));\r\nexport { MetricEnvelopeCreator };\r\nvar PageViewEnvelopeCreator = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PageViewEnvelopeCreator, _super);\r\n    function PageViewEnvelopeCreator() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    PageViewEnvelopeCreator.prototype.Create = function (logger, telemetryItem) {\r\n        this._logger = logger;\r\n        if (CoreUtils.isNullOrUndefined(telemetryItem.baseData)) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TelemetryEnvelopeInvalid, \"telemetryItem.baseData cannot be null.\");\r\n        }\r\n        // Since duration is not part of the domain properties in Common Schema, extract it from part C\r\n        var duration = undefined;\r\n        if (!CoreUtils.isNullOrUndefined(telemetryItem.baseData) &&\r\n            !CoreUtils.isNullOrUndefined(telemetryItem.baseData.properties)) {\r\n            duration = telemetryItem.baseData.properties.duration;\r\n            delete telemetryItem.baseData.properties.duration;\r\n        }\r\n        var bd = telemetryItem.baseData;\r\n        var name = bd.name;\r\n        var url = bd.uri;\r\n        var id = bd.id;\r\n        var properties = bd.properties || {};\r\n        var measurements = bd.measurements || {};\r\n        // refUri is a field that Breeze still does not recognize as part of Part B. For now, put it in Part C until it supports it as a domain property\r\n        if (!CoreUtils.isNullOrUndefined(bd.refUri)) {\r\n            properties[\"refUri\"] = bd.refUri;\r\n        }\r\n        // pageType is a field that Breeze still does not recognize as part of Part B. For now, put it in Part C until it supports it as a domain property\r\n        if (!CoreUtils.isNullOrUndefined(bd.pageType)) {\r\n            properties[\"pageType\"] = bd.pageType;\r\n        }\r\n        // isLoggedIn is a field that Breeze still does not recognize as part of Part B. For now, put it in Part C until it supports it as a domain property\r\n        if (!CoreUtils.isNullOrUndefined(bd.isLoggedIn)) {\r\n            properties[\"isLoggedIn\"] = bd.isLoggedIn.toString();\r\n        }\r\n        // pageTags is a field that Breeze still does not recognize as part of Part B. For now, put it in Part C until it supports it as a domain property\r\n        if (!CoreUtils.isNullOrUndefined(bd.properties)) {\r\n            var pageTags = bd.properties;\r\n            for (var key in pageTags) {\r\n                if (pageTags.hasOwnProperty(key)) {\r\n                    properties[key] = pageTags[key];\r\n                }\r\n            }\r\n        }\r\n        var baseData = new PageView(logger, name, url, duration, properties, measurements, id);\r\n        var data = new Data(PageView.dataType, baseData);\r\n        return EnvelopeCreator.createEnvelope(logger, PageView.envelopeType, telemetryItem, data);\r\n    };\r\n    PageViewEnvelopeCreator.PageViewEnvelopeCreator = new PageViewEnvelopeCreator();\r\n    return PageViewEnvelopeCreator;\r\n}(EnvelopeCreator));\r\nexport { PageViewEnvelopeCreator };\r\nvar PageViewPerformanceEnvelopeCreator = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PageViewPerformanceEnvelopeCreator, _super);\r\n    function PageViewPerformanceEnvelopeCreator() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    PageViewPerformanceEnvelopeCreator.prototype.Create = function (logger, telemetryItem) {\r\n        this._logger = logger;\r\n        if (CoreUtils.isNullOrUndefined(telemetryItem.baseData)) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TelemetryEnvelopeInvalid, \"telemetryItem.baseData cannot be null.\");\r\n        }\r\n        var bd = telemetryItem.baseData;\r\n        var name = bd.name;\r\n        var url = bd.uri;\r\n        var properties = bd.properties;\r\n        var measurements = bd.measurements;\r\n        var baseData = new PageViewPerformance(logger, name, url, undefined, properties, measurements);\r\n        var data = new Data(PageViewPerformance.dataType, baseData);\r\n        return EnvelopeCreator.createEnvelope(logger, PageViewPerformance.envelopeType, telemetryItem, data);\r\n    };\r\n    PageViewPerformanceEnvelopeCreator.PageViewPerformanceEnvelopeCreator = new PageViewPerformanceEnvelopeCreator();\r\n    return PageViewPerformanceEnvelopeCreator;\r\n}(EnvelopeCreator));\r\nexport { PageViewPerformanceEnvelopeCreator };\r\nvar TraceEnvelopeCreator = /** @class */ (function (_super) {\r\n    tslib_1.__extends(TraceEnvelopeCreator, _super);\r\n    function TraceEnvelopeCreator() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    TraceEnvelopeCreator.prototype.Create = function (logger, telemetryItem) {\r\n        this._logger = logger;\r\n        if (CoreUtils.isNullOrUndefined(telemetryItem.baseData)) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TelemetryEnvelopeInvalid, \"telemetryItem.baseData cannot be null.\");\r\n        }\r\n        var message = telemetryItem.baseData.message;\r\n        var severityLevel = telemetryItem.baseData.severityLevel;\r\n        var customProperties = EnvelopeCreator.extractProperties(telemetryItem.data);\r\n        var props = tslib_1.__assign({}, customProperties, telemetryItem.baseData.properties);\r\n        var baseData = new Trace(logger, message, severityLevel, props);\r\n        var data = new Data(Trace.dataType, baseData);\r\n        return EnvelopeCreator.createEnvelope(logger, Trace.envelopeType, telemetryItem, data);\r\n    };\r\n    TraceEnvelopeCreator.TraceEnvelopeCreator = new TraceEnvelopeCreator();\r\n    return TraceEnvelopeCreator;\r\n}(EnvelopeCreator));\r\nexport { TraceEnvelopeCreator };\r\n//# sourceMappingURL=EnvelopeCreator.js.map","var EventValidator = /** @class */ (function () {\r\n    function EventValidator() {\r\n    }\r\n    EventValidator.prototype.Validate = function (item) {\r\n        /* TODO re-enable once design of iTelemetryItem is finalized. Task used to track this:\r\n        https://mseng.visualstudio.com/AppInsights/_workitems/edit/1310871\r\n\r\n        // verify system properties has a ver field\r\n        if (!item.sytemProperties || !item.sytemProperties[\"ver\"]) {\r\n            return false;\r\n        }\r\n        \r\n        if (!item.domainProperties || !item.domainProperties[\"name\"]) {\r\n            return false;\r\n        }\r\n        */\r\n        return true;\r\n    };\r\n    EventValidator.EventValidator = new EventValidator();\r\n    return EventValidator;\r\n}());\r\nexport { EventValidator };\r\n//# sourceMappingURL=EventValidator.js.map","var TraceValidator = /** @class */ (function () {\r\n    function TraceValidator() {\r\n    }\r\n    TraceValidator.prototype.Validate = function (item) {\r\n        /* TODO re-enable once design of iTelemetryItem is finalized. Task used to track this:\r\n         https://mseng.visualstudio.com/AppInsights/_workitems/edit/1310871\r\n\r\n        // verify system properties has a ver field\r\n        if (!item.sytemProperties ||\r\n            !item.sytemProperties[\"ver\"]) {\r\n            return false;\r\n        }\r\n        \r\n        if (!item.domainProperties ||\r\n            !item.domainProperties[\"message\"] ||\r\n            !item.domainProperties[\"severityLevel\"]) {\r\n            return false;\r\n        }\r\n        */\r\n        return true;\r\n    };\r\n    TraceValidator.TraceValidator = new TraceValidator();\r\n    return TraceValidator;\r\n}());\r\nexport { TraceValidator };\r\n//# sourceMappingURL=TraceValidator.js.map","var ExceptionValidator = /** @class */ (function () {\r\n    function ExceptionValidator() {\r\n    }\r\n    ExceptionValidator.prototype.Validate = function (item) {\r\n        /* TODO re-enable once design of iTelemetryItem is finalized. Task used to track this:\r\n         https://mseng.visualstudio.com/AppInsights/_workitems/edit/1310871\r\n\r\n        // verify system properties has a ver field\r\n        if (!item.sytemProperties ||\r\n            !item.sytemProperties[\"ver\"]) {\r\n            return false;\r\n        }\r\n\r\n        if (!item.domainProperties ||\r\n            !item.domainProperties[\"exceptions\"] ||\r\n            !ExceptionValidator._validateExceptions(item.domainProperties[\"exceptions\"])) {\r\n            return false;\r\n        }\r\n        */\r\n        return true;\r\n    };\r\n    // TODO implement validation of exceptions\r\n    ExceptionValidator._validateExceptions = function (exceptions) {\r\n        // typeName\r\n        // message\r\n        // parsedStack\r\n        // stack\r\n        // hasFullStack\r\n        return true;\r\n    };\r\n    ExceptionValidator.ExceptionValidator = new ExceptionValidator();\r\n    return ExceptionValidator;\r\n}());\r\nexport { ExceptionValidator };\r\n//# sourceMappingURL=ExceptionValidator.js.map","var MetricValidator = /** @class */ (function () {\r\n    function MetricValidator() {\r\n    }\r\n    MetricValidator.prototype.Validate = function (event) {\r\n        return true;\r\n    };\r\n    MetricValidator.MetricValidator = new MetricValidator();\r\n    return MetricValidator;\r\n}());\r\nexport { MetricValidator };\r\n//# sourceMappingURL=MetricValidator.js.map","var PageViewPerformanceValidator = /** @class */ (function () {\r\n    function PageViewPerformanceValidator() {\r\n    }\r\n    PageViewPerformanceValidator.prototype.Validate = function (item) {\r\n        /* TODO re-enable once design of iTelemetryItem is finalized. Task used to track this:\r\n         https://mseng.visualstudio.com/AppInsights/_workitems/edit/1310871\r\n        \r\n        // verify system properties has a ver field\r\n        if (!item.sytemProperties ||\r\n            !item.sytemProperties[\"ver\"]) {\r\n            return false;\r\n        }\r\n\r\n        if (!item.domainProperties ||\r\n            !item.domainProperties[\"domProcessing\"] ||\r\n            !item.domainProperties[\"duration\"] ||\r\n            !item.domainProperties[\"name\"] ||\r\n            !item.domainProperties[\"networkConnect\"] ||\r\n            !item.domainProperties[\"perfTotal\"] ||\r\n            !item.domainProperties[\"receivedResponse\"] ||\r\n            !item.domainProperties[\"sentRequest\"] ||\r\n            !item.domainProperties[\"url\"]) {\r\n            return false;\r\n        }\r\n        */\r\n        return true;\r\n    };\r\n    PageViewPerformanceValidator.PageViewPerformanceValidator = new PageViewPerformanceValidator();\r\n    return PageViewPerformanceValidator;\r\n}());\r\nexport { PageViewPerformanceValidator };\r\n//# sourceMappingURL=PageViewPerformanceValidator.js.map","var PageViewValidator = /** @class */ (function () {\r\n    function PageViewValidator() {\r\n    }\r\n    PageViewValidator.prototype.Validate = function (item) {\r\n        /* TODO re-enable once design of iTelemetryItem is finalized. Task used to track this:\r\n         https://mseng.visualstudio.com/AppInsights/_workitems/edit/1310871\r\n\r\n        // verify system properties has a ver field\r\n        if (!item.sytemProperties ||\r\n            !item.sytemProperties[\"ver\"]) {\r\n            return false;\r\n        }\r\n\r\n        if (!item.domainProperties ||\r\n            !item.domainProperties[\"id\"] ||\r\n            !item.domainProperties[\"name\"] ||\r\n            !item.domainProperties[\"duration\"] ||\r\n            !item.domainProperties[\"url\"]) {\r\n            return false;\r\n        }\r\n        */\r\n        return true;\r\n    };\r\n    PageViewValidator.PageViewValidator = new PageViewValidator();\r\n    return PageViewValidator;\r\n}());\r\nexport { PageViewValidator };\r\n//# sourceMappingURL=PageViewValidator.js.map","var RemoteDepdencyValidator = /** @class */ (function () {\r\n    function RemoteDepdencyValidator() {\r\n    }\r\n    RemoteDepdencyValidator.prototype.Validate = function (item) {\r\n        /* TODO re-enable once design of iTelemetryItem is finalized. Task used to track this:\r\n         https://mseng.visualstudio.com/AppInsights/_workitems/edit/1310871\r\n\r\n        // verify system properties has a ver field\r\n        if (!item.sytemProperties ||\r\n            !item.sytemProperties[\"ver\"]) {\r\n            return false;\r\n        }\r\n\r\n        if (!item.domainProperties ||\r\n            !item.domainProperties[\"id\"] ||\r\n            !item.domainProperties[\"name\"] ||\r\n            !item.domainProperties[\"resultCode\"] ||\r\n            !item.domainProperties[\"duration\"] ||\r\n            !item.domainProperties[\"success\"] ||\r\n            !item.domainProperties[\"data\"] ||\r\n            !item.domainProperties[\"target\"] ||\r\n            !item.domainProperties[\"type\"]) {\r\n            return false;\r\n        }\r\n        */\r\n        return true;\r\n    };\r\n    RemoteDepdencyValidator.RemoteDepdencyValidator = new RemoteDepdencyValidator();\r\n    return RemoteDepdencyValidator;\r\n}());\r\nexport { RemoteDepdencyValidator };\r\n//# sourceMappingURL=RemoteDepdencyValidator.js.map","import { Util, FieldType } from '@microsoft/applicationinsights-common';\r\nimport { LoggingSeverity, _InternalMessageId } from '@microsoft/applicationinsights-core-js';\r\nvar Serializer = /** @class */ (function () {\r\n    function Serializer(logger) {\r\n        this._logger = logger;\r\n    }\r\n    /**\r\n     * Serializes the current object to a JSON string.\r\n     */\r\n    Serializer.prototype.serialize = function (input) {\r\n        var output = this._serializeObject(input, \"root\");\r\n        return JSON.stringify(output);\r\n    };\r\n    Serializer.prototype._serializeObject = function (source, name) {\r\n        var circularReferenceCheck = \"__aiCircularRefCheck\";\r\n        var output = {};\r\n        if (!source) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.CannotSerializeObject, \"cannot serialize object because it is null or undefined\", { name: name }, true);\r\n            return output;\r\n        }\r\n        if (source[circularReferenceCheck]) {\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.CircularReferenceDetected, \"Circular reference detected while serializing object\", { name: name }, true);\r\n            return output;\r\n        }\r\n        if (!source.aiDataContract) {\r\n            // special case for measurements/properties/tags\r\n            if (name === \"measurements\") {\r\n                output = this._serializeStringMap(source, \"number\", name);\r\n            }\r\n            else if (name === \"properties\") {\r\n                output = this._serializeStringMap(source, \"string\", name);\r\n            }\r\n            else if (name === \"tags\") {\r\n                output = this._serializeStringMap(source, \"string\", name);\r\n            }\r\n            else if (Util.isArray(source)) {\r\n                output = this._serializeArray(source, name);\r\n            }\r\n            else {\r\n                this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.CannotSerializeObjectNonSerializable, \"Attempting to serialize an object which does not implement ISerializable\", { name: name }, true);\r\n                try {\r\n                    // verify that the object can be stringified\r\n                    JSON.stringify(source);\r\n                    output = source;\r\n                }\r\n                catch (e) {\r\n                    // if serialization fails return an empty string\r\n                    this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.CannotSerializeObject, (e && typeof e.toString === 'function') ? e.toString() : \"Error serializing object\", null, true);\r\n                }\r\n            }\r\n            return output;\r\n        }\r\n        source[circularReferenceCheck] = true;\r\n        for (var field in source.aiDataContract) {\r\n            var contract = source.aiDataContract[field];\r\n            var isRequired = (typeof contract === \"function\") ? (contract() & FieldType.Required) : (contract & FieldType.Required);\r\n            var isHidden = (typeof contract === \"function\") ? (contract() & FieldType.Hidden) : (contract & FieldType.Hidden);\r\n            var isArray = contract & FieldType.Array;\r\n            var isPresent = source[field] !== undefined;\r\n            var isObject = typeof source[field] === \"object\" && source[field] !== null;\r\n            if (isRequired && !isPresent && !isArray) {\r\n                this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.MissingRequiredFieldSpecification, \"Missing required field specification. The field is required but not present on source\", { field: field, name: name });\r\n                // If not in debug mode, continue and hope the error is permissible\r\n                continue;\r\n            }\r\n            if (isHidden) {\r\n                // Don't serialize hidden fields\r\n                continue;\r\n            }\r\n            var value;\r\n            if (isObject) {\r\n                if (isArray) {\r\n                    // special case; resurse on each object in the source array\r\n                    value = this._serializeArray(source[field], field);\r\n                }\r\n                else {\r\n                    // recurse on the source object in this field\r\n                    value = this._serializeObject(source[field], field);\r\n                }\r\n            }\r\n            else {\r\n                // assign the source field to the output even if undefined or required\r\n                value = source[field];\r\n            }\r\n            // only emit this field if the value is defined\r\n            if (value !== undefined) {\r\n                output[field] = value;\r\n            }\r\n        }\r\n        delete source[circularReferenceCheck];\r\n        return output;\r\n    };\r\n    Serializer.prototype._serializeArray = function (sources, name) {\r\n        var output = undefined;\r\n        if (!!sources) {\r\n            if (!Util.isArray(sources)) {\r\n                this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.ItemNotInArray, \"This field was specified as an array in the contract but the item is not an array.\\r\\n\", { name: name }, true);\r\n            }\r\n            else {\r\n                output = [];\r\n                for (var i = 0; i < sources.length; i++) {\r\n                    var source = sources[i];\r\n                    var item = this._serializeObject(source, name + \"[\" + i + \"]\");\r\n                    output.push(item);\r\n                }\r\n            }\r\n        }\r\n        return output;\r\n    };\r\n    Serializer.prototype._serializeStringMap = function (map, expectedType, name) {\r\n        var output = undefined;\r\n        if (map) {\r\n            output = {};\r\n            for (var field in map) {\r\n                var value = map[field];\r\n                if (expectedType === \"string\") {\r\n                    if (value === undefined) {\r\n                        output[field] = \"undefined\";\r\n                    }\r\n                    else if (value === null) {\r\n                        output[field] = \"null\";\r\n                    }\r\n                    else if (!value.toString) {\r\n                        output[field] = \"invalid field: toString() is not defined.\";\r\n                    }\r\n                    else {\r\n                        output[field] = value.toString();\r\n                    }\r\n                }\r\n                else if (expectedType === \"number\") {\r\n                    if (value === undefined) {\r\n                        output[field] = \"undefined\";\r\n                    }\r\n                    else if (value === null) {\r\n                        output[field] = \"null\";\r\n                    }\r\n                    else {\r\n                        var num = parseFloat(value);\r\n                        if (isNaN(num)) {\r\n                            output[field] = \"NaN\";\r\n                        }\r\n                        else {\r\n                            output[field] = num;\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    output[field] = \"invalid field: \" + name + \" is of unknown type.\";\r\n                    this._logger.throwInternal(LoggingSeverity.CRITICAL, output[field], null, true);\r\n                }\r\n            }\r\n        }\r\n        return output;\r\n    };\r\n    return Serializer;\r\n}());\r\nexport { Serializer };\r\n//# sourceMappingURL=Serializer.js.map","/**\r\n * @description Monitors browser for offline events\r\n * @export default - Offline: Static instance of OfflineListener\r\n * @class OfflineListener\r\n */\r\nvar OfflineListener = /** @class */ (function () {\r\n    function OfflineListener() {\r\n        this._onlineStatus = true;\r\n        try {\r\n            if (typeof window === 'undefined') {\r\n                this.isListening = false;\r\n            }\r\n            else if (window && window.addEventListener) {\r\n                window.addEventListener('online', this._setOnline.bind(this), false);\r\n                window.addEventListener('offline', this._setOffline.bind(this), false);\r\n                this.isListening = true;\r\n            }\r\n            else if (document && document.body) {\r\n                document.body.ononline = this._setOnline.bind(this);\r\n                document.body.onoffline = this._setOffline.bind(this);\r\n                this.isListening = true;\r\n            }\r\n            else if (document) {\r\n                document.ononline = this._setOnline.bind(this);\r\n                document.onoffline = this._setOffline.bind(this);\r\n                this.isListening = true;\r\n            }\r\n            else {\r\n                // Could not find a place to add event listener\r\n                this.isListening = false;\r\n            }\r\n        }\r\n        catch (e) {\r\n            //this makes react-native less angry\r\n            this.isListening = false;\r\n        }\r\n    }\r\n    OfflineListener.prototype._setOnline = function () {\r\n        this._onlineStatus = true;\r\n    };\r\n    OfflineListener.prototype._setOffline = function () {\r\n        this._onlineStatus = false;\r\n    };\r\n    OfflineListener.prototype.isOnline = function () {\r\n        if (this.isListening) {\r\n            return this._onlineStatus;\r\n        }\r\n        else if (navigator) {\r\n            return navigator.onLine;\r\n        }\r\n        else {\r\n            // Cannot determine online status - report as online\r\n            return true;\r\n        }\r\n    };\r\n    OfflineListener.prototype.isOffline = function () {\r\n        return !this.isOnline();\r\n    };\r\n    OfflineListener.Offline = new OfflineListener;\r\n    return OfflineListener;\r\n}());\r\nexport { OfflineListener };\r\nexport var Offline = OfflineListener.Offline;\r\n//# sourceMappingURL=Offline.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SessionStorageSendBuffer, ArraySendBuffer } from './SendBuffer';\r\nimport { DependencyEnvelopeCreator, EventEnvelopeCreator, ExceptionEnvelopeCreator, MetricEnvelopeCreator, PageViewEnvelopeCreator, PageViewPerformanceEnvelopeCreator, TraceEnvelopeCreator } from './EnvelopeCreator';\r\nimport { EventValidator } from './TelemetryValidation/EventValidator';\r\nimport { TraceValidator } from './TelemetryValidation/TraceValidator';\r\nimport { ExceptionValidator } from './TelemetryValidation/ExceptionValidator';\r\nimport { MetricValidator } from './TelemetryValidation/MetricValidator';\r\nimport { PageViewPerformanceValidator } from './TelemetryValidation/PageViewPerformanceValidator';\r\nimport { PageViewValidator } from './TelemetryValidation/PageViewValidator';\r\nimport { RemoteDepdencyValidator } from './TelemetryValidation/RemoteDepdencyValidator';\r\nimport { Serializer } from './Serializer'; // todo move to channel\r\nimport { DisabledPropertyName, RequestHeaders, Util, PageView, Event, Trace, Exception, Metric, PageViewPerformance, RemoteDependencyData, ConfigurationManager, ProcessLegacy } from '@microsoft/applicationinsights-common';\r\nimport { _InternalMessageId, LoggingSeverity, } from '@microsoft/applicationinsights-core-js';\r\nimport { CoreUtils } from '@microsoft/applicationinsights-core-js';\r\nimport { Offline } from './Offline';\r\nvar Sender = /** @class */ (function () {\r\n    function Sender() {\r\n        this.priority = 1001;\r\n        /**\r\n         * Whether XMLHttpRequest object is supported. Older version of IE (8,9) do not support it.\r\n         */\r\n        this._XMLHttpRequestSupported = false;\r\n        this.identifier = \"AppInsightsChannelPlugin\";\r\n    }\r\n    Sender.prototype.pause = function () {\r\n        throw new Error(\"Method not implemented.\");\r\n    };\r\n    Sender.prototype.resume = function () {\r\n        throw new Error(\"Method not implemented.\");\r\n    };\r\n    Sender.prototype.flush = function () {\r\n        try {\r\n            this.triggerSend();\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.FlushFailed, \"flush failed, telemetry will not be collected: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n    };\r\n    Sender.prototype.teardown = function () {\r\n        throw new Error(\"Method not implemented.\");\r\n    };\r\n    Sender.prototype.initialize = function (config, core, extensions) {\r\n        var _this = this;\r\n        this._logger = core.logger;\r\n        this._serializer = new Serializer(core.logger);\r\n        this._consecutiveErrors = 0;\r\n        this._retryAt = null;\r\n        this._lastSend = 0;\r\n        this._sender = null;\r\n        var defaultConfig = Sender._getDefaultAppInsightsChannelConfig();\r\n        this._config = Sender._getEmptyAppInsightsChannelConfig();\r\n        var _loop_1 = function (field) {\r\n            this_1._config[field] = function () { return ConfigurationManager.getConfig(config, field, _this.identifier, defaultConfig[field]()); };\r\n        };\r\n        var this_1 = this;\r\n        for (var field in defaultConfig) {\r\n            _loop_1(field);\r\n        }\r\n        this._buffer = (this._config.enableSessionStorageBuffer && Util.canUseSessionStorage())\r\n            ? new SessionStorageSendBuffer(this._logger, this._config) : new ArraySendBuffer(this._config);\r\n        if (!this._config.isBeaconApiDisabled() && Util.IsBeaconApiSupported()) {\r\n            this._sender = this._beaconSender;\r\n        }\r\n        else {\r\n            if (typeof XMLHttpRequest != \"undefined\") {\r\n                var testXhr = new XMLHttpRequest();\r\n                if (\"withCredentials\" in testXhr) {\r\n                    this._sender = this._xhrSender;\r\n                    this._XMLHttpRequestSupported = true;\r\n                }\r\n                else if (typeof XDomainRequest !== \"undefined\") {\r\n                    this._sender = this._xdrSender; //IE 8 and 9\r\n                }\r\n            }\r\n        }\r\n    };\r\n    Sender.prototype.processTelemetry = function (telemetryItem) {\r\n        var _this = this;\r\n        try {\r\n            // if master off switch is set, don't send any data\r\n            if (this._config.disableTelemetry()) {\r\n                // Do not send/save data\r\n                return;\r\n            }\r\n            // validate input\r\n            if (!telemetryItem) {\r\n                this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.CannotSendEmptyTelemetry, \"Cannot send empty telemetry\");\r\n                return;\r\n            }\r\n            // ensure a sender was constructed\r\n            if (!this._sender) {\r\n                this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.SenderNotInitialized, \"Sender was not initialized\");\r\n                return;\r\n            }\r\n            // first we need to validate that the envelope passed down is valid\r\n            var isValid = Sender._validate(telemetryItem);\r\n            if (!isValid) {\r\n                this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TelemetryEnvelopeInvalid, \"Invalid telemetry envelope\");\r\n                return;\r\n            }\r\n            // construct an envelope that Application Insights endpoint can understand\r\n            var aiEnvelope_1 = Sender.constructEnvelope(telemetryItem, this._config.instrumentationKey(), this._logger);\r\n            if (!aiEnvelope_1) {\r\n                this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.CreateEnvelopeError, \"Unable to create an AppInsights envelope\");\r\n                return;\r\n            }\r\n            var doNotSendItem_1 = false;\r\n            // this is for running in legacy mode, where customer may already have a custom initializer present\r\n            if (telemetryItem.tags && telemetryItem.tags[ProcessLegacy]) {\r\n                telemetryItem.tags[ProcessLegacy].forEach(function (callBack) {\r\n                    try {\r\n                        if (callBack && callBack(aiEnvelope_1) === false) {\r\n                            doNotSendItem_1 = true;\r\n                            _this._logger.warnToConsole(\"Telemetry processor check returns false\");\r\n                        }\r\n                    }\r\n                    catch (e) {\r\n                        // log error but dont stop executing rest of the telemetry initializers\r\n                        // doNotSendItem = true;\r\n                        _this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TelemetryInitializerFailed, \"One of telemetry initializers failed, telemetry item will not be sent: \" + Util.getExceptionName(e), { exception: Util.dump(e) }, true);\r\n                    }\r\n                });\r\n                delete telemetryItem.tags[ProcessLegacy];\r\n            }\r\n            if (doNotSendItem_1) {\r\n                return; // do not send, no need to execute next plugin\r\n            }\r\n            // check if the incoming payload is too large, truncate if necessary\r\n            var payload = this._serializer.serialize(aiEnvelope_1);\r\n            // flush if we would exceed the max-size limit by adding this item\r\n            var bufferPayload = this._buffer.getItems();\r\n            var batch = this._buffer.batchPayloads(bufferPayload);\r\n            if (batch && (batch.length + payload.length > this._config.maxBatchSizeInBytes())) {\r\n                this.triggerSend();\r\n            }\r\n            // enqueue the payload\r\n            this._buffer.enqueue(payload);\r\n            // ensure an invocation timeout is set\r\n            this._setupTimer();\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.FailedAddingTelemetryToBuffer, \"Failed adding telemetry to the sender's buffer, some telemetry will be lost: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n        // hand off the telemetry item to the next plugin\r\n        if (!CoreUtils.isNullOrUndefined(this._nextPlugin)) {\r\n            this._nextPlugin.processTelemetry(telemetryItem);\r\n        }\r\n    };\r\n    Sender.prototype.setNextPlugin = function (next) {\r\n        this._nextPlugin = next;\r\n    };\r\n    /**\r\n     * xhr state changes\r\n     */\r\n    Sender.prototype._xhrReadyStateChange = function (xhr, payload, countOfItemsInPayload) {\r\n        if (xhr.readyState === 4) {\r\n            var response = null;\r\n            if (!this._appId) {\r\n                response = this._parseResponse(xhr.responseText || xhr.response);\r\n                if (response && response.appId) {\r\n                    this._appId = response.appId;\r\n                }\r\n            }\r\n            if ((xhr.status < 200 || xhr.status >= 300) && xhr.status !== 0) {\r\n                if (!this._config.isRetryDisabled() && this._isRetriable(xhr.status)) {\r\n                    this._resendPayload(payload);\r\n                    this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.TransmissionFailed, \". \" +\r\n                        \"Response code \" + xhr.status + \". Will retry to send \" + payload.length + \" items.\");\r\n                }\r\n                else {\r\n                    this._onError(payload, this._formatErrorMessageXhr(xhr));\r\n                }\r\n            }\r\n            else if (Offline.isOffline()) {\r\n                // Note: Don't check for staus == 0, since adblock gives this code\r\n                if (!this._config.isRetryDisabled()) {\r\n                    var offlineBackOffMultiplier = 10; // arbritrary number\r\n                    this._resendPayload(payload, offlineBackOffMultiplier);\r\n                    this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.TransmissionFailed, \". Offline - Response Code: \" + xhr.status + \". Offline status: \" + Offline.isOffline() + \". Will retry to send \" + payload.length + \" items.\");\r\n                }\r\n            }\r\n            else {\r\n                if (xhr.status === 206) {\r\n                    if (!response) {\r\n                        response = this._parseResponse(xhr.responseText || xhr.response);\r\n                    }\r\n                    if (response && !this._config.isRetryDisabled()) {\r\n                        this._onPartialSuccess(payload, response);\r\n                    }\r\n                    else {\r\n                        this._onError(payload, this._formatErrorMessageXhr(xhr));\r\n                    }\r\n                }\r\n                else {\r\n                    this._consecutiveErrors = 0;\r\n                    this._onSuccess(payload, countOfItemsInPayload);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Immediately send buffered data\r\n     * @param async {boolean} - Indicates if the events should be sent asynchronously\r\n     */\r\n    Sender.prototype.triggerSend = function (async) {\r\n        if (async === void 0) { async = true; }\r\n        try {\r\n            // Send data only if disableTelemetry is false\r\n            if (!this._config.disableTelemetry()) {\r\n                if (this._buffer.count() > 0) {\r\n                    var payload = this._buffer.getItems();\r\n                    // invoke send\r\n                    this._sender(payload, async);\r\n                }\r\n                // update lastSend time to enable throttling\r\n                this._lastSend = +new Date;\r\n            }\r\n            else {\r\n                this._buffer.clear();\r\n            }\r\n            clearTimeout(this._timeoutHandle);\r\n            this._timeoutHandle = null;\r\n            this._retryAt = null;\r\n        }\r\n        catch (e) {\r\n            /* Ignore this error for IE under v10 */\r\n            if (!Util.getIEVersion() || Util.getIEVersion() > 9) {\r\n                this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TransmissionFailed, \"Telemetry transmission failed, some telemetry will be lost: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * error handler\r\n     */\r\n    Sender.prototype._onError = function (payload, message, event) {\r\n        this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.OnError, \"Failed to send telemetry.\", { message: message });\r\n        this._buffer.clearSent(payload);\r\n    };\r\n    /**\r\n     * partial success handler\r\n     */\r\n    Sender.prototype._onPartialSuccess = function (payload, results) {\r\n        var failed = [];\r\n        var retry = [];\r\n        // Iterate through the reversed array of errors so that splicing doesn't have invalid indexes after the first item.\r\n        var errors = results.errors.reverse();\r\n        for (var _i = 0, errors_1 = errors; _i < errors_1.length; _i++) {\r\n            var error = errors_1[_i];\r\n            var extracted = payload.splice(error.index, 1)[0];\r\n            if (this._isRetriable(error.statusCode)) {\r\n                retry.push(extracted);\r\n            }\r\n            else {\r\n                // All other errors, including: 402 (Monthly quota exceeded) and 439 (Too many requests and refresh cache).\r\n                failed.push(extracted);\r\n            }\r\n        }\r\n        if (payload.length > 0) {\r\n            this._onSuccess(payload, results.itemsAccepted);\r\n        }\r\n        if (failed.length > 0) {\r\n            this._onError(failed, this._formatErrorMessageXhr(null, ['partial success', results.itemsAccepted, 'of', results.itemsReceived].join(' ')));\r\n        }\r\n        if (retry.length > 0) {\r\n            this._resendPayload(retry);\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.TransmissionFailed, \"Partial success. \" +\r\n                \"Delivered: \" + payload.length + \", Failed: \" + failed.length +\r\n                \". Will retry to send \" + retry.length + \" our of \" + results.itemsReceived + \" items\");\r\n        }\r\n    };\r\n    /**\r\n     * success handler\r\n     */\r\n    Sender.prototype._onSuccess = function (payload, countOfItemsInPayload) {\r\n        this._buffer.clearSent(payload);\r\n    };\r\n    /**\r\n     * xdr state changes\r\n     */\r\n    Sender.prototype._xdrOnLoad = function (xdr, payload) {\r\n        if (xdr && (xdr.responseText + \"\" === \"200\" || xdr.responseText === \"\")) {\r\n            this._consecutiveErrors = 0;\r\n            this._onSuccess(payload, 0);\r\n        }\r\n        else {\r\n            var results = this._parseResponse(xdr.responseText);\r\n            if (results && results.itemsReceived && results.itemsReceived > results.itemsAccepted\r\n                && !this._config.isRetryDisabled()) {\r\n                this._onPartialSuccess(payload, results);\r\n            }\r\n            else {\r\n                this._onError(payload, this._formatErrorMessageXdr(xdr));\r\n            }\r\n        }\r\n    };\r\n    Sender.constructEnvelope = function (orig, iKey, logger) {\r\n        var envelope;\r\n        if (iKey !== orig.iKey && !CoreUtils.isNullOrUndefined(iKey)) {\r\n            envelope = tslib_1.__assign({}, orig, { iKey: iKey });\r\n        }\r\n        else {\r\n            envelope = orig;\r\n        }\r\n        switch (envelope.baseType) {\r\n            case Event.dataType:\r\n                return EventEnvelopeCreator.EventEnvelopeCreator.Create(logger, envelope);\r\n            case Trace.dataType:\r\n                return TraceEnvelopeCreator.TraceEnvelopeCreator.Create(logger, envelope);\r\n            case PageView.dataType:\r\n                return PageViewEnvelopeCreator.PageViewEnvelopeCreator.Create(logger, envelope);\r\n            case PageViewPerformance.dataType:\r\n                return PageViewPerformanceEnvelopeCreator.PageViewPerformanceEnvelopeCreator.Create(logger, envelope);\r\n            case Exception.dataType:\r\n                return ExceptionEnvelopeCreator.ExceptionEnvelopeCreator.Create(logger, envelope);\r\n            case Metric.dataType:\r\n                return MetricEnvelopeCreator.MetricEnvelopeCreator.Create(logger, envelope);\r\n            case RemoteDependencyData.dataType:\r\n                return DependencyEnvelopeCreator.DependencyEnvelopeCreator.Create(logger, envelope);\r\n            default:\r\n                return EventEnvelopeCreator.EventEnvelopeCreator.Create(logger, envelope);\r\n        }\r\n    };\r\n    Sender._getDefaultAppInsightsChannelConfig = function () {\r\n        var resultConfig = {};\r\n        // set default values\r\n        resultConfig.endpointUrl = function () { return \"https://dc.services.visualstudio.com/v2/track\"; };\r\n        resultConfig.emitLineDelimitedJson = function () { return false; };\r\n        resultConfig.maxBatchInterval = function () { return 15000; };\r\n        resultConfig.maxBatchSizeInBytes = function () { return 102400; }; // 100kb\r\n        resultConfig.disableTelemetry = function () { return false; };\r\n        resultConfig.enableSessionStorageBuffer = function () { return true; };\r\n        resultConfig.isRetryDisabled = function () { return false; };\r\n        resultConfig.isBeaconApiDisabled = function () { return true; };\r\n        resultConfig.instrumentationKey = function () { return undefined; }; // Channel doesn't need iKey, it should be set already\r\n        return resultConfig;\r\n    };\r\n    Sender._getEmptyAppInsightsChannelConfig = function () {\r\n        return {\r\n            endpointUrl: undefined,\r\n            emitLineDelimitedJson: undefined,\r\n            maxBatchInterval: undefined,\r\n            maxBatchSizeInBytes: undefined,\r\n            disableTelemetry: undefined,\r\n            enableSessionStorageBuffer: undefined,\r\n            isRetryDisabled: undefined,\r\n            isBeaconApiDisabled: undefined,\r\n            instrumentationKey: undefined\r\n        };\r\n    };\r\n    Sender._validate = function (envelope) {\r\n        // call the appropriate Validate depending on the baseType\r\n        switch (envelope.baseType) {\r\n            case Event.dataType:\r\n                return EventValidator.EventValidator.Validate(envelope);\r\n            case Trace.dataType:\r\n                return TraceValidator.TraceValidator.Validate(envelope);\r\n            case Exception.dataType:\r\n                return ExceptionValidator.ExceptionValidator.Validate(envelope);\r\n            case Metric.dataType:\r\n                return MetricValidator.MetricValidator.Validate(envelope);\r\n            case PageView.dataType:\r\n                return PageViewValidator.PageViewValidator.Validate(envelope);\r\n            case PageViewPerformance.dataType:\r\n                return PageViewPerformanceValidator.PageViewPerformanceValidator.Validate(envelope);\r\n            case RemoteDependencyData.dataType:\r\n                return RemoteDepdencyValidator.RemoteDepdencyValidator.Validate(envelope);\r\n            default:\r\n                return EventValidator.EventValidator.Validate(envelope);\r\n        }\r\n    };\r\n    /**\r\n     * Send Beacon API request\r\n     * @param payload {string} - The data payload to be sent.\r\n     * @param isAsync {boolean} - not used\r\n     * Note: Beacon API does not support custom headers and we are not able to get\r\n     * appId from the backend for the correct correlation.\r\n     */\r\n    Sender.prototype._beaconSender = function (payload, isAsync) {\r\n        var url = this._config.endpointUrl();\r\n        var batch = this._buffer.batchPayloads(payload);\r\n        // Chrome only allows CORS-safelisted values for the sendBeacon data argument\r\n        // see: https://bugs.chromium.org/p/chromium/issues/detail?id=720283\r\n        var plainTextBatch = new Blob([batch], { type: 'text/plain;charset=UTF-8' });\r\n        // The sendBeacon method returns true if the user agent is able to successfully queue the data for transfer. Otherwise it returns false.\r\n        var queued = navigator.sendBeacon(url, plainTextBatch);\r\n        if (queued) {\r\n            this._buffer.markAsSent(payload);\r\n        }\r\n        else {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TransmissionFailed, \". \" + \"Failed to send telemetry with Beacon API.\");\r\n        }\r\n    };\r\n    /**\r\n     * Send XMLHttpRequest\r\n     * @param payload {string} - The data payload to be sent.\r\n     * @param isAsync {boolean} - Indicates if the request should be sent asynchronously\r\n     */\r\n    Sender.prototype._xhrSender = function (payload, isAsync) {\r\n        var _this = this;\r\n        var xhr = new XMLHttpRequest();\r\n        xhr[DisabledPropertyName] = true;\r\n        xhr.open(\"POST\", this._config.endpointUrl(), isAsync);\r\n        xhr.setRequestHeader(\"Content-type\", \"application/json\");\r\n        // append Sdk-Context request header only in case of breeze endpoint\r\n        if (Util.isInternalApplicationInsightsEndpoint(this._config.endpointUrl())) {\r\n            xhr.setRequestHeader(RequestHeaders.sdkContextHeader, RequestHeaders.sdkContextHeaderAppIdRequest);\r\n        }\r\n        xhr.onreadystatechange = function () { return _this._xhrReadyStateChange(xhr, payload, payload.length); };\r\n        xhr.onerror = function (event) { return _this._onError(payload, _this._formatErrorMessageXhr(xhr), event); };\r\n        // compose an array of payloads\r\n        var batch = this._buffer.batchPayloads(payload);\r\n        xhr.send(batch);\r\n        this._buffer.markAsSent(payload);\r\n    };\r\n    /**\r\n     * Parses the response from the backend.\r\n     * @param response - XMLHttpRequest or XDomainRequest response\r\n     */\r\n    Sender.prototype._parseResponse = function (response) {\r\n        try {\r\n            if (response && response !== \"\") {\r\n                var result = JSON.parse(response);\r\n                if (result && result.itemsReceived && result.itemsReceived >= result.itemsAccepted &&\r\n                    result.itemsReceived - result.itemsAccepted == result.errors.length) {\r\n                    return result;\r\n                }\r\n            }\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.InvalidBackendResponse, \"Cannot parse the response. \" + Util.getExceptionName(e), {\r\n                response: response\r\n            });\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Resend payload. Adds payload back to the send buffer and setup a send timer (with exponential backoff).\r\n     * @param payload\r\n     */\r\n    Sender.prototype._resendPayload = function (payload, linearFactor) {\r\n        if (linearFactor === void 0) { linearFactor = 1; }\r\n        if (!payload || payload.length === 0) {\r\n            return;\r\n        }\r\n        this._buffer.clearSent(payload);\r\n        this._consecutiveErrors++;\r\n        for (var _i = 0, payload_1 = payload; _i < payload_1.length; _i++) {\r\n            var item = payload_1[_i];\r\n            this._buffer.enqueue(item);\r\n        }\r\n        // setup timer\r\n        this._setRetryTime(linearFactor);\r\n        this._setupTimer();\r\n    };\r\n    /** Calculates the time to wait before retrying in case of an error based on\r\n     * http://en.wikipedia.org/wiki/Exponential_backoff\r\n     */\r\n    Sender.prototype._setRetryTime = function (linearFactor) {\r\n        var SlotDelayInSeconds = 10;\r\n        var delayInSeconds;\r\n        if (this._consecutiveErrors <= 1) {\r\n            delayInSeconds = SlotDelayInSeconds;\r\n        }\r\n        else {\r\n            var backOffSlot = (Math.pow(2, this._consecutiveErrors) - 1) / 2;\r\n            // tslint:disable-next-line:insecure-random\r\n            var backOffDelay = Math.floor(Math.random() * backOffSlot * SlotDelayInSeconds) + 1;\r\n            backOffDelay = linearFactor * backOffDelay;\r\n            delayInSeconds = Math.max(Math.min(backOffDelay, 3600), SlotDelayInSeconds);\r\n        }\r\n        // TODO: Log the backoff time like the C# version does.\r\n        var retryAfterTimeSpan = Date.now() + (delayInSeconds * 1000);\r\n        // TODO: Log the retry at time like the C# version does.\r\n        this._retryAt = retryAfterTimeSpan;\r\n    };\r\n    /**\r\n     * Sets up the timer which triggers actually sending the data.\r\n     */\r\n    Sender.prototype._setupTimer = function () {\r\n        var _this = this;\r\n        if (!this._timeoutHandle) {\r\n            var retryInterval = this._retryAt ? Math.max(0, this._retryAt - Date.now()) : 0;\r\n            var timerValue = Math.max(this._config.maxBatchInterval(), retryInterval);\r\n            this._timeoutHandle = setTimeout(function () {\r\n                _this.triggerSend();\r\n            }, timerValue);\r\n        }\r\n    };\r\n    /**\r\n     * Checks if the SDK should resend the payload after receiving this status code from the backend.\r\n     * @param statusCode\r\n     */\r\n    Sender.prototype._isRetriable = function (statusCode) {\r\n        return statusCode == 408 // Timeout\r\n            || statusCode == 429 // Too many requests.\r\n            || statusCode == 500 // Internal server error.\r\n            || statusCode == 503; // Service unavailable.\r\n    };\r\n    Sender.prototype._formatErrorMessageXhr = function (xhr, message) {\r\n        if (xhr) {\r\n            return \"XMLHttpRequest,Status:\" + xhr.status + \",Response:\" + xhr.responseText || xhr.response || \"\";\r\n        }\r\n        return message;\r\n    };\r\n    /**\r\n     * Send XDomainRequest\r\n     * @param payload {string} - The data payload to be sent.\r\n     * @param isAsync {boolean} - Indicates if the request should be sent asynchronously\r\n     *\r\n     * Note: XDomainRequest does not support sync requests. This 'isAsync' parameter is added\r\n     * to maintain consistency with the xhrSender's contract\r\n     * Note: XDomainRequest does not support custom headers and we are not able to get\r\n     * appId from the backend for the correct correlation.\r\n     */\r\n    Sender.prototype._xdrSender = function (payload, isAsync) {\r\n        var _this = this;\r\n        var xdr = new XDomainRequest();\r\n        xdr.onload = function () { return _this._xdrOnLoad(xdr, payload); };\r\n        xdr.onerror = function (event) { return _this._onError(payload, _this._formatErrorMessageXdr(xdr), event); };\r\n        // XDomainRequest requires the same protocol as the hosting page.\r\n        // If the protocol doesn't match, we can't send the telemetry :(.\r\n        var hostingProtocol = window.location && window.location.protocol;\r\n        if (this._config.endpointUrl().lastIndexOf(hostingProtocol, 0) !== 0) {\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.TransmissionFailed, \". \" +\r\n                \"Cannot send XDomain request. The endpoint URL protocol doesn't match the hosting page protocol.\");\r\n            this._buffer.clear();\r\n            return;\r\n        }\r\n        var endpointUrl = this._config.endpointUrl().replace(/^(https?:)/, \"\");\r\n        xdr.open('POST', endpointUrl);\r\n        // compose an array of payloads\r\n        var batch = this._buffer.batchPayloads(payload);\r\n        xdr.send(batch);\r\n        this._buffer.markAsSent(payload);\r\n    };\r\n    Sender.prototype._formatErrorMessageXdr = function (xdr, message) {\r\n        if (xdr) {\r\n            return \"XDomainRequest,Response:\" + xdr.responseText || \"\";\r\n        }\r\n        return message;\r\n    };\r\n    return Sender;\r\n}());\r\nexport { Sender };\r\n//# sourceMappingURL=Sender.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { Util, DateTimeUtils } from '@microsoft/applicationinsights-common';\r\nimport { _InternalMessageId, LoggingSeverity, CoreUtils, DiagnosticLogger } from '@microsoft/applicationinsights-core-js';\r\nvar Session = /** @class */ (function () {\r\n    function Session() {\r\n    }\r\n    return Session;\r\n}());\r\nexport { Session };\r\nvar _SessionManager = /** @class */ (function () {\r\n    function _SessionManager(config, logger) {\r\n        var _this = this;\r\n        if (CoreUtils.isNullOrUndefined(logger)) {\r\n            this._logger = new DiagnosticLogger();\r\n        }\r\n        else {\r\n            this._logger = logger;\r\n        }\r\n        if (!config) {\r\n            config = {};\r\n        }\r\n        if (!(typeof config.sessionExpirationMs === \"function\")) {\r\n            config.sessionExpirationMs = function () { return _SessionManager.acquisitionSpan; };\r\n        }\r\n        if (!(typeof config.sessionRenewalMs === \"function\")) {\r\n            config.sessionRenewalMs = function () { return _SessionManager.renewalSpan; };\r\n        }\r\n        this.config = config;\r\n        this._storageNamePrefix = function () { return _this.config.namePrefix && _this.config.namePrefix() ? _SessionManager.cookieNameConst + _this.config.namePrefix() : _SessionManager.cookieNameConst; };\r\n        this.automaticSession = new Session();\r\n    }\r\n    _SessionManager.prototype.update = function () {\r\n        if (!this.automaticSession.id) {\r\n            this.initializeAutomaticSession();\r\n        }\r\n        var now = DateTimeUtils.Now();\r\n        var acquisitionExpired = now - this.automaticSession.acquisitionDate > this.config.sessionExpirationMs();\r\n        var renewalExpired = now - this.automaticSession.renewalDate > this.config.sessionRenewalMs();\r\n        // renew if acquisitionSpan or renewalSpan has ellapsed\r\n        if (acquisitionExpired || renewalExpired) {\r\n            // update automaticSession so session state has correct id\r\n            this.renew();\r\n        }\r\n        else {\r\n            // do not update the cookie more often than cookieUpdateInterval\r\n            if (!this.cookieUpdatedTimestamp || now - this.cookieUpdatedTimestamp > _SessionManager.cookieUpdateInterval) {\r\n                this.automaticSession.renewalDate = now;\r\n                this.setCookie(this.automaticSession.id, this.automaticSession.acquisitionDate, this.automaticSession.renewalDate);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     *  Record the current state of the automatic session and store it in our cookie string format\r\n     *  into the browser's local storage. This is used to restore the session data when the cookie\r\n     *  expires.\r\n     */\r\n    _SessionManager.prototype.backup = function () {\r\n        this.setStorage(this.automaticSession.id, this.automaticSession.acquisitionDate, this.automaticSession.renewalDate);\r\n    };\r\n    /**\r\n     *  Use config.namePrefix + ai_session cookie data or local storage data (when the cookie is unavailable) to\r\n     *  initialize the automatic session.\r\n     */\r\n    _SessionManager.prototype.initializeAutomaticSession = function () {\r\n        var cookie = Util.getCookie(this._logger, this._storageNamePrefix());\r\n        if (cookie && typeof cookie.split === \"function\") {\r\n            this.initializeAutomaticSessionWithData(cookie);\r\n        }\r\n        else {\r\n            // There's no cookie, but we might have session data in local storage\r\n            // This can happen if the session expired or the user actively deleted the cookie\r\n            // We only want to recover data if the cookie is missing from expiry. We should respect the user's wishes if the cookie was deleted actively.\r\n            // The User class handles this for us and deletes our local storage object if the persistent user cookie was removed.\r\n            var storage = Util.getStorage(this._logger, this._storageNamePrefix());\r\n            if (storage) {\r\n                this.initializeAutomaticSessionWithData(storage);\r\n            }\r\n        }\r\n        if (!this.automaticSession.id) {\r\n            this.renew();\r\n        }\r\n    };\r\n    /**\r\n     *  Extract id, aquisitionDate, and renewalDate from an ai_session payload string and\r\n     *  use this data to initialize automaticSession.\r\n     *\r\n     *  @param {string} sessionData - The string stored in an ai_session cookie or local storage backup\r\n     */\r\n    _SessionManager.prototype.initializeAutomaticSessionWithData = function (sessionData) {\r\n        var params = sessionData.split(\"|\");\r\n        if (params.length > 0) {\r\n            this.automaticSession.id = params[0];\r\n        }\r\n        try {\r\n            if (params.length > 1) {\r\n                var acq = +params[1];\r\n                this.automaticSession.acquisitionDate = +new Date(acq);\r\n                this.automaticSession.acquisitionDate = this.automaticSession.acquisitionDate > 0 ? this.automaticSession.acquisitionDate : 0;\r\n            }\r\n            if (params.length > 2) {\r\n                var renewal = +params[2];\r\n                this.automaticSession.renewalDate = +new Date(renewal);\r\n                this.automaticSession.renewalDate = this.automaticSession.renewalDate > 0 ? this.automaticSession.renewalDate : 0;\r\n            }\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.ErrorParsingAISessionCookie, \"Error parsing ai_session cookie, session will be reset: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n        if (this.automaticSession.renewalDate == 0) {\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.SessionRenewalDateIsZero, \"AI session renewal date is 0, session will be reset.\");\r\n        }\r\n    };\r\n    _SessionManager.prototype.renew = function () {\r\n        var now = DateTimeUtils.Now();\r\n        this.automaticSession.id = Util.newId();\r\n        this.automaticSession.acquisitionDate = now;\r\n        this.automaticSession.renewalDate = now;\r\n        this.setCookie(this.automaticSession.id, this.automaticSession.acquisitionDate, this.automaticSession.renewalDate);\r\n        // If this browser does not support local storage, fire an internal log to keep track of it at this point\r\n        if (!Util.canUseLocalStorage()) {\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserDoesNotSupportLocalStorage, \"Browser does not support local storage. Session durations will be inaccurate.\");\r\n        }\r\n    };\r\n    _SessionManager.prototype.setCookie = function (guid, acq, renewal) {\r\n        // Set cookie to expire after the session expiry time passes or the session renewal deadline, whichever is sooner\r\n        // Expiring the cookie will cause the session to expire even if the user isn't on the page\r\n        var acquisitionExpiry = acq + this.config.sessionExpirationMs();\r\n        var renewalExpiry = renewal + this.config.sessionRenewalMs();\r\n        var cookieExpiry = new Date();\r\n        var cookie = [guid, acq, renewal];\r\n        if (acquisitionExpiry < renewalExpiry) {\r\n            cookieExpiry.setTime(acquisitionExpiry);\r\n        }\r\n        else {\r\n            cookieExpiry.setTime(renewalExpiry);\r\n        }\r\n        var cookieDomnain = this.config.cookieDomain ? this.config.cookieDomain() : null;\r\n        Util.setCookie(this._logger, this._storageNamePrefix(), cookie.join('|') + ';expires=' + cookieExpiry.toUTCString(), cookieDomnain);\r\n        this.cookieUpdatedTimestamp = DateTimeUtils.Now();\r\n    };\r\n    _SessionManager.prototype.setStorage = function (guid, acq, renewal) {\r\n        // Keep data in local storage to retain the last session id, allowing us to cleanly end the session when it expires\r\n        // Browsers that don't support local storage won't be able to end sessions cleanly from the client\r\n        // The server will notice this and end the sessions itself, with loss of accurate session duration\r\n        Util.setStorage(this._logger, this._storageNamePrefix(), [guid, acq, renewal].join('|'));\r\n    };\r\n    _SessionManager.acquisitionSpan = 86400000; // 24 hours in ms\r\n    _SessionManager.renewalSpan = 1800000; // 30 minutes in ms\r\n    _SessionManager.cookieUpdateInterval = 60000; // 1 minute in ms\r\n    _SessionManager.cookieNameConst = 'ai_session';\r\n    return _SessionManager;\r\n}());\r\nexport { _SessionManager };\r\n//# sourceMappingURL=Session.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nvar Application = /** @class */ (function () {\r\n    function Application() {\r\n    }\r\n    return Application;\r\n}());\r\nexport { Application };\r\n//# sourceMappingURL=Application.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nvar Device = /** @class */ (function () {\r\n    /**\r\n     * Constructs a new instance of the Device class\r\n     */\r\n    function Device() {\r\n        // don't attempt to fingerprint browsers\r\n        this.id = \"browser\";\r\n        // Device type is a dimension in our data platform\r\n        // Setting it to 'Browser' allows to separate client and server dependencies/exceptions\r\n        this.deviceClass = \"Browser\";\r\n    }\r\n    return Device;\r\n}());\r\nexport { Device };\r\n//# sourceMappingURL=Device.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nvar Version = \"2.0.2-beta\";\r\nvar Internal = /** @class */ (function () {\r\n    /**\r\n    * Constructs a new instance of the internal telemetry data class.\r\n    */\r\n    function Internal(config) {\r\n        this.sdkVersion = (config.sdkExtension && config.sdkExtension() ? config.sdkExtension() + \"_\" : \"\") + \"javascript:\" + Version;\r\n    }\r\n    return Internal;\r\n}());\r\nexport { Internal };\r\n//# sourceMappingURL=Internal.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nvar HashCodeScoreGenerator = /** @class */ (function () {\r\n    function HashCodeScoreGenerator() {\r\n    }\r\n    HashCodeScoreGenerator.prototype.getHashCodeScore = function (key) {\r\n        var score = this.getHashCode(key) / HashCodeScoreGenerator.INT_MAX_VALUE;\r\n        return score * 100;\r\n    };\r\n    HashCodeScoreGenerator.prototype.getHashCode = function (input) {\r\n        if (input == \"\") {\r\n            return 0;\r\n        }\r\n        while (input.length < HashCodeScoreGenerator.MIN_INPUT_LENGTH) {\r\n            input = input.concat(input);\r\n        }\r\n        // 5381 is a magic number: http://stackoverflow.com/questions/10696223/reason-for-5381-number-in-djb-hash-function\r\n        var hash = 5381;\r\n        for (var i = 0; i < input.length; ++i) {\r\n            hash = ((hash << 5) + hash) + input.charCodeAt(i);\r\n            // 'hash' is of number type which means 53 bit integer (http://www.ecma-international.org/ecma-262/6.0/#sec-ecmascript-language-types-number-type)\r\n            // 'hash & hash' will keep it 32 bit integer - just to make it clearer what the result is.\r\n            hash = hash & hash;\r\n        }\r\n        return Math.abs(hash);\r\n    };\r\n    // We're using 32 bit math, hence max value is (2^31 - 1)\r\n    HashCodeScoreGenerator.INT_MAX_VALUE = 2147483647;\r\n    // (Magic number) DJB algorithm can't work on shorter strings (results in poor distribution\r\n    HashCodeScoreGenerator.MIN_INPUT_LENGTH = 8;\r\n    return HashCodeScoreGenerator;\r\n}());\r\nexport { HashCodeScoreGenerator };\r\n//# sourceMappingURL=HashCodeScoreGenerator.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { HashCodeScoreGenerator } from './HashCodeScoreGenerator';\r\nimport { ContextTagKeys } from '@microsoft/applicationinsights-common';\r\nvar SamplingScoreGenerator = /** @class */ (function () {\r\n    function SamplingScoreGenerator() {\r\n        this.hashCodeGeneragor = new HashCodeScoreGenerator();\r\n    }\r\n    SamplingScoreGenerator.prototype.getSamplingScore = function (envelope) {\r\n        var tagKeys = new ContextTagKeys();\r\n        var score = 0;\r\n        if (envelope.tags[tagKeys.userId]) {\r\n            score = this.hashCodeGeneragor.getHashCodeScore(envelope.tags[tagKeys.userId]);\r\n        }\r\n        else if (envelope.tags[tagKeys.operationId]) {\r\n            score = this.hashCodeGeneragor.getHashCodeScore(envelope.tags[tagKeys.operationId]);\r\n        }\r\n        else {\r\n            // tslint:disable-next-line:insecure-random\r\n            score = Math.random();\r\n        }\r\n        return score;\r\n    };\r\n    return SamplingScoreGenerator;\r\n}());\r\nexport { SamplingScoreGenerator };\r\n//# sourceMappingURL=SamplingScoreGenerator.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { SamplingScoreGenerator } from '../SamplingScoreGenerator';\r\nimport { _InternalMessageId, LoggingSeverity, DiagnosticLogger, CoreUtils } from '@microsoft/applicationinsights-core-js';\r\nvar Sample = /** @class */ (function () {\r\n    function Sample(sampleRate, logger) {\r\n        // We're using 32 bit math, hence max value is (2^31 - 1)\r\n        this.INT_MAX_VALUE = 2147483647;\r\n        if (CoreUtils.isNullOrUndefined(logger)) {\r\n            this._logger = new DiagnosticLogger();\r\n        }\r\n        else {\r\n            this._logger = logger;\r\n        }\r\n        if (sampleRate > 100 || sampleRate < 0) {\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.SampleRateOutOfRange, \"Sampling rate is out of range (0..100). Sampling will be disabled, you may be sending too much data which may affect your AI service level.\", { samplingRate: sampleRate }, true);\r\n            this.sampleRate = 100;\r\n        }\r\n        this.sampleRate = sampleRate;\r\n        this.samplingScoreGenerator = new SamplingScoreGenerator();\r\n    }\r\n    /**\r\n    * Determines if an envelope is sampled in (i.e. will be sent) or not (i.e. will be dropped).\r\n    */\r\n    Sample.prototype.isSampledIn = function (envelope) {\r\n        // return true as sampling will move to different extension\r\n        return true;\r\n    };\r\n    return Sample;\r\n}());\r\nexport { Sample };\r\n//# sourceMappingURL=Sample.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { Util } from '@microsoft/applicationinsights-common';\r\nimport { _InternalMessageId, LoggingSeverity } from '@microsoft/applicationinsights-core-js';\r\nvar User = /** @class */ (function () {\r\n    function User(config, logger) {\r\n        this._logger = logger;\r\n        //get userId or create new one if none exists\r\n        var cookie = Util.getCookie(this._logger, User.userCookieName);\r\n        if (cookie) {\r\n            var params = cookie.split(User.cookieSeparator);\r\n            if (params.length > 0) {\r\n                this.id = params[0];\r\n            }\r\n        }\r\n        this.config = config;\r\n        if (!this.id) {\r\n            this.id = Util.newId();\r\n            var date = new Date();\r\n            var acqStr = Util.toISOStringForIE8(date);\r\n            this.accountAcquisitionDate = acqStr;\r\n            // without expiration, cookies expire at the end of the session\r\n            // set it to 365 days from now\r\n            // 365 * 24 * 60 * 60 * 1000 = 31536000000 \r\n            date.setTime(date.getTime() + 31536000000);\r\n            var newCookie = [this.id, acqStr];\r\n            var cookieDomain = this.config.cookieDomain ? this.config.cookieDomain() : undefined;\r\n            Util.setCookie(this._logger, User.userCookieName, newCookie.join(User.cookieSeparator) + ';expires=' + date.toUTCString(), cookieDomain);\r\n            // If we have an config.namePrefix() + ai_session in local storage this means the user actively removed our cookies.\r\n            // We should respect their wishes and clear ourselves from local storage\r\n            var name_1 = config.namePrefix && config.namePrefix() ? config.namePrefix() + 'ai_session' : 'ai_session';\r\n            Util.removeStorage(this._logger, name_1);\r\n        }\r\n        // We still take the account id from the ctor param for backward compatibility. \r\n        // But if the the customer set the accountId through the newer setAuthenticatedUserContext API, we will override it.\r\n        this.accountId = config.accountId ? config.accountId() : undefined;\r\n        // Get the auth user id and account id from the cookie if exists\r\n        // Cookie is in the pattern: <authenticatedId>|<accountId>\r\n        var authCookie = Util.getCookie(this._logger, User.authUserCookieName);\r\n        if (authCookie) {\r\n            authCookie = decodeURI(authCookie);\r\n            var authCookieString = authCookie.split(User.cookieSeparator);\r\n            if (authCookieString[0]) {\r\n                this.authenticatedId = authCookieString[0];\r\n            }\r\n            if (authCookieString.length > 1 && authCookieString[1]) {\r\n                this.accountId = authCookieString[1];\r\n            }\r\n        }\r\n    }\r\n    /**\r\n    * Sets the authenticated user id and the account id in this session.\r\n    *\r\n    * @param authenticatedUserId {string} - The authenticated user id. A unique and persistent string that represents each authenticated user in the service.\r\n    * @param accountId {string} - An optional string to represent the account associated with the authenticated user.\r\n    */\r\n    User.prototype.setAuthenticatedUserContext = function (authenticatedUserId, accountId, storeInCookie) {\r\n        if (storeInCookie === void 0) { storeInCookie = false; }\r\n        // Validate inputs to ensure no cookie control characters.\r\n        var isInvalidInput = !this.validateUserInput(authenticatedUserId) || (accountId && !this.validateUserInput(accountId));\r\n        if (isInvalidInput) {\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.SetAuthContextFailedAccountName, \"Setting auth user context failed. \" +\r\n                \"User auth/account id should be of type string, and not contain commas, semi-colons, equal signs, spaces, or vertical-bars.\", true);\r\n            return;\r\n        }\r\n        // Create cookie string.\r\n        this.authenticatedId = authenticatedUserId;\r\n        var authCookie = this.authenticatedId;\r\n        if (accountId) {\r\n            this.accountId = accountId;\r\n            authCookie = [this.authenticatedId, this.accountId].join(User.cookieSeparator);\r\n        }\r\n        if (storeInCookie) {\r\n            // Set the cookie. No expiration date because this is a session cookie (expires when browser closed).\r\n            // Encoding the cookie to handle unexpected unicode characters.\r\n            Util.setCookie(this._logger, User.authUserCookieName, encodeURI(authCookie), this.config.cookieDomain());\r\n        }\r\n    };\r\n    /**\r\n     * Clears the authenticated user id and the account id from the user context.\r\n     * @returns {}\r\n     */\r\n    User.prototype.clearAuthenticatedUserContext = function () {\r\n        this.authenticatedId = null;\r\n        this.accountId = null;\r\n        Util.deleteCookie(this._logger, User.authUserCookieName);\r\n    };\r\n    User.prototype.validateUserInput = function (id) {\r\n        // Validate:\r\n        // 1. Id is a non-empty string.\r\n        // 2. It does not contain special characters for cookies.\r\n        if (typeof id !== 'string' ||\r\n            !id ||\r\n            id.match(/,|;|=| |\\|/)) {\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n    User.cookieSeparator = '|';\r\n    User.userCookieName = 'ai_user';\r\n    User.authUserCookieName = 'ai_authUser';\r\n    return User;\r\n}());\r\nexport { User };\r\n//# sourceMappingURL=User.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nvar Location = /** @class */ (function () {\r\n    function Location() {\r\n    }\r\n    return Location;\r\n}());\r\nexport { Location };\r\n//# sourceMappingURL=Location.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { Util } from '@microsoft/applicationinsights-common';\r\nvar TelemetryTrace = /** @class */ (function () {\r\n    function TelemetryTrace(id, parentId, name) {\r\n        this.traceID = id || Util.newId();\r\n        this.parentID = parentId;\r\n        this.name = name;\r\n    }\r\n    return TelemetryTrace;\r\n}());\r\nexport { TelemetryTrace };\r\n//# sourceMappingURL=TelemetryTrace.js.map","/**\r\n * PropertiesPlugin.ts\r\n * @copyright Microsoft 2018\r\n */\r\nimport { Session, _SessionManager } from './Context/Session';\r\nimport { Extensions, CtxTagKeys, SDKExtensionKeys } from '@microsoft/applicationinsights-common';\r\nimport { Application } from './Context/Application';\r\nimport { Device } from './Context/Device';\r\nimport { Internal } from './Context/Internal';\r\nimport { Sample } from './Context/Sample';\r\nimport { User } from './Context/User';\r\nimport { Location } from './Context/Location';\r\nimport { TelemetryTrace } from './Context/TelemetryTrace';\r\nvar TelemetryContext = /** @class */ (function () {\r\n    function TelemetryContext(logger, defaultConfig) {\r\n        if (typeof window !== 'undefined') {\r\n            this.sessionManager = new _SessionManager(defaultConfig, logger);\r\n            this.application = new Application();\r\n            this.device = new Device();\r\n            this.internal = new Internal(defaultConfig);\r\n            this.location = new Location();\r\n            this.user = new User(defaultConfig, logger);\r\n            this.telemetryTrace = new TelemetryTrace();\r\n            this.session = new Session();\r\n            this.sample = new Sample(defaultConfig.samplingPercentage(), logger);\r\n        }\r\n    }\r\n    TelemetryContext.prototype.applySessionContext = function (event) {\r\n        var sessionContext = this.session || this.sessionManager.automaticSession;\r\n        if (sessionContext) {\r\n            if (typeof sessionContext.id === \"string\") {\r\n                event.ext.app.sesId = sessionContext.id;\r\n            }\r\n        }\r\n        if (this.session) {\r\n            // If customer set session info, apply his context; otherwise apply context automatically generated \r\n            if (typeof this.session.id === \"string\") {\r\n                event.ext.app.sesId = this.session.id;\r\n            }\r\n            else {\r\n                event.ext.app.sesId = this.sessionManager.automaticSession.id;\r\n            }\r\n        }\r\n    };\r\n    TelemetryContext.prototype.applyOperatingSystemContxt = function (event) {\r\n        if (this.os && this.os.name) {\r\n            event.ext.os = this.os;\r\n        }\r\n    };\r\n    TelemetryContext.prototype.applyApplicationContext = function (event) {\r\n        if (this.application) {\r\n            if (typeof this.application.ver === \"string\") {\r\n                event.tags.push((_a = {}, _a[CtxTagKeys.applicationVersion] = this.application.ver, _a));\r\n            }\r\n            if (typeof this.application.build === \"string\") {\r\n                event.tags.push((_b = {}, _b[CtxTagKeys.applicationBuild] = this.application.build, _b));\r\n            }\r\n        }\r\n        var _a, _b;\r\n    };\r\n    TelemetryContext.prototype.applyDeviceContext = function (event) {\r\n        if (this.device) {\r\n            if (typeof this.device.id === \"string\") {\r\n                event.ext.device.localId = this.device.id;\r\n            }\r\n            if (typeof this.device.ip === \"string\") {\r\n                event.ext.device.ip = this.device.ip;\r\n            }\r\n            if (typeof this.device.model === \"string\") {\r\n                event.ext.device.model = this.device.model;\r\n            }\r\n            if (typeof this.device.deviceClass === \"string\") {\r\n                event.ext.device.deviceClass = this.device.deviceClass;\r\n            }\r\n        }\r\n    };\r\n    TelemetryContext.prototype.applyInternalContext = function (event) {\r\n        if (this.internal) {\r\n            if (typeof this.internal.agentVersion === \"string\") {\r\n                event.tags.push((_a = {}, _a[CtxTagKeys.internalAgentVersion] = this.internal.agentVersion, _a)); // not mapped in CS 4.0\r\n            }\r\n            if (typeof this.internal.sdkVersion === \"string\") {\r\n                event.tags.push((_b = {}, _b[CtxTagKeys.internalSdkVersion] = this.internal.sdkVersion, _b));\r\n            }\r\n            else {\r\n                // store the version provided by core\r\n                if (event[Extensions.SDKExt] && event[Extensions.SDKExt][SDKExtensionKeys.libVer]) {\r\n                    event.tags.push((_c = {}, _c[CtxTagKeys.internalSdkVersion] = event[Extensions.SDKExt][SDKExtensionKeys.libVer], _c)); // map sdk.libVer \r\n                }\r\n            }\r\n        }\r\n        var _a, _b, _c;\r\n    };\r\n    TelemetryContext.prototype.applyLocationContext = function (event) {\r\n        if (this.location) {\r\n            if (typeof this.location.ip === \"string\") {\r\n                event.tags.push((_a = {}, _a[CtxTagKeys.locationIp] = this.location.ip, _a));\r\n            }\r\n        }\r\n        var _a;\r\n    };\r\n    TelemetryContext.prototype.applySampleContext = function (event) {\r\n        if (this.sample) {\r\n            event.tags.push({ SampleRate: this.sample.sampleRate }); // tags.sampleRate -> mapped in CS 4.0\r\n        }\r\n    };\r\n    TelemetryContext.prototype.applyOperationContext = function (event) {\r\n        if (this.telemetryTrace) {\r\n            var trace = event.ext.trace || { traceID: undefined, parentID: undefined };\r\n            if (typeof this.telemetryTrace.traceID === \"string\") {\r\n                trace.traceID = this.telemetryTrace.traceID;\r\n            }\r\n            if (typeof this.telemetryTrace.name === \"string\") {\r\n                trace.name = this.telemetryTrace.name;\r\n            }\r\n            if (typeof this.telemetryTrace.parentID === \"string\") {\r\n                trace.parentID = this.telemetryTrace.parentID;\r\n            }\r\n            event.ext.trace = trace;\r\n        }\r\n    };\r\n    TelemetryContext.prototype.applyWebContext = function (event) {\r\n        if (this.web) {\r\n            event.ext.web = event.ext.web || {};\r\n            event.ext.web = this.web;\r\n        }\r\n    };\r\n    TelemetryContext.prototype.applyUserContext = function (event) {\r\n        if (this.user) {\r\n            if (!event.tags) {\r\n                event.tags = [];\r\n            }\r\n            // stays in tags\r\n            if (typeof this.user.accountId === \"string\") {\r\n                var item = {};\r\n                event.tags.push((_a = {}, _a[CtxTagKeys.userAccountId] = this.user.accountId, _a));\r\n            }\r\n            // CS 4.0            \r\n            if (typeof this.user.id === \"string\") {\r\n                event.ext.user.id = this.user.id;\r\n            }\r\n            if (typeof this.user.authenticatedId === \"string\") {\r\n                event.ext.user.authId = this.user.authenticatedId;\r\n            }\r\n        }\r\n        var _a;\r\n    };\r\n    TelemetryContext.prototype.cleanUp = function (event) {\r\n        if (event.ext[Extensions.DeviceExt] && Object.keys(event.ext[Extensions.DeviceExt]).length === 0) {\r\n            delete event.ext[Extensions.DeviceExt];\r\n        }\r\n        if (event.ext[Extensions.UserExt] && Object.keys(event.ext[Extensions.UserExt]).length === 0) {\r\n            delete event.ext[Extensions.UserExt];\r\n        }\r\n        if (event.ext[Extensions.WebExt] && Object.keys(event.ext[Extensions.WebExt]).length === 0) {\r\n            delete event.ext[Extensions.WebExt];\r\n        }\r\n        if (event.ext[Extensions.OSExt] && Object.keys(event.ext[Extensions.OSExt]).length === 0) {\r\n            delete event.ext[Extensions.OSExt];\r\n        }\r\n        if (event.ext[Extensions.AppExt] && Object.keys(event.ext[Extensions.AppExt]).length === 0) {\r\n            delete event.ext[Extensions.AppExt];\r\n        }\r\n        if (event.ext[Extensions.TraceExt] && Object.keys(event.ext[Extensions.TraceExt]).length === 0) {\r\n            delete event.ext[Extensions.TraceExt];\r\n        }\r\n    };\r\n    return TelemetryContext;\r\n}());\r\nexport { TelemetryContext };\r\n//# sourceMappingURL=TelemetryContext.js.map","/**\r\n * PropertiesPlugin.ts\r\n * @copyright Microsoft 2018\r\n */\r\nimport { CoreUtils } from '@microsoft/applicationinsights-core-js';\r\nimport { TelemetryContext } from './TelemetryContext';\r\nimport { PageView, ConfigurationManager, PropertiesPluginIdentifier, Extensions } from '@microsoft/applicationinsights-common';\r\nvar PropertiesPlugin = /** @class */ (function () {\r\n    function PropertiesPlugin() {\r\n        this.priority = 170;\r\n        this.identifier = PropertiesPluginIdentifier;\r\n    }\r\n    PropertiesPlugin.getDefaultConfig = function () {\r\n        var defaultConfig = {\r\n            instrumentationKey: function () { return undefined; },\r\n            accountId: function () { return null; },\r\n            sessionRenewalMs: function () { return 30 * 60 * 1000; },\r\n            samplingPercentage: function () { return 100; },\r\n            sessionExpirationMs: function () { return 24 * 60 * 60 * 1000; },\r\n            cookieDomain: function () { return null; },\r\n            sdkExtension: function () { return null; },\r\n            isBrowserLinkTrackingEnabled: function () { return false; },\r\n            appId: function () { return null; },\r\n            namePrefix: function () { return undefined; }\r\n        };\r\n        return defaultConfig;\r\n    };\r\n    PropertiesPlugin.prototype.initialize = function (config, core, extensions) {\r\n        var _this = this;\r\n        var defaultConfig = PropertiesPlugin.getDefaultConfig();\r\n        this._extensionConfig = this._extensionConfig || PropertiesPlugin.getDefaultConfig();\r\n        var _loop_1 = function (field) {\r\n            this_1._extensionConfig[field] = function () { return ConfigurationManager.getConfig(config, field, _this.identifier, defaultConfig[field]()); };\r\n        };\r\n        var this_1 = this;\r\n        for (var field in defaultConfig) {\r\n            _loop_1(field);\r\n        }\r\n        this._logger = core.logger;\r\n        this.context = new TelemetryContext(core.logger, this._extensionConfig);\r\n    };\r\n    /**\r\n     * Add Part A fields to the event\r\n     * @param event The event that needs to be processed\r\n     */\r\n    PropertiesPlugin.prototype.processTelemetry = function (event) {\r\n        if (CoreUtils.isNullOrUndefined(event)) {\r\n            // TODO(barustum): throw an internal event once we have support for internal logging\r\n        }\r\n        else {\r\n            // if the event is not sampled in, do not bother going through the pipeline\r\n            if (this.context.sample.isSampledIn(event)) {\r\n                // If the envelope is PageView, reset the internal message count so that we can send internal telemetry for the new page.\r\n                if (event.name === PageView.envelopeType) {\r\n                    this._logger.resetInternalMessageCount();\r\n                }\r\n                if (this.context.session) {\r\n                    // If customer did not provide custom session id update the session manager\r\n                    if (typeof this.context.session.id !== \"string\") {\r\n                        this.context.sessionManager.update();\r\n                    }\r\n                }\r\n                this._processTelemetryInternal(event);\r\n            }\r\n            if (!CoreUtils.isNullOrUndefined(this._nextPlugin)) {\r\n                this._nextPlugin.processTelemetry(event);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Sets the next plugin that comes after this plugin\r\n     * @param nextPlugin The next plugin\r\n     */\r\n    PropertiesPlugin.prototype.setNextPlugin = function (nextPlugin) {\r\n        this._nextPlugin = nextPlugin;\r\n    };\r\n    PropertiesPlugin.prototype._processTelemetryInternal = function (event) {\r\n        // set part A  fields\r\n        if (!event.tags) {\r\n            event.tags = [];\r\n        }\r\n        if (!event.ext) {\r\n            event.ext = {};\r\n        }\r\n        event.ext[Extensions.DeviceExt] = event.ext[Extensions.DeviceExt] || {};\r\n        event.ext[Extensions.WebExt] = event.ext[Extensions.WebExt] || {};\r\n        event.ext[Extensions.UserExt] = event.ext[Extensions.UserExt] || {};\r\n        event.ext[Extensions.OSExt] = event.ext[Extensions.OSExt] || {};\r\n        event.ext[Extensions.AppExt] = event.ext[Extensions.AppExt] || {};\r\n        event.ext[Extensions.TraceExt] = event.ext[Extensions.TraceExt] || {};\r\n        this.context.applySessionContext(event);\r\n        this.context.applyApplicationContext(event);\r\n        this.context.applyDeviceContext(event);\r\n        this.context.applyOperationContext(event);\r\n        this.context.applyUserContext(event);\r\n        this.context.applyOperatingSystemContxt(event);\r\n        this.context.applyWebContext(event);\r\n        this.context.applyLocationContext(event); // legacy tags\r\n        this.context.applySampleContext(event); // legacy tags\r\n        this.context.applyInternalContext(event); // legacy tags\r\n        this.context.cleanUp(event);\r\n    };\r\n    return PropertiesPlugin;\r\n}());\r\nexport default PropertiesPlugin;\r\n//# sourceMappingURL=PropertiesPlugin.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { DataSanitizer, UrlHelper, DateTimeUtils } from '@microsoft/applicationinsights-common';\r\nvar XHRMonitoringState = /** @class */ (function () {\r\n    function XHRMonitoringState() {\r\n        this.openDone = false;\r\n        this.setRequestHeaderDone = false;\r\n        this.sendDone = false;\r\n        this.abortDone = false;\r\n        //<summary>True, if onreadyStateChangeCallback function attached to xhr, otherwise false</summary>\r\n        this.onreadystatechangeCallbackAttached = false;\r\n    }\r\n    return XHRMonitoringState;\r\n}());\r\nexport { XHRMonitoringState };\r\nvar ajaxRecord = /** @class */ (function () {\r\n    function ajaxRecord(id, logger) {\r\n        this.completed = false;\r\n        this.requestHeadersSize = null;\r\n        this.ttfb = null;\r\n        this.responseReceivingDuration = null;\r\n        this.callbackDuration = null;\r\n        this.ajaxTotalDuration = null;\r\n        this.aborted = null;\r\n        this.pageUrl = null;\r\n        this.requestUrl = null;\r\n        this.requestSize = 0;\r\n        this.method = null;\r\n        ///<summary>Returns the HTTP status code.</summary>\r\n        this.status = null;\r\n        //<summary>The timestamp when open method was invoked</summary>\r\n        this.requestSentTime = null;\r\n        //<summary>The timestamps when first byte was received</summary>\r\n        this.responseStartedTime = null;\r\n        //<summary>The timestamp when last byte was received</summary>\r\n        this.responseFinishedTime = null;\r\n        //<summary>The timestamp when onreadystatechange callback in readyState 4 finished</summary>\r\n        this.callbackFinishedTime = null;\r\n        //<summary>The timestamp at which ajax was ended</summary>\r\n        this.endTime = null;\r\n        //<summary>The original xhr onreadystatechange event</summary>\r\n        this.originalOnreadystatechage = null;\r\n        this.xhrMonitoringState = new XHRMonitoringState();\r\n        //<summary>Determines whether or not JavaScript exception occured in xhr.onreadystatechange code. 1 if occured, otherwise 0.</summary>\r\n        this.clientFailure = 0;\r\n        this.CalculateMetrics = function () {\r\n            var self = this;\r\n            // round to 3 decimal points\r\n            self.ajaxTotalDuration = Math.round(DateTimeUtils.GetDuration(self.requestSentTime, self.responseFinishedTime) * 1000) / 1000;\r\n        };\r\n        this.id = id;\r\n        this._logger = logger;\r\n    }\r\n    ajaxRecord.prototype.getAbsoluteUrl = function () {\r\n        return this.requestUrl ? UrlHelper.getAbsoluteUrl(this.requestUrl) : null;\r\n    };\r\n    ajaxRecord.prototype.getPathName = function () {\r\n        return this.requestUrl ? DataSanitizer.sanitizeUrl(this._logger, UrlHelper.getCompleteUrl(this.method, this.requestUrl)) : null;\r\n    };\r\n    return ajaxRecord;\r\n}());\r\nexport { ajaxRecord };\r\n;\r\n//# sourceMappingURL=ajaxRecord.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { CoreUtils } from '@microsoft/applicationinsights-core-js';\r\nvar stringUtils = /** @class */ (function () {\r\n    function stringUtils() {\r\n    }\r\n    stringUtils.GetLength = function (strObject) {\r\n        var res = 0;\r\n        if (!CoreUtils.isNullOrUndefined(strObject)) {\r\n            var stringified = \"\";\r\n            try {\r\n                stringified = strObject.toString();\r\n            }\r\n            catch (ex) {\r\n                // some troubles with complex object\r\n            }\r\n            res = stringified.length;\r\n            res = isNaN(res) ? 0 : res;\r\n        }\r\n        return res;\r\n    };\r\n    return stringUtils;\r\n}());\r\nexport { stringUtils };\r\nvar EventHelper = /** @class */ (function () {\r\n    function EventHelper() {\r\n    }\r\n    ///<summary>Binds the specified function to an event, so that the function gets called whenever the event fires on the object</summary>\r\n    ///<param name=\"obj\">Object to which </param>\r\n    ///<param name=\"eventNameWithoutOn\">String that specifies any of the standard DHTML Events without \"on\" prefix</param>\r\n    ///<param name=\"handlerRef\">Pointer that specifies the function to call when event fires</param>\r\n    ///<returns>True if the function was bound successfully to the event, otherwise false</returns>\r\n    EventHelper.AttachEvent = function (obj, eventNameWithoutOn, handlerRef) {\r\n        var result = false;\r\n        if (!CoreUtils.isNullOrUndefined(obj)) {\r\n            if (!CoreUtils.isNullOrUndefined(obj.attachEvent)) {\r\n                // IE before version 9                    \r\n                obj.attachEvent(\"on\" + eventNameWithoutOn, handlerRef);\r\n                result = true;\r\n            }\r\n            else {\r\n                if (!CoreUtils.isNullOrUndefined(obj.addEventListener)) {\r\n                    // all browsers except IE before version 9\r\n                    obj.addEventListener(eventNameWithoutOn, handlerRef, false);\r\n                    result = true;\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    EventHelper.DetachEvent = function (obj, eventNameWithoutOn, handlerRef) {\r\n        if (!CoreUtils.isNullOrUndefined(obj)) {\r\n            if (!CoreUtils.isNullOrUndefined(obj.detachEvent)) {\r\n                obj.detachEvent(\"on\" + eventNameWithoutOn, handlerRef);\r\n            }\r\n            else {\r\n                if (!CoreUtils.isNullOrUndefined(obj.removeEventListener)) {\r\n                    obj.removeEventListener(eventNameWithoutOn, handlerRef, false);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    return EventHelper;\r\n}());\r\nexport { EventHelper };\r\n//# sourceMappingURL=ajaxUtils.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { RequestHeaders, Util, CorrelationIdHelper, TelemetryItemCreator, RemoteDependencyData, DateTimeUtils, DisabledPropertyName, ConfigurationManager, PropertiesPluginIdentifier } from '@microsoft/applicationinsights-common';\r\nimport { CoreUtils, LoggingSeverity, _InternalMessageId } from '@microsoft/applicationinsights-core-js';\r\nimport { ajaxRecord } from './ajaxRecord';\r\nimport { EventHelper } from './ajaxUtils';\r\nvar AjaxMonitor = /** @class */ (function () {\r\n    function AjaxMonitor() {\r\n        this._trackAjaxAttempts = 0;\r\n        this.identifier = AjaxMonitor.identifier;\r\n        this.priority = 161;\r\n        this.currentWindowHost = window && window.location && window.location.host && window.location.host.toLowerCase();\r\n        this.initialized = false;\r\n        this._fetchInitialized = false;\r\n    }\r\n    ///<summary>Verifies that particalar instance of XMLHttpRequest needs to be monitored</summary>\r\n    ///<param name=\"excludeAjaxDataValidation\">Optional parameter. True if ajaxData must be excluded from verification</param>\r\n    ///<returns type=\"bool\">True if instance needs to be monitored, otherwise false</returns>\r\n    AjaxMonitor.prototype.isMonitoredInstance = function (xhr, excludeAjaxDataValidation, request, init) {\r\n        var disabledProperty = false;\r\n        var ajaxValidation = true;\r\n        var initialized = false;\r\n        if (typeof request !== 'undefined') {\r\n            initialized = this._fetchInitialized;\r\n            // Look for DisabledPropertyName in either Request or RequestInit\r\n            disabledProperty = (typeof request === 'object' ? request[DisabledPropertyName] === true : false) ||\r\n                (init ? init[DisabledPropertyName] === true : false);\r\n        }\r\n        else if (typeof xhr !== 'undefined') {\r\n            initialized = this.initialized;\r\n            disabledProperty = xhr[DisabledPropertyName] === true;\r\n            ajaxValidation = excludeAjaxDataValidation === true || !CoreUtils.isNullOrUndefined(xhr.ajaxData);\r\n        }\r\n        // checking to see that all interested functions on xhr were instrumented\r\n        return initialized\r\n            // checking on ajaxData to see that it was not removed in user code\r\n            && ajaxValidation\r\n            // check that this instance is not not used by ajax call performed inside client side monitoring to send data to collector\r\n            && !disabledProperty;\r\n    };\r\n    ///<summary>Determines whether ajax monitoring can be enabled on this document</summary>\r\n    ///<returns>True if Ajax monitoring is supported on this page, otherwise false</returns>\r\n    AjaxMonitor.prototype.supportsAjaxMonitoring = function () {\r\n        var result = true;\r\n        if (CoreUtils.isNullOrUndefined(XMLHttpRequest) ||\r\n            CoreUtils.isNullOrUndefined(XMLHttpRequest.prototype) ||\r\n            CoreUtils.isNullOrUndefined(XMLHttpRequest.prototype.open) ||\r\n            CoreUtils.isNullOrUndefined(XMLHttpRequest.prototype.send) ||\r\n            CoreUtils.isNullOrUndefined(XMLHttpRequest.prototype.abort)) {\r\n            result = false;\r\n        }\r\n        // disable in IE8 or older (https://www.w3schools.com/jsref/jsref_trim_string.asp)\r\n        try {\r\n            \" a \".trim();\r\n        }\r\n        catch (ex) {\r\n            result = false;\r\n        }\r\n        return result;\r\n    };\r\n    AjaxMonitor.prototype.instrumentOpen = function () {\r\n        var originalOpen = XMLHttpRequest.prototype.open;\r\n        var ajaxMonitorInstance = this;\r\n        XMLHttpRequest.prototype.open = function (method, url, async) {\r\n            try {\r\n                if (ajaxMonitorInstance.isMonitoredInstance(this, true) &&\r\n                    (!this.ajaxData ||\r\n                        !this.ajaxData.xhrMonitoringState.openDone)) {\r\n                    ajaxMonitorInstance.openHandler(this, method, url, async);\r\n                }\r\n            }\r\n            catch (e) {\r\n                this._core.logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.FailedMonitorAjaxOpen, \"Failed to monitor XMLHttpRequest.open, monitoring data for this ajax call may be incorrect.\", {\r\n                    ajaxDiagnosticsMessage: AjaxMonitor.getFailedAjaxDiagnosticsMessage(this),\r\n                    exception: Util.dump(e)\r\n                });\r\n            }\r\n            return originalOpen.apply(this, arguments);\r\n        };\r\n    };\r\n    AjaxMonitor.prototype.openHandler = function (xhr, method, url, async) {\r\n        var id;\r\n        if (this._context && this._context.telemetryTrace && this._context.telemetryTrace.traceID) {\r\n            // this format corresponds with activity logic on server-side and is required for the correct correlation\r\n            id = \"|\" + this._context.telemetryTrace.traceID + \".\" + Util.newId();\r\n        }\r\n        else {\r\n            id = Util.newId();\r\n        }\r\n        var ajaxData = new ajaxRecord(id, this._core.logger);\r\n        ajaxData.method = method;\r\n        ajaxData.requestUrl = url;\r\n        ajaxData.xhrMonitoringState.openDone = true;\r\n        xhr.ajaxData = ajaxData;\r\n        this.attachToOnReadyStateChange(xhr);\r\n    };\r\n    AjaxMonitor.getFailedAjaxDiagnosticsMessage = function (xhr) {\r\n        var result = \"\";\r\n        try {\r\n            if (!CoreUtils.isNullOrUndefined(xhr) &&\r\n                !CoreUtils.isNullOrUndefined(xhr.ajaxData) &&\r\n                !CoreUtils.isNullOrUndefined(xhr.ajaxData.requestUrl)) {\r\n                result += \"(url: '\" + xhr.ajaxData.requestUrl + \"')\";\r\n            }\r\n        }\r\n        catch (e) { }\r\n        return result;\r\n    };\r\n    AjaxMonitor.prototype.instrumentSend = function () {\r\n        var originalSend = XMLHttpRequest.prototype.send;\r\n        var ajaxMonitorInstance = this;\r\n        XMLHttpRequest.prototype.send = function (content) {\r\n            try {\r\n                if (ajaxMonitorInstance.isMonitoredInstance(this) && !this.ajaxData.xhrMonitoringState.sendDone) {\r\n                    ajaxMonitorInstance.sendHandler(this, content);\r\n                }\r\n            }\r\n            catch (e) {\r\n                this._core.logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.FailedMonitorAjaxSend, \"Failed to monitor XMLHttpRequest, monitoring data for this ajax call may be incorrect.\", {\r\n                    ajaxDiagnosticsMessage: AjaxMonitor.getFailedAjaxDiagnosticsMessage(this),\r\n                    exception: Util.dump(e)\r\n                });\r\n            }\r\n            return originalSend.apply(this, arguments);\r\n        };\r\n    };\r\n    AjaxMonitor.prototype.sendHandler = function (xhr, content) {\r\n        xhr.ajaxData.requestSentTime = DateTimeUtils.Now();\r\n        xhr = this.includeCorrelationHeaders(xhr.ajaxData, undefined, undefined, xhr);\r\n        xhr.ajaxData.xhrMonitoringState.sendDone = true;\r\n    };\r\n    AjaxMonitor.prototype.instrumentAbort = function () {\r\n        var originalAbort = XMLHttpRequest.prototype.abort;\r\n        var ajaxMonitorInstance = this;\r\n        XMLHttpRequest.prototype.abort = function () {\r\n            try {\r\n                if (ajaxMonitorInstance.isMonitoredInstance(this) && !this.ajaxData.xhrMonitoringState.abortDone) {\r\n                    this.ajaxData.aborted = 1;\r\n                    this.ajaxData.xhrMonitoringState.abortDone = true;\r\n                }\r\n            }\r\n            catch (e) {\r\n                this._core.logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.FailedMonitorAjaxAbort, \"Failed to monitor XMLHttpRequest.abort, monitoring data for this ajax call may be incorrect.\", {\r\n                    ajaxDiagnosticsMessage: AjaxMonitor.getFailedAjaxDiagnosticsMessage(this),\r\n                    exception: Util.dump(e)\r\n                });\r\n            }\r\n            return originalAbort.apply(this, arguments);\r\n        };\r\n    };\r\n    AjaxMonitor.prototype.attachToOnReadyStateChange = function (xhr) {\r\n        var _this = this;\r\n        var ajaxMonitorInstance = this;\r\n        xhr.ajaxData.xhrMonitoringState.onreadystatechangeCallbackAttached = EventHelper.AttachEvent(xhr, \"readystatechange\", function () {\r\n            try {\r\n                if (ajaxMonitorInstance.isMonitoredInstance(xhr)) {\r\n                    if (xhr.readyState === 4) {\r\n                        ajaxMonitorInstance.onAjaxComplete(xhr);\r\n                    }\r\n                }\r\n            }\r\n            catch (e) {\r\n                var exceptionText = Util.dump(e);\r\n                // ignore messages with c00c023f, as this a known IE9 XHR abort issue\r\n                if (!exceptionText || exceptionText.toLowerCase().indexOf(\"c00c023f\") == -1) {\r\n                    _this._core.logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.FailedMonitorAjaxRSC, \"Failed to monitor XMLHttpRequest 'readystatechange' event handler, monitoring data for this ajax call may be incorrect.\", {\r\n                        ajaxDiagnosticsMessage: AjaxMonitor.getFailedAjaxDiagnosticsMessage(xhr),\r\n                        exception: Util.dump(e)\r\n                    });\r\n                }\r\n            }\r\n        });\r\n    };\r\n    AjaxMonitor.prototype.onAjaxComplete = function (xhr) {\r\n        xhr.ajaxData.responseFinishedTime = DateTimeUtils.Now();\r\n        xhr.ajaxData.status = xhr.status;\r\n        xhr.ajaxData.CalculateMetrics();\r\n        if (xhr.ajaxData.ajaxTotalDuration < 0) {\r\n            this._core.logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.FailedMonitorAjaxDur, \"Failed to calculate the duration of the ajax call, monitoring data for this ajax call won't be sent.\", {\r\n                ajaxDiagnosticsMessage: AjaxMonitor.getFailedAjaxDiagnosticsMessage(xhr),\r\n                requestSentTime: xhr.ajaxData.requestSentTime,\r\n                responseFinishedTime: xhr.ajaxData.responseFinishedTime\r\n            });\r\n        }\r\n        else {\r\n            var dependency = {\r\n                id: xhr.ajaxData.id,\r\n                target: xhr.ajaxData.getAbsoluteUrl(),\r\n                name: xhr.ajaxData.getPathName(),\r\n                type: \"Ajax\",\r\n                duration: xhr.ajaxData.ajaxTotalDuration,\r\n                success: (+(xhr.ajaxData.status)) >= 200 && (+(xhr.ajaxData.status)) < 400,\r\n                responseCode: +xhr.ajaxData.status,\r\n                method: xhr.ajaxData.method\r\n            };\r\n            // enrich dependency target with correlation context from the server\r\n            var correlationContext = this.getAjaxCorrelationContext(xhr);\r\n            if (correlationContext) {\r\n                dependency.correlationContext = /* dependency.target + \" | \" + */ correlationContext;\r\n            }\r\n            this.trackDependencyDataInternal(dependency);\r\n            xhr.ajaxData = null;\r\n        }\r\n    };\r\n    AjaxMonitor.prototype.getAjaxCorrelationContext = function (xhr) {\r\n        try {\r\n            var responseHeadersString = xhr.getAllResponseHeaders();\r\n            if (responseHeadersString !== null) {\r\n                var index = responseHeadersString.toLowerCase().indexOf(RequestHeaders.requestContextHeaderLowerCase);\r\n                if (index !== -1) {\r\n                    var responseHeader = xhr.getResponseHeader(RequestHeaders.requestContextHeader);\r\n                    return CorrelationIdHelper.getCorrelationContext(responseHeader);\r\n                }\r\n            }\r\n        }\r\n        catch (e) {\r\n            this._core.logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.FailedMonitorAjaxGetCorrelationHeader, \"Failed to get Request-Context correlation header as it may be not included in the response or not accessible.\", {\r\n                ajaxDiagnosticsMessage: AjaxMonitor.getFailedAjaxDiagnosticsMessage(xhr),\r\n                exception: Util.dump(e)\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Logs dependency call\r\n     * @param dependencyData dependency data object\r\n     */\r\n    AjaxMonitor.prototype.trackDependencyDataInternal = function (dependency, properties, systemProperties) {\r\n        if (this._config.maxAjaxCallsPerView === -1 || this._trackAjaxAttempts < this._config.maxAjaxCallsPerView) {\r\n            var item = TelemetryItemCreator.create(dependency, RemoteDependencyData.dataType, RemoteDependencyData.envelopeType, this._core.logger, properties, systemProperties);\r\n            this._core.track(item);\r\n        }\r\n        else if (this._trackAjaxAttempts === this._config.maxAjaxCallsPerView) {\r\n            this._core.logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.MaxAjaxPerPVExceeded, \"Maximum ajax per page view limit reached, ajax monitoring is paused until the next trackPageView(). In order to increase the limit set the maxAjaxCallsPerView configuration parameter.\", true);\r\n        }\r\n        ++this._trackAjaxAttempts;\r\n    };\r\n    AjaxMonitor.prototype.trackDependencyData = function (dependency, properties) {\r\n        this.trackDependencyDataInternal(dependency, properties);\r\n    };\r\n    AjaxMonitor.prototype.processTelemetry = function (item) {\r\n        if (this._nextPlugin && this._nextPlugin.processTelemetry) {\r\n            this._nextPlugin.processTelemetry(item);\r\n        }\r\n    };\r\n    AjaxMonitor.prototype.setNextPlugin = function (next) {\r\n        if (next) {\r\n            this._nextPlugin = next;\r\n        }\r\n    };\r\n    // Fetch Stuff\r\n    AjaxMonitor.prototype.instrumentFetch = function () {\r\n        if (!this.supportsFetch() || this._fetchInitialized) {\r\n            return;\r\n        }\r\n        var originalFetch = window.fetch;\r\n        var fetchMonitorInstance = this;\r\n        window.fetch = function fetch(input, init) {\r\n            var fetchData;\r\n            if (fetchMonitorInstance.isFetchInstrumented(input) && fetchMonitorInstance.isMonitoredInstance(undefined, undefined, input, init)) {\r\n                try {\r\n                    fetchData = fetchMonitorInstance.createFetchRecord(input, init);\r\n                    init = fetchMonitorInstance.includeCorrelationHeaders(fetchData, input, init);\r\n                }\r\n                catch (e) {\r\n                    fetchMonitorInstance._core.logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.FailedMonitorAjaxOpen, \"Failed to monitor Window.fetch, monitoring data for this fetch call may be incorrect.\", {\r\n                        ajaxDiagnosticsMessage: this.getFailedFetchDiagnosticsMessage(input),\r\n                        exception: Util.dump(e)\r\n                    });\r\n                }\r\n            }\r\n            return originalFetch(input, init)\r\n                .then(function (response) {\r\n                fetchMonitorInstance.onFetchComplete(response, fetchData);\r\n                return response;\r\n            })\r\n                .catch(function (reason) {\r\n                fetchMonitorInstance.onFetchFailed(input, fetchData, reason);\r\n                throw reason;\r\n            });\r\n        };\r\n        this._fetchInitialized = true;\r\n    };\r\n    AjaxMonitor.prototype.isFetchInstrumented = function (input) {\r\n        return this._fetchInitialized && input[DisabledPropertyName] !== true;\r\n    };\r\n    AjaxMonitor.prototype.supportsFetch = function () {\r\n        var result = true;\r\n        if (!window || CoreUtils.isNullOrUndefined(window.Request) ||\r\n            CoreUtils.isNullOrUndefined(window.Request.prototype) ||\r\n            CoreUtils.isNullOrUndefined(window.fetch)) {\r\n            result = false;\r\n        }\r\n        return result;\r\n    };\r\n    AjaxMonitor.prototype.createFetchRecord = function (input, init) {\r\n        var id;\r\n        if (this._context && this._context.telemetryTrace && this._context.telemetryTrace.traceID) {\r\n            // this format corresponds with activity logic on server-side and is required for the correct correlation\r\n            id = \"|\" + this._context.telemetryTrace.traceID + \".\" + Util.newId();\r\n        }\r\n        else {\r\n            id = Util.newId();\r\n        }\r\n        var ajaxData = new ajaxRecord(id, this._core.logger);\r\n        ajaxData.requestSentTime = DateTimeUtils.Now();\r\n        if (input instanceof Request) {\r\n            ajaxData.requestUrl = input ? input.url : \"\";\r\n        }\r\n        else {\r\n            ajaxData.requestUrl = input;\r\n        }\r\n        if (init && init.method) {\r\n            ajaxData.method = init.method;\r\n        }\r\n        else if (input && input instanceof Request) {\r\n            ajaxData.method = input.method;\r\n        }\r\n        else {\r\n            ajaxData.method = \"GET\";\r\n        }\r\n        return ajaxData;\r\n    };\r\n    AjaxMonitor.prototype.includeCorrelationHeaders = function (ajaxData, input, init, xhr) {\r\n        if (input) {\r\n            if (CorrelationIdHelper.canIncludeCorrelationHeader(this._config, ajaxData.getAbsoluteUrl(), this.currentWindowHost)) {\r\n                if (!init) {\r\n                    init = {};\r\n                }\r\n                // init headers override original request headers\r\n                // so, if they exist use only them, otherwise use request's because they should have been applied in the first place\r\n                // not using original request headers will result in them being lost\r\n                init.headers = new Headers(init.headers || (input instanceof Request ? (input.headers || {}) : {}));\r\n                init.headers.set(RequestHeaders.requestIdHeader, ajaxData.id);\r\n                var appId_1 = this._config.appId;\r\n                if (appId_1) {\r\n                    init.headers.set(RequestHeaders.requestContextHeader, RequestHeaders.requestContextAppIdFormat + appId_1);\r\n                }\r\n                return init;\r\n            }\r\n            return init;\r\n        }\r\n        else if (xhr) {\r\n            if (this.currentWindowHost && CorrelationIdHelper.canIncludeCorrelationHeader(this._config, xhr.ajaxData.getAbsoluteUrl(), this.currentWindowHost)) {\r\n                xhr.setRequestHeader(RequestHeaders.requestIdHeader, xhr.ajaxData.id);\r\n                var appId = this._config.appId; // Todo: also, get appId from channel as breeze returns it\r\n                if (appId) {\r\n                    xhr.setRequestHeader(RequestHeaders.requestContextHeader, RequestHeaders.requestContextAppIdFormat + appId);\r\n                }\r\n            }\r\n            return xhr;\r\n        }\r\n        return undefined;\r\n    };\r\n    AjaxMonitor.prototype.getFailedFetchDiagnosticsMessage = function (input) {\r\n        var result = \"\";\r\n        try {\r\n            if (!CoreUtils.isNullOrUndefined(input)) {\r\n                if (typeof (input) === \"string\") {\r\n                    result += \"(url: '\" + input + \"')\";\r\n                }\r\n                else {\r\n                    result += \"(url: '\" + input.url + \"')\";\r\n                }\r\n            }\r\n        }\r\n        catch (e) {\r\n            this._core.logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.FailedMonitorAjaxOpen, \"Failed to grab failed fetch diagnostics message\", { exception: Util.dump(e) });\r\n        }\r\n        return result;\r\n    };\r\n    AjaxMonitor.prototype.onFetchComplete = function (response, ajaxData) {\r\n        if (!ajaxData) {\r\n            return;\r\n        }\r\n        try {\r\n            ajaxData.responseFinishedTime = DateTimeUtils.Now();\r\n            ajaxData.CalculateMetrics();\r\n            if (ajaxData.ajaxTotalDuration < 0) {\r\n                this._core.logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.FailedMonitorAjaxDur, \"Failed to calculate the duration of the fetch call, monitoring data for this fetch call won't be sent.\", {\r\n                    fetchDiagnosticsMessage: this.getFailedFetchDiagnosticsMessage(response),\r\n                    requestSentTime: ajaxData.requestSentTime,\r\n                    responseFinishedTime: ajaxData.responseFinishedTime\r\n                });\r\n            }\r\n            else {\r\n                var dependency = {\r\n                    id: ajaxData.id,\r\n                    target: ajaxData.getAbsoluteUrl(),\r\n                    name: ajaxData.getPathName(),\r\n                    type: \"Fetch\",\r\n                    duration: ajaxData.ajaxTotalDuration,\r\n                    success: response.status >= 200 && response.status < 400,\r\n                    responseCode: response.status,\r\n                    properties: { HttpMethod: ajaxData.method }\r\n                };\r\n                // enrich dependency target with correlation context from the server\r\n                var correlationContext = this.getFetchCorrelationContext(response);\r\n                if (correlationContext) {\r\n                    dependency.correlationContext = correlationContext;\r\n                }\r\n                this.trackDependencyDataInternal(dependency);\r\n            }\r\n        }\r\n        catch (e) {\r\n            this._core.logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.FailedMonitorAjaxGetCorrelationHeader, \"Failed to calculate the duration of the fetch call, monitoring data for this fetch call won't be sent.\", {\r\n                fetchDiagnosticsMessage: this.getFailedFetchDiagnosticsMessage(response),\r\n                exception: Util.dump(e)\r\n            });\r\n        }\r\n    };\r\n    AjaxMonitor.prototype.onFetchFailed = function (input, ajaxData, reason) {\r\n        if (!ajaxData) {\r\n            return;\r\n        }\r\n        try {\r\n            ajaxData.responseFinishedTime = DateTimeUtils.Now();\r\n            ajaxData.CalculateMetrics();\r\n            if (ajaxData.ajaxTotalDuration < 0) {\r\n                this._core.logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.FailedMonitorAjaxDur, \"Failed to calculate the duration of the failed fetch call, monitoring data for this fetch call won't be sent.\", {\r\n                    fetchDiagnosticsMessage: this.getFailedFetchDiagnosticsMessage(input),\r\n                    requestSentTime: ajaxData.requestSentTime,\r\n                    responseFinishedTime: ajaxData.responseFinishedTime\r\n                });\r\n            }\r\n            else {\r\n                var dependency = {\r\n                    id: ajaxData.id,\r\n                    target: ajaxData.getAbsoluteUrl(),\r\n                    name: ajaxData.getPathName(),\r\n                    type: \"Fetch\",\r\n                    duration: ajaxData.ajaxTotalDuration,\r\n                    success: false,\r\n                    responseCode: 0,\r\n                    properties: { HttpMethod: ajaxData.method }\r\n                };\r\n                this.trackDependencyDataInternal(dependency, { error: reason.message });\r\n            }\r\n        }\r\n        catch (e) {\r\n            this._core.logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.FailedMonitorAjaxGetCorrelationHeader, \"Failed to calculate the duration of the failed fetch call, monitoring data for this fetch call won't be sent.\", {\r\n                fetchDiagnosticsMessage: this.getFailedFetchDiagnosticsMessage(input),\r\n                exception: Util.dump(e)\r\n            });\r\n        }\r\n    };\r\n    AjaxMonitor.prototype.getFetchCorrelationContext = function (response) {\r\n        try {\r\n            var responseHeader = response.headers.get(RequestHeaders.requestContextHeader);\r\n            return CorrelationIdHelper.getCorrelationContext(responseHeader);\r\n        }\r\n        catch (e) {\r\n            this._core.logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.FailedMonitorAjaxGetCorrelationHeader, \"Failed to get Request-Context correlation header as it may be not included in the response or not accessible.\", {\r\n                fetchDiagnosticsMessage: this.getFailedFetchDiagnosticsMessage(response),\r\n                exception: Util.dump(e)\r\n            });\r\n        }\r\n    };\r\n    AjaxMonitor.prototype.instrumentXhr = function () {\r\n        if (this.supportsAjaxMonitoring() && !this.initialized) {\r\n            this.instrumentOpen();\r\n            this.instrumentSend();\r\n            this.instrumentAbort();\r\n            this.initialized = true;\r\n        }\r\n    };\r\n    AjaxMonitor.getDefaultConfig = function () {\r\n        var config = {\r\n            maxAjaxCallsPerView: 500,\r\n            disableAjaxTracking: false,\r\n            disableFetchTracking: true,\r\n            disableCorrelationHeaders: false,\r\n            correlationHeaderExcludedDomains: [\r\n                \"*.blob.core.windows.net\",\r\n                \"*.blob.core.chinacloudapi.cn\",\r\n                \"*.blob.core.cloudapi.de\",\r\n                \"*.blob.core.usgovcloudapi.net\"\r\n            ],\r\n            appId: undefined,\r\n            enableCorsCorrelation: false\r\n        };\r\n        return config;\r\n    };\r\n    AjaxMonitor.getEmptyConfig = function () {\r\n        return {\r\n            maxAjaxCallsPerView: undefined,\r\n            disableAjaxTracking: undefined,\r\n            disableFetchTracking: undefined,\r\n            disableCorrelationHeaders: undefined,\r\n            correlationHeaderExcludedDomains: undefined,\r\n            appId: undefined,\r\n            enableCorsCorrelation: undefined\r\n        };\r\n    };\r\n    AjaxMonitor.prototype.initialize = function (config, core, extensions) {\r\n        if (!this.initialized && !this._fetchInitialized) {\r\n            this._core = core;\r\n            var defaultConfig = AjaxMonitor.getDefaultConfig();\r\n            this._config = AjaxMonitor.getEmptyConfig();\r\n            for (var field in defaultConfig) {\r\n                this._config[field] = ConfigurationManager.getConfig(config, field, AjaxMonitor.identifier, defaultConfig[field]);\r\n            }\r\n            if (this._config.disableAjaxTracking === false) {\r\n                this.instrumentXhr();\r\n            }\r\n            if (this._config.disableFetchTracking === false) {\r\n                this.instrumentFetch();\r\n            }\r\n            if (extensions.length > 0 && extensions) {\r\n                var propExt = extensions[PropertiesPluginIdentifier];\r\n                if (propExt) {\r\n                    this._context = propExt.context; // we could move IPropertiesPlugin to common as well\r\n                }\r\n            }\r\n        }\r\n    };\r\n    AjaxMonitor.identifier = \"AjaxDependencyPlugin\";\r\n    return AjaxMonitor;\r\n}());\r\nexport { AjaxMonitor };\r\n//# sourceMappingURL=ajax.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { AppInsightsCore, LoggingSeverity, _InternalMessageId } from \"@microsoft/applicationinsights-core-js\";\r\nimport { ApplicationInsights } from \"@microsoft/applicationinsights-analytics-js\";\r\nimport { Util, PropertiesPluginIdentifier } from \"@microsoft/applicationinsights-common\";\r\nimport { Sender } from \"@microsoft/applicationinsights-channel-js\";\r\nimport { PropertiesPlugin } from \"@microsoft/applicationinsights-properties-js\";\r\nimport { AjaxPlugin as DependenciesPlugin } from '@microsoft/applicationinsights-dependencies-js';\r\n\"use strict\";\r\n;\r\n/**\r\n * Application Insights API\r\n * @class Initialization\r\n * @implements {IApplicationInsights}\r\n */\r\nvar Initialization = /** @class */ (function () {\r\n    function Initialization(snippet) {\r\n        // initialize the queue and config in case they are undefined\r\n        snippet.queue = snippet.queue || [];\r\n        snippet.version = snippet.version || 2.0; // Default to new version\r\n        var config = snippet.config || {};\r\n        // ensure instrumentationKey is specified\r\n        if (config && !config.instrumentationKey) {\r\n            config = snippet;\r\n            ApplicationInsights.Version = \"2.0.2-beta\";\r\n        }\r\n        this.appInsights = new ApplicationInsights();\r\n        this.properties = new PropertiesPlugin();\r\n        this.dependencies = new DependenciesPlugin();\r\n        this.core = new AppInsightsCore();\r\n        this.snippet = snippet;\r\n        this.config = config;\r\n        this.getSKUDefaults();\r\n    }\r\n    // Analytics Plugin\r\n    /**\r\n     * Log a user action or other occurrence.\r\n     * @param {IEventTelemetry} event\r\n     * @param {ICustomProperties} [customProperties]\r\n     * @memberof Initialization\r\n     */\r\n    Initialization.prototype.trackEvent = function (event, customProperties) {\r\n        this.appInsights.trackEvent(event, customProperties);\r\n    };\r\n    /**\r\n     * Logs that a page, or similar container was displayed to the user.\r\n     * @param {IPageViewTelemetry} pageView\r\n     * @memberof Initialization\r\n     */\r\n    Initialization.prototype.trackPageView = function (pageView) {\r\n        this.appInsights.trackPageView(pageView);\r\n    };\r\n    /**\r\n     * Log a bag of performance information via the customProperties field.\r\n     * @param {IPageViewPerformanceTelemetry} pageViewPerformance\r\n     * @memberof Initialization\r\n     */\r\n    Initialization.prototype.trackPageViewPerformance = function (pageViewPerformance) {\r\n        this.appInsights.trackPageViewPerformance(pageViewPerformance);\r\n    };\r\n    /**\r\n     * Log an exception that you have caught.\r\n     * @param {IExceptionTelemetry} exception\r\n     * @memberof Initialization\r\n     */\r\n    Initialization.prototype.trackException = function (exception) {\r\n        this.appInsights.trackException(exception);\r\n    };\r\n    /**\r\n     * Manually send uncaught exception telemetry. This method is automatically triggered\r\n     * on a window.onerror event.\r\n     * @param {IAutoExceptionTelemetry} exception\r\n     * @memberof Initialization\r\n     */\r\n    Initialization.prototype._onerror = function (exception) {\r\n        this.appInsights._onerror(exception);\r\n    };\r\n    /**\r\n     * Log a diagnostic scenario such entering or leaving a function.\r\n     * @param {ITraceTelemetry} trace\r\n     * @param {ICustomProperties} [customProperties]\r\n     * @memberof Initialization\r\n     */\r\n    Initialization.prototype.trackTrace = function (trace, customProperties) {\r\n        this.appInsights.trackTrace(trace, customProperties);\r\n    };\r\n    /**\r\n     * Log a numeric value that is not associated with a specific event. Typically used\r\n     * to send regular reports of performance indicators.\r\n     *\r\n     * To send a single measurement, just use the `name` and `average` fields\r\n     * of {@link IMetricTelemetry}.\r\n     *\r\n     * If you take measurements frequently, you can reduce the telemetry bandwidth by\r\n     * aggregating multiple measurements and sending the resulting average and modifying\r\n     * the `sampleCount` field of {@link IMetricTelemetry}.\r\n     * @param {IMetricTelemetry} metric input object argument. Only `name` and `average` are mandatory.\r\n     * @param {ICustomProperties} [customProperties]\r\n     * @memberof Initialization\r\n     */\r\n    Initialization.prototype.trackMetric = function (metric, customProperties) {\r\n        this.appInsights.trackMetric(metric, customProperties);\r\n    };\r\n    /**\r\n     * Starts the timer for tracking a page load time. Use this instead of `trackPageView` if you want to control when the page view timer starts and stops,\r\n     * but don't want to calculate the duration yourself. This method doesn't send any telemetry. Call `stopTrackPage` to log the end of the page view\r\n     * and send the event.\r\n     * @param name A string that idenfities this item, unique within this HTML document. Defaults to the document title.\r\n     */\r\n    Initialization.prototype.startTrackPage = function (name) {\r\n        this.appInsights.startTrackPage(name);\r\n    };\r\n    /**\r\n     * Stops the timer that was started by calling `startTrackPage` and sends the pageview load time telemetry with the specified properties and measurements.\r\n     * The duration of the page view will be the time between calling `startTrackPage` and `stopTrackPage`.\r\n     * @param   name  The string you used as the name in startTrackPage. Defaults to the document title.\r\n     * @param   url   String - a relative or absolute URL that identifies the page or other item. Defaults to the window location.\r\n     * @param   properties  map[string, string] - additional data used to filter pages and metrics in the portal. Defaults to empty.\r\n     * @param   measurements    map[string, number] - metrics associated with this page, displayed in Metrics Explorer on the portal. Defaults to empty.\r\n     */\r\n    Initialization.prototype.stopTrackPage = function (name, url, customProperties, measurements) {\r\n        this.appInsights.stopTrackPage(name, url, customProperties, measurements);\r\n    };\r\n    Initialization.prototype.startTrackEvent = function (name) {\r\n        this.appInsights.startTrackEvent(name);\r\n    };\r\n    /**\r\n     * Log an extended event that you started timing with `startTrackEvent`.\r\n     * @param   name    The string you used to identify this event in `startTrackEvent`.\r\n     * @param   properties  map[string, string] - additional data used to filter events and metrics in the portal. Defaults to empty.\r\n     * @param   measurements    map[string, number] - metrics associated with this event, displayed in Metrics Explorer on the portal. Defaults to empty.\r\n     */\r\n    Initialization.prototype.stopTrackEvent = function (name, properties, measurements) {\r\n        this.appInsights.stopTrackEvent(name, properties, measurements); // Todo: Fix to pass measurements once type is updated\r\n    };\r\n    Initialization.prototype.addTelemetryInitializer = function (telemetryInitializer) {\r\n        return this.appInsights.addTelemetryInitializer(telemetryInitializer);\r\n    };\r\n    // Properties Plugin\r\n    /**\r\n     * Set the authenticated user id and the account id. Used for identifying a specific signed-in user. Parameters must not contain whitespace or ,;=|\r\n     *\r\n     * The method will only set the `authenicatedUserId` and `accountId` in the curent page view. To set them for the whole sesion, you should set `storeInCookie = true`\r\n     * @param {string} authenticatedUserId\r\n     * @param {string} [accountId]\r\n     * @param {boolean} [storeInCookie=false]\r\n     * @memberof Initialization\r\n     */\r\n    Initialization.prototype.setAuthenticatedUserContext = function (authenticatedUserId, accountId, storeInCookie) {\r\n        if (storeInCookie === void 0) { storeInCookie = false; }\r\n        this.properties.context.user.setAuthenticatedUserContext(authenticatedUserId, accountId, storeInCookie);\r\n    };\r\n    /**\r\n     * Clears the authenticated user id and account id. The associated cookie is cleared, if present.\r\n     * @memberof Initialization\r\n     */\r\n    Initialization.prototype.clearAuthenticatedUserContext = function () {\r\n        this.properties.context.user.clearAuthenticatedUserContext();\r\n    };\r\n    // Dependencies Plugin\r\n    /**\r\n     * Log a dependency call (e.g. ajax)\r\n     * @param {IDependencyTelemetry} dependency\r\n     * @memberof Initialization\r\n     */\r\n    Initialization.prototype.trackDependencyData = function (dependency) {\r\n        this.dependencies.trackDependencyData(dependency);\r\n    };\r\n    // Misc\r\n    /**\r\n     * Manually trigger an immediate send of all telemetry still in the buffer.\r\n     * @param {boolean} [async=true]\r\n     * @memberof Initialization\r\n     */\r\n    Initialization.prototype.flush = function (async) {\r\n        if (async === void 0) { async = true; }\r\n        this.core.getTransmissionControls().forEach(function (channels) {\r\n            channels.forEach(function (channel) {\r\n                channel.flush(async);\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Initialize this instance of ApplicationInsights\r\n     * @returns {IApplicationInsights}\r\n     * @memberof Initialization\r\n     */\r\n    Initialization.prototype.loadAppInsights = function (legacyMode) {\r\n        if (legacyMode === void 0) { legacyMode = false; }\r\n        // dont allow additional channels/other extensions for legacy mode; legacy mode is only to allow users to switch with no code changes!\r\n        if (legacyMode && this.config.extensions && this.config.extensions.length > 0) {\r\n            throw new Error(\"Extensions not allowed in legacy mode\");\r\n        }\r\n        var extensions = [];\r\n        var appInsightsChannel = new Sender();\r\n        extensions.push(appInsightsChannel);\r\n        extensions.push(this.properties);\r\n        extensions.push(this.dependencies);\r\n        extensions.push(this.appInsights);\r\n        // initialize core\r\n        this.core.initialize(this.config, extensions);\r\n        // Empty queue of all api calls logged prior to sdk download\r\n        this.emptyQueue();\r\n        this.pollInternalLogs();\r\n        this.addHousekeepingBeforeUnload(this);\r\n        this.context = this.properties.context;\r\n        return this;\r\n    };\r\n    /**\r\n     * Overwrite the lazy loaded fields of global window snippet to contain the\r\n     * actual initialized API methods\r\n     * @param {Snippet} snippet\r\n     * @memberof Initialization\r\n     */\r\n    Initialization.prototype.updateSnippetDefinitions = function (snippet) {\r\n        // apply full appInsights to the global instance\r\n        // Note: This must be called before loadAppInsights is called\r\n        for (var field in this) {\r\n            if (typeof field === 'string') {\r\n                snippet[field] = this[field];\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Call any functions that were queued before the main script was loaded\r\n     * @memberof Initialization\r\n     */\r\n    Initialization.prototype.emptyQueue = function () {\r\n        // call functions that were queued before the main script was loaded\r\n        try {\r\n            if (Util.isArray(this.snippet.queue)) {\r\n                // note: do not check length in the for-loop conditional in case something goes wrong and the stub methods are not overridden.\r\n                var length = this.snippet.queue.length;\r\n                for (var i = 0; i < length; i++) {\r\n                    var call = this.snippet.queue[i];\r\n                    call();\r\n                }\r\n                this.snippet.queue = undefined;\r\n                delete this.snippet.queue;\r\n            }\r\n        }\r\n        catch (exception) {\r\n            var properties = {};\r\n            if (exception && typeof exception.toString === \"function\") {\r\n                properties.exception = exception.toString();\r\n            }\r\n            // need from core\r\n            // Microsoft.ApplicationInsights._InternalLogging.throwInternal(\r\n            //     LoggingSeverity.WARNING,\r\n            //     _InternalMessageId.FailedToSendQueuedTelemetry,\r\n            //     \"Failed to send queued telemetry\",\r\n            //     properties);\r\n        }\r\n    };\r\n    Initialization.prototype.pollInternalLogs = function () {\r\n        this.core.pollInternalLogs();\r\n    };\r\n    Initialization.prototype.addHousekeepingBeforeUnload = function (appInsightsInstance) {\r\n        // Add callback to push events when the user navigates away\r\n        if (!appInsightsInstance.appInsights.config.disableFlushOnBeforeUnload && ('onbeforeunload' in window)) {\r\n            var performHousekeeping = function () {\r\n                // Adds the ability to flush all data before the page unloads.\r\n                // Note: This approach tries to push an async request with all the pending events onbeforeunload.\r\n                // Firefox does not respect this.Other browsers DO push out the call with < 100% hit rate.\r\n                // Telemetry here will help us analyze how effective this approach is.\r\n                // Another approach would be to make this call sync with a acceptable timeout to reduce the\r\n                // impact on user experience.\r\n                //appInsightsInstance.context._sender.triggerSend();\r\n                appInsightsInstance.flush(false);\r\n                // Back up the current session to local storage\r\n                // This lets us close expired sessions after the cookies themselves expire\r\n                var ext = appInsightsInstance.appInsights.core['_extensions'][PropertiesPluginIdentifier];\r\n                if (ext && ext.context && ext.context._sessionManager) {\r\n                    ext.context._sessionManager.backup();\r\n                }\r\n            };\r\n            if (!Util.addEventHandler('beforeunload', performHousekeeping)) {\r\n                appInsightsInstance.appInsights.core.logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.FailedToAddHandlerForOnBeforeUnload, 'Could not add handler for beforeunload');\r\n            }\r\n        }\r\n    };\r\n    Initialization.prototype.getSKUDefaults = function () {\r\n        this.config.diagnosticLogInterval =\r\n            this.config.diagnosticLogInterval && this.config.diagnosticLogInterval > 0 ? this.config.diagnosticLogInterval : 10000;\r\n    };\r\n    return Initialization;\r\n}());\r\nexport { Initialization };\r\n//# sourceMappingURL=Initialization.js.map","import { Util, ProcessLegacy } from \"@microsoft/applicationinsights-common\";\r\n// ToDo: fix properties and measurements once updates are done to common\r\nvar AppInsightsDeprecated = /** @class */ (function () {\r\n    function AppInsightsDeprecated(snippet, appInsightsNew) {\r\n        this._hasLegacyInitializers = false;\r\n        this._queue = [];\r\n        this.config = AppInsightsDeprecated.getDefaultConfig(snippet.config);\r\n        this.appInsightsNew = appInsightsNew;\r\n        this.context = { addTelemetryInitializer: this.addTelemetryInitializers.bind(this) };\r\n    }\r\n    /**\r\n    * The array of telemetry initializers to call before sending each telemetry item.\r\n    */\r\n    AppInsightsDeprecated.prototype.addTelemetryInitializers = function (callBack) {\r\n        var _this = this;\r\n        // Add initializer to current processing only if there is any old telemetry initializer\r\n        if (!this._hasLegacyInitializers) {\r\n            this.appInsightsNew.addTelemetryInitializer(function (item) {\r\n                _this._processLegacyInitializers(item); // setup call back for each legacy processor\r\n            });\r\n            this._hasLegacyInitializers = true;\r\n        }\r\n        this._queue.push(callBack);\r\n    };\r\n    AppInsightsDeprecated.prototype._processLegacyInitializers = function (item) {\r\n        // instead of mapping new to legacy and then back again and repeating in channel, attach callback for channel to call\r\n        item.tags[ProcessLegacy] = this._queue;\r\n        return item;\r\n    };\r\n    AppInsightsDeprecated.prototype.startTrackPage = function (name) {\r\n        this.appInsightsNew.startTrackPage(name);\r\n    };\r\n    AppInsightsDeprecated.prototype.stopTrackPage = function (name, url, properties, measurements) {\r\n        this.appInsightsNew.stopTrackPage(name, url, properties); // update\r\n    };\r\n    AppInsightsDeprecated.prototype.trackPageView = function (name, url, properties, measurements, duration) {\r\n        var telemetry = {\r\n            name: name,\r\n            uri: url,\r\n            properties: properties,\r\n            measurements: measurements\r\n        };\r\n        // fix for props, measurements, duration\r\n        this.appInsightsNew.trackPageView(telemetry);\r\n    };\r\n    AppInsightsDeprecated.prototype.trackEvent = function (name, properties, measurements) {\r\n        this.appInsightsNew.trackEvent({ name: name });\r\n    };\r\n    AppInsightsDeprecated.prototype.trackDependency = function (id, method, absoluteUrl, pathName, totalTime, success, resultCode) {\r\n        this.appInsightsNew.trackDependencyData({\r\n            id: id,\r\n            target: absoluteUrl,\r\n            type: pathName,\r\n            duration: totalTime,\r\n            properties: { HttpMethod: method },\r\n            success: success,\r\n            responseCode: resultCode\r\n        });\r\n    };\r\n    AppInsightsDeprecated.prototype.trackException = function (exception, handledAt, properties, measurements, severityLevel) {\r\n        this.appInsightsNew.trackException({\r\n            error: exception\r\n        });\r\n    };\r\n    AppInsightsDeprecated.prototype.trackMetric = function (name, average, sampleCount, min, max, properties) {\r\n        this.appInsightsNew.trackMetric({ name: name, average: average, sampleCount: sampleCount, min: min, max: max });\r\n    };\r\n    AppInsightsDeprecated.prototype.trackTrace = function (message, properties, severityLevel) {\r\n        this.appInsightsNew.trackTrace({ message: message, severityLevel: severityLevel });\r\n    };\r\n    AppInsightsDeprecated.prototype.flush = function (async) {\r\n        this.appInsightsNew.flush(async);\r\n    };\r\n    AppInsightsDeprecated.prototype.setAuthenticatedUserContext = function (authenticatedUserId, accountId, storeInCookie) {\r\n        this.appInsightsNew.context.user.setAuthenticatedUserContext(authenticatedUserId, accountId, storeInCookie);\r\n    };\r\n    AppInsightsDeprecated.prototype.clearAuthenticatedUserContext = function () {\r\n        this.appInsightsNew.context.user.clearAuthenticatedUserContext();\r\n    };\r\n    AppInsightsDeprecated.prototype._onerror = function (message, url, lineNumber, columnNumber, error) {\r\n        this.appInsightsNew._onerror({ message: message, url: url, lineNumber: lineNumber, columnNumber: columnNumber, error: error });\r\n    };\r\n    AppInsightsDeprecated.prototype.startTrackEvent = function (name) {\r\n        this.appInsightsNew.startTrackEvent(name);\r\n    };\r\n    AppInsightsDeprecated.prototype.stopTrackEvent = function (name, properties, measurements) {\r\n        this.appInsightsNew.stopTrackEvent(name, properties, measurements);\r\n    };\r\n    AppInsightsDeprecated.prototype.downloadAndSetup = function (config) {\r\n        throw new Error(\"downloadAndSetup not implemented in web SKU\");\r\n    };\r\n    AppInsightsDeprecated.prototype.updateSnippetDefinitions = function (snippet) {\r\n        // apply full appInsights to the global instance\r\n        // Note: This must be called before loadAppInsights is called\r\n        for (var field in this) {\r\n            if (typeof field === 'string') {\r\n                snippet[field] = this[field];\r\n            }\r\n        }\r\n    };\r\n    // note: these are split into methods to enable unit tests\r\n    AppInsightsDeprecated.prototype.loadAppInsights = function () {\r\n        // initialize global instance of appInsights\r\n        //var appInsights = new Microsoft.ApplicationInsights.AppInsights(this.config);\r\n        var _this = this;\r\n        // implement legacy version of trackPageView for 0.10<\r\n        if (this.config[\"iKey\"]) {\r\n            var originalTrackPageView = this.trackPageView;\r\n            this.trackPageView = function (pagePath, properties, measurements) {\r\n                originalTrackPageView.apply(_this, [null, pagePath, properties, measurements]);\r\n            };\r\n        }\r\n        // implement legacy pageView interface if it is present in the snippet\r\n        var legacyPageView = \"logPageView\";\r\n        if (typeof this.snippet[legacyPageView] === \"function\") {\r\n            this[legacyPageView] = function (pagePath, properties, measurements) {\r\n                _this.trackPageView(null, pagePath, properties, measurements);\r\n            };\r\n        }\r\n        // implement legacy event interface if it is present in the snippet\r\n        var legacyEvent = \"logEvent\";\r\n        if (typeof this.snippet[legacyEvent] === \"function\") {\r\n            this[legacyEvent] = function (name, props, measurements) {\r\n                _this.trackEvent(name, props, measurements);\r\n            };\r\n        }\r\n        return this;\r\n    };\r\n    AppInsightsDeprecated.getDefaultConfig = function (config) {\r\n        if (!config) {\r\n            config = {};\r\n        }\r\n        // set default values\r\n        config.endpointUrl = config.endpointUrl || \"https://dc.services.visualstudio.com/v2/track\";\r\n        config.sessionRenewalMs = 30 * 60 * 1000;\r\n        config.sessionExpirationMs = 24 * 60 * 60 * 1000;\r\n        config.maxBatchSizeInBytes = config.maxBatchSizeInBytes > 0 ? config.maxBatchSizeInBytes : 102400; // 100kb\r\n        config.maxBatchInterval = !isNaN(config.maxBatchInterval) ? config.maxBatchInterval : 15000;\r\n        config.enableDebug = Util.stringToBoolOrDefault(config.enableDebug);\r\n        config.disableExceptionTracking = Util.stringToBoolOrDefault(config.disableExceptionTracking);\r\n        config.disableTelemetry = Util.stringToBoolOrDefault(config.disableTelemetry);\r\n        config.verboseLogging = Util.stringToBoolOrDefault(config.verboseLogging);\r\n        config.emitLineDelimitedJson = Util.stringToBoolOrDefault(config.emitLineDelimitedJson);\r\n        config.diagnosticLogInterval = config.diagnosticLogInterval || 10000;\r\n        config.autoTrackPageVisitTime = Util.stringToBoolOrDefault(config.autoTrackPageVisitTime);\r\n        if (isNaN(config.samplingPercentage) || config.samplingPercentage <= 0 || config.samplingPercentage >= 100) {\r\n            config.samplingPercentage = 100;\r\n        }\r\n        config.disableAjaxTracking = Util.stringToBoolOrDefault(config.disableAjaxTracking);\r\n        config.maxAjaxCallsPerView = !isNaN(config.maxAjaxCallsPerView) ? config.maxAjaxCallsPerView : 500;\r\n        config.isBeaconApiDisabled = Util.stringToBoolOrDefault(config.isBeaconApiDisabled, true);\r\n        config.disableCorrelationHeaders = Util.stringToBoolOrDefault(config.disableCorrelationHeaders);\r\n        config.correlationHeaderExcludedDomains = config.correlationHeaderExcludedDomains || [\r\n            \"*.blob.core.windows.net\",\r\n            \"*.blob.core.chinacloudapi.cn\",\r\n            \"*.blob.core.cloudapi.de\",\r\n            \"*.blob.core.usgovcloudapi.net\"\r\n        ];\r\n        config.disableFlushOnBeforeUnload = Util.stringToBoolOrDefault(config.disableFlushOnBeforeUnload);\r\n        config.enableSessionStorageBuffer = Util.stringToBoolOrDefault(config.enableSessionStorageBuffer, true);\r\n        config.isRetryDisabled = Util.stringToBoolOrDefault(config.isRetryDisabled);\r\n        config.isCookieUseDisabled = Util.stringToBoolOrDefault(config.isCookieUseDisabled);\r\n        config.isStorageUseDisabled = Util.stringToBoolOrDefault(config.isStorageUseDisabled);\r\n        config.isBrowserLinkTrackingEnabled = Util.stringToBoolOrDefault(config.isBrowserLinkTrackingEnabled);\r\n        config.enableCorsCorrelation = Util.stringToBoolOrDefault(config.enableCorsCorrelation);\r\n        return config;\r\n    };\r\n    return AppInsightsDeprecated;\r\n}());\r\nexport { AppInsightsDeprecated };\r\n//# sourceMappingURL=ApplicationInsightsDeprecated.js.map","import { AppInsightsDeprecated } from \"./ApplicationInsightsDeprecated\";\r\nimport { Initialization as ApplicationInsights } from \"./Initialization\";\r\nvar ApplicationInsightsContainer = /** @class */ (function () {\r\n    function ApplicationInsightsContainer() {\r\n    }\r\n    ApplicationInsightsContainer.getAppInsights = function (snippet, version) {\r\n        var initialization = new ApplicationInsights(snippet);\r\n        var legacyMode = version !== 2.0 ? true : false;\r\n        // Two target scenarios:\r\n        // 1. Customer runs v1 snippet + runtime. If customer updates just cdn location to new SDK, it will run in compat mode so old apis work\r\n        // 2. Customer updates to new snippet (that uses cdn location to new SDK. This is same as a new customer onboarding\r\n        // and all api signatures are expected to map to new SDK. Note new snippet specifies version\r\n        if (version === 2.0) {\r\n            initialization.updateSnippetDefinitions(snippet);\r\n            initialization.loadAppInsights(legacyMode);\r\n            return initialization; // default behavior with new snippet\r\n        }\r\n        else {\r\n            var legacy = new AppInsightsDeprecated(snippet, initialization); // target scenario old snippet + updated endpoint\r\n            legacy.updateSnippetDefinitions(snippet);\r\n            initialization.loadAppInsights(legacyMode);\r\n            return legacy;\r\n        }\r\n    };\r\n    return ApplicationInsightsContainer;\r\n}());\r\nexport { ApplicationInsightsContainer };\r\n//# sourceMappingURL=ApplicationInsightsContainer.js.map"],"names":["LoggingSeverity","EventsDiscardedReason","CoreUtils","isNullOrUndefined","input","newGuid","replace","GuidRegex","c","r","Math","random","toString","NotificationManager","this","listeners","prototype","addNotificationListener","listener","push","removeNotificationListener","index","indexOf","splice","eventsSent","events","_this","_loop_1","i","this_1","setTimeout","length","eventsDiscarded","reason","_loop_2","this_2","StorageType","FieldType","_InternalMessageId","BrowserDoesNotSupportLocalStorage","BrowserCannotReadLocalStorage","BrowserCannotReadSessionStorage","BrowserCannotWriteLocalStorage","BrowserCannotWriteSessionStorage","BrowserFailedRemovalFromLocalStorage","BrowserFailedRemovalFromSessionStorage","CannotSendEmptyTelemetry","ClientPerformanceMathError","ErrorParsingAISessionCookie","ErrorPVCalc","ExceptionWhileLoggingError","FailedAddingTelemetryToBuffer","FailedMonitorAjaxAbort","FailedMonitorAjaxDur","FailedMonitorAjaxOpen","FailedMonitorAjaxRSC","FailedMonitorAjaxSend","FailedMonitorAjaxGetCorrelationHeader","FailedToAddHandlerForOnBeforeUnload","FailedToSendQueuedTelemetry","FailedToReportDataLoss","FlushFailed","MessageLimitPerPVExceeded","MissingRequiredFieldSpecification","NavigationTimingNotSupported","OnError","SessionRenewalDateIsZero","SenderNotInitialized","StartTrackEventFailed","StopTrackEventFailed","StartTrackFailed","StopTrackFailed","TelemetrySampledAndNotSent","TrackEventFailed","TrackExceptionFailed","TrackMetricFailed","TrackPVFailed","TrackPVFailedCalc","TrackTraceFailed","TransmissionFailed","FailedToSetStorageBuffer","FailedToRestoreStorageBuffer","InvalidBackendResponse","FailedToFixDepricatedValues","InvalidDurationValue","TelemetryEnvelopeInvalid","CreateEnvelopeError","CannotSerializeObject","CannotSerializeObjectNonSerializable","CircularReferenceDetected","ClearAuthContextFailed","ExceptionTruncated","IllegalCharsInName","ItemNotInArray","MaxAjaxPerPVExceeded","MessageTruncated","NameTooLong","SampleRateOutOfRange","SetAuthContextFailed","SetAuthContextFailedAccountName","StringValueTooLong","StartCalledMoreThanOnce","StopCalledWithoutStart","TelemetryInitializerFailed","TrackArgumentsNotSpecified","UrlTooLong","SessionStorageBufferFull","CannotAccessCookie","IdTooLong","_InternalLogMessage","msgId","msg","isUserAct","properties","messageId","message","AiUserActionablePrefix","AiNonUserActionablePrefix","diagnosticText","sanitizeDiagnosticText","JSON","stringify","text","dataType","DiagnosticLogger","config","AIInternalMessagePrefix","enableDebugExceptions","consoleLoggingLevel","telemetryLoggingLevel","maxInternalMessageLimit","queue","_messageCount","_messageLogged","loggingLevelConsole","loggingLevelTelemetry","maxMessageLimit","throwInternal","severity","messageKey","WARNING","warnToConsole","logInternalMessage","console","warn","log","resetInternalMessageCount","_areInternalMessagesThrottled","logMessage","throttleLimitMessage","throttleMessage","AppInsightsCore","_isInitialized","_extensions","Array","_channelController","ChannelController","initialize","extensions","Error","instrumentationKey","_notificationManager","extensionConfig","logger","forEach","extension","validationError","isValid_1","containsChannels_1","item","priority","ChannelControllerPriority","validationErrorInExt","_a","apply","concat","sort","a","b","extA","extB","typeExtA","processTelemetry","typeExtB","ext","t","identifier","idx","curr","setNextPlugin","getTransmissionControls","ChannelControls","track","telemetryItem","_notifiyInvalidEvent","baseData","baseType","iKey","time","Date","toISOString","ver","_validateTelmetryItem","_updateSdkVersion","pollInternalLogs","interval","diagnosticLogInterval","setInterval","name","sdk","version","str","channelQueue","queues","Object","defineProperty","get","enumerable","configurable","core","channels","invalidChannelIdentifier_1","undefined","queueItem","ChannelValidationMessage","arr","plugin","RequestHeaders","requestContextHeader","requestContextTargetKey","requestContextAppIdFormat","requestIdHeader","sdkContextHeader","sdkContextHeaderAppIdRequest","requestContextHeaderLowerCase","DataSanitizer","sanitizeKeyAndAddUniqueness","key","map","origLength","field","sanitizeKey","uniqueField","substring","MAX_NAME_LENGTH","padNumber","trim","sanitizeString","value","maxLength","MAX_STRING_LENGTH","sanitizeUrl","url","sanitizeInput","MAX_URL_LENGTH","sanitizeMessage","MAX_MESSAGE_LENGTH","sanitizeException","exception","MAX_EXCEPTION_LENGTH","sanitizeProperties","tempProps","prop","e","MAX_PROPERTY_LENGTH","sanitizeMeasurements","measurements","tempMeasurements","measure","sanitizeId","id","MAX_ID_LENGTH","_msgId","data","num","s","substr","Util","disableStorage","_canUseLocalStorage","_canUseSessionStorage","_getLocalStorageObject","canUseLocalStorage","_getVerifiedStorageObject","LocalStorage","storageType","fail","uid","storage","window","localStorage","sessionStorage","setItem","getItem","removeItem","isInternalApplicationInsightsEndpoint","endpointUrl","_internalEndpoints","toLowerCase","getStorage","getExceptionName","dump","setStorage","removeStorage","_getSessionStorageObject","canUseSessionStorage","SessionStorage","getSessionStorageKeys","keys","getSessionStorage","setSessionStorage","removeSessionStorage","disableCookies","_canUseCookies","canUseCookies","document","cookie","setCookie","domain","domainAttrib","secureAttrib","location","protocol","stringToBoolOrDefault","defaultValue","getCookie","cookieName","cookies","split","deleteCookie","newId","result","charAt","floor","isArray","obj","call","isError","isDate","toISOStringForIE8","date","pad","String","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","toFixed","slice","getIEVersion","userAgentStr","myNav","navigator","userAgent","parseInt","msToTimeSpan","totalms","isNaN","ms","round","sec","min","hour","days","isCrossOriginError","lineNumber","columnNumber","error","object","objectTypeDump","propertyValueDump","stack","addEventHandler","eventName","callback","verbEventName","addEventListener","IsBeaconApiSupported","sendBeacon","NotSpecified","UrlHelper","parseUrl","htmlAnchorElement","createElement","href","getAbsoluteUrl","getPathName","pathname","getCompleteUrl","method","absoluteUrl","toUpperCase","CorrelationIdHelper","canIncludeCorrelationHeader","requestUrl","currentHost","disableCorrelationHeaders","requestHost","host","enableCorsCorrelation","excludedDomains","correlationHeaderExcludedDomains","RegExp","test","getCorrelationContext","responseHeader","correlationId","getCorrelationContextValue","correlationIdPrefix","keyValues","keyValue","AjaxHelper","ParseDependencyPath","commandName","target","parsedUrl","pathName","DateTimeUtils","Now","getTime","performance","now","timing","navigationStart","GetDuration","start","end","DisabledPropertyName","ProcessLegacy","HttpMethod","extendStatics","d","setPrototypeOf","__proto__","p","hasOwnProperty","__extends","__","constructor","create","DataPointType","__assign","assign","n","arguments","Data","_super","tslib_1.__extends","Envelope","aiDataContract","Required","sampleRate","Hidden","tags","Domain","EventData","Event","Default","envelopeType","StackFrame","ExceptionDetails","hasFullStack","parsedStack","Exception","severityLevel","exceptions","_ExceptionDetails","CreateSimpleException","typeName","assembly","fileName","details","line","ExceptionData","outerId","parseStack","frames","level","totalSizeInBytes","frame","_StackFrame","regex","parsedFrame","sizeInBytes","left","right","size","acceptedLeft","acceptedRight","howMany","matches","match","baseSize","MetricData","metrics","SeverityLevel","DataPoint","kind","count","max","stdDev","Measurement","Metric","dataPoint","PageViewData","PageView","durationMs","duration","RemoteDependencyData","success","resultCode","requestAPI","type","dependencyKind","dependencySource","dependencyTypeName","dependencyFields","Trace","MessageData","PageViewPerformance","unused","perfTotal","networkConnect","sentRequest","receivedResponse","domProcessing","PageViewPerfData","AIData","ConfigurationManager","getConfig","configValue","ContextTagKeys","applicationVersion","applicationBuild","applicationTypeId","applicationId","applicationLayer","deviceId","deviceIp","deviceLanguage","deviceLocale","deviceModel","deviceFriendlyName","deviceNetwork","deviceNetworkName","deviceOEMName","deviceOS","deviceOSVersion","deviceRoleInstance","deviceRoleName","deviceScreenResolution","deviceType","deviceMachineName","deviceVMName","deviceBrowser","deviceBrowserVersion","locationIp","locationCountry","locationProvince","locationCity","operationId","operationName","operationParentId","operationRootId","operationSyntheticSource","operationCorrelationVector","sessionId","sessionIsFirst","sessionIsNew","userAccountAcquisitionDate","userAccountId","userId","userStoreRegion","userAuthUserId","userAnonymousUserAcquisitionDate","userAuthenticatedUserAcquisitionDate","cloudName","cloudRole","cloudRoleVer","cloudRoleInstance","cloudEnvironment","cloudLocation","cloudDeploymentUnit","internalNodeName","internalSdkVersion","internalAgentVersion","TelemetryItemCreator","envelopeName","customProperties","systemProperties","Extensions","UserExt","DeviceExt","TraceExt","WebExt","AppExt","OSExt","SessionExt","SDKExt","SDKExtensionKeys","libVer","CtxTagKeys","PropertiesPluginIdentifier","PageViewManager","appInsights","overridePageViewDuration","pageViewPerformanceManager","pageViewPerformanceSent","_pageViewPerformanceManager","_channel","_logger","trackPageView","pageView","title","uri","isPerformanceTimingSupported","sendPageViewInternal","q","flush","pageViewSent","customDuration","getPerformanceTiming","shouldCollectDuration","handle","isPerformanceTimingDataReady","clearInterval","pageViewPerformance","populatePageViewPerformanceEvent","isValid","sendPageViewPerformanceInternal","CRITICAL","PageViewPerformanceManager","MAX_DURATION_ALLOWED","total","loadEventEnd","network","connectEnd","request","requestStart","responseStart","response","responseEnd","dom","domainLookupStart","domLoading","durations","_i","botAgentNames","isGoogleBot","i_1","durationProperty","ApplicationInsights","_trackAjaxAttempts","_initialize","bind","getDefaultConfig","sessionRenewalMs","sessionExpirationMs","disableExceptionTracking","autoTrackPageVisitTime","samplingPercentage","isCookieUseDisabled","isStorageUseDisabled","isBrowserLinkTrackingEnabled","env","doNotSendItem","telemetryInitializersCount","_telemetryInitializers","telemetryInitializer","_nextPlugin","next","trackEvent","event","_setTelemetryNameAndIKey","startTrackEvent","_eventTracking","stopTrackEvent","stop","trackTrace","trace","trackMetric","metric","_pageViewManager","_pageVisitTimeManager","trackPreviousPageVisit","refUri","referrer","trackPageViewPerformance","startTrackPage","_pageTracking","stopTrackPage","measurement","sendExceptionInternal","trackException","_onerror","URL","_sendCORSException","errorString","addTelemetryInitializer","_globalconfig","defaults","configGetters","accountId","cookieDomain","sdkExtension","appId","_addDefaultTelemetryInitializers","Timing","action","pageViewItem","autoExceptionInstrumented","originalOnError_1","instance_1","onerror","handled","browserLinkPaths_1","_addTelemetryInitializer","envelope","remoteData","iKeyNoDashes","Version","_name","_events","ArraySendBuffer","_config","_buffer","enqueue","payload","clear","getItems","batchPayloads","emitLineDelimitedJson","join","markAsSent","clearSent","SessionStorageSendBuffer","_bufferFullMessageSent","bufferItems","getBuffer","BUFFER_KEY","notDeliveredItems","SENT_BUFFER_KEY","MAX_BUFFER_SIZE","setBuffer","removePayloadsFromBuffer","sentElements","payloads","buffer","remaining","contains","j","bufferJson","parse","EnvelopeCreator","extractProperties","extractPropsAndMeasurements","createEnvelope","extractPartAExtensions","user","authId","localId","app","sesId","device","ip","web","browserLang","browserVer","browser","isManual","screenRes","userConsent","model","os","parentID","traceID","tgs","tg","tslib_1.__assign","DependencyEnvelopeCreator","Create","customMeasurements","bd","command","responseCode","EventEnvelopeCreator","ExceptionEnvelopeCreator","MetricEnvelopeCreator","props","average","sampleCount","PageViewEnvelopeCreator","pageType","isLoggedIn","pageTags","PageViewPerformanceEnvelopeCreator","TraceEnvelopeCreator","EventValidator","Validate","TraceValidator","ExceptionValidator","_validateExceptions","MetricValidator","PageViewPerformanceValidator","PageViewValidator","RemoteDepdencyValidator","Serializer","serialize","output","_serializeObject","source","circularReferenceCheck","_serializeStringMap","_serializeArray","contract","isRequired","isHidden","isPresent","isObject","sources","expectedType","parseFloat","Offline","OfflineListener","_onlineStatus","isListening","_setOnline","_setOffline","body","ononline","onoffline","isOnline","onLine","isOffline","Sender","_XMLHttpRequestSupported","pause","resume","triggerSend","teardown","_serializer","_consecutiveErrors","_retryAt","_lastSend","_sender","defaultConfig","_getDefaultAppInsightsChannelConfig","_getEmptyAppInsightsChannelConfig","enableSessionStorageBuffer","isBeaconApiDisabled","_beaconSender","XMLHttpRequest","_xhrSender","XDomainRequest","_xdrSender","disableTelemetry","_validate","aiEnvelope_1","constructEnvelope","doNotSendItem_1","callBack","bufferPayload","batch","maxBatchSizeInBytes","_setupTimer","_xhrReadyStateChange","xhr","countOfItemsInPayload","readyState","_appId","_parseResponse","responseText","status","isRetryDisabled","_isRetriable","_resendPayload","_onError","_formatErrorMessageXhr","_onPartialSuccess","_onSuccess","async","clearTimeout","_timeoutHandle","results","failed","retry","errors_1","errors","reverse","extracted","statusCode","itemsAccepted","itemsReceived","_xdrOnLoad","xdr","_formatErrorMessageXdr","orig","resultConfig","maxBatchInterval","isAsync","plainTextBatch","Blob","open","setRequestHeader","onreadystatechange","send","linearFactor","payload_1","_setRetryTime","delayInSeconds","backOffSlot","pow","backOffDelay","retryAfterTimeSpan","retryInterval","timerValue","onload","hostingProtocol","lastIndexOf","Session","_SessionManager","acquisitionSpan","renewalSpan","_storageNamePrefix","namePrefix","cookieNameConst","automaticSession","update","initializeAutomaticSession","acquisitionExpired","acquisitionDate","renewalExpired","renewalDate","renew","cookieUpdatedTimestamp","cookieUpdateInterval","backup","initializeAutomaticSessionWithData","sessionData","params","acq","renewal","guid","acquisitionExpiry","renewalExpiry","cookieExpiry","setTime","cookieDomnain","toUTCString","Application","Device","deviceClass","Internal","sdkVersion","HashCodeScoreGenerator","getHashCodeScore","getHashCode","INT_MAX_VALUE","MIN_INPUT_LENGTH","hash","charCodeAt","abs","SamplingScoreGenerator","hashCodeGeneragor","getSamplingScore","tagKeys","Sample","samplingRate","samplingScoreGenerator","isSampledIn","User","userCookieName","cookieSeparator","acqStr","accountAcquisitionDate","newCookie","name_1","authCookie","authUserCookieName","authCookieString","decodeURI","authenticatedId","setAuthenticatedUserContext","authenticatedUserId","storeInCookie","validateUserInput","encodeURI","clearAuthenticatedUserContext","Location","TelemetryTrace","parentId","TelemetryContext","sessionManager","application","internal","telemetryTrace","session","sample","applySessionContext","sessionContext","applyOperatingSystemContxt","applyApplicationContext","_b","build","applyDeviceContext","applyInternalContext","_c","agentVersion","applyLocationContext","applySampleContext","SampleRate","applyOperationContext","applyWebContext","applyUserContext","cleanUp","PropertiesPlugin","_extensionConfig","context","_processTelemetryInternal","nextPlugin","XHRMonitoringState","openDone","setRequestHeaderDone","sendDone","abortDone","onreadystatechangeCallbackAttached","ajaxRecord","completed","requestHeadersSize","ttfb","responseReceivingDuration","callbackDuration","ajaxTotalDuration","aborted","pageUrl","requestSize","requestSentTime","responseStartedTime","responseFinishedTime","callbackFinishedTime","endTime","originalOnreadystatechage","xhrMonitoringState","clientFailure","CalculateMetrics","EventHelper","AttachEvent","eventNameWithoutOn","handlerRef","attachEvent","DetachEvent","detachEvent","removeEventListener","AjaxMonitor","currentWindowHost","initialized","_fetchInitialized","isMonitoredInstance","excludeAjaxDataValidation","init","disabledProperty","ajaxValidation","ajaxData","supportsAjaxMonitoring","abort","instrumentOpen","originalOpen","ajaxMonitorInstance","openHandler","_core","ajaxDiagnosticsMessage","getFailedAjaxDiagnosticsMessage","_context","attachToOnReadyStateChange","instrumentSend","originalSend","content","sendHandler","includeCorrelationHeaders","instrumentAbort","originalAbort","onAjaxComplete","exceptionText","dependency","correlationContext","getAjaxCorrelationContext","trackDependencyDataInternal","responseHeadersString","getAllResponseHeaders","getResponseHeader","maxAjaxCallsPerView","trackDependencyData","instrumentFetch","supportsFetch","originalFetch","fetch","fetchMonitorInstance","fetchData","isFetchInstrumented","createFetchRecord","getFailedFetchDiagnosticsMessage","then","onFetchComplete","catch","onFetchFailed","Request","headers","Headers","set","appId_1","fetchDiagnosticsMessage","getFetchCorrelationContext","instrumentXhr","disableAjaxTracking","disableFetchTracking","getEmptyConfig","propExt","Initialization","snippet","dependencies","DependenciesPlugin","getSKUDefaults","channel","loadAppInsights","legacyMode","appInsightsChannel","emptyQueue","addHousekeepingBeforeUnload","updateSnippetDefinitions","appInsightsInstance","disableFlushOnBeforeUnload","_sessionManager","AppInsightsDeprecated","appInsightsNew","_hasLegacyInitializers","_queue","addTelemetryInitializers","_processLegacyInitializers","telemetry","trackDependency","totalTime","handledAt","downloadAndSetup","originalTrackPageView","pagePath","legacyPageView","legacyEvent","enableDebug","verboseLogging","ApplicationInsightsContainer","getAppInsights","initialization","legacy"],"mappings":"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"}